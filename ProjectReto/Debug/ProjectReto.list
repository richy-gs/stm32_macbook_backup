
ProjectReto.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000130  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00008a34  08000130  08000130  00001130  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000d28  08008b68  08008b68  00009b68  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08009890  08009890  0000b1d8  2**0
                  CONTENTS
  4 .ARM          00000008  08009890  08009890  0000a890  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08009898  08009898  0000b1d8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08009898  08009898  0000a898  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800989c  0800989c  0000a89c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000001d8  20000000  080098a0  0000b000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000021c  200001d8  08009a78  0000b1d8  2**3
                  ALLOC
 10 ._user_heap_stack 00000604  200003f4  08009a78  0000b3f4  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  0000b1d8  2**0
                  CONTENTS, READONLY
 12 .debug_info   00002fc4  00000000  00000000  0000b201  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000103c  00000000  00000000  0000e1c5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000358  00000000  00000000  0000f208  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000249  00000000  00000000  0000f560  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000398a  00000000  00000000  0000f7a9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00004547  00000000  00000000  00013133  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0000b6e6  00000000  00000000  0001767a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  00022d60  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000023b8  00000000  00000000  00022da4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000067  00000000  00000000  0002515c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000130 <__do_global_dtors_aux>:
 8000130:	b510      	push	{r4, lr}
 8000132:	4c05      	ldr	r4, [pc, #20]	@ (8000148 <__do_global_dtors_aux+0x18>)
 8000134:	7823      	ldrb	r3, [r4, #0]
 8000136:	b933      	cbnz	r3, 8000146 <__do_global_dtors_aux+0x16>
 8000138:	4b04      	ldr	r3, [pc, #16]	@ (800014c <__do_global_dtors_aux+0x1c>)
 800013a:	b113      	cbz	r3, 8000142 <__do_global_dtors_aux+0x12>
 800013c:	4804      	ldr	r0, [pc, #16]	@ (8000150 <__do_global_dtors_aux+0x20>)
 800013e:	f3af 8000 	nop.w
 8000142:	2301      	movs	r3, #1
 8000144:	7023      	strb	r3, [r4, #0]
 8000146:	bd10      	pop	{r4, pc}
 8000148:	200001d8 	.word	0x200001d8
 800014c:	00000000 	.word	0x00000000
 8000150:	08008b4c 	.word	0x08008b4c

08000154 <frame_dummy>:
 8000154:	b508      	push	{r3, lr}
 8000156:	4b03      	ldr	r3, [pc, #12]	@ (8000164 <frame_dummy+0x10>)
 8000158:	b11b      	cbz	r3, 8000162 <frame_dummy+0xe>
 800015a:	4903      	ldr	r1, [pc, #12]	@ (8000168 <frame_dummy+0x14>)
 800015c:	4803      	ldr	r0, [pc, #12]	@ (800016c <frame_dummy+0x18>)
 800015e:	f3af 8000 	nop.w
 8000162:	bd08      	pop	{r3, pc}
 8000164:	00000000 	.word	0x00000000
 8000168:	200001dc 	.word	0x200001dc
 800016c:	08008b4c 	.word	0x08008b4c

08000170 <strlen>:
 8000170:	4603      	mov	r3, r0
 8000172:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000176:	2a00      	cmp	r2, #0
 8000178:	d1fb      	bne.n	8000172 <strlen+0x2>
 800017a:	1a18      	subs	r0, r3, r0
 800017c:	3801      	subs	r0, #1
 800017e:	4770      	bx	lr

08000180 <__aeabi_drsub>:
 8000180:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 8000184:	e002      	b.n	800018c <__adddf3>
 8000186:	bf00      	nop

08000188 <__aeabi_dsub>:
 8000188:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

0800018c <__adddf3>:
 800018c:	b530      	push	{r4, r5, lr}
 800018e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000192:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000196:	ea94 0f05 	teq	r4, r5
 800019a:	bf08      	it	eq
 800019c:	ea90 0f02 	teqeq	r0, r2
 80001a0:	bf1f      	itttt	ne
 80001a2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80001a6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80001aa:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80001ae:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80001b2:	f000 80e2 	beq.w	800037a <__adddf3+0x1ee>
 80001b6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80001ba:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80001be:	bfb8      	it	lt
 80001c0:	426d      	neglt	r5, r5
 80001c2:	dd0c      	ble.n	80001de <__adddf3+0x52>
 80001c4:	442c      	add	r4, r5
 80001c6:	ea80 0202 	eor.w	r2, r0, r2
 80001ca:	ea81 0303 	eor.w	r3, r1, r3
 80001ce:	ea82 0000 	eor.w	r0, r2, r0
 80001d2:	ea83 0101 	eor.w	r1, r3, r1
 80001d6:	ea80 0202 	eor.w	r2, r0, r2
 80001da:	ea81 0303 	eor.w	r3, r1, r3
 80001de:	2d36      	cmp	r5, #54	@ 0x36
 80001e0:	bf88      	it	hi
 80001e2:	bd30      	pophi	{r4, r5, pc}
 80001e4:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 80001e8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80001ec:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 80001f0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80001f4:	d002      	beq.n	80001fc <__adddf3+0x70>
 80001f6:	4240      	negs	r0, r0
 80001f8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80001fc:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 8000200:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000204:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000208:	d002      	beq.n	8000210 <__adddf3+0x84>
 800020a:	4252      	negs	r2, r2
 800020c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000210:	ea94 0f05 	teq	r4, r5
 8000214:	f000 80a7 	beq.w	8000366 <__adddf3+0x1da>
 8000218:	f1a4 0401 	sub.w	r4, r4, #1
 800021c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000220:	db0d      	blt.n	800023e <__adddf3+0xb2>
 8000222:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000226:	fa22 f205 	lsr.w	r2, r2, r5
 800022a:	1880      	adds	r0, r0, r2
 800022c:	f141 0100 	adc.w	r1, r1, #0
 8000230:	fa03 f20e 	lsl.w	r2, r3, lr
 8000234:	1880      	adds	r0, r0, r2
 8000236:	fa43 f305 	asr.w	r3, r3, r5
 800023a:	4159      	adcs	r1, r3
 800023c:	e00e      	b.n	800025c <__adddf3+0xd0>
 800023e:	f1a5 0520 	sub.w	r5, r5, #32
 8000242:	f10e 0e20 	add.w	lr, lr, #32
 8000246:	2a01      	cmp	r2, #1
 8000248:	fa03 fc0e 	lsl.w	ip, r3, lr
 800024c:	bf28      	it	cs
 800024e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000252:	fa43 f305 	asr.w	r3, r3, r5
 8000256:	18c0      	adds	r0, r0, r3
 8000258:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800025c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000260:	d507      	bpl.n	8000272 <__adddf3+0xe6>
 8000262:	f04f 0e00 	mov.w	lr, #0
 8000266:	f1dc 0c00 	rsbs	ip, ip, #0
 800026a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800026e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000272:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 8000276:	d31b      	bcc.n	80002b0 <__adddf3+0x124>
 8000278:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 800027c:	d30c      	bcc.n	8000298 <__adddf3+0x10c>
 800027e:	0849      	lsrs	r1, r1, #1
 8000280:	ea5f 0030 	movs.w	r0, r0, rrx
 8000284:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000288:	f104 0401 	add.w	r4, r4, #1
 800028c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000290:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 8000294:	f080 809a 	bcs.w	80003cc <__adddf3+0x240>
 8000298:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 800029c:	bf08      	it	eq
 800029e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80002a2:	f150 0000 	adcs.w	r0, r0, #0
 80002a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80002aa:	ea41 0105 	orr.w	r1, r1, r5
 80002ae:	bd30      	pop	{r4, r5, pc}
 80002b0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80002b4:	4140      	adcs	r0, r0
 80002b6:	eb41 0101 	adc.w	r1, r1, r1
 80002ba:	3c01      	subs	r4, #1
 80002bc:	bf28      	it	cs
 80002be:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 80002c2:	d2e9      	bcs.n	8000298 <__adddf3+0x10c>
 80002c4:	f091 0f00 	teq	r1, #0
 80002c8:	bf04      	itt	eq
 80002ca:	4601      	moveq	r1, r0
 80002cc:	2000      	moveq	r0, #0
 80002ce:	fab1 f381 	clz	r3, r1
 80002d2:	bf08      	it	eq
 80002d4:	3320      	addeq	r3, #32
 80002d6:	f1a3 030b 	sub.w	r3, r3, #11
 80002da:	f1b3 0220 	subs.w	r2, r3, #32
 80002de:	da0c      	bge.n	80002fa <__adddf3+0x16e>
 80002e0:	320c      	adds	r2, #12
 80002e2:	dd08      	ble.n	80002f6 <__adddf3+0x16a>
 80002e4:	f102 0c14 	add.w	ip, r2, #20
 80002e8:	f1c2 020c 	rsb	r2, r2, #12
 80002ec:	fa01 f00c 	lsl.w	r0, r1, ip
 80002f0:	fa21 f102 	lsr.w	r1, r1, r2
 80002f4:	e00c      	b.n	8000310 <__adddf3+0x184>
 80002f6:	f102 0214 	add.w	r2, r2, #20
 80002fa:	bfd8      	it	le
 80002fc:	f1c2 0c20 	rsble	ip, r2, #32
 8000300:	fa01 f102 	lsl.w	r1, r1, r2
 8000304:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000308:	bfdc      	itt	le
 800030a:	ea41 010c 	orrle.w	r1, r1, ip
 800030e:	4090      	lslle	r0, r2
 8000310:	1ae4      	subs	r4, r4, r3
 8000312:	bfa2      	ittt	ge
 8000314:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000318:	4329      	orrge	r1, r5
 800031a:	bd30      	popge	{r4, r5, pc}
 800031c:	ea6f 0404 	mvn.w	r4, r4
 8000320:	3c1f      	subs	r4, #31
 8000322:	da1c      	bge.n	800035e <__adddf3+0x1d2>
 8000324:	340c      	adds	r4, #12
 8000326:	dc0e      	bgt.n	8000346 <__adddf3+0x1ba>
 8000328:	f104 0414 	add.w	r4, r4, #20
 800032c:	f1c4 0220 	rsb	r2, r4, #32
 8000330:	fa20 f004 	lsr.w	r0, r0, r4
 8000334:	fa01 f302 	lsl.w	r3, r1, r2
 8000338:	ea40 0003 	orr.w	r0, r0, r3
 800033c:	fa21 f304 	lsr.w	r3, r1, r4
 8000340:	ea45 0103 	orr.w	r1, r5, r3
 8000344:	bd30      	pop	{r4, r5, pc}
 8000346:	f1c4 040c 	rsb	r4, r4, #12
 800034a:	f1c4 0220 	rsb	r2, r4, #32
 800034e:	fa20 f002 	lsr.w	r0, r0, r2
 8000352:	fa01 f304 	lsl.w	r3, r1, r4
 8000356:	ea40 0003 	orr.w	r0, r0, r3
 800035a:	4629      	mov	r1, r5
 800035c:	bd30      	pop	{r4, r5, pc}
 800035e:	fa21 f004 	lsr.w	r0, r1, r4
 8000362:	4629      	mov	r1, r5
 8000364:	bd30      	pop	{r4, r5, pc}
 8000366:	f094 0f00 	teq	r4, #0
 800036a:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 800036e:	bf06      	itte	eq
 8000370:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 8000374:	3401      	addeq	r4, #1
 8000376:	3d01      	subne	r5, #1
 8000378:	e74e      	b.n	8000218 <__adddf3+0x8c>
 800037a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800037e:	bf18      	it	ne
 8000380:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000384:	d029      	beq.n	80003da <__adddf3+0x24e>
 8000386:	ea94 0f05 	teq	r4, r5
 800038a:	bf08      	it	eq
 800038c:	ea90 0f02 	teqeq	r0, r2
 8000390:	d005      	beq.n	800039e <__adddf3+0x212>
 8000392:	ea54 0c00 	orrs.w	ip, r4, r0
 8000396:	bf04      	itt	eq
 8000398:	4619      	moveq	r1, r3
 800039a:	4610      	moveq	r0, r2
 800039c:	bd30      	pop	{r4, r5, pc}
 800039e:	ea91 0f03 	teq	r1, r3
 80003a2:	bf1e      	ittt	ne
 80003a4:	2100      	movne	r1, #0
 80003a6:	2000      	movne	r0, #0
 80003a8:	bd30      	popne	{r4, r5, pc}
 80003aa:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80003ae:	d105      	bne.n	80003bc <__adddf3+0x230>
 80003b0:	0040      	lsls	r0, r0, #1
 80003b2:	4149      	adcs	r1, r1
 80003b4:	bf28      	it	cs
 80003b6:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 80003ba:	bd30      	pop	{r4, r5, pc}
 80003bc:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 80003c0:	bf3c      	itt	cc
 80003c2:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 80003c6:	bd30      	popcc	{r4, r5, pc}
 80003c8:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80003cc:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 80003d0:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 80003d4:	f04f 0000 	mov.w	r0, #0
 80003d8:	bd30      	pop	{r4, r5, pc}
 80003da:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80003de:	bf1a      	itte	ne
 80003e0:	4619      	movne	r1, r3
 80003e2:	4610      	movne	r0, r2
 80003e4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80003e8:	bf1c      	itt	ne
 80003ea:	460b      	movne	r3, r1
 80003ec:	4602      	movne	r2, r0
 80003ee:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80003f2:	bf06      	itte	eq
 80003f4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80003f8:	ea91 0f03 	teqeq	r1, r3
 80003fc:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 8000400:	bd30      	pop	{r4, r5, pc}
 8000402:	bf00      	nop

08000404 <__aeabi_ui2d>:
 8000404:	f090 0f00 	teq	r0, #0
 8000408:	bf04      	itt	eq
 800040a:	2100      	moveq	r1, #0
 800040c:	4770      	bxeq	lr
 800040e:	b530      	push	{r4, r5, lr}
 8000410:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000414:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000418:	f04f 0500 	mov.w	r5, #0
 800041c:	f04f 0100 	mov.w	r1, #0
 8000420:	e750      	b.n	80002c4 <__adddf3+0x138>
 8000422:	bf00      	nop

08000424 <__aeabi_i2d>:
 8000424:	f090 0f00 	teq	r0, #0
 8000428:	bf04      	itt	eq
 800042a:	2100      	moveq	r1, #0
 800042c:	4770      	bxeq	lr
 800042e:	b530      	push	{r4, r5, lr}
 8000430:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000434:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000438:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 800043c:	bf48      	it	mi
 800043e:	4240      	negmi	r0, r0
 8000440:	f04f 0100 	mov.w	r1, #0
 8000444:	e73e      	b.n	80002c4 <__adddf3+0x138>
 8000446:	bf00      	nop

08000448 <__aeabi_f2d>:
 8000448:	0042      	lsls	r2, r0, #1
 800044a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800044e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000452:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000456:	bf1f      	itttt	ne
 8000458:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 800045c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 8000460:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 8000464:	4770      	bxne	lr
 8000466:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 800046a:	bf08      	it	eq
 800046c:	4770      	bxeq	lr
 800046e:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 8000472:	bf04      	itt	eq
 8000474:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 8000478:	4770      	bxeq	lr
 800047a:	b530      	push	{r4, r5, lr}
 800047c:	f44f 7460 	mov.w	r4, #896	@ 0x380
 8000480:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000484:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000488:	e71c      	b.n	80002c4 <__adddf3+0x138>
 800048a:	bf00      	nop

0800048c <__aeabi_ul2d>:
 800048c:	ea50 0201 	orrs.w	r2, r0, r1
 8000490:	bf08      	it	eq
 8000492:	4770      	bxeq	lr
 8000494:	b530      	push	{r4, r5, lr}
 8000496:	f04f 0500 	mov.w	r5, #0
 800049a:	e00a      	b.n	80004b2 <__aeabi_l2d+0x16>

0800049c <__aeabi_l2d>:
 800049c:	ea50 0201 	orrs.w	r2, r0, r1
 80004a0:	bf08      	it	eq
 80004a2:	4770      	bxeq	lr
 80004a4:	b530      	push	{r4, r5, lr}
 80004a6:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 80004aa:	d502      	bpl.n	80004b2 <__aeabi_l2d+0x16>
 80004ac:	4240      	negs	r0, r0
 80004ae:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80004b2:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80004b6:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80004ba:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80004be:	f43f aed8 	beq.w	8000272 <__adddf3+0xe6>
 80004c2:	f04f 0203 	mov.w	r2, #3
 80004c6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80004ca:	bf18      	it	ne
 80004cc:	3203      	addne	r2, #3
 80004ce:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80004d2:	bf18      	it	ne
 80004d4:	3203      	addne	r2, #3
 80004d6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80004da:	f1c2 0320 	rsb	r3, r2, #32
 80004de:	fa00 fc03 	lsl.w	ip, r0, r3
 80004e2:	fa20 f002 	lsr.w	r0, r0, r2
 80004e6:	fa01 fe03 	lsl.w	lr, r1, r3
 80004ea:	ea40 000e 	orr.w	r0, r0, lr
 80004ee:	fa21 f102 	lsr.w	r1, r1, r2
 80004f2:	4414      	add	r4, r2
 80004f4:	e6bd      	b.n	8000272 <__adddf3+0xe6>
 80004f6:	bf00      	nop

080004f8 <__aeabi_dmul>:
 80004f8:	b570      	push	{r4, r5, r6, lr}
 80004fa:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 80004fe:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000502:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000506:	bf1d      	ittte	ne
 8000508:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800050c:	ea94 0f0c 	teqne	r4, ip
 8000510:	ea95 0f0c 	teqne	r5, ip
 8000514:	f000 f8de 	bleq	80006d4 <__aeabi_dmul+0x1dc>
 8000518:	442c      	add	r4, r5
 800051a:	ea81 0603 	eor.w	r6, r1, r3
 800051e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000522:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000526:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800052a:	bf18      	it	ne
 800052c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000530:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000534:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000538:	d038      	beq.n	80005ac <__aeabi_dmul+0xb4>
 800053a:	fba0 ce02 	umull	ip, lr, r0, r2
 800053e:	f04f 0500 	mov.w	r5, #0
 8000542:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000546:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 800054a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800054e:	f04f 0600 	mov.w	r6, #0
 8000552:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000556:	f09c 0f00 	teq	ip, #0
 800055a:	bf18      	it	ne
 800055c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000560:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 8000564:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 8000568:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 800056c:	d204      	bcs.n	8000578 <__aeabi_dmul+0x80>
 800056e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000572:	416d      	adcs	r5, r5
 8000574:	eb46 0606 	adc.w	r6, r6, r6
 8000578:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800057c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000580:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000584:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000588:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800058c:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 8000590:	bf88      	it	hi
 8000592:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000596:	d81e      	bhi.n	80005d6 <__aeabi_dmul+0xde>
 8000598:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 800059c:	bf08      	it	eq
 800059e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80005a2:	f150 0000 	adcs.w	r0, r0, #0
 80005a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80005aa:	bd70      	pop	{r4, r5, r6, pc}
 80005ac:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 80005b0:	ea46 0101 	orr.w	r1, r6, r1
 80005b4:	ea40 0002 	orr.w	r0, r0, r2
 80005b8:	ea81 0103 	eor.w	r1, r1, r3
 80005bc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80005c0:	bfc2      	ittt	gt
 80005c2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80005c6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80005ca:	bd70      	popgt	{r4, r5, r6, pc}
 80005cc:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80005d0:	f04f 0e00 	mov.w	lr, #0
 80005d4:	3c01      	subs	r4, #1
 80005d6:	f300 80ab 	bgt.w	8000730 <__aeabi_dmul+0x238>
 80005da:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 80005de:	bfde      	ittt	le
 80005e0:	2000      	movle	r0, #0
 80005e2:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 80005e6:	bd70      	pople	{r4, r5, r6, pc}
 80005e8:	f1c4 0400 	rsb	r4, r4, #0
 80005ec:	3c20      	subs	r4, #32
 80005ee:	da35      	bge.n	800065c <__aeabi_dmul+0x164>
 80005f0:	340c      	adds	r4, #12
 80005f2:	dc1b      	bgt.n	800062c <__aeabi_dmul+0x134>
 80005f4:	f104 0414 	add.w	r4, r4, #20
 80005f8:	f1c4 0520 	rsb	r5, r4, #32
 80005fc:	fa00 f305 	lsl.w	r3, r0, r5
 8000600:	fa20 f004 	lsr.w	r0, r0, r4
 8000604:	fa01 f205 	lsl.w	r2, r1, r5
 8000608:	ea40 0002 	orr.w	r0, r0, r2
 800060c:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 8000610:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000614:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000618:	fa21 f604 	lsr.w	r6, r1, r4
 800061c:	eb42 0106 	adc.w	r1, r2, r6
 8000620:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000624:	bf08      	it	eq
 8000626:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800062a:	bd70      	pop	{r4, r5, r6, pc}
 800062c:	f1c4 040c 	rsb	r4, r4, #12
 8000630:	f1c4 0520 	rsb	r5, r4, #32
 8000634:	fa00 f304 	lsl.w	r3, r0, r4
 8000638:	fa20 f005 	lsr.w	r0, r0, r5
 800063c:	fa01 f204 	lsl.w	r2, r1, r4
 8000640:	ea40 0002 	orr.w	r0, r0, r2
 8000644:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000648:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800064c:	f141 0100 	adc.w	r1, r1, #0
 8000650:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000654:	bf08      	it	eq
 8000656:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800065a:	bd70      	pop	{r4, r5, r6, pc}
 800065c:	f1c4 0520 	rsb	r5, r4, #32
 8000660:	fa00 f205 	lsl.w	r2, r0, r5
 8000664:	ea4e 0e02 	orr.w	lr, lr, r2
 8000668:	fa20 f304 	lsr.w	r3, r0, r4
 800066c:	fa01 f205 	lsl.w	r2, r1, r5
 8000670:	ea43 0302 	orr.w	r3, r3, r2
 8000674:	fa21 f004 	lsr.w	r0, r1, r4
 8000678:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 800067c:	fa21 f204 	lsr.w	r2, r1, r4
 8000680:	ea20 0002 	bic.w	r0, r0, r2
 8000684:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000688:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800068c:	bf08      	it	eq
 800068e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000692:	bd70      	pop	{r4, r5, r6, pc}
 8000694:	f094 0f00 	teq	r4, #0
 8000698:	d10f      	bne.n	80006ba <__aeabi_dmul+0x1c2>
 800069a:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 800069e:	0040      	lsls	r0, r0, #1
 80006a0:	eb41 0101 	adc.w	r1, r1, r1
 80006a4:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80006a8:	bf08      	it	eq
 80006aa:	3c01      	subeq	r4, #1
 80006ac:	d0f7      	beq.n	800069e <__aeabi_dmul+0x1a6>
 80006ae:	ea41 0106 	orr.w	r1, r1, r6
 80006b2:	f095 0f00 	teq	r5, #0
 80006b6:	bf18      	it	ne
 80006b8:	4770      	bxne	lr
 80006ba:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 80006be:	0052      	lsls	r2, r2, #1
 80006c0:	eb43 0303 	adc.w	r3, r3, r3
 80006c4:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 80006c8:	bf08      	it	eq
 80006ca:	3d01      	subeq	r5, #1
 80006cc:	d0f7      	beq.n	80006be <__aeabi_dmul+0x1c6>
 80006ce:	ea43 0306 	orr.w	r3, r3, r6
 80006d2:	4770      	bx	lr
 80006d4:	ea94 0f0c 	teq	r4, ip
 80006d8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80006dc:	bf18      	it	ne
 80006de:	ea95 0f0c 	teqne	r5, ip
 80006e2:	d00c      	beq.n	80006fe <__aeabi_dmul+0x206>
 80006e4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80006e8:	bf18      	it	ne
 80006ea:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80006ee:	d1d1      	bne.n	8000694 <__aeabi_dmul+0x19c>
 80006f0:	ea81 0103 	eor.w	r1, r1, r3
 80006f4:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80006f8:	f04f 0000 	mov.w	r0, #0
 80006fc:	bd70      	pop	{r4, r5, r6, pc}
 80006fe:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000702:	bf06      	itte	eq
 8000704:	4610      	moveq	r0, r2
 8000706:	4619      	moveq	r1, r3
 8000708:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800070c:	d019      	beq.n	8000742 <__aeabi_dmul+0x24a>
 800070e:	ea94 0f0c 	teq	r4, ip
 8000712:	d102      	bne.n	800071a <__aeabi_dmul+0x222>
 8000714:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000718:	d113      	bne.n	8000742 <__aeabi_dmul+0x24a>
 800071a:	ea95 0f0c 	teq	r5, ip
 800071e:	d105      	bne.n	800072c <__aeabi_dmul+0x234>
 8000720:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000724:	bf1c      	itt	ne
 8000726:	4610      	movne	r0, r2
 8000728:	4619      	movne	r1, r3
 800072a:	d10a      	bne.n	8000742 <__aeabi_dmul+0x24a>
 800072c:	ea81 0103 	eor.w	r1, r1, r3
 8000730:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000734:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000738:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800073c:	f04f 0000 	mov.w	r0, #0
 8000740:	bd70      	pop	{r4, r5, r6, pc}
 8000742:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000746:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 800074a:	bd70      	pop	{r4, r5, r6, pc}

0800074c <__aeabi_ddiv>:
 800074c:	b570      	push	{r4, r5, r6, lr}
 800074e:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000752:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000756:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800075a:	bf1d      	ittte	ne
 800075c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000760:	ea94 0f0c 	teqne	r4, ip
 8000764:	ea95 0f0c 	teqne	r5, ip
 8000768:	f000 f8a7 	bleq	80008ba <__aeabi_ddiv+0x16e>
 800076c:	eba4 0405 	sub.w	r4, r4, r5
 8000770:	ea81 0e03 	eor.w	lr, r1, r3
 8000774:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000778:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800077c:	f000 8088 	beq.w	8000890 <__aeabi_ddiv+0x144>
 8000780:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000784:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 8000788:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800078c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000790:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000794:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000798:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800079c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80007a0:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 80007a4:	429d      	cmp	r5, r3
 80007a6:	bf08      	it	eq
 80007a8:	4296      	cmpeq	r6, r2
 80007aa:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 80007ae:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 80007b2:	d202      	bcs.n	80007ba <__aeabi_ddiv+0x6e>
 80007b4:	085b      	lsrs	r3, r3, #1
 80007b6:	ea4f 0232 	mov.w	r2, r2, rrx
 80007ba:	1ab6      	subs	r6, r6, r2
 80007bc:	eb65 0503 	sbc.w	r5, r5, r3
 80007c0:	085b      	lsrs	r3, r3, #1
 80007c2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007c6:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 80007ca:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 80007ce:	ebb6 0e02 	subs.w	lr, r6, r2
 80007d2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007d6:	bf22      	ittt	cs
 80007d8:	1ab6      	subcs	r6, r6, r2
 80007da:	4675      	movcs	r5, lr
 80007dc:	ea40 000c 	orrcs.w	r0, r0, ip
 80007e0:	085b      	lsrs	r3, r3, #1
 80007e2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007e6:	ebb6 0e02 	subs.w	lr, r6, r2
 80007ea:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007ee:	bf22      	ittt	cs
 80007f0:	1ab6      	subcs	r6, r6, r2
 80007f2:	4675      	movcs	r5, lr
 80007f4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80007f8:	085b      	lsrs	r3, r3, #1
 80007fa:	ea4f 0232 	mov.w	r2, r2, rrx
 80007fe:	ebb6 0e02 	subs.w	lr, r6, r2
 8000802:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000806:	bf22      	ittt	cs
 8000808:	1ab6      	subcs	r6, r6, r2
 800080a:	4675      	movcs	r5, lr
 800080c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000810:	085b      	lsrs	r3, r3, #1
 8000812:	ea4f 0232 	mov.w	r2, r2, rrx
 8000816:	ebb6 0e02 	subs.w	lr, r6, r2
 800081a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800081e:	bf22      	ittt	cs
 8000820:	1ab6      	subcs	r6, r6, r2
 8000822:	4675      	movcs	r5, lr
 8000824:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000828:	ea55 0e06 	orrs.w	lr, r5, r6
 800082c:	d018      	beq.n	8000860 <__aeabi_ddiv+0x114>
 800082e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000832:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000836:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800083a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800083e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000842:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000846:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800084a:	d1c0      	bne.n	80007ce <__aeabi_ddiv+0x82>
 800084c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000850:	d10b      	bne.n	800086a <__aeabi_ddiv+0x11e>
 8000852:	ea41 0100 	orr.w	r1, r1, r0
 8000856:	f04f 0000 	mov.w	r0, #0
 800085a:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 800085e:	e7b6      	b.n	80007ce <__aeabi_ddiv+0x82>
 8000860:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000864:	bf04      	itt	eq
 8000866:	4301      	orreq	r1, r0
 8000868:	2000      	moveq	r0, #0
 800086a:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 800086e:	bf88      	it	hi
 8000870:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000874:	f63f aeaf 	bhi.w	80005d6 <__aeabi_dmul+0xde>
 8000878:	ebb5 0c03 	subs.w	ip, r5, r3
 800087c:	bf04      	itt	eq
 800087e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000882:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000886:	f150 0000 	adcs.w	r0, r0, #0
 800088a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800088e:	bd70      	pop	{r4, r5, r6, pc}
 8000890:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 8000894:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000898:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 800089c:	bfc2      	ittt	gt
 800089e:	ebd4 050c 	rsbsgt	r5, r4, ip
 80008a2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80008a6:	bd70      	popgt	{r4, r5, r6, pc}
 80008a8:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80008ac:	f04f 0e00 	mov.w	lr, #0
 80008b0:	3c01      	subs	r4, #1
 80008b2:	e690      	b.n	80005d6 <__aeabi_dmul+0xde>
 80008b4:	ea45 0e06 	orr.w	lr, r5, r6
 80008b8:	e68d      	b.n	80005d6 <__aeabi_dmul+0xde>
 80008ba:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80008be:	ea94 0f0c 	teq	r4, ip
 80008c2:	bf08      	it	eq
 80008c4:	ea95 0f0c 	teqeq	r5, ip
 80008c8:	f43f af3b 	beq.w	8000742 <__aeabi_dmul+0x24a>
 80008cc:	ea94 0f0c 	teq	r4, ip
 80008d0:	d10a      	bne.n	80008e8 <__aeabi_ddiv+0x19c>
 80008d2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80008d6:	f47f af34 	bne.w	8000742 <__aeabi_dmul+0x24a>
 80008da:	ea95 0f0c 	teq	r5, ip
 80008de:	f47f af25 	bne.w	800072c <__aeabi_dmul+0x234>
 80008e2:	4610      	mov	r0, r2
 80008e4:	4619      	mov	r1, r3
 80008e6:	e72c      	b.n	8000742 <__aeabi_dmul+0x24a>
 80008e8:	ea95 0f0c 	teq	r5, ip
 80008ec:	d106      	bne.n	80008fc <__aeabi_ddiv+0x1b0>
 80008ee:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008f2:	f43f aefd 	beq.w	80006f0 <__aeabi_dmul+0x1f8>
 80008f6:	4610      	mov	r0, r2
 80008f8:	4619      	mov	r1, r3
 80008fa:	e722      	b.n	8000742 <__aeabi_dmul+0x24a>
 80008fc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000900:	bf18      	it	ne
 8000902:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000906:	f47f aec5 	bne.w	8000694 <__aeabi_dmul+0x19c>
 800090a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 800090e:	f47f af0d 	bne.w	800072c <__aeabi_dmul+0x234>
 8000912:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000916:	f47f aeeb 	bne.w	80006f0 <__aeabi_dmul+0x1f8>
 800091a:	e712      	b.n	8000742 <__aeabi_dmul+0x24a>

0800091c <__gedf2>:
 800091c:	f04f 3cff 	mov.w	ip, #4294967295	@ 0xffffffff
 8000920:	e006      	b.n	8000930 <__cmpdf2+0x4>
 8000922:	bf00      	nop

08000924 <__ledf2>:
 8000924:	f04f 0c01 	mov.w	ip, #1
 8000928:	e002      	b.n	8000930 <__cmpdf2+0x4>
 800092a:	bf00      	nop

0800092c <__cmpdf2>:
 800092c:	f04f 0c01 	mov.w	ip, #1
 8000930:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000934:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000938:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 800093c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000940:	bf18      	it	ne
 8000942:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000946:	d01b      	beq.n	8000980 <__cmpdf2+0x54>
 8000948:	b001      	add	sp, #4
 800094a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 800094e:	bf0c      	ite	eq
 8000950:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000954:	ea91 0f03 	teqne	r1, r3
 8000958:	bf02      	ittt	eq
 800095a:	ea90 0f02 	teqeq	r0, r2
 800095e:	2000      	moveq	r0, #0
 8000960:	4770      	bxeq	lr
 8000962:	f110 0f00 	cmn.w	r0, #0
 8000966:	ea91 0f03 	teq	r1, r3
 800096a:	bf58      	it	pl
 800096c:	4299      	cmppl	r1, r3
 800096e:	bf08      	it	eq
 8000970:	4290      	cmpeq	r0, r2
 8000972:	bf2c      	ite	cs
 8000974:	17d8      	asrcs	r0, r3, #31
 8000976:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 800097a:	f040 0001 	orr.w	r0, r0, #1
 800097e:	4770      	bx	lr
 8000980:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000984:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000988:	d102      	bne.n	8000990 <__cmpdf2+0x64>
 800098a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 800098e:	d107      	bne.n	80009a0 <__cmpdf2+0x74>
 8000990:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000994:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000998:	d1d6      	bne.n	8000948 <__cmpdf2+0x1c>
 800099a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 800099e:	d0d3      	beq.n	8000948 <__cmpdf2+0x1c>
 80009a0:	f85d 0b04 	ldr.w	r0, [sp], #4
 80009a4:	4770      	bx	lr
 80009a6:	bf00      	nop

080009a8 <__aeabi_cdrcmple>:
 80009a8:	4684      	mov	ip, r0
 80009aa:	4610      	mov	r0, r2
 80009ac:	4662      	mov	r2, ip
 80009ae:	468c      	mov	ip, r1
 80009b0:	4619      	mov	r1, r3
 80009b2:	4663      	mov	r3, ip
 80009b4:	e000      	b.n	80009b8 <__aeabi_cdcmpeq>
 80009b6:	bf00      	nop

080009b8 <__aeabi_cdcmpeq>:
 80009b8:	b501      	push	{r0, lr}
 80009ba:	f7ff ffb7 	bl	800092c <__cmpdf2>
 80009be:	2800      	cmp	r0, #0
 80009c0:	bf48      	it	mi
 80009c2:	f110 0f00 	cmnmi.w	r0, #0
 80009c6:	bd01      	pop	{r0, pc}

080009c8 <__aeabi_dcmpeq>:
 80009c8:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009cc:	f7ff fff4 	bl	80009b8 <__aeabi_cdcmpeq>
 80009d0:	bf0c      	ite	eq
 80009d2:	2001      	moveq	r0, #1
 80009d4:	2000      	movne	r0, #0
 80009d6:	f85d fb08 	ldr.w	pc, [sp], #8
 80009da:	bf00      	nop

080009dc <__aeabi_dcmplt>:
 80009dc:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009e0:	f7ff ffea 	bl	80009b8 <__aeabi_cdcmpeq>
 80009e4:	bf34      	ite	cc
 80009e6:	2001      	movcc	r0, #1
 80009e8:	2000      	movcs	r0, #0
 80009ea:	f85d fb08 	ldr.w	pc, [sp], #8
 80009ee:	bf00      	nop

080009f0 <__aeabi_dcmple>:
 80009f0:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009f4:	f7ff ffe0 	bl	80009b8 <__aeabi_cdcmpeq>
 80009f8:	bf94      	ite	ls
 80009fa:	2001      	movls	r0, #1
 80009fc:	2000      	movhi	r0, #0
 80009fe:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a02:	bf00      	nop

08000a04 <__aeabi_dcmpge>:
 8000a04:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a08:	f7ff ffce 	bl	80009a8 <__aeabi_cdrcmple>
 8000a0c:	bf94      	ite	ls
 8000a0e:	2001      	movls	r0, #1
 8000a10:	2000      	movhi	r0, #0
 8000a12:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a16:	bf00      	nop

08000a18 <__aeabi_dcmpgt>:
 8000a18:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a1c:	f7ff ffc4 	bl	80009a8 <__aeabi_cdrcmple>
 8000a20:	bf34      	ite	cc
 8000a22:	2001      	movcc	r0, #1
 8000a24:	2000      	movcs	r0, #0
 8000a26:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a2a:	bf00      	nop

08000a2c <__aeabi_dcmpun>:
 8000a2c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a30:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a34:	d102      	bne.n	8000a3c <__aeabi_dcmpun+0x10>
 8000a36:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a3a:	d10a      	bne.n	8000a52 <__aeabi_dcmpun+0x26>
 8000a3c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a40:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a44:	d102      	bne.n	8000a4c <__aeabi_dcmpun+0x20>
 8000a46:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a4a:	d102      	bne.n	8000a52 <__aeabi_dcmpun+0x26>
 8000a4c:	f04f 0000 	mov.w	r0, #0
 8000a50:	4770      	bx	lr
 8000a52:	f04f 0001 	mov.w	r0, #1
 8000a56:	4770      	bx	lr

08000a58 <__aeabi_d2iz>:
 8000a58:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000a5c:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000a60:	d215      	bcs.n	8000a8e <__aeabi_d2iz+0x36>
 8000a62:	d511      	bpl.n	8000a88 <__aeabi_d2iz+0x30>
 8000a64:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000a68:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000a6c:	d912      	bls.n	8000a94 <__aeabi_d2iz+0x3c>
 8000a6e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000a72:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000a76:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000a7a:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000a7e:	fa23 f002 	lsr.w	r0, r3, r2
 8000a82:	bf18      	it	ne
 8000a84:	4240      	negne	r0, r0
 8000a86:	4770      	bx	lr
 8000a88:	f04f 0000 	mov.w	r0, #0
 8000a8c:	4770      	bx	lr
 8000a8e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000a92:	d105      	bne.n	8000aa0 <__aeabi_d2iz+0x48>
 8000a94:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
 8000a98:	bf08      	it	eq
 8000a9a:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
 8000a9e:	4770      	bx	lr
 8000aa0:	f04f 0000 	mov.w	r0, #0
 8000aa4:	4770      	bx	lr
 8000aa6:	bf00      	nop

08000aa8 <__aeabi_d2uiz>:
 8000aa8:	004a      	lsls	r2, r1, #1
 8000aaa:	d211      	bcs.n	8000ad0 <__aeabi_d2uiz+0x28>
 8000aac:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000ab0:	d211      	bcs.n	8000ad6 <__aeabi_d2uiz+0x2e>
 8000ab2:	d50d      	bpl.n	8000ad0 <__aeabi_d2uiz+0x28>
 8000ab4:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000ab8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000abc:	d40e      	bmi.n	8000adc <__aeabi_d2uiz+0x34>
 8000abe:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000ac2:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000ac6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000aca:	fa23 f002 	lsr.w	r0, r3, r2
 8000ace:	4770      	bx	lr
 8000ad0:	f04f 0000 	mov.w	r0, #0
 8000ad4:	4770      	bx	lr
 8000ad6:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000ada:	d102      	bne.n	8000ae2 <__aeabi_d2uiz+0x3a>
 8000adc:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8000ae0:	4770      	bx	lr
 8000ae2:	f04f 0000 	mov.w	r0, #0
 8000ae6:	4770      	bx	lr

08000ae8 <__aeabi_d2f>:
 8000ae8:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000aec:	f1b2 43e0 	subs.w	r3, r2, #1879048192	@ 0x70000000
 8000af0:	bf24      	itt	cs
 8000af2:	f5b3 1c00 	subscs.w	ip, r3, #2097152	@ 0x200000
 8000af6:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	@ 0x1fc00000
 8000afa:	d90d      	bls.n	8000b18 <__aeabi_d2f+0x30>
 8000afc:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000b00:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000b04:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000b08:	f1b2 4f00 	cmp.w	r2, #2147483648	@ 0x80000000
 8000b0c:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000b10:	bf08      	it	eq
 8000b12:	f020 0001 	biceq.w	r0, r0, #1
 8000b16:	4770      	bx	lr
 8000b18:	f011 4f80 	tst.w	r1, #1073741824	@ 0x40000000
 8000b1c:	d121      	bne.n	8000b62 <__aeabi_d2f+0x7a>
 8000b1e:	f113 7238 	adds.w	r2, r3, #48234496	@ 0x2e00000
 8000b22:	bfbc      	itt	lt
 8000b24:	f001 4000 	andlt.w	r0, r1, #2147483648	@ 0x80000000
 8000b28:	4770      	bxlt	lr
 8000b2a:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000b2e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000b32:	f1c2 0218 	rsb	r2, r2, #24
 8000b36:	f1c2 0c20 	rsb	ip, r2, #32
 8000b3a:	fa10 f30c 	lsls.w	r3, r0, ip
 8000b3e:	fa20 f002 	lsr.w	r0, r0, r2
 8000b42:	bf18      	it	ne
 8000b44:	f040 0001 	orrne.w	r0, r0, #1
 8000b48:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b4c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000b50:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000b54:	ea40 000c 	orr.w	r0, r0, ip
 8000b58:	fa23 f302 	lsr.w	r3, r3, r2
 8000b5c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000b60:	e7cc      	b.n	8000afc <__aeabi_d2f+0x14>
 8000b62:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000b66:	d107      	bne.n	8000b78 <__aeabi_d2f+0x90>
 8000b68:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000b6c:	bf1e      	ittt	ne
 8000b6e:	f04f 40fe 	movne.w	r0, #2130706432	@ 0x7f000000
 8000b72:	f440 0040 	orrne.w	r0, r0, #12582912	@ 0xc00000
 8000b76:	4770      	bxne	lr
 8000b78:	f001 4000 	and.w	r0, r1, #2147483648	@ 0x80000000
 8000b7c:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8000b80:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000b84:	4770      	bx	lr
 8000b86:	bf00      	nop

08000b88 <__aeabi_frsub>:
 8000b88:	f080 4000 	eor.w	r0, r0, #2147483648	@ 0x80000000
 8000b8c:	e002      	b.n	8000b94 <__addsf3>
 8000b8e:	bf00      	nop

08000b90 <__aeabi_fsub>:
 8000b90:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000

08000b94 <__addsf3>:
 8000b94:	0042      	lsls	r2, r0, #1
 8000b96:	bf1f      	itttt	ne
 8000b98:	ea5f 0341 	movsne.w	r3, r1, lsl #1
 8000b9c:	ea92 0f03 	teqne	r2, r3
 8000ba0:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
 8000ba4:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000ba8:	d06a      	beq.n	8000c80 <__addsf3+0xec>
 8000baa:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8000bae:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
 8000bb2:	bfc1      	itttt	gt
 8000bb4:	18d2      	addgt	r2, r2, r3
 8000bb6:	4041      	eorgt	r1, r0
 8000bb8:	4048      	eorgt	r0, r1
 8000bba:	4041      	eorgt	r1, r0
 8000bbc:	bfb8      	it	lt
 8000bbe:	425b      	neglt	r3, r3
 8000bc0:	2b19      	cmp	r3, #25
 8000bc2:	bf88      	it	hi
 8000bc4:	4770      	bxhi	lr
 8000bc6:	f010 4f00 	tst.w	r0, #2147483648	@ 0x80000000
 8000bca:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000bce:	f020 407f 	bic.w	r0, r0, #4278190080	@ 0xff000000
 8000bd2:	bf18      	it	ne
 8000bd4:	4240      	negne	r0, r0
 8000bd6:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000bda:	f441 0100 	orr.w	r1, r1, #8388608	@ 0x800000
 8000bde:	f021 417f 	bic.w	r1, r1, #4278190080	@ 0xff000000
 8000be2:	bf18      	it	ne
 8000be4:	4249      	negne	r1, r1
 8000be6:	ea92 0f03 	teq	r2, r3
 8000bea:	d03f      	beq.n	8000c6c <__addsf3+0xd8>
 8000bec:	f1a2 0201 	sub.w	r2, r2, #1
 8000bf0:	fa41 fc03 	asr.w	ip, r1, r3
 8000bf4:	eb10 000c 	adds.w	r0, r0, ip
 8000bf8:	f1c3 0320 	rsb	r3, r3, #32
 8000bfc:	fa01 f103 	lsl.w	r1, r1, r3
 8000c00:	f000 4300 	and.w	r3, r0, #2147483648	@ 0x80000000
 8000c04:	d502      	bpl.n	8000c0c <__addsf3+0x78>
 8000c06:	4249      	negs	r1, r1
 8000c08:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
 8000c0c:	f5b0 0f00 	cmp.w	r0, #8388608	@ 0x800000
 8000c10:	d313      	bcc.n	8000c3a <__addsf3+0xa6>
 8000c12:	f1b0 7f80 	cmp.w	r0, #16777216	@ 0x1000000
 8000c16:	d306      	bcc.n	8000c26 <__addsf3+0x92>
 8000c18:	0840      	lsrs	r0, r0, #1
 8000c1a:	ea4f 0131 	mov.w	r1, r1, rrx
 8000c1e:	f102 0201 	add.w	r2, r2, #1
 8000c22:	2afe      	cmp	r2, #254	@ 0xfe
 8000c24:	d251      	bcs.n	8000cca <__addsf3+0x136>
 8000c26:	f1b1 4f00 	cmp.w	r1, #2147483648	@ 0x80000000
 8000c2a:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000c2e:	bf08      	it	eq
 8000c30:	f020 0001 	biceq.w	r0, r0, #1
 8000c34:	ea40 0003 	orr.w	r0, r0, r3
 8000c38:	4770      	bx	lr
 8000c3a:	0049      	lsls	r1, r1, #1
 8000c3c:	eb40 0000 	adc.w	r0, r0, r0
 8000c40:	3a01      	subs	r2, #1
 8000c42:	bf28      	it	cs
 8000c44:	f5b0 0f00 	cmpcs.w	r0, #8388608	@ 0x800000
 8000c48:	d2ed      	bcs.n	8000c26 <__addsf3+0x92>
 8000c4a:	fab0 fc80 	clz	ip, r0
 8000c4e:	f1ac 0c08 	sub.w	ip, ip, #8
 8000c52:	ebb2 020c 	subs.w	r2, r2, ip
 8000c56:	fa00 f00c 	lsl.w	r0, r0, ip
 8000c5a:	bfaa      	itet	ge
 8000c5c:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
 8000c60:	4252      	neglt	r2, r2
 8000c62:	4318      	orrge	r0, r3
 8000c64:	bfbc      	itt	lt
 8000c66:	40d0      	lsrlt	r0, r2
 8000c68:	4318      	orrlt	r0, r3
 8000c6a:	4770      	bx	lr
 8000c6c:	f092 0f00 	teq	r2, #0
 8000c70:	f481 0100 	eor.w	r1, r1, #8388608	@ 0x800000
 8000c74:	bf06      	itte	eq
 8000c76:	f480 0000 	eoreq.w	r0, r0, #8388608	@ 0x800000
 8000c7a:	3201      	addeq	r2, #1
 8000c7c:	3b01      	subne	r3, #1
 8000c7e:	e7b5      	b.n	8000bec <__addsf3+0x58>
 8000c80:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8000c84:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8000c88:	bf18      	it	ne
 8000c8a:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000c8e:	d021      	beq.n	8000cd4 <__addsf3+0x140>
 8000c90:	ea92 0f03 	teq	r2, r3
 8000c94:	d004      	beq.n	8000ca0 <__addsf3+0x10c>
 8000c96:	f092 0f00 	teq	r2, #0
 8000c9a:	bf08      	it	eq
 8000c9c:	4608      	moveq	r0, r1
 8000c9e:	4770      	bx	lr
 8000ca0:	ea90 0f01 	teq	r0, r1
 8000ca4:	bf1c      	itt	ne
 8000ca6:	2000      	movne	r0, #0
 8000ca8:	4770      	bxne	lr
 8000caa:	f012 4f7f 	tst.w	r2, #4278190080	@ 0xff000000
 8000cae:	d104      	bne.n	8000cba <__addsf3+0x126>
 8000cb0:	0040      	lsls	r0, r0, #1
 8000cb2:	bf28      	it	cs
 8000cb4:	f040 4000 	orrcs.w	r0, r0, #2147483648	@ 0x80000000
 8000cb8:	4770      	bx	lr
 8000cba:	f112 7200 	adds.w	r2, r2, #33554432	@ 0x2000000
 8000cbe:	bf3c      	itt	cc
 8000cc0:	f500 0000 	addcc.w	r0, r0, #8388608	@ 0x800000
 8000cc4:	4770      	bxcc	lr
 8000cc6:	f000 4300 	and.w	r3, r0, #2147483648	@ 0x80000000
 8000cca:	f043 40fe 	orr.w	r0, r3, #2130706432	@ 0x7f000000
 8000cce:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000cd2:	4770      	bx	lr
 8000cd4:	ea7f 6222 	mvns.w	r2, r2, asr #24
 8000cd8:	bf16      	itet	ne
 8000cda:	4608      	movne	r0, r1
 8000cdc:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
 8000ce0:	4601      	movne	r1, r0
 8000ce2:	0242      	lsls	r2, r0, #9
 8000ce4:	bf06      	itte	eq
 8000ce6:	ea5f 2341 	movseq.w	r3, r1, lsl #9
 8000cea:	ea90 0f01 	teqeq	r0, r1
 8000cee:	f440 0080 	orrne.w	r0, r0, #4194304	@ 0x400000
 8000cf2:	4770      	bx	lr

08000cf4 <__aeabi_ui2f>:
 8000cf4:	f04f 0300 	mov.w	r3, #0
 8000cf8:	e004      	b.n	8000d04 <__aeabi_i2f+0x8>
 8000cfa:	bf00      	nop

08000cfc <__aeabi_i2f>:
 8000cfc:	f010 4300 	ands.w	r3, r0, #2147483648	@ 0x80000000
 8000d00:	bf48      	it	mi
 8000d02:	4240      	negmi	r0, r0
 8000d04:	ea5f 0c00 	movs.w	ip, r0
 8000d08:	bf08      	it	eq
 8000d0a:	4770      	bxeq	lr
 8000d0c:	f043 4396 	orr.w	r3, r3, #1258291200	@ 0x4b000000
 8000d10:	4601      	mov	r1, r0
 8000d12:	f04f 0000 	mov.w	r0, #0
 8000d16:	e01c      	b.n	8000d52 <__aeabi_l2f+0x2a>

08000d18 <__aeabi_ul2f>:
 8000d18:	ea50 0201 	orrs.w	r2, r0, r1
 8000d1c:	bf08      	it	eq
 8000d1e:	4770      	bxeq	lr
 8000d20:	f04f 0300 	mov.w	r3, #0
 8000d24:	e00a      	b.n	8000d3c <__aeabi_l2f+0x14>
 8000d26:	bf00      	nop

08000d28 <__aeabi_l2f>:
 8000d28:	ea50 0201 	orrs.w	r2, r0, r1
 8000d2c:	bf08      	it	eq
 8000d2e:	4770      	bxeq	lr
 8000d30:	f011 4300 	ands.w	r3, r1, #2147483648	@ 0x80000000
 8000d34:	d502      	bpl.n	8000d3c <__aeabi_l2f+0x14>
 8000d36:	4240      	negs	r0, r0
 8000d38:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000d3c:	ea5f 0c01 	movs.w	ip, r1
 8000d40:	bf02      	ittt	eq
 8000d42:	4684      	moveq	ip, r0
 8000d44:	4601      	moveq	r1, r0
 8000d46:	2000      	moveq	r0, #0
 8000d48:	f043 43b6 	orr.w	r3, r3, #1526726656	@ 0x5b000000
 8000d4c:	bf08      	it	eq
 8000d4e:	f1a3 5380 	subeq.w	r3, r3, #268435456	@ 0x10000000
 8000d52:	f5a3 0300 	sub.w	r3, r3, #8388608	@ 0x800000
 8000d56:	fabc f28c 	clz	r2, ip
 8000d5a:	3a08      	subs	r2, #8
 8000d5c:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
 8000d60:	db10      	blt.n	8000d84 <__aeabi_l2f+0x5c>
 8000d62:	fa01 fc02 	lsl.w	ip, r1, r2
 8000d66:	4463      	add	r3, ip
 8000d68:	fa00 fc02 	lsl.w	ip, r0, r2
 8000d6c:	f1c2 0220 	rsb	r2, r2, #32
 8000d70:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 8000d74:	fa20 f202 	lsr.w	r2, r0, r2
 8000d78:	eb43 0002 	adc.w	r0, r3, r2
 8000d7c:	bf08      	it	eq
 8000d7e:	f020 0001 	biceq.w	r0, r0, #1
 8000d82:	4770      	bx	lr
 8000d84:	f102 0220 	add.w	r2, r2, #32
 8000d88:	fa01 fc02 	lsl.w	ip, r1, r2
 8000d8c:	f1c2 0220 	rsb	r2, r2, #32
 8000d90:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
 8000d94:	fa21 f202 	lsr.w	r2, r1, r2
 8000d98:	eb43 0002 	adc.w	r0, r3, r2
 8000d9c:	bf08      	it	eq
 8000d9e:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000da2:	4770      	bx	lr

08000da4 <__aeabi_fmul>:
 8000da4:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000da8:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8000dac:	bf1e      	ittt	ne
 8000dae:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8000db2:	ea92 0f0c 	teqne	r2, ip
 8000db6:	ea93 0f0c 	teqne	r3, ip
 8000dba:	d06f      	beq.n	8000e9c <__aeabi_fmul+0xf8>
 8000dbc:	441a      	add	r2, r3
 8000dbe:	ea80 0c01 	eor.w	ip, r0, r1
 8000dc2:	0240      	lsls	r0, r0, #9
 8000dc4:	bf18      	it	ne
 8000dc6:	ea5f 2141 	movsne.w	r1, r1, lsl #9
 8000dca:	d01e      	beq.n	8000e0a <__aeabi_fmul+0x66>
 8000dcc:	f04f 6300 	mov.w	r3, #134217728	@ 0x8000000
 8000dd0:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
 8000dd4:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
 8000dd8:	fba0 3101 	umull	r3, r1, r0, r1
 8000ddc:	f00c 4000 	and.w	r0, ip, #2147483648	@ 0x80000000
 8000de0:	f5b1 0f00 	cmp.w	r1, #8388608	@ 0x800000
 8000de4:	bf3e      	ittt	cc
 8000de6:	0049      	lslcc	r1, r1, #1
 8000de8:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
 8000dec:	005b      	lslcc	r3, r3, #1
 8000dee:	ea40 0001 	orr.w	r0, r0, r1
 8000df2:	f162 027f 	sbc.w	r2, r2, #127	@ 0x7f
 8000df6:	2afd      	cmp	r2, #253	@ 0xfd
 8000df8:	d81d      	bhi.n	8000e36 <__aeabi_fmul+0x92>
 8000dfa:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 8000dfe:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000e02:	bf08      	it	eq
 8000e04:	f020 0001 	biceq.w	r0, r0, #1
 8000e08:	4770      	bx	lr
 8000e0a:	f090 0f00 	teq	r0, #0
 8000e0e:	f00c 4c00 	and.w	ip, ip, #2147483648	@ 0x80000000
 8000e12:	bf08      	it	eq
 8000e14:	0249      	lsleq	r1, r1, #9
 8000e16:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8000e1a:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
 8000e1e:	3a7f      	subs	r2, #127	@ 0x7f
 8000e20:	bfc2      	ittt	gt
 8000e22:	f1d2 03ff 	rsbsgt	r3, r2, #255	@ 0xff
 8000e26:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8000e2a:	4770      	bxgt	lr
 8000e2c:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000e30:	f04f 0300 	mov.w	r3, #0
 8000e34:	3a01      	subs	r2, #1
 8000e36:	dc5d      	bgt.n	8000ef4 <__aeabi_fmul+0x150>
 8000e38:	f112 0f19 	cmn.w	r2, #25
 8000e3c:	bfdc      	itt	le
 8000e3e:	f000 4000 	andle.w	r0, r0, #2147483648	@ 0x80000000
 8000e42:	4770      	bxle	lr
 8000e44:	f1c2 0200 	rsb	r2, r2, #0
 8000e48:	0041      	lsls	r1, r0, #1
 8000e4a:	fa21 f102 	lsr.w	r1, r1, r2
 8000e4e:	f1c2 0220 	rsb	r2, r2, #32
 8000e52:	fa00 fc02 	lsl.w	ip, r0, r2
 8000e56:	ea5f 0031 	movs.w	r0, r1, rrx
 8000e5a:	f140 0000 	adc.w	r0, r0, #0
 8000e5e:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
 8000e62:	bf08      	it	eq
 8000e64:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000e68:	4770      	bx	lr
 8000e6a:	f092 0f00 	teq	r2, #0
 8000e6e:	f000 4c00 	and.w	ip, r0, #2147483648	@ 0x80000000
 8000e72:	bf02      	ittt	eq
 8000e74:	0040      	lsleq	r0, r0, #1
 8000e76:	f410 0f00 	tsteq.w	r0, #8388608	@ 0x800000
 8000e7a:	3a01      	subeq	r2, #1
 8000e7c:	d0f9      	beq.n	8000e72 <__aeabi_fmul+0xce>
 8000e7e:	ea40 000c 	orr.w	r0, r0, ip
 8000e82:	f093 0f00 	teq	r3, #0
 8000e86:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000e8a:	bf02      	ittt	eq
 8000e8c:	0049      	lsleq	r1, r1, #1
 8000e8e:	f411 0f00 	tsteq.w	r1, #8388608	@ 0x800000
 8000e92:	3b01      	subeq	r3, #1
 8000e94:	d0f9      	beq.n	8000e8a <__aeabi_fmul+0xe6>
 8000e96:	ea41 010c 	orr.w	r1, r1, ip
 8000e9a:	e78f      	b.n	8000dbc <__aeabi_fmul+0x18>
 8000e9c:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8000ea0:	ea92 0f0c 	teq	r2, ip
 8000ea4:	bf18      	it	ne
 8000ea6:	ea93 0f0c 	teqne	r3, ip
 8000eaa:	d00a      	beq.n	8000ec2 <__aeabi_fmul+0x11e>
 8000eac:	f030 4c00 	bics.w	ip, r0, #2147483648	@ 0x80000000
 8000eb0:	bf18      	it	ne
 8000eb2:	f031 4c00 	bicsne.w	ip, r1, #2147483648	@ 0x80000000
 8000eb6:	d1d8      	bne.n	8000e6a <__aeabi_fmul+0xc6>
 8000eb8:	ea80 0001 	eor.w	r0, r0, r1
 8000ebc:	f000 4000 	and.w	r0, r0, #2147483648	@ 0x80000000
 8000ec0:	4770      	bx	lr
 8000ec2:	f090 0f00 	teq	r0, #0
 8000ec6:	bf17      	itett	ne
 8000ec8:	f090 4f00 	teqne	r0, #2147483648	@ 0x80000000
 8000ecc:	4608      	moveq	r0, r1
 8000ece:	f091 0f00 	teqne	r1, #0
 8000ed2:	f091 4f00 	teqne	r1, #2147483648	@ 0x80000000
 8000ed6:	d014      	beq.n	8000f02 <__aeabi_fmul+0x15e>
 8000ed8:	ea92 0f0c 	teq	r2, ip
 8000edc:	d101      	bne.n	8000ee2 <__aeabi_fmul+0x13e>
 8000ede:	0242      	lsls	r2, r0, #9
 8000ee0:	d10f      	bne.n	8000f02 <__aeabi_fmul+0x15e>
 8000ee2:	ea93 0f0c 	teq	r3, ip
 8000ee6:	d103      	bne.n	8000ef0 <__aeabi_fmul+0x14c>
 8000ee8:	024b      	lsls	r3, r1, #9
 8000eea:	bf18      	it	ne
 8000eec:	4608      	movne	r0, r1
 8000eee:	d108      	bne.n	8000f02 <__aeabi_fmul+0x15e>
 8000ef0:	ea80 0001 	eor.w	r0, r0, r1
 8000ef4:	f000 4000 	and.w	r0, r0, #2147483648	@ 0x80000000
 8000ef8:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8000efc:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000f00:	4770      	bx	lr
 8000f02:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8000f06:	f440 0040 	orr.w	r0, r0, #12582912	@ 0xc00000
 8000f0a:	4770      	bx	lr

08000f0c <__aeabi_fdiv>:
 8000f0c:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000f10:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8000f14:	bf1e      	ittt	ne
 8000f16:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8000f1a:	ea92 0f0c 	teqne	r2, ip
 8000f1e:	ea93 0f0c 	teqne	r3, ip
 8000f22:	d069      	beq.n	8000ff8 <__aeabi_fdiv+0xec>
 8000f24:	eba2 0203 	sub.w	r2, r2, r3
 8000f28:	ea80 0c01 	eor.w	ip, r0, r1
 8000f2c:	0249      	lsls	r1, r1, #9
 8000f2e:	ea4f 2040 	mov.w	r0, r0, lsl #9
 8000f32:	d037      	beq.n	8000fa4 <__aeabi_fdiv+0x98>
 8000f34:	f04f 5380 	mov.w	r3, #268435456	@ 0x10000000
 8000f38:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
 8000f3c:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
 8000f40:	f00c 4000 	and.w	r0, ip, #2147483648	@ 0x80000000
 8000f44:	428b      	cmp	r3, r1
 8000f46:	bf38      	it	cc
 8000f48:	005b      	lslcc	r3, r3, #1
 8000f4a:	f142 027d 	adc.w	r2, r2, #125	@ 0x7d
 8000f4e:	f44f 0c00 	mov.w	ip, #8388608	@ 0x800000
 8000f52:	428b      	cmp	r3, r1
 8000f54:	bf24      	itt	cs
 8000f56:	1a5b      	subcs	r3, r3, r1
 8000f58:	ea40 000c 	orrcs.w	r0, r0, ip
 8000f5c:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
 8000f60:	bf24      	itt	cs
 8000f62:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
 8000f66:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000f6a:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
 8000f6e:	bf24      	itt	cs
 8000f70:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
 8000f74:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000f78:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
 8000f7c:	bf24      	itt	cs
 8000f7e:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
 8000f82:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000f86:	011b      	lsls	r3, r3, #4
 8000f88:	bf18      	it	ne
 8000f8a:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
 8000f8e:	d1e0      	bne.n	8000f52 <__aeabi_fdiv+0x46>
 8000f90:	2afd      	cmp	r2, #253	@ 0xfd
 8000f92:	f63f af50 	bhi.w	8000e36 <__aeabi_fmul+0x92>
 8000f96:	428b      	cmp	r3, r1
 8000f98:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000f9c:	bf08      	it	eq
 8000f9e:	f020 0001 	biceq.w	r0, r0, #1
 8000fa2:	4770      	bx	lr
 8000fa4:	f00c 4c00 	and.w	ip, ip, #2147483648	@ 0x80000000
 8000fa8:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8000fac:	327f      	adds	r2, #127	@ 0x7f
 8000fae:	bfc2      	ittt	gt
 8000fb0:	f1d2 03ff 	rsbsgt	r3, r2, #255	@ 0xff
 8000fb4:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8000fb8:	4770      	bxgt	lr
 8000fba:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000fbe:	f04f 0300 	mov.w	r3, #0
 8000fc2:	3a01      	subs	r2, #1
 8000fc4:	e737      	b.n	8000e36 <__aeabi_fmul+0x92>
 8000fc6:	f092 0f00 	teq	r2, #0
 8000fca:	f000 4c00 	and.w	ip, r0, #2147483648	@ 0x80000000
 8000fce:	bf02      	ittt	eq
 8000fd0:	0040      	lsleq	r0, r0, #1
 8000fd2:	f410 0f00 	tsteq.w	r0, #8388608	@ 0x800000
 8000fd6:	3a01      	subeq	r2, #1
 8000fd8:	d0f9      	beq.n	8000fce <__aeabi_fdiv+0xc2>
 8000fda:	ea40 000c 	orr.w	r0, r0, ip
 8000fde:	f093 0f00 	teq	r3, #0
 8000fe2:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000fe6:	bf02      	ittt	eq
 8000fe8:	0049      	lsleq	r1, r1, #1
 8000fea:	f411 0f00 	tsteq.w	r1, #8388608	@ 0x800000
 8000fee:	3b01      	subeq	r3, #1
 8000ff0:	d0f9      	beq.n	8000fe6 <__aeabi_fdiv+0xda>
 8000ff2:	ea41 010c 	orr.w	r1, r1, ip
 8000ff6:	e795      	b.n	8000f24 <__aeabi_fdiv+0x18>
 8000ff8:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8000ffc:	ea92 0f0c 	teq	r2, ip
 8001000:	d108      	bne.n	8001014 <__aeabi_fdiv+0x108>
 8001002:	0242      	lsls	r2, r0, #9
 8001004:	f47f af7d 	bne.w	8000f02 <__aeabi_fmul+0x15e>
 8001008:	ea93 0f0c 	teq	r3, ip
 800100c:	f47f af70 	bne.w	8000ef0 <__aeabi_fmul+0x14c>
 8001010:	4608      	mov	r0, r1
 8001012:	e776      	b.n	8000f02 <__aeabi_fmul+0x15e>
 8001014:	ea93 0f0c 	teq	r3, ip
 8001018:	d104      	bne.n	8001024 <__aeabi_fdiv+0x118>
 800101a:	024b      	lsls	r3, r1, #9
 800101c:	f43f af4c 	beq.w	8000eb8 <__aeabi_fmul+0x114>
 8001020:	4608      	mov	r0, r1
 8001022:	e76e      	b.n	8000f02 <__aeabi_fmul+0x15e>
 8001024:	f030 4c00 	bics.w	ip, r0, #2147483648	@ 0x80000000
 8001028:	bf18      	it	ne
 800102a:	f031 4c00 	bicsne.w	ip, r1, #2147483648	@ 0x80000000
 800102e:	d1ca      	bne.n	8000fc6 <__aeabi_fdiv+0xba>
 8001030:	f030 4200 	bics.w	r2, r0, #2147483648	@ 0x80000000
 8001034:	f47f af5c 	bne.w	8000ef0 <__aeabi_fmul+0x14c>
 8001038:	f031 4300 	bics.w	r3, r1, #2147483648	@ 0x80000000
 800103c:	f47f af3c 	bne.w	8000eb8 <__aeabi_fmul+0x114>
 8001040:	e75f      	b.n	8000f02 <__aeabi_fmul+0x15e>
 8001042:	bf00      	nop

08001044 <__aeabi_d2lz>:
 8001044:	b538      	push	{r3, r4, r5, lr}
 8001046:	2200      	movs	r2, #0
 8001048:	2300      	movs	r3, #0
 800104a:	4604      	mov	r4, r0
 800104c:	460d      	mov	r5, r1
 800104e:	f7ff fcc5 	bl	80009dc <__aeabi_dcmplt>
 8001052:	b928      	cbnz	r0, 8001060 <__aeabi_d2lz+0x1c>
 8001054:	4620      	mov	r0, r4
 8001056:	4629      	mov	r1, r5
 8001058:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800105c:	f000 b80a 	b.w	8001074 <__aeabi_d2ulz>
 8001060:	4620      	mov	r0, r4
 8001062:	f105 4100 	add.w	r1, r5, #2147483648	@ 0x80000000
 8001066:	f000 f805 	bl	8001074 <__aeabi_d2ulz>
 800106a:	4240      	negs	r0, r0
 800106c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8001070:	bd38      	pop	{r3, r4, r5, pc}
 8001072:	bf00      	nop

08001074 <__aeabi_d2ulz>:
 8001074:	b5d0      	push	{r4, r6, r7, lr}
 8001076:	2200      	movs	r2, #0
 8001078:	4b0b      	ldr	r3, [pc, #44]	@ (80010a8 <__aeabi_d2ulz+0x34>)
 800107a:	4606      	mov	r6, r0
 800107c:	460f      	mov	r7, r1
 800107e:	f7ff fa3b 	bl	80004f8 <__aeabi_dmul>
 8001082:	f7ff fd11 	bl	8000aa8 <__aeabi_d2uiz>
 8001086:	4604      	mov	r4, r0
 8001088:	f7ff f9bc 	bl	8000404 <__aeabi_ui2d>
 800108c:	2200      	movs	r2, #0
 800108e:	4b07      	ldr	r3, [pc, #28]	@ (80010ac <__aeabi_d2ulz+0x38>)
 8001090:	f7ff fa32 	bl	80004f8 <__aeabi_dmul>
 8001094:	4602      	mov	r2, r0
 8001096:	460b      	mov	r3, r1
 8001098:	4630      	mov	r0, r6
 800109a:	4639      	mov	r1, r7
 800109c:	f7ff f874 	bl	8000188 <__aeabi_dsub>
 80010a0:	f7ff fd02 	bl	8000aa8 <__aeabi_d2uiz>
 80010a4:	4621      	mov	r1, r4
 80010a6:	bdd0      	pop	{r4, r6, r7, pc}
 80010a8:	3df00000 	.word	0x3df00000
 80010ac:	41f00000 	.word	0x41f00000

080010b0 <look2_binlxpw>:
/* Forward declaration for local functions */
static void EngTrModel_gear_state(const int32_T *sfEvent);
real_T look2_binlxpw(real_T u0, real_T u1, const real_T bp0[], const real_T bp1[],
                     const real_T table[], const uint32_T maxIndex[], uint32_T
                     stride)
{
 80010b0:	b5b0      	push	{r4, r5, r7, lr}
 80010b2:	b092      	sub	sp, #72	@ 0x48
 80010b4:	af00      	add	r7, sp, #0
 80010b6:	e9c7 0102 	strd	r0, r1, [r7, #8]
 80010ba:	e9c7 2300 	strd	r2, r3, [r7]
     Extrapolation method: 'Linear'
     Use previous index: 'off'
     Use last breakpoint for index at or above upper limit: 'off'
     Remove protection against out-of-range input in generated code: 'off'
   */
  if (u0 <= bp0[0U]) {
 80010be:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
 80010c0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80010c4:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 80010c8:	f7ff fc92 	bl	80009f0 <__aeabi_dcmple>
 80010cc:	4603      	mov	r3, r0
 80010ce:	2b00      	cmp	r3, #0
 80010d0:	d020      	beq.n	8001114 <look2_binlxpw+0x64>
    iLeft = 0U;
 80010d2:	2300      	movs	r3, #0
 80010d4:	637b      	str	r3, [r7, #52]	@ 0x34
    frac = (u0 - bp0[0U]) / (bp0[1U] - bp0[0U]);
 80010d6:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
 80010d8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80010dc:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 80010e0:	f7ff f852 	bl	8000188 <__aeabi_dsub>
 80010e4:	4602      	mov	r2, r0
 80010e6:	460b      	mov	r3, r1
 80010e8:	4614      	mov	r4, r2
 80010ea:	461d      	mov	r5, r3
 80010ec:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
 80010ee:	3308      	adds	r3, #8
 80010f0:	e9d3 0100 	ldrd	r0, r1, [r3]
 80010f4:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
 80010f6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80010fa:	f7ff f845 	bl	8000188 <__aeabi_dsub>
 80010fe:	4602      	mov	r2, r0
 8001100:	460b      	mov	r3, r1
 8001102:	4620      	mov	r0, r4
 8001104:	4629      	mov	r1, r5
 8001106:	f7ff fb21 	bl	800074c <__aeabi_ddiv>
 800110a:	4602      	mov	r2, r0
 800110c:	460b      	mov	r3, r1
 800110e:	e9c7 2310 	strd	r2, r3, [r7, #64]	@ 0x40
 8001112:	e08e      	b.n	8001232 <look2_binlxpw+0x182>
  } else if (u0 < bp0[maxIndex[0U]]) {
 8001114:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8001116:	681b      	ldr	r3, [r3, #0]
 8001118:	00db      	lsls	r3, r3, #3
 800111a:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 800111c:	4413      	add	r3, r2
 800111e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001122:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 8001126:	f7ff fc59 	bl	80009dc <__aeabi_dcmplt>
 800112a:	4603      	mov	r3, r0
 800112c:	2b00      	cmp	r3, #0
 800112e:	d04d      	beq.n	80011cc <look2_binlxpw+0x11c>
    /* Binary Search */
    bpIdx = maxIndex[0U] >> 1U;
 8001130:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8001132:	681b      	ldr	r3, [r3, #0]
 8001134:	085b      	lsrs	r3, r3, #1
 8001136:	63bb      	str	r3, [r7, #56]	@ 0x38
    iLeft = 0U;
 8001138:	2300      	movs	r3, #0
 800113a:	637b      	str	r3, [r7, #52]	@ 0x34
    iRght = maxIndex[0U];
 800113c:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 800113e:	681b      	ldr	r3, [r3, #0]
 8001140:	63fb      	str	r3, [r7, #60]	@ 0x3c
    while (iRght - iLeft > 1U) {
 8001142:	e016      	b.n	8001172 <look2_binlxpw+0xc2>
      if (u0 < bp0[bpIdx]) {
 8001144:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8001146:	00db      	lsls	r3, r3, #3
 8001148:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 800114a:	4413      	add	r3, r2
 800114c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001150:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 8001154:	f7ff fc42 	bl	80009dc <__aeabi_dcmplt>
 8001158:	4603      	mov	r3, r0
 800115a:	2b00      	cmp	r3, #0
 800115c:	d002      	beq.n	8001164 <look2_binlxpw+0xb4>
        iRght = bpIdx;
 800115e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8001160:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8001162:	e001      	b.n	8001168 <look2_binlxpw+0xb8>
      } else {
        iLeft = bpIdx;
 8001164:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8001166:	637b      	str	r3, [r7, #52]	@ 0x34
      }

      bpIdx = (iRght + iLeft) >> 1U;
 8001168:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
 800116a:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800116c:	4413      	add	r3, r2
 800116e:	085b      	lsrs	r3, r3, #1
 8001170:	63bb      	str	r3, [r7, #56]	@ 0x38
    while (iRght - iLeft > 1U) {
 8001172:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
 8001174:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8001176:	1ad3      	subs	r3, r2, r3
 8001178:	2b01      	cmp	r3, #1
 800117a:	d8e3      	bhi.n	8001144 <look2_binlxpw+0x94>
    }

    frac = (u0 - bp0[iLeft]) / (bp0[iLeft + 1U] - bp0[iLeft]);
 800117c:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800117e:	00db      	lsls	r3, r3, #3
 8001180:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 8001182:	4413      	add	r3, r2
 8001184:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001188:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800118c:	f7fe fffc 	bl	8000188 <__aeabi_dsub>
 8001190:	4602      	mov	r2, r0
 8001192:	460b      	mov	r3, r1
 8001194:	4614      	mov	r4, r2
 8001196:	461d      	mov	r5, r3
 8001198:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800119a:	3301      	adds	r3, #1
 800119c:	00db      	lsls	r3, r3, #3
 800119e:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 80011a0:	4413      	add	r3, r2
 80011a2:	e9d3 0100 	ldrd	r0, r1, [r3]
 80011a6:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80011a8:	00db      	lsls	r3, r3, #3
 80011aa:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 80011ac:	4413      	add	r3, r2
 80011ae:	e9d3 2300 	ldrd	r2, r3, [r3]
 80011b2:	f7fe ffe9 	bl	8000188 <__aeabi_dsub>
 80011b6:	4602      	mov	r2, r0
 80011b8:	460b      	mov	r3, r1
 80011ba:	4620      	mov	r0, r4
 80011bc:	4629      	mov	r1, r5
 80011be:	f7ff fac5 	bl	800074c <__aeabi_ddiv>
 80011c2:	4602      	mov	r2, r0
 80011c4:	460b      	mov	r3, r1
 80011c6:	e9c7 2310 	strd	r2, r3, [r7, #64]	@ 0x40
 80011ca:	e032      	b.n	8001232 <look2_binlxpw+0x182>
  } else {
    iLeft = maxIndex[0U] - 1U;
 80011cc:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 80011ce:	681b      	ldr	r3, [r3, #0]
 80011d0:	3b01      	subs	r3, #1
 80011d2:	637b      	str	r3, [r7, #52]	@ 0x34
    frac = (u0 - bp0[maxIndex[0U] - 1U]) / (bp0[maxIndex[0U]] - bp0[maxIndex[0U]
 80011d4:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 80011d6:	681b      	ldr	r3, [r3, #0]
 80011d8:	f103 5300 	add.w	r3, r3, #536870912	@ 0x20000000
 80011dc:	3b01      	subs	r3, #1
 80011de:	00db      	lsls	r3, r3, #3
 80011e0:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 80011e2:	4413      	add	r3, r2
 80011e4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80011e8:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 80011ec:	f7fe ffcc 	bl	8000188 <__aeabi_dsub>
 80011f0:	4602      	mov	r2, r0
 80011f2:	460b      	mov	r3, r1
 80011f4:	4614      	mov	r4, r2
 80011f6:	461d      	mov	r5, r3
 80011f8:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 80011fa:	681b      	ldr	r3, [r3, #0]
 80011fc:	00db      	lsls	r3, r3, #3
 80011fe:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 8001200:	4413      	add	r3, r2
 8001202:	e9d3 0100 	ldrd	r0, r1, [r3]
 8001206:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8001208:	681b      	ldr	r3, [r3, #0]
 800120a:	f103 5300 	add.w	r3, r3, #536870912	@ 0x20000000
 800120e:	3b01      	subs	r3, #1
 8001210:	00db      	lsls	r3, r3, #3
 8001212:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 8001214:	4413      	add	r3, r2
 8001216:	e9d3 2300 	ldrd	r2, r3, [r3]
 800121a:	f7fe ffb5 	bl	8000188 <__aeabi_dsub>
 800121e:	4602      	mov	r2, r0
 8001220:	460b      	mov	r3, r1
 8001222:	4620      	mov	r0, r4
 8001224:	4629      	mov	r1, r5
 8001226:	f7ff fa91 	bl	800074c <__aeabi_ddiv>
 800122a:	4602      	mov	r2, r0
 800122c:	460b      	mov	r3, r1
 800122e:	e9c7 2310 	strd	r2, r3, [r7, #64]	@ 0x40
      - 1U]);
  }

  fractions[0U] = frac;
 8001232:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	@ 0x40
 8001236:	e9c7 2304 	strd	r2, r3, [r7, #16]
  bpIndices[0U] = iLeft;
 800123a:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800123c:	623b      	str	r3, [r7, #32]
     Extrapolation method: 'Linear'
     Use previous index: 'off'
     Use last breakpoint for index at or above upper limit: 'off'
     Remove protection against out-of-range input in generated code: 'off'
   */
  if (u1 <= bp1[0U]) {
 800123e:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 8001240:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001244:	e9d7 0100 	ldrd	r0, r1, [r7]
 8001248:	f7ff fbd2 	bl	80009f0 <__aeabi_dcmple>
 800124c:	4603      	mov	r3, r0
 800124e:	2b00      	cmp	r3, #0
 8001250:	d020      	beq.n	8001294 <look2_binlxpw+0x1e4>
    iLeft = 0U;
 8001252:	2300      	movs	r3, #0
 8001254:	637b      	str	r3, [r7, #52]	@ 0x34
    frac = (u1 - bp1[0U]) / (bp1[1U] - bp1[0U]);
 8001256:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 8001258:	e9d3 2300 	ldrd	r2, r3, [r3]
 800125c:	e9d7 0100 	ldrd	r0, r1, [r7]
 8001260:	f7fe ff92 	bl	8000188 <__aeabi_dsub>
 8001264:	4602      	mov	r2, r0
 8001266:	460b      	mov	r3, r1
 8001268:	4614      	mov	r4, r2
 800126a:	461d      	mov	r5, r3
 800126c:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 800126e:	3308      	adds	r3, #8
 8001270:	e9d3 0100 	ldrd	r0, r1, [r3]
 8001274:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 8001276:	e9d3 2300 	ldrd	r2, r3, [r3]
 800127a:	f7fe ff85 	bl	8000188 <__aeabi_dsub>
 800127e:	4602      	mov	r2, r0
 8001280:	460b      	mov	r3, r1
 8001282:	4620      	mov	r0, r4
 8001284:	4629      	mov	r1, r5
 8001286:	f7ff fa61 	bl	800074c <__aeabi_ddiv>
 800128a:	4602      	mov	r2, r0
 800128c:	460b      	mov	r3, r1
 800128e:	e9c7 2310 	strd	r2, r3, [r7, #64]	@ 0x40
 8001292:	e095      	b.n	80013c0 <look2_binlxpw+0x310>
  } else if (u1 < bp1[maxIndex[1U]]) {
 8001294:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8001296:	3304      	adds	r3, #4
 8001298:	681b      	ldr	r3, [r3, #0]
 800129a:	00db      	lsls	r3, r3, #3
 800129c:	6dfa      	ldr	r2, [r7, #92]	@ 0x5c
 800129e:	4413      	add	r3, r2
 80012a0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80012a4:	e9d7 0100 	ldrd	r0, r1, [r7]
 80012a8:	f7ff fb98 	bl	80009dc <__aeabi_dcmplt>
 80012ac:	4603      	mov	r3, r0
 80012ae:	2b00      	cmp	r3, #0
 80012b0:	d04f      	beq.n	8001352 <look2_binlxpw+0x2a2>
    /* Binary Search */
    bpIdx = maxIndex[1U] >> 1U;
 80012b2:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 80012b4:	3304      	adds	r3, #4
 80012b6:	681b      	ldr	r3, [r3, #0]
 80012b8:	085b      	lsrs	r3, r3, #1
 80012ba:	63bb      	str	r3, [r7, #56]	@ 0x38
    iLeft = 0U;
 80012bc:	2300      	movs	r3, #0
 80012be:	637b      	str	r3, [r7, #52]	@ 0x34
    iRght = maxIndex[1U];
 80012c0:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 80012c2:	3304      	adds	r3, #4
 80012c4:	681b      	ldr	r3, [r3, #0]
 80012c6:	63fb      	str	r3, [r7, #60]	@ 0x3c
    while (iRght - iLeft > 1U) {
 80012c8:	e016      	b.n	80012f8 <look2_binlxpw+0x248>
      if (u1 < bp1[bpIdx]) {
 80012ca:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80012cc:	00db      	lsls	r3, r3, #3
 80012ce:	6dfa      	ldr	r2, [r7, #92]	@ 0x5c
 80012d0:	4413      	add	r3, r2
 80012d2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80012d6:	e9d7 0100 	ldrd	r0, r1, [r7]
 80012da:	f7ff fb7f 	bl	80009dc <__aeabi_dcmplt>
 80012de:	4603      	mov	r3, r0
 80012e0:	2b00      	cmp	r3, #0
 80012e2:	d002      	beq.n	80012ea <look2_binlxpw+0x23a>
        iRght = bpIdx;
 80012e4:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80012e6:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80012e8:	e001      	b.n	80012ee <look2_binlxpw+0x23e>
      } else {
        iLeft = bpIdx;
 80012ea:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80012ec:	637b      	str	r3, [r7, #52]	@ 0x34
      }

      bpIdx = (iRght + iLeft) >> 1U;
 80012ee:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
 80012f0:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80012f2:	4413      	add	r3, r2
 80012f4:	085b      	lsrs	r3, r3, #1
 80012f6:	63bb      	str	r3, [r7, #56]	@ 0x38
    while (iRght - iLeft > 1U) {
 80012f8:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
 80012fa:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80012fc:	1ad3      	subs	r3, r2, r3
 80012fe:	2b01      	cmp	r3, #1
 8001300:	d8e3      	bhi.n	80012ca <look2_binlxpw+0x21a>
    }

    frac = (u1 - bp1[iLeft]) / (bp1[iLeft + 1U] - bp1[iLeft]);
 8001302:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8001304:	00db      	lsls	r3, r3, #3
 8001306:	6dfa      	ldr	r2, [r7, #92]	@ 0x5c
 8001308:	4413      	add	r3, r2
 800130a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800130e:	e9d7 0100 	ldrd	r0, r1, [r7]
 8001312:	f7fe ff39 	bl	8000188 <__aeabi_dsub>
 8001316:	4602      	mov	r2, r0
 8001318:	460b      	mov	r3, r1
 800131a:	4614      	mov	r4, r2
 800131c:	461d      	mov	r5, r3
 800131e:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8001320:	3301      	adds	r3, #1
 8001322:	00db      	lsls	r3, r3, #3
 8001324:	6dfa      	ldr	r2, [r7, #92]	@ 0x5c
 8001326:	4413      	add	r3, r2
 8001328:	e9d3 0100 	ldrd	r0, r1, [r3]
 800132c:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800132e:	00db      	lsls	r3, r3, #3
 8001330:	6dfa      	ldr	r2, [r7, #92]	@ 0x5c
 8001332:	4413      	add	r3, r2
 8001334:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001338:	f7fe ff26 	bl	8000188 <__aeabi_dsub>
 800133c:	4602      	mov	r2, r0
 800133e:	460b      	mov	r3, r1
 8001340:	4620      	mov	r0, r4
 8001342:	4629      	mov	r1, r5
 8001344:	f7ff fa02 	bl	800074c <__aeabi_ddiv>
 8001348:	4602      	mov	r2, r0
 800134a:	460b      	mov	r3, r1
 800134c:	e9c7 2310 	strd	r2, r3, [r7, #64]	@ 0x40
 8001350:	e036      	b.n	80013c0 <look2_binlxpw+0x310>
  } else {
    iLeft = maxIndex[1U] - 1U;
 8001352:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8001354:	3304      	adds	r3, #4
 8001356:	681b      	ldr	r3, [r3, #0]
 8001358:	3b01      	subs	r3, #1
 800135a:	637b      	str	r3, [r7, #52]	@ 0x34
    frac = (u1 - bp1[maxIndex[1U] - 1U]) / (bp1[maxIndex[1U]] - bp1[maxIndex[1U]
 800135c:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 800135e:	3304      	adds	r3, #4
 8001360:	681b      	ldr	r3, [r3, #0]
 8001362:	f103 5300 	add.w	r3, r3, #536870912	@ 0x20000000
 8001366:	3b01      	subs	r3, #1
 8001368:	00db      	lsls	r3, r3, #3
 800136a:	6dfa      	ldr	r2, [r7, #92]	@ 0x5c
 800136c:	4413      	add	r3, r2
 800136e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001372:	e9d7 0100 	ldrd	r0, r1, [r7]
 8001376:	f7fe ff07 	bl	8000188 <__aeabi_dsub>
 800137a:	4602      	mov	r2, r0
 800137c:	460b      	mov	r3, r1
 800137e:	4614      	mov	r4, r2
 8001380:	461d      	mov	r5, r3
 8001382:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8001384:	3304      	adds	r3, #4
 8001386:	681b      	ldr	r3, [r3, #0]
 8001388:	00db      	lsls	r3, r3, #3
 800138a:	6dfa      	ldr	r2, [r7, #92]	@ 0x5c
 800138c:	4413      	add	r3, r2
 800138e:	e9d3 0100 	ldrd	r0, r1, [r3]
 8001392:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8001394:	3304      	adds	r3, #4
 8001396:	681b      	ldr	r3, [r3, #0]
 8001398:	f103 5300 	add.w	r3, r3, #536870912	@ 0x20000000
 800139c:	3b01      	subs	r3, #1
 800139e:	00db      	lsls	r3, r3, #3
 80013a0:	6dfa      	ldr	r2, [r7, #92]	@ 0x5c
 80013a2:	4413      	add	r3, r2
 80013a4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80013a8:	f7fe feee 	bl	8000188 <__aeabi_dsub>
 80013ac:	4602      	mov	r2, r0
 80013ae:	460b      	mov	r3, r1
 80013b0:	4620      	mov	r0, r4
 80013b2:	4629      	mov	r1, r5
 80013b4:	f7ff f9ca 	bl	800074c <__aeabi_ddiv>
 80013b8:	4602      	mov	r2, r0
 80013ba:	460b      	mov	r3, r1
 80013bc:	e9c7 2310 	strd	r2, r3, [r7, #64]	@ 0x40
  /* Column-major Interpolation 2-D
     Interpolation method: 'Linear point-slope'
     Use last breakpoint for index at or above upper limit: 'off'
     Overflow mode: 'portable wrapping'
   */
  bpIdx = iLeft * stride + bpIndices[0U];
 80013c0:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80013c2:	6eba      	ldr	r2, [r7, #104]	@ 0x68
 80013c4:	fb03 f202 	mul.w	r2, r3, r2
 80013c8:	6a3b      	ldr	r3, [r7, #32]
 80013ca:	4413      	add	r3, r2
 80013cc:	63bb      	str	r3, [r7, #56]	@ 0x38
  yL_1d = (table[bpIdx + 1U] - table[bpIdx]) * fractions[0U] + table[bpIdx];
 80013ce:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80013d0:	3301      	adds	r3, #1
 80013d2:	00db      	lsls	r3, r3, #3
 80013d4:	6e3a      	ldr	r2, [r7, #96]	@ 0x60
 80013d6:	4413      	add	r3, r2
 80013d8:	e9d3 0100 	ldrd	r0, r1, [r3]
 80013dc:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80013de:	00db      	lsls	r3, r3, #3
 80013e0:	6e3a      	ldr	r2, [r7, #96]	@ 0x60
 80013e2:	4413      	add	r3, r2
 80013e4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80013e8:	f7fe fece 	bl	8000188 <__aeabi_dsub>
 80013ec:	4602      	mov	r2, r0
 80013ee:	460b      	mov	r3, r1
 80013f0:	4610      	mov	r0, r2
 80013f2:	4619      	mov	r1, r3
 80013f4:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 80013f8:	f7ff f87e 	bl	80004f8 <__aeabi_dmul>
 80013fc:	4602      	mov	r2, r0
 80013fe:	460b      	mov	r3, r1
 8001400:	4610      	mov	r0, r2
 8001402:	4619      	mov	r1, r3
 8001404:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8001406:	00db      	lsls	r3, r3, #3
 8001408:	6e3a      	ldr	r2, [r7, #96]	@ 0x60
 800140a:	4413      	add	r3, r2
 800140c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001410:	f7fe febc 	bl	800018c <__adddf3>
 8001414:	4602      	mov	r2, r0
 8001416:	460b      	mov	r3, r1
 8001418:	e9c7 230a 	strd	r2, r3, [r7, #40]	@ 0x28
  bpIdx += stride;
 800141c:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 800141e:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 8001420:	4413      	add	r3, r2
 8001422:	63bb      	str	r3, [r7, #56]	@ 0x38
  return (((table[bpIdx + 1U] - table[bpIdx]) * fractions[0U] + table[bpIdx]) -
 8001424:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8001426:	3301      	adds	r3, #1
 8001428:	00db      	lsls	r3, r3, #3
 800142a:	6e3a      	ldr	r2, [r7, #96]	@ 0x60
 800142c:	4413      	add	r3, r2
 800142e:	e9d3 0100 	ldrd	r0, r1, [r3]
 8001432:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8001434:	00db      	lsls	r3, r3, #3
 8001436:	6e3a      	ldr	r2, [r7, #96]	@ 0x60
 8001438:	4413      	add	r3, r2
 800143a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800143e:	f7fe fea3 	bl	8000188 <__aeabi_dsub>
 8001442:	4602      	mov	r2, r0
 8001444:	460b      	mov	r3, r1
 8001446:	4610      	mov	r0, r2
 8001448:	4619      	mov	r1, r3
 800144a:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 800144e:	f7ff f853 	bl	80004f8 <__aeabi_dmul>
 8001452:	4602      	mov	r2, r0
 8001454:	460b      	mov	r3, r1
 8001456:	4610      	mov	r0, r2
 8001458:	4619      	mov	r1, r3
 800145a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800145c:	00db      	lsls	r3, r3, #3
 800145e:	6e3a      	ldr	r2, [r7, #96]	@ 0x60
 8001460:	4413      	add	r3, r2
 8001462:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001466:	f7fe fe91 	bl	800018c <__adddf3>
 800146a:	4602      	mov	r2, r0
 800146c:	460b      	mov	r3, r1
 800146e:	4610      	mov	r0, r2
 8001470:	4619      	mov	r1, r3
 8001472:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	@ 0x28
 8001476:	f7fe fe87 	bl	8000188 <__aeabi_dsub>
 800147a:	4602      	mov	r2, r0
 800147c:	460b      	mov	r3, r1
 800147e:	4610      	mov	r0, r2
 8001480:	4619      	mov	r1, r3
          yL_1d) * frac + yL_1d;
 8001482:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	@ 0x40
 8001486:	f7ff f837 	bl	80004f8 <__aeabi_dmul>
 800148a:	4602      	mov	r2, r0
 800148c:	460b      	mov	r3, r1
 800148e:	4610      	mov	r0, r2
 8001490:	4619      	mov	r1, r3
 8001492:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	@ 0x28
 8001496:	f7fe fe79 	bl	800018c <__adddf3>
 800149a:	4602      	mov	r2, r0
 800149c:	460b      	mov	r3, r1
}
 800149e:	4610      	mov	r0, r2
 80014a0:	4619      	mov	r1, r3
 80014a2:	3748      	adds	r7, #72	@ 0x48
 80014a4:	46bd      	mov	sp, r7
 80014a6:	bdb0      	pop	{r4, r5, r7, pc}

080014a8 <look1_binlxpw>:

real_T look1_binlxpw(real_T u0, const real_T bp0[], const real_T table[],
                     uint32_T maxIndex)
{
 80014a8:	b5b0      	push	{r4, r5, r7, lr}
 80014aa:	b08a      	sub	sp, #40	@ 0x28
 80014ac:	af00      	add	r7, sp, #0
 80014ae:	e9c7 0102 	strd	r0, r1, [r7, #8]
 80014b2:	607a      	str	r2, [r7, #4]
 80014b4:	603b      	str	r3, [r7, #0]
     Extrapolation method: 'Linear'
     Use previous index: 'off'
     Use last breakpoint for index at or above upper limit: 'off'
     Remove protection against out-of-range input in generated code: 'off'
   */
  if (u0 <= bp0[0U]) {
 80014b6:	687b      	ldr	r3, [r7, #4]
 80014b8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80014bc:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 80014c0:	f7ff fa96 	bl	80009f0 <__aeabi_dcmple>
 80014c4:	4603      	mov	r3, r0
 80014c6:	2b00      	cmp	r3, #0
 80014c8:	d020      	beq.n	800150c <look1_binlxpw+0x64>
    iLeft = 0U;
 80014ca:	2300      	movs	r3, #0
 80014cc:	61bb      	str	r3, [r7, #24]
    frac = (u0 - bp0[0U]) / (bp0[1U] - bp0[0U]);
 80014ce:	687b      	ldr	r3, [r7, #4]
 80014d0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80014d4:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 80014d8:	f7fe fe56 	bl	8000188 <__aeabi_dsub>
 80014dc:	4602      	mov	r2, r0
 80014de:	460b      	mov	r3, r1
 80014e0:	4614      	mov	r4, r2
 80014e2:	461d      	mov	r5, r3
 80014e4:	687b      	ldr	r3, [r7, #4]
 80014e6:	3308      	adds	r3, #8
 80014e8:	e9d3 0100 	ldrd	r0, r1, [r3]
 80014ec:	687b      	ldr	r3, [r7, #4]
 80014ee:	e9d3 2300 	ldrd	r2, r3, [r3]
 80014f2:	f7fe fe49 	bl	8000188 <__aeabi_dsub>
 80014f6:	4602      	mov	r2, r0
 80014f8:	460b      	mov	r3, r1
 80014fa:	4620      	mov	r0, r4
 80014fc:	4629      	mov	r1, r5
 80014fe:	f7ff f925 	bl	800074c <__aeabi_ddiv>
 8001502:	4602      	mov	r2, r0
 8001504:	460b      	mov	r3, r1
 8001506:	e9c7 2308 	strd	r2, r3, [r7, #32]
 800150a:	e087      	b.n	800161c <look1_binlxpw+0x174>
  } else if (u0 < bp0[maxIndex]) {
 800150c:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800150e:	00db      	lsls	r3, r3, #3
 8001510:	687a      	ldr	r2, [r7, #4]
 8001512:	4413      	add	r3, r2
 8001514:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001518:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800151c:	f7ff fa5e 	bl	80009dc <__aeabi_dcmplt>
 8001520:	4603      	mov	r3, r0
 8001522:	2b00      	cmp	r3, #0
 8001524:	d04b      	beq.n	80015be <look1_binlxpw+0x116>
    /* Binary Search */
    bpIdx = maxIndex >> 1U;
 8001526:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8001528:	085b      	lsrs	r3, r3, #1
 800152a:	617b      	str	r3, [r7, #20]
    iLeft = 0U;
 800152c:	2300      	movs	r3, #0
 800152e:	61bb      	str	r3, [r7, #24]
    iRght = maxIndex;
 8001530:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8001532:	61fb      	str	r3, [r7, #28]
    while (iRght - iLeft > 1U) {
 8001534:	e016      	b.n	8001564 <look1_binlxpw+0xbc>
      if (u0 < bp0[bpIdx]) {
 8001536:	697b      	ldr	r3, [r7, #20]
 8001538:	00db      	lsls	r3, r3, #3
 800153a:	687a      	ldr	r2, [r7, #4]
 800153c:	4413      	add	r3, r2
 800153e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001542:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 8001546:	f7ff fa49 	bl	80009dc <__aeabi_dcmplt>
 800154a:	4603      	mov	r3, r0
 800154c:	2b00      	cmp	r3, #0
 800154e:	d002      	beq.n	8001556 <look1_binlxpw+0xae>
        iRght = bpIdx;
 8001550:	697b      	ldr	r3, [r7, #20]
 8001552:	61fb      	str	r3, [r7, #28]
 8001554:	e001      	b.n	800155a <look1_binlxpw+0xb2>
      } else {
        iLeft = bpIdx;
 8001556:	697b      	ldr	r3, [r7, #20]
 8001558:	61bb      	str	r3, [r7, #24]
      }

      bpIdx = (iRght + iLeft) >> 1U;
 800155a:	69fa      	ldr	r2, [r7, #28]
 800155c:	69bb      	ldr	r3, [r7, #24]
 800155e:	4413      	add	r3, r2
 8001560:	085b      	lsrs	r3, r3, #1
 8001562:	617b      	str	r3, [r7, #20]
    while (iRght - iLeft > 1U) {
 8001564:	69fa      	ldr	r2, [r7, #28]
 8001566:	69bb      	ldr	r3, [r7, #24]
 8001568:	1ad3      	subs	r3, r2, r3
 800156a:	2b01      	cmp	r3, #1
 800156c:	d8e3      	bhi.n	8001536 <look1_binlxpw+0x8e>
    }

    frac = (u0 - bp0[iLeft]) / (bp0[iLeft + 1U] - bp0[iLeft]);
 800156e:	69bb      	ldr	r3, [r7, #24]
 8001570:	00db      	lsls	r3, r3, #3
 8001572:	687a      	ldr	r2, [r7, #4]
 8001574:	4413      	add	r3, r2
 8001576:	e9d3 2300 	ldrd	r2, r3, [r3]
 800157a:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800157e:	f7fe fe03 	bl	8000188 <__aeabi_dsub>
 8001582:	4602      	mov	r2, r0
 8001584:	460b      	mov	r3, r1
 8001586:	4614      	mov	r4, r2
 8001588:	461d      	mov	r5, r3
 800158a:	69bb      	ldr	r3, [r7, #24]
 800158c:	3301      	adds	r3, #1
 800158e:	00db      	lsls	r3, r3, #3
 8001590:	687a      	ldr	r2, [r7, #4]
 8001592:	4413      	add	r3, r2
 8001594:	e9d3 0100 	ldrd	r0, r1, [r3]
 8001598:	69bb      	ldr	r3, [r7, #24]
 800159a:	00db      	lsls	r3, r3, #3
 800159c:	687a      	ldr	r2, [r7, #4]
 800159e:	4413      	add	r3, r2
 80015a0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80015a4:	f7fe fdf0 	bl	8000188 <__aeabi_dsub>
 80015a8:	4602      	mov	r2, r0
 80015aa:	460b      	mov	r3, r1
 80015ac:	4620      	mov	r0, r4
 80015ae:	4629      	mov	r1, r5
 80015b0:	f7ff f8cc 	bl	800074c <__aeabi_ddiv>
 80015b4:	4602      	mov	r2, r0
 80015b6:	460b      	mov	r3, r1
 80015b8:	e9c7 2308 	strd	r2, r3, [r7, #32]
 80015bc:	e02e      	b.n	800161c <look1_binlxpw+0x174>
  } else {
    iLeft = maxIndex - 1U;
 80015be:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80015c0:	3b01      	subs	r3, #1
 80015c2:	61bb      	str	r3, [r7, #24]
    frac = (u0 - bp0[maxIndex - 1U]) / (bp0[maxIndex] - bp0[maxIndex - 1U]);
 80015c4:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80015c6:	f103 5300 	add.w	r3, r3, #536870912	@ 0x20000000
 80015ca:	3b01      	subs	r3, #1
 80015cc:	00db      	lsls	r3, r3, #3
 80015ce:	687a      	ldr	r2, [r7, #4]
 80015d0:	4413      	add	r3, r2
 80015d2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80015d6:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 80015da:	f7fe fdd5 	bl	8000188 <__aeabi_dsub>
 80015de:	4602      	mov	r2, r0
 80015e0:	460b      	mov	r3, r1
 80015e2:	4614      	mov	r4, r2
 80015e4:	461d      	mov	r5, r3
 80015e6:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80015e8:	00db      	lsls	r3, r3, #3
 80015ea:	687a      	ldr	r2, [r7, #4]
 80015ec:	4413      	add	r3, r2
 80015ee:	e9d3 0100 	ldrd	r0, r1, [r3]
 80015f2:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80015f4:	f103 5300 	add.w	r3, r3, #536870912	@ 0x20000000
 80015f8:	3b01      	subs	r3, #1
 80015fa:	00db      	lsls	r3, r3, #3
 80015fc:	687a      	ldr	r2, [r7, #4]
 80015fe:	4413      	add	r3, r2
 8001600:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001604:	f7fe fdc0 	bl	8000188 <__aeabi_dsub>
 8001608:	4602      	mov	r2, r0
 800160a:	460b      	mov	r3, r1
 800160c:	4620      	mov	r0, r4
 800160e:	4629      	mov	r1, r5
 8001610:	f7ff f89c 	bl	800074c <__aeabi_ddiv>
 8001614:	4602      	mov	r2, r0
 8001616:	460b      	mov	r3, r1
 8001618:	e9c7 2308 	strd	r2, r3, [r7, #32]
  /* Column-major Interpolation 1-D
     Interpolation method: 'Linear point-slope'
     Use last breakpoint for index at or above upper limit: 'off'
     Overflow mode: 'portable wrapping'
   */
  return (table[iLeft + 1U] - table[iLeft]) * frac + table[iLeft];
 800161c:	69bb      	ldr	r3, [r7, #24]
 800161e:	3301      	adds	r3, #1
 8001620:	00db      	lsls	r3, r3, #3
 8001622:	683a      	ldr	r2, [r7, #0]
 8001624:	4413      	add	r3, r2
 8001626:	e9d3 0100 	ldrd	r0, r1, [r3]
 800162a:	69bb      	ldr	r3, [r7, #24]
 800162c:	00db      	lsls	r3, r3, #3
 800162e:	683a      	ldr	r2, [r7, #0]
 8001630:	4413      	add	r3, r2
 8001632:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001636:	f7fe fda7 	bl	8000188 <__aeabi_dsub>
 800163a:	4602      	mov	r2, r0
 800163c:	460b      	mov	r3, r1
 800163e:	4610      	mov	r0, r2
 8001640:	4619      	mov	r1, r3
 8001642:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 8001646:	f7fe ff57 	bl	80004f8 <__aeabi_dmul>
 800164a:	4602      	mov	r2, r0
 800164c:	460b      	mov	r3, r1
 800164e:	4610      	mov	r0, r2
 8001650:	4619      	mov	r1, r3
 8001652:	69bb      	ldr	r3, [r7, #24]
 8001654:	00db      	lsls	r3, r3, #3
 8001656:	683a      	ldr	r2, [r7, #0]
 8001658:	4413      	add	r3, r2
 800165a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800165e:	f7fe fd95 	bl	800018c <__adddf3>
 8001662:	4602      	mov	r2, r0
 8001664:	460b      	mov	r3, r1
}
 8001666:	4610      	mov	r0, r2
 8001668:	4619      	mov	r1, r3
 800166a:	3728      	adds	r7, #40	@ 0x28
 800166c:	46bd      	mov	sp, r7
 800166e:	bdb0      	pop	{r4, r5, r7, pc}

08001670 <EngTrModel_gear_state>:

/* Function for Chart: '<Root>/ShiftLogic' */
static void EngTrModel_gear_state(const int32_T *sfEvent)
{
 8001670:	b480      	push	{r7}
 8001672:	b083      	sub	sp, #12
 8001674:	af00      	add	r7, sp, #0
 8001676:	6078      	str	r0, [r7, #4]
  switch (EngTrModel_DW.is_gear_state) {
 8001678:	4b3b      	ldr	r3, [pc, #236]	@ (8001768 <EngTrModel_gear_state+0xf8>)
 800167a:	f893 3021 	ldrb.w	r3, [r3, #33]	@ 0x21
 800167e:	3b01      	subs	r3, #1
 8001680:	2b03      	cmp	r3, #3
 8001682:	d86c      	bhi.n	800175e <EngTrModel_gear_state+0xee>
 8001684:	a201      	add	r2, pc, #4	@ (adr r2, 800168c <EngTrModel_gear_state+0x1c>)
 8001686:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800168a:	bf00      	nop
 800168c:	0800169d 	.word	0x0800169d
 8001690:	080016bd 	.word	0x080016bd
 8001694:	080016db 	.word	0x080016db
 8001698:	08001715 	.word	0x08001715
   case EngTrModel_IN_first:
    if (*sfEvent == EngTrModel_event_UP) {
 800169c:	687b      	ldr	r3, [r7, #4]
 800169e:	681b      	ldr	r3, [r3, #0]
 80016a0:	2b01      	cmp	r3, #1
 80016a2:	d155      	bne.n	8001750 <EngTrModel_gear_state+0xe0>
      EngTrModel_DW.is_gear_state = EngTrModel_IN_second;
 80016a4:	4b30      	ldr	r3, [pc, #192]	@ (8001768 <EngTrModel_gear_state+0xf8>)
 80016a6:	2203      	movs	r2, #3
 80016a8:	f883 2021 	strb.w	r2, [r3, #33]	@ 0x21
      EngTrModel_B.Gear = 2.0;
 80016ac:	492f      	ldr	r1, [pc, #188]	@ (800176c <EngTrModel_gear_state+0xfc>)
 80016ae:	f04f 0200 	mov.w	r2, #0
 80016b2:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 80016b6:	e9c1 230a 	strd	r2, r3, [r1, #40]	@ 0x28
    }
    break;
 80016ba:	e049      	b.n	8001750 <EngTrModel_gear_state+0xe0>

   case EngTrModel_IN_fourth:
    if (*sfEvent == EngTrModel_event_DOWN) {
 80016bc:	687b      	ldr	r3, [r7, #4]
 80016be:	681b      	ldr	r3, [r3, #0]
 80016c0:	2b00      	cmp	r3, #0
 80016c2:	d147      	bne.n	8001754 <EngTrModel_gear_state+0xe4>
      EngTrModel_DW.is_gear_state = EngTrModel_IN_third;
 80016c4:	4b28      	ldr	r3, [pc, #160]	@ (8001768 <EngTrModel_gear_state+0xf8>)
 80016c6:	2204      	movs	r2, #4
 80016c8:	f883 2021 	strb.w	r2, [r3, #33]	@ 0x21
      EngTrModel_B.Gear = 3.0;
 80016cc:	4927      	ldr	r1, [pc, #156]	@ (800176c <EngTrModel_gear_state+0xfc>)
 80016ce:	f04f 0200 	mov.w	r2, #0
 80016d2:	4b27      	ldr	r3, [pc, #156]	@ (8001770 <EngTrModel_gear_state+0x100>)
 80016d4:	e9c1 230a 	strd	r2, r3, [r1, #40]	@ 0x28
    }
    break;
 80016d8:	e03c      	b.n	8001754 <EngTrModel_gear_state+0xe4>

   case EngTrModel_IN_second:
    switch (*sfEvent) {
 80016da:	687b      	ldr	r3, [r7, #4]
 80016dc:	681b      	ldr	r3, [r3, #0]
 80016de:	2b00      	cmp	r3, #0
 80016e0:	d00c      	beq.n	80016fc <EngTrModel_gear_state+0x8c>
 80016e2:	2b01      	cmp	r3, #1
 80016e4:	d138      	bne.n	8001758 <EngTrModel_gear_state+0xe8>
     case EngTrModel_event_UP:
      EngTrModel_DW.is_gear_state = EngTrModel_IN_third;
 80016e6:	4b20      	ldr	r3, [pc, #128]	@ (8001768 <EngTrModel_gear_state+0xf8>)
 80016e8:	2204      	movs	r2, #4
 80016ea:	f883 2021 	strb.w	r2, [r3, #33]	@ 0x21
      EngTrModel_B.Gear = 3.0;
 80016ee:	491f      	ldr	r1, [pc, #124]	@ (800176c <EngTrModel_gear_state+0xfc>)
 80016f0:	f04f 0200 	mov.w	r2, #0
 80016f4:	4b1e      	ldr	r3, [pc, #120]	@ (8001770 <EngTrModel_gear_state+0x100>)
 80016f6:	e9c1 230a 	strd	r2, r3, [r1, #40]	@ 0x28
      break;
 80016fa:	e00a      	b.n	8001712 <EngTrModel_gear_state+0xa2>

     case EngTrModel_event_DOWN:
      EngTrModel_DW.is_gear_state = EngTrModel_IN_first;
 80016fc:	4b1a      	ldr	r3, [pc, #104]	@ (8001768 <EngTrModel_gear_state+0xf8>)
 80016fe:	2201      	movs	r2, #1
 8001700:	f883 2021 	strb.w	r2, [r3, #33]	@ 0x21
      EngTrModel_B.Gear = 1.0;
 8001704:	4919      	ldr	r1, [pc, #100]	@ (800176c <EngTrModel_gear_state+0xfc>)
 8001706:	f04f 0200 	mov.w	r2, #0
 800170a:	4b1a      	ldr	r3, [pc, #104]	@ (8001774 <EngTrModel_gear_state+0x104>)
 800170c:	e9c1 230a 	strd	r2, r3, [r1, #40]	@ 0x28
      break;
 8001710:	bf00      	nop
    }
    break;
 8001712:	e021      	b.n	8001758 <EngTrModel_gear_state+0xe8>

   case EngTrModel_IN_third:
    switch (*sfEvent) {
 8001714:	687b      	ldr	r3, [r7, #4]
 8001716:	681b      	ldr	r3, [r3, #0]
 8001718:	2b00      	cmp	r3, #0
 800171a:	d00c      	beq.n	8001736 <EngTrModel_gear_state+0xc6>
 800171c:	2b01      	cmp	r3, #1
 800171e:	d11d      	bne.n	800175c <EngTrModel_gear_state+0xec>
     case EngTrModel_event_UP:
      EngTrModel_DW.is_gear_state = EngTrModel_IN_fourth;
 8001720:	4b11      	ldr	r3, [pc, #68]	@ (8001768 <EngTrModel_gear_state+0xf8>)
 8001722:	2202      	movs	r2, #2
 8001724:	f883 2021 	strb.w	r2, [r3, #33]	@ 0x21
      EngTrModel_B.Gear = 4.0;
 8001728:	4910      	ldr	r1, [pc, #64]	@ (800176c <EngTrModel_gear_state+0xfc>)
 800172a:	f04f 0200 	mov.w	r2, #0
 800172e:	4b12      	ldr	r3, [pc, #72]	@ (8001778 <EngTrModel_gear_state+0x108>)
 8001730:	e9c1 230a 	strd	r2, r3, [r1, #40]	@ 0x28
      break;
 8001734:	e00b      	b.n	800174e <EngTrModel_gear_state+0xde>

     case EngTrModel_event_DOWN:
      EngTrModel_DW.is_gear_state = EngTrModel_IN_second;
 8001736:	4b0c      	ldr	r3, [pc, #48]	@ (8001768 <EngTrModel_gear_state+0xf8>)
 8001738:	2203      	movs	r2, #3
 800173a:	f883 2021 	strb.w	r2, [r3, #33]	@ 0x21
      EngTrModel_B.Gear = 2.0;
 800173e:	490b      	ldr	r1, [pc, #44]	@ (800176c <EngTrModel_gear_state+0xfc>)
 8001740:	f04f 0200 	mov.w	r2, #0
 8001744:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8001748:	e9c1 230a 	strd	r2, r3, [r1, #40]	@ 0x28
      break;
 800174c:	bf00      	nop
    }
    break;
 800174e:	e005      	b.n	800175c <EngTrModel_gear_state+0xec>
    break;
 8001750:	bf00      	nop
 8001752:	e004      	b.n	800175e <EngTrModel_gear_state+0xee>
    break;
 8001754:	bf00      	nop
 8001756:	e002      	b.n	800175e <EngTrModel_gear_state+0xee>
    break;
 8001758:	bf00      	nop
 800175a:	e000      	b.n	800175e <EngTrModel_gear_state+0xee>
    break;
 800175c:	bf00      	nop
  }
}
 800175e:	bf00      	nop
 8001760:	370c      	adds	r7, #12
 8001762:	46bd      	mov	sp, r7
 8001764:	bc80      	pop	{r7}
 8001766:	4770      	bx	lr
 8001768:	20000228 	.word	0x20000228
 800176c:	200001f8 	.word	0x200001f8
 8001770:	40080000 	.word	0x40080000
 8001774:	3ff00000 	.word	0x3ff00000
 8001778:	40100000 	.word	0x40100000

0800177c <rt_powd_snf>:

real_T rt_powd_snf(real_T u0, real_T u1)
{
 800177c:	b5b0      	push	{r4, r5, r7, lr}
 800177e:	b08c      	sub	sp, #48	@ 0x30
 8001780:	af00      	add	r7, sp, #0
 8001782:	e9c7 0104 	strd	r0, r1, [r7, #16]
 8001786:	e9c7 2302 	strd	r2, r3, [r7, #8]
  real_T y;
  real_T tmp;
  real_T tmp_0;
  if (rtIsNaN(u0) || rtIsNaN(u1)) {
 800178a:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 800178e:	f001 fbb3 	bl	8002ef8 <rtIsNaN>
 8001792:	4603      	mov	r3, r0
 8001794:	2b00      	cmp	r3, #0
 8001796:	d106      	bne.n	80017a6 <rt_powd_snf+0x2a>
 8001798:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800179c:	f001 fbac 	bl	8002ef8 <rtIsNaN>
 80017a0:	4603      	mov	r3, r0
 80017a2:	2b00      	cmp	r3, #0
 80017a4:	d005      	beq.n	80017b2 <rt_powd_snf+0x36>
    y = (rtNaN);
 80017a6:	4b7e      	ldr	r3, [pc, #504]	@ (80019a0 <rt_powd_snf+0x224>)
 80017a8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80017ac:	e9c7 230a 	strd	r2, r3, [r7, #40]	@ 0x28
 80017b0:	e0ef      	b.n	8001992 <rt_powd_snf+0x216>
  } else {
    tmp = fabs(u0);
 80017b2:	693b      	ldr	r3, [r7, #16]
 80017b4:	603b      	str	r3, [r7, #0]
 80017b6:	697b      	ldr	r3, [r7, #20]
 80017b8:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 80017bc:	607b      	str	r3, [r7, #4]
 80017be:	e9d7 2300 	ldrd	r2, r3, [r7]
 80017c2:	e9c7 2308 	strd	r2, r3, [r7, #32]
    tmp_0 = fabs(u1);
 80017c6:	68bc      	ldr	r4, [r7, #8]
 80017c8:	68fb      	ldr	r3, [r7, #12]
 80017ca:	f023 4500 	bic.w	r5, r3, #2147483648	@ 0x80000000
 80017ce:	e9c7 4506 	strd	r4, r5, [r7, #24]
    if (rtIsInf(u1)) {
 80017d2:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 80017d6:	f001 fb6b 	bl	8002eb0 <rtIsInf>
 80017da:	4603      	mov	r3, r0
 80017dc:	2b00      	cmp	r3, #0
 80017de:	d049      	beq.n	8001874 <rt_powd_snf+0xf8>
      if (tmp == 1.0) {
 80017e0:	f04f 0200 	mov.w	r2, #0
 80017e4:	4b6f      	ldr	r3, [pc, #444]	@ (80019a4 <rt_powd_snf+0x228>)
 80017e6:	e9d7 0108 	ldrd	r0, r1, [r7, #32]
 80017ea:	f7ff f8ed 	bl	80009c8 <__aeabi_dcmpeq>
 80017ee:	4603      	mov	r3, r0
 80017f0:	2b00      	cmp	r3, #0
 80017f2:	d005      	beq.n	8001800 <rt_powd_snf+0x84>
        y = 1.0;
 80017f4:	f04f 0200 	mov.w	r2, #0
 80017f8:	4b6a      	ldr	r3, [pc, #424]	@ (80019a4 <rt_powd_snf+0x228>)
 80017fa:	e9c7 230a 	strd	r2, r3, [r7, #40]	@ 0x28
 80017fe:	e0c8      	b.n	8001992 <rt_powd_snf+0x216>
      } else if (tmp > 1.0) {
 8001800:	f04f 0200 	mov.w	r2, #0
 8001804:	4b67      	ldr	r3, [pc, #412]	@ (80019a4 <rt_powd_snf+0x228>)
 8001806:	e9d7 0108 	ldrd	r0, r1, [r7, #32]
 800180a:	f7ff f905 	bl	8000a18 <__aeabi_dcmpgt>
 800180e:	4603      	mov	r3, r0
 8001810:	2b00      	cmp	r3, #0
 8001812:	d017      	beq.n	8001844 <rt_powd_snf+0xc8>
        if (u1 > 0.0) {
 8001814:	f04f 0200 	mov.w	r2, #0
 8001818:	f04f 0300 	mov.w	r3, #0
 800181c:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 8001820:	f7ff f8fa 	bl	8000a18 <__aeabi_dcmpgt>
 8001824:	4603      	mov	r3, r0
 8001826:	2b00      	cmp	r3, #0
 8001828:	d005      	beq.n	8001836 <rt_powd_snf+0xba>
          y = (rtInf);
 800182a:	4b5f      	ldr	r3, [pc, #380]	@ (80019a8 <rt_powd_snf+0x22c>)
 800182c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001830:	e9c7 230a 	strd	r2, r3, [r7, #40]	@ 0x28
 8001834:	e0ad      	b.n	8001992 <rt_powd_snf+0x216>
        } else {
          y = 0.0;
 8001836:	f04f 0200 	mov.w	r2, #0
 800183a:	f04f 0300 	mov.w	r3, #0
 800183e:	e9c7 230a 	strd	r2, r3, [r7, #40]	@ 0x28
 8001842:	e0a6      	b.n	8001992 <rt_powd_snf+0x216>
        }
      } else if (u1 > 0.0) {
 8001844:	f04f 0200 	mov.w	r2, #0
 8001848:	f04f 0300 	mov.w	r3, #0
 800184c:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 8001850:	f7ff f8e2 	bl	8000a18 <__aeabi_dcmpgt>
 8001854:	4603      	mov	r3, r0
 8001856:	2b00      	cmp	r3, #0
 8001858:	d006      	beq.n	8001868 <rt_powd_snf+0xec>
        y = 0.0;
 800185a:	f04f 0200 	mov.w	r2, #0
 800185e:	f04f 0300 	mov.w	r3, #0
 8001862:	e9c7 230a 	strd	r2, r3, [r7, #40]	@ 0x28
 8001866:	e094      	b.n	8001992 <rt_powd_snf+0x216>
      } else {
        y = (rtInf);
 8001868:	4b4f      	ldr	r3, [pc, #316]	@ (80019a8 <rt_powd_snf+0x22c>)
 800186a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800186e:	e9c7 230a 	strd	r2, r3, [r7, #40]	@ 0x28
 8001872:	e08e      	b.n	8001992 <rt_powd_snf+0x216>
      }
    } else if (tmp_0 == 0.0) {
 8001874:	f04f 0200 	mov.w	r2, #0
 8001878:	f04f 0300 	mov.w	r3, #0
 800187c:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 8001880:	f7ff f8a2 	bl	80009c8 <__aeabi_dcmpeq>
 8001884:	4603      	mov	r3, r0
 8001886:	2b00      	cmp	r3, #0
 8001888:	d005      	beq.n	8001896 <rt_powd_snf+0x11a>
      y = 1.0;
 800188a:	f04f 0200 	mov.w	r2, #0
 800188e:	4b45      	ldr	r3, [pc, #276]	@ (80019a4 <rt_powd_snf+0x228>)
 8001890:	e9c7 230a 	strd	r2, r3, [r7, #40]	@ 0x28
 8001894:	e07d      	b.n	8001992 <rt_powd_snf+0x216>
    } else if (tmp_0 == 1.0) {
 8001896:	f04f 0200 	mov.w	r2, #0
 800189a:	4b42      	ldr	r3, [pc, #264]	@ (80019a4 <rt_powd_snf+0x228>)
 800189c:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 80018a0:	f7ff f892 	bl	80009c8 <__aeabi_dcmpeq>
 80018a4:	4603      	mov	r3, r0
 80018a6:	2b00      	cmp	r3, #0
 80018a8:	d01b      	beq.n	80018e2 <rt_powd_snf+0x166>
      if (u1 > 0.0) {
 80018aa:	f04f 0200 	mov.w	r2, #0
 80018ae:	f04f 0300 	mov.w	r3, #0
 80018b2:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 80018b6:	f7ff f8af 	bl	8000a18 <__aeabi_dcmpgt>
 80018ba:	4603      	mov	r3, r0
 80018bc:	2b00      	cmp	r3, #0
 80018be:	d004      	beq.n	80018ca <rt_powd_snf+0x14e>
        y = u0;
 80018c0:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 80018c4:	e9c7 230a 	strd	r2, r3, [r7, #40]	@ 0x28
 80018c8:	e063      	b.n	8001992 <rt_powd_snf+0x216>
      } else {
        y = 1.0 / u0;
 80018ca:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 80018ce:	f04f 0000 	mov.w	r0, #0
 80018d2:	4934      	ldr	r1, [pc, #208]	@ (80019a4 <rt_powd_snf+0x228>)
 80018d4:	f7fe ff3a 	bl	800074c <__aeabi_ddiv>
 80018d8:	4602      	mov	r2, r0
 80018da:	460b      	mov	r3, r1
 80018dc:	e9c7 230a 	strd	r2, r3, [r7, #40]	@ 0x28
 80018e0:	e057      	b.n	8001992 <rt_powd_snf+0x216>
      }
    } else if (u1 == 2.0) {
 80018e2:	f04f 0200 	mov.w	r2, #0
 80018e6:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 80018ea:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 80018ee:	f7ff f86b 	bl	80009c8 <__aeabi_dcmpeq>
 80018f2:	4603      	mov	r3, r0
 80018f4:	2b00      	cmp	r3, #0
 80018f6:	d00a      	beq.n	800190e <rt_powd_snf+0x192>
      y = u0 * u0;
 80018f8:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 80018fc:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 8001900:	f7fe fdfa 	bl	80004f8 <__aeabi_dmul>
 8001904:	4602      	mov	r2, r0
 8001906:	460b      	mov	r3, r1
 8001908:	e9c7 230a 	strd	r2, r3, [r7, #40]	@ 0x28
 800190c:	e041      	b.n	8001992 <rt_powd_snf+0x216>
    } else if ((u1 == 0.5) && (u0 >= 0.0)) {
 800190e:	f04f 0200 	mov.w	r2, #0
 8001912:	4b26      	ldr	r3, [pc, #152]	@ (80019ac <rt_powd_snf+0x230>)
 8001914:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 8001918:	f7ff f856 	bl	80009c8 <__aeabi_dcmpeq>
 800191c:	4603      	mov	r3, r0
 800191e:	2b00      	cmp	r3, #0
 8001920:	d011      	beq.n	8001946 <rt_powd_snf+0x1ca>
 8001922:	f04f 0200 	mov.w	r2, #0
 8001926:	f04f 0300 	mov.w	r3, #0
 800192a:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 800192e:	f7ff f869 	bl	8000a04 <__aeabi_dcmpge>
 8001932:	4603      	mov	r3, r0
 8001934:	2b00      	cmp	r3, #0
 8001936:	d006      	beq.n	8001946 <rt_powd_snf+0x1ca>
      y = sqrt(u0);
 8001938:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 800193c:	f006 f8f8 	bl	8007b30 <sqrt>
 8001940:	e9c7 010a 	strd	r0, r1, [r7, #40]	@ 0x28
 8001944:	e025      	b.n	8001992 <rt_powd_snf+0x216>
    } else if ((u0 < 0.0) && (u1 > floor(u1))) {
 8001946:	f04f 0200 	mov.w	r2, #0
 800194a:	f04f 0300 	mov.w	r3, #0
 800194e:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 8001952:	f7ff f843 	bl	80009dc <__aeabi_dcmplt>
 8001956:	4603      	mov	r3, r0
 8001958:	2b00      	cmp	r3, #0
 800195a:	d012      	beq.n	8001982 <rt_powd_snf+0x206>
 800195c:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 8001960:	f006 fa62 	bl	8007e28 <floor>
 8001964:	4602      	mov	r2, r0
 8001966:	460b      	mov	r3, r1
 8001968:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800196c:	f7ff f854 	bl	8000a18 <__aeabi_dcmpgt>
 8001970:	4603      	mov	r3, r0
 8001972:	2b00      	cmp	r3, #0
 8001974:	d005      	beq.n	8001982 <rt_powd_snf+0x206>
      y = (rtNaN);
 8001976:	4b0a      	ldr	r3, [pc, #40]	@ (80019a0 <rt_powd_snf+0x224>)
 8001978:	e9d3 2300 	ldrd	r2, r3, [r3]
 800197c:	e9c7 230a 	strd	r2, r3, [r7, #40]	@ 0x28
 8001980:	e007      	b.n	8001992 <rt_powd_snf+0x216>
    } else {
      y = pow(u0, u1);
 8001982:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8001986:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 800198a:	f006 f869 	bl	8007a60 <pow>
 800198e:	e9c7 010a 	strd	r0, r1, [r7, #40]	@ 0x28
    }
  }

  return y;
 8001992:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	@ 0x28
}
 8001996:	4610      	mov	r0, r2
 8001998:	4619      	mov	r1, r3
 800199a:	3730      	adds	r7, #48	@ 0x30
 800199c:	46bd      	mov	sp, r7
 800199e:	bdb0      	pop	{r4, r5, r7, pc}
 80019a0:	20000290 	.word	0x20000290
 80019a4:	3ff00000 	.word	0x3ff00000
 80019a8:	20000280 	.word	0x20000280
 80019ac:	3fe00000 	.word	0x3fe00000

080019b0 <EngTrModel_step>:

/* Model step function */
void EngTrModel_step(void)
{
 80019b0:	b5b0      	push	{r4, r5, r7, lr}
 80019b2:	b08c      	sub	sp, #48	@ 0x30
 80019b4:	af06      	add	r7, sp, #24
  int32_T sfEvent;
  real_T InterpDown;
  real_T InterpUp;

  /* DiscreteIntegrator: '<S1>/Discrete-Time Integrator' */
  EngTrModel_B.EngineRPM = EngTrModel_DW.DiscreteTimeIntegrator_DSTATE;
 80019b6:	4b8c      	ldr	r3, [pc, #560]	@ (8001be8 <EngTrModel_step+0x238>)
 80019b8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80019bc:	498b      	ldr	r1, [pc, #556]	@ (8001bec <EngTrModel_step+0x23c>)
 80019be:	e9c1 2300 	strd	r2, r3, [r1]

  /* Outport: '<Root>/EngineSpeed' */
  EngTrModel_Y.EngineSpeed = EngTrModel_B.EngineRPM;
 80019c2:	4b8a      	ldr	r3, [pc, #552]	@ (8001bec <EngTrModel_step+0x23c>)
 80019c4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80019c8:	4989      	ldr	r1, [pc, #548]	@ (8001bf0 <EngTrModel_step+0x240>)
 80019ca:	e9c1 2300 	strd	r2, r3, [r1]
   *  Gain: '<S8>/ToLinearSpeed'
   */
  /* Unit Conversion - from: ft/min to: mph
     Expression: output = (0.0113636*input) + (0) */
  EngTrModel_B.VehicleSpeed = 6.2831853071795862 *
    EngTrModel_DW.WheelSpeed_DSTATE * 0.011363636363636364;
 80019ce:	4b86      	ldr	r3, [pc, #536]	@ (8001be8 <EngTrModel_step+0x238>)
 80019d0:	e9d3 0102 	ldrd	r0, r1, [r3, #8]
  EngTrModel_B.VehicleSpeed = 6.2831853071795862 *
 80019d4:	a380      	add	r3, pc, #512	@ (adr r3, 8001bd8 <EngTrModel_step+0x228>)
 80019d6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80019da:	f7fe fd8d 	bl	80004f8 <__aeabi_dmul>
 80019de:	4602      	mov	r2, r0
 80019e0:	460b      	mov	r3, r1
 80019e2:	4610      	mov	r0, r2
 80019e4:	4619      	mov	r1, r3
    EngTrModel_DW.WheelSpeed_DSTATE * 0.011363636363636364;
 80019e6:	a37e      	add	r3, pc, #504	@ (adr r3, 8001be0 <EngTrModel_step+0x230>)
 80019e8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80019ec:	f7fe fd84 	bl	80004f8 <__aeabi_dmul>
 80019f0:	4602      	mov	r2, r0
 80019f2:	460b      	mov	r3, r1
  EngTrModel_B.VehicleSpeed = 6.2831853071795862 *
 80019f4:	497d      	ldr	r1, [pc, #500]	@ (8001bec <EngTrModel_step+0x23c>)
 80019f6:	e9c1 2302 	strd	r2, r3, [r1, #8]

  /* Chart: '<Root>/ShiftLogic' */
  sfEvent = EngTrModel_CALL_EVENT;
 80019fa:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 80019fe:	607b      	str	r3, [r7, #4]
  if (EngTrModel_DW.temporalCounter_i1 < MAX_uint32_T) {
 8001a00:	4b79      	ldr	r3, [pc, #484]	@ (8001be8 <EngTrModel_step+0x238>)
 8001a02:	69db      	ldr	r3, [r3, #28]
 8001a04:	f1b3 3fff 	cmp.w	r3, #4294967295	@ 0xffffffff
 8001a08:	d004      	beq.n	8001a14 <EngTrModel_step+0x64>
    EngTrModel_DW.temporalCounter_i1++;
 8001a0a:	4b77      	ldr	r3, [pc, #476]	@ (8001be8 <EngTrModel_step+0x238>)
 8001a0c:	69db      	ldr	r3, [r3, #28]
 8001a0e:	3301      	adds	r3, #1
 8001a10:	4a75      	ldr	r2, [pc, #468]	@ (8001be8 <EngTrModel_step+0x238>)
 8001a12:	61d3      	str	r3, [r2, #28]
  }

  if (EngTrModel_DW.is_active_c1_EngTrModel == 0U) {
 8001a14:	4b74      	ldr	r3, [pc, #464]	@ (8001be8 <EngTrModel_step+0x238>)
 8001a16:	f893 3020 	ldrb.w	r3, [r3, #32]
 8001a1a:	2b00      	cmp	r3, #0
 8001a1c:	d11a      	bne.n	8001a54 <EngTrModel_step+0xa4>
    EngTrModel_DW.is_active_c1_EngTrModel = 1U;
 8001a1e:	4b72      	ldr	r3, [pc, #456]	@ (8001be8 <EngTrModel_step+0x238>)
 8001a20:	2201      	movs	r2, #1
 8001a22:	f883 2020 	strb.w	r2, [r3, #32]
    EngTrModel_DW.is_active_gear_state = 1U;
 8001a26:	4b70      	ldr	r3, [pc, #448]	@ (8001be8 <EngTrModel_step+0x238>)
 8001a28:	2201      	movs	r2, #1
 8001a2a:	f883 2022 	strb.w	r2, [r3, #34]	@ 0x22
    EngTrModel_DW.is_gear_state = EngTrModel_IN_first;
 8001a2e:	4b6e      	ldr	r3, [pc, #440]	@ (8001be8 <EngTrModel_step+0x238>)
 8001a30:	2201      	movs	r2, #1
 8001a32:	f883 2021 	strb.w	r2, [r3, #33]	@ 0x21
    EngTrModel_B.Gear = 1.0;
 8001a36:	496d      	ldr	r1, [pc, #436]	@ (8001bec <EngTrModel_step+0x23c>)
 8001a38:	f04f 0200 	mov.w	r2, #0
 8001a3c:	4b6d      	ldr	r3, [pc, #436]	@ (8001bf4 <EngTrModel_step+0x244>)
 8001a3e:	e9c1 230a 	strd	r2, r3, [r1, #40]	@ 0x28
    EngTrModel_DW.is_active_selection_state = 1U;
 8001a42:	4b69      	ldr	r3, [pc, #420]	@ (8001be8 <EngTrModel_step+0x238>)
 8001a44:	2201      	movs	r2, #1
 8001a46:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
    EngTrModel_DW.is_selection_state = EngTrModel_IN_steady_state;
 8001a4a:	4b67      	ldr	r3, [pc, #412]	@ (8001be8 <EngTrModel_step+0x238>)
 8001a4c:	2202      	movs	r2, #2
 8001a4e:	f883 2023 	strb.w	r2, [r3, #35]	@ 0x23
 8001a52:	e0e4      	b.n	8001c1e <EngTrModel_step+0x26e>
  } else {
    if (EngTrModel_DW.is_active_gear_state != 0U) {
 8001a54:	4b64      	ldr	r3, [pc, #400]	@ (8001be8 <EngTrModel_step+0x238>)
 8001a56:	f893 3022 	ldrb.w	r3, [r3, #34]	@ 0x22
 8001a5a:	2b00      	cmp	r3, #0
 8001a5c:	d003      	beq.n	8001a66 <EngTrModel_step+0xb6>
      EngTrModel_gear_state(&sfEvent);
 8001a5e:	1d3b      	adds	r3, r7, #4
 8001a60:	4618      	mov	r0, r3
 8001a62:	f7ff fe05 	bl	8001670 <EngTrModel_gear_state>
    }

    if (EngTrModel_DW.is_active_selection_state != 0U) {
 8001a66:	4b60      	ldr	r3, [pc, #384]	@ (8001be8 <EngTrModel_step+0x238>)
 8001a68:	f893 3024 	ldrb.w	r3, [r3, #36]	@ 0x24
 8001a6c:	2b00      	cmp	r3, #0
 8001a6e:	f000 80d6 	beq.w	8001c1e <EngTrModel_step+0x26e>
      /* Outputs for Function Call SubSystem: '<S2>/ComputeThreshold' */
      /* Lookup_n-D: '<S5>/InterpDown' incorporates:
       *  Inport: '<Root>/Throttle'
       */
      InterpDown = look2_binlxpw(EngTrModel_U.Throttle, EngTrModel_B.Gear,
 8001a72:	4b61      	ldr	r3, [pc, #388]	@ (8001bf8 <EngTrModel_step+0x248>)
 8001a74:	e9d3 0100 	ldrd	r0, r1, [r3]
 8001a78:	4b5c      	ldr	r3, [pc, #368]	@ (8001bec <EngTrModel_step+0x23c>)
 8001a7a:	e9d3 230a 	ldrd	r2, r3, [r3, #40]	@ 0x28
 8001a7e:	2406      	movs	r4, #6
 8001a80:	9404      	str	r4, [sp, #16]
 8001a82:	4c5e      	ldr	r4, [pc, #376]	@ (8001bfc <EngTrModel_step+0x24c>)
 8001a84:	9403      	str	r4, [sp, #12]
 8001a86:	4c5e      	ldr	r4, [pc, #376]	@ (8001c00 <EngTrModel_step+0x250>)
 8001a88:	9402      	str	r4, [sp, #8]
 8001a8a:	4c5e      	ldr	r4, [pc, #376]	@ (8001c04 <EngTrModel_step+0x254>)
 8001a8c:	9401      	str	r4, [sp, #4]
 8001a8e:	4c5e      	ldr	r4, [pc, #376]	@ (8001c08 <EngTrModel_step+0x258>)
 8001a90:	9400      	str	r4, [sp, #0]
 8001a92:	f7ff fb0d 	bl	80010b0 <look2_binlxpw>
 8001a96:	e9c7 0104 	strd	r0, r1, [r7, #16]
        EngTrModel_ConstP.InterpDown_tableData, EngTrModel_ConstP.pooled6, 6U);

      /* Lookup_n-D: '<S5>/InterpUp' incorporates:
       *  Inport: '<Root>/Throttle'
       */
      InterpUp = look2_binlxpw(EngTrModel_U.Throttle, EngTrModel_B.Gear,
 8001a9a:	4b57      	ldr	r3, [pc, #348]	@ (8001bf8 <EngTrModel_step+0x248>)
 8001a9c:	e9d3 0100 	ldrd	r0, r1, [r3]
 8001aa0:	4b52      	ldr	r3, [pc, #328]	@ (8001bec <EngTrModel_step+0x23c>)
 8001aa2:	e9d3 230a 	ldrd	r2, r3, [r3, #40]	@ 0x28
 8001aa6:	2406      	movs	r4, #6
 8001aa8:	9404      	str	r4, [sp, #16]
 8001aaa:	4c54      	ldr	r4, [pc, #336]	@ (8001bfc <EngTrModel_step+0x24c>)
 8001aac:	9403      	str	r4, [sp, #12]
 8001aae:	4c57      	ldr	r4, [pc, #348]	@ (8001c0c <EngTrModel_step+0x25c>)
 8001ab0:	9402      	str	r4, [sp, #8]
 8001ab2:	4c54      	ldr	r4, [pc, #336]	@ (8001c04 <EngTrModel_step+0x254>)
 8001ab4:	9401      	str	r4, [sp, #4]
 8001ab6:	4c56      	ldr	r4, [pc, #344]	@ (8001c10 <EngTrModel_step+0x260>)
 8001ab8:	9400      	str	r4, [sp, #0]
 8001aba:	f7ff faf9 	bl	80010b0 <look2_binlxpw>
 8001abe:	e9c7 0102 	strd	r0, r1, [r7, #8]
        EngTrModel_ConstP.InterpUp_bp01Data, EngTrModel_ConstP.pooled2,
        EngTrModel_ConstP.InterpUp_tableData, EngTrModel_ConstP.pooled6, 6U);

      /* End of Outputs for SubSystem: '<S2>/ComputeThreshold' */
      switch (EngTrModel_DW.is_selection_state) {
 8001ac2:	4b49      	ldr	r3, [pc, #292]	@ (8001be8 <EngTrModel_step+0x238>)
 8001ac4:	f893 3023 	ldrb.w	r3, [r3, #35]	@ 0x23
 8001ac8:	2b03      	cmp	r3, #3
 8001aca:	d05a      	beq.n	8001b82 <EngTrModel_step+0x1d2>
 8001acc:	2b03      	cmp	r3, #3
 8001ace:	f300 80a6 	bgt.w	8001c1e <EngTrModel_step+0x26e>
 8001ad2:	2b01      	cmp	r3, #1
 8001ad4:	d002      	beq.n	8001adc <EngTrModel_step+0x12c>
 8001ad6:	2b02      	cmp	r3, #2
 8001ad8:	d02e      	beq.n	8001b38 <EngTrModel_step+0x188>
 8001ada:	e0a0      	b.n	8001c1e <EngTrModel_step+0x26e>
       case EngTrModel_IN_downshifting:
        if ((EngTrModel_DW.temporalCounter_i1 >= (uint32_T)2.0) &&
 8001adc:	4b42      	ldr	r3, [pc, #264]	@ (8001be8 <EngTrModel_step+0x238>)
 8001ade:	69db      	ldr	r3, [r3, #28]
 8001ae0:	2b01      	cmp	r3, #1
 8001ae2:	d919      	bls.n	8001b18 <EngTrModel_step+0x168>
            (EngTrModel_B.VehicleSpeed <= InterpDown)) {
 8001ae4:	4b41      	ldr	r3, [pc, #260]	@ (8001bec <EngTrModel_step+0x23c>)
 8001ae6:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
        if ((EngTrModel_DW.temporalCounter_i1 >= (uint32_T)2.0) &&
 8001aea:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 8001aee:	f7fe ff89 	bl	8000a04 <__aeabi_dcmpge>
 8001af2:	4603      	mov	r3, r0
 8001af4:	2b00      	cmp	r3, #0
 8001af6:	d00f      	beq.n	8001b18 <EngTrModel_step+0x168>
          sfEvent = EngTrModel_event_DOWN;
 8001af8:	2300      	movs	r3, #0
 8001afa:	607b      	str	r3, [r7, #4]
          if (EngTrModel_DW.is_active_gear_state != 0U) {
 8001afc:	4b3a      	ldr	r3, [pc, #232]	@ (8001be8 <EngTrModel_step+0x238>)
 8001afe:	f893 3022 	ldrb.w	r3, [r3, #34]	@ 0x22
 8001b02:	2b00      	cmp	r3, #0
 8001b04:	d003      	beq.n	8001b0e <EngTrModel_step+0x15e>
            EngTrModel_gear_state(&sfEvent);
 8001b06:	1d3b      	adds	r3, r7, #4
 8001b08:	4618      	mov	r0, r3
 8001b0a:	f7ff fdb1 	bl	8001670 <EngTrModel_gear_state>
          }

          EngTrModel_DW.is_selection_state = EngTrModel_IN_steady_state;
 8001b0e:	4b36      	ldr	r3, [pc, #216]	@ (8001be8 <EngTrModel_step+0x238>)
 8001b10:	2202      	movs	r2, #2
 8001b12:	f883 2023 	strb.w	r2, [r3, #35]	@ 0x23
        } else {
          if (EngTrModel_B.VehicleSpeed > InterpDown) {
            EngTrModel_DW.is_selection_state = EngTrModel_IN_steady_state;
          }
        }
        break;
 8001b16:	e082      	b.n	8001c1e <EngTrModel_step+0x26e>
          if (EngTrModel_B.VehicleSpeed > InterpDown) {
 8001b18:	4b34      	ldr	r3, [pc, #208]	@ (8001bec <EngTrModel_step+0x23c>)
 8001b1a:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8001b1e:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 8001b22:	f7fe ff5b 	bl	80009dc <__aeabi_dcmplt>
 8001b26:	4603      	mov	r3, r0
 8001b28:	2b00      	cmp	r3, #0
 8001b2a:	d100      	bne.n	8001b2e <EngTrModel_step+0x17e>
        break;
 8001b2c:	e077      	b.n	8001c1e <EngTrModel_step+0x26e>
            EngTrModel_DW.is_selection_state = EngTrModel_IN_steady_state;
 8001b2e:	4b2e      	ldr	r3, [pc, #184]	@ (8001be8 <EngTrModel_step+0x238>)
 8001b30:	2202      	movs	r2, #2
 8001b32:	f883 2023 	strb.w	r2, [r3, #35]	@ 0x23
        break;
 8001b36:	e072      	b.n	8001c1e <EngTrModel_step+0x26e>

       case EngTrModel_IN_steady_state:
        if (EngTrModel_B.VehicleSpeed > InterpUp) {
 8001b38:	4b2c      	ldr	r3, [pc, #176]	@ (8001bec <EngTrModel_step+0x23c>)
 8001b3a:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8001b3e:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 8001b42:	f7fe ff4b 	bl	80009dc <__aeabi_dcmplt>
 8001b46:	4603      	mov	r3, r0
 8001b48:	2b00      	cmp	r3, #0
 8001b4a:	d007      	beq.n	8001b5c <EngTrModel_step+0x1ac>
          EngTrModel_DW.is_selection_state = EngTrModel_IN_upshifting;
 8001b4c:	4b26      	ldr	r3, [pc, #152]	@ (8001be8 <EngTrModel_step+0x238>)
 8001b4e:	2203      	movs	r2, #3
 8001b50:	f883 2023 	strb.w	r2, [r3, #35]	@ 0x23
          EngTrModel_DW.temporalCounter_i1 = 0U;
 8001b54:	4b24      	ldr	r3, [pc, #144]	@ (8001be8 <EngTrModel_step+0x238>)
 8001b56:	2200      	movs	r2, #0
 8001b58:	61da      	str	r2, [r3, #28]
          if (EngTrModel_B.VehicleSpeed < InterpDown) {
            EngTrModel_DW.is_selection_state = EngTrModel_IN_downshifting;
            EngTrModel_DW.temporalCounter_i1 = 0U;
          }
        }
        break;
 8001b5a:	e060      	b.n	8001c1e <EngTrModel_step+0x26e>
          if (EngTrModel_B.VehicleSpeed < InterpDown) {
 8001b5c:	4b23      	ldr	r3, [pc, #140]	@ (8001bec <EngTrModel_step+0x23c>)
 8001b5e:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8001b62:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 8001b66:	f7fe ff57 	bl	8000a18 <__aeabi_dcmpgt>
 8001b6a:	4603      	mov	r3, r0
 8001b6c:	2b00      	cmp	r3, #0
 8001b6e:	d100      	bne.n	8001b72 <EngTrModel_step+0x1c2>
        break;
 8001b70:	e055      	b.n	8001c1e <EngTrModel_step+0x26e>
            EngTrModel_DW.is_selection_state = EngTrModel_IN_downshifting;
 8001b72:	4b1d      	ldr	r3, [pc, #116]	@ (8001be8 <EngTrModel_step+0x238>)
 8001b74:	2201      	movs	r2, #1
 8001b76:	f883 2023 	strb.w	r2, [r3, #35]	@ 0x23
            EngTrModel_DW.temporalCounter_i1 = 0U;
 8001b7a:	4b1b      	ldr	r3, [pc, #108]	@ (8001be8 <EngTrModel_step+0x238>)
 8001b7c:	2200      	movs	r2, #0
 8001b7e:	61da      	str	r2, [r3, #28]
        break;
 8001b80:	e04d      	b.n	8001c1e <EngTrModel_step+0x26e>

       case EngTrModel_IN_upshifting:
        if ((EngTrModel_DW.temporalCounter_i1 >= (uint32_T)2.0) &&
 8001b82:	4b19      	ldr	r3, [pc, #100]	@ (8001be8 <EngTrModel_step+0x238>)
 8001b84:	69db      	ldr	r3, [r3, #28]
 8001b86:	2b01      	cmp	r3, #1
 8001b88:	d919      	bls.n	8001bbe <EngTrModel_step+0x20e>
            (EngTrModel_B.VehicleSpeed >= InterpUp)) {
 8001b8a:	4b18      	ldr	r3, [pc, #96]	@ (8001bec <EngTrModel_step+0x23c>)
 8001b8c:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
        if ((EngTrModel_DW.temporalCounter_i1 >= (uint32_T)2.0) &&
 8001b90:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 8001b94:	f7fe ff2c 	bl	80009f0 <__aeabi_dcmple>
 8001b98:	4603      	mov	r3, r0
 8001b9a:	2b00      	cmp	r3, #0
 8001b9c:	d00f      	beq.n	8001bbe <EngTrModel_step+0x20e>
          sfEvent = EngTrModel_event_UP;
 8001b9e:	2301      	movs	r3, #1
 8001ba0:	607b      	str	r3, [r7, #4]
          if (EngTrModel_DW.is_active_gear_state != 0U) {
 8001ba2:	4b11      	ldr	r3, [pc, #68]	@ (8001be8 <EngTrModel_step+0x238>)
 8001ba4:	f893 3022 	ldrb.w	r3, [r3, #34]	@ 0x22
 8001ba8:	2b00      	cmp	r3, #0
 8001baa:	d003      	beq.n	8001bb4 <EngTrModel_step+0x204>
            EngTrModel_gear_state(&sfEvent);
 8001bac:	1d3b      	adds	r3, r7, #4
 8001bae:	4618      	mov	r0, r3
 8001bb0:	f7ff fd5e 	bl	8001670 <EngTrModel_gear_state>
          }

          EngTrModel_DW.is_selection_state = EngTrModel_IN_steady_state;
 8001bb4:	4b0c      	ldr	r3, [pc, #48]	@ (8001be8 <EngTrModel_step+0x238>)
 8001bb6:	2202      	movs	r2, #2
 8001bb8:	f883 2023 	strb.w	r2, [r3, #35]	@ 0x23
        } else {
          if (EngTrModel_B.VehicleSpeed < InterpUp) {
            EngTrModel_DW.is_selection_state = EngTrModel_IN_steady_state;
          }
        }
        break;
 8001bbc:	e02e      	b.n	8001c1c <EngTrModel_step+0x26c>
          if (EngTrModel_B.VehicleSpeed < InterpUp) {
 8001bbe:	4b0b      	ldr	r3, [pc, #44]	@ (8001bec <EngTrModel_step+0x23c>)
 8001bc0:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8001bc4:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 8001bc8:	f7fe ff26 	bl	8000a18 <__aeabi_dcmpgt>
 8001bcc:	4603      	mov	r3, r0
 8001bce:	2b00      	cmp	r3, #0
 8001bd0:	d120      	bne.n	8001c14 <EngTrModel_step+0x264>
        break;
 8001bd2:	e023      	b.n	8001c1c <EngTrModel_step+0x26c>
 8001bd4:	f3af 8000 	nop.w
 8001bd8:	54442d18 	.word	0x54442d18
 8001bdc:	401921fb 	.word	0x401921fb
 8001be0:	745d1746 	.word	0x745d1746
 8001be4:	3f8745d1 	.word	0x3f8745d1
 8001be8:	20000228 	.word	0x20000228
 8001bec:	200001f8 	.word	0x200001f8
 8001bf0:	20000260 	.word	0x20000260
 8001bf4:	3ff00000 	.word	0x3ff00000
 8001bf8:	20000250 	.word	0x20000250
 8001bfc:	080093e0 	.word	0x080093e0
 8001c00:	08008bb0 	.word	0x08008bb0
 8001c04:	08008ca0 	.word	0x08008ca0
 8001c08:	08008c70 	.word	0x08008c70
 8001c0c:	08008cc0 	.word	0x08008cc0
 8001c10:	08008d80 	.word	0x08008d80
            EngTrModel_DW.is_selection_state = EngTrModel_IN_steady_state;
 8001c14:	4b84      	ldr	r3, [pc, #528]	@ (8001e28 <EngTrModel_step+0x478>)
 8001c16:	2202      	movs	r2, #2
 8001c18:	f883 2023 	strb.w	r2, [r3, #35]	@ 0x23
        break;
 8001c1c:	bf00      	nop
  }

  /* End of Chart: '<Root>/ShiftLogic' */

  /* Lookup_n-D: '<S7>/Table' */
  InterpDown = look1_binlxpw(EngTrModel_B.Gear, EngTrModel_ConstP.pooled2,
 8001c1e:	4b83      	ldr	r3, [pc, #524]	@ (8001e2c <EngTrModel_step+0x47c>)
 8001c20:	e9d3 010a 	ldrd	r0, r1, [r3, #40]	@ 0x28
 8001c24:	2303      	movs	r3, #3
 8001c26:	9300      	str	r3, [sp, #0]
 8001c28:	4b81      	ldr	r3, [pc, #516]	@ (8001e30 <EngTrModel_step+0x480>)
 8001c2a:	4a82      	ldr	r2, [pc, #520]	@ (8001e34 <EngTrModel_step+0x484>)
 8001c2c:	f7ff fc3c 	bl	80014a8 <look1_binlxpw>
 8001c30:	e9c7 0104 	strd	r0, r1, [r7, #16]
    EngTrModel_ConstP.Table_tableData, 3U);

  /* Gain: '<S4>/FinalDriveRatio2' incorporates:
   *  DiscreteIntegrator: '<S4>/WheelSpeed'
   */
  EngTrModel_B.TransmissionRPM = 3.23 * EngTrModel_DW.WheelSpeed_DSTATE;
 8001c34:	4b7c      	ldr	r3, [pc, #496]	@ (8001e28 <EngTrModel_step+0x478>)
 8001c36:	e9d3 0102 	ldrd	r0, r1, [r3, #8]
 8001c3a:	a375      	add	r3, pc, #468	@ (adr r3, 8001e10 <EngTrModel_step+0x460>)
 8001c3c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001c40:	f7fe fc5a 	bl	80004f8 <__aeabi_dmul>
 8001c44:	4602      	mov	r2, r0
 8001c46:	460b      	mov	r3, r1
 8001c48:	4978      	ldr	r1, [pc, #480]	@ (8001e2c <EngTrModel_step+0x47c>)
 8001c4a:	e9c1 2304 	strd	r2, r3, [r1, #16]

  /* Product: '<S6>/SpeedRatio' incorporates:
   *  Product: '<S7>/Product1'
   */
  if( EngTrModel_B.EngineRPM != 0)
 8001c4e:	4b77      	ldr	r3, [pc, #476]	@ (8001e2c <EngTrModel_step+0x47c>)
 8001c50:	e9d3 0100 	ldrd	r0, r1, [r3]
 8001c54:	f04f 0200 	mov.w	r2, #0
 8001c58:	f04f 0300 	mov.w	r3, #0
 8001c5c:	f7fe feb4 	bl	80009c8 <__aeabi_dcmpeq>
 8001c60:	4603      	mov	r3, r0
 8001c62:	2b00      	cmp	r3, #0
 8001c64:	d114      	bne.n	8001c90 <EngTrModel_step+0x2e0>
    InterpUp = InterpDown * EngTrModel_B.TransmissionRPM / EngTrModel_B.EngineRPM;
 8001c66:	4b71      	ldr	r3, [pc, #452]	@ (8001e2c <EngTrModel_step+0x47c>)
 8001c68:	e9d3 0104 	ldrd	r0, r1, [r3, #16]
 8001c6c:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 8001c70:	f7fe fc42 	bl	80004f8 <__aeabi_dmul>
 8001c74:	4602      	mov	r2, r0
 8001c76:	460b      	mov	r3, r1
 8001c78:	4610      	mov	r0, r2
 8001c7a:	4619      	mov	r1, r3
 8001c7c:	4b6b      	ldr	r3, [pc, #428]	@ (8001e2c <EngTrModel_step+0x47c>)
 8001c7e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001c82:	f7fe fd63 	bl	800074c <__aeabi_ddiv>
 8001c86:	4602      	mov	r2, r0
 8001c88:	460b      	mov	r3, r1
 8001c8a:	e9c7 2302 	strd	r2, r3, [r7, #8]
 8001c8e:	e005      	b.n	8001c9c <EngTrModel_step+0x2ec>
  else
    InterpUp = 0.0;
 8001c90:	f04f 0200 	mov.w	r2, #0
 8001c94:	f04f 0300 	mov.w	r3, #0
 8001c98:	e9c7 2302 	strd	r2, r3, [r7, #8]

  /* Fcn: '<S6>/Impeller' incorporates:
   *  Lookup_n-D: '<S6>/FactorK'
   *  Product: '<S6>/Quotient'
   */
  EngTrModel_B.ImpellerTorque = rt_powd_snf(EngTrModel_B.EngineRPM /
 8001c9c:	4b63      	ldr	r3, [pc, #396]	@ (8001e2c <EngTrModel_step+0x47c>)
 8001c9e:	e9d3 4500 	ldrd	r4, r5, [r3]
    look1_binlxpw(InterpUp, EngTrModel_ConstP.pooled5,
 8001ca2:	2314      	movs	r3, #20
 8001ca4:	9300      	str	r3, [sp, #0]
 8001ca6:	4b64      	ldr	r3, [pc, #400]	@ (8001e38 <EngTrModel_step+0x488>)
 8001ca8:	4a64      	ldr	r2, [pc, #400]	@ (8001e3c <EngTrModel_step+0x48c>)
 8001caa:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 8001cae:	f7ff fbfb 	bl	80014a8 <look1_binlxpw>
 8001cb2:	4602      	mov	r2, r0
 8001cb4:	460b      	mov	r3, r1
  EngTrModel_B.ImpellerTorque = rt_powd_snf(EngTrModel_B.EngineRPM /
 8001cb6:	4620      	mov	r0, r4
 8001cb8:	4629      	mov	r1, r5
 8001cba:	f7fe fd47 	bl	800074c <__aeabi_ddiv>
 8001cbe:	4602      	mov	r2, r0
 8001cc0:	460b      	mov	r3, r1
 8001cc2:	4610      	mov	r0, r2
 8001cc4:	4619      	mov	r1, r3
 8001cc6:	f04f 0200 	mov.w	r2, #0
 8001cca:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8001cce:	f7ff fd55 	bl	800177c <rt_powd_snf>
 8001cd2:	4602      	mov	r2, r0
 8001cd4:	460b      	mov	r3, r1
 8001cd6:	4955      	ldr	r1, [pc, #340]	@ (8001e2c <EngTrModel_step+0x47c>)
 8001cd8:	e9c1 2306 	strd	r2, r3, [r1, #24]
                  EngTrModel_ConstP.FactorK_tableData, 20U), 2.0);

  /* Lookup_n-D: '<S6>/TorqueRatio' */
  InterpUp = look1_binlxpw(InterpUp, EngTrModel_ConstP.pooled5,
 8001cdc:	2314      	movs	r3, #20
 8001cde:	9300      	str	r3, [sp, #0]
 8001ce0:	4b57      	ldr	r3, [pc, #348]	@ (8001e40 <EngTrModel_step+0x490>)
 8001ce2:	4a56      	ldr	r2, [pc, #344]	@ (8001e3c <EngTrModel_step+0x48c>)
 8001ce4:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 8001ce8:	f7ff fbde 	bl	80014a8 <look1_binlxpw>
 8001cec:	e9c7 0102 	strd	r0, r1, [r7, #8]
    EngTrModel_ConstP.TorqueRatio_tableData, 20U);

  /* Product: '<S7>/Product' incorporates:
   *  Product: '<S6>/Turbine'
   */
  EngTrModel_B.OutputTorque = EngTrModel_B.ImpellerTorque * InterpUp *
 8001cf0:	4b4e      	ldr	r3, [pc, #312]	@ (8001e2c <EngTrModel_step+0x47c>)
 8001cf2:	e9d3 0106 	ldrd	r0, r1, [r3, #24]
 8001cf6:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8001cfa:	f7fe fbfd 	bl	80004f8 <__aeabi_dmul>
 8001cfe:	4602      	mov	r2, r0
 8001d00:	460b      	mov	r3, r1
 8001d02:	4610      	mov	r0, r2
 8001d04:	4619      	mov	r1, r3
 8001d06:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 8001d0a:	f7fe fbf5 	bl	80004f8 <__aeabi_dmul>
 8001d0e:	4602      	mov	r2, r0
 8001d10:	460b      	mov	r3, r1
 8001d12:	4946      	ldr	r1, [pc, #280]	@ (8001e2c <EngTrModel_step+0x47c>)
 8001d14:	e9c1 2308 	strd	r2, r3, [r1, #32]
    InterpDown;

  /* Outport: '<Root>/Gear' */
  EngTrModel_Y.Gear = EngTrModel_B.Gear;
 8001d18:	4b44      	ldr	r3, [pc, #272]	@ (8001e2c <EngTrModel_step+0x47c>)
 8001d1a:	e9d3 230a 	ldrd	r2, r3, [r3, #40]	@ 0x28
 8001d1e:	4949      	ldr	r1, [pc, #292]	@ (8001e44 <EngTrModel_step+0x494>)
 8001d20:	e9c1 2304 	strd	r2, r3, [r1, #16]

  /* Outport: '<Root>/VehicleSpeed' */
  EngTrModel_Y.VehicleSpeed = EngTrModel_B.VehicleSpeed;
 8001d24:	4b41      	ldr	r3, [pc, #260]	@ (8001e2c <EngTrModel_step+0x47c>)
 8001d26:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8001d2a:	4946      	ldr	r1, [pc, #280]	@ (8001e44 <EngTrModel_step+0x494>)
 8001d2c:	e9c1 2302 	strd	r2, r3, [r1, #8]
   *  Gain: '<S1>/EnginePlusImpellerInertia'
   *  Inport: '<Root>/Throttle'
   *  Lookup_n-D: '<S1>/EngineTorque'
   *  Sum: '<S1>/Sum'
   */
  EngTrModel_DW.DiscreteTimeIntegrator_DSTATE += (look2_binlxpw
 8001d30:	4b45      	ldr	r3, [pc, #276]	@ (8001e48 <EngTrModel_step+0x498>)
 8001d32:	e9d3 0100 	ldrd	r0, r1, [r3]
 8001d36:	4b3d      	ldr	r3, [pc, #244]	@ (8001e2c <EngTrModel_step+0x47c>)
 8001d38:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001d3c:	240a      	movs	r4, #10
 8001d3e:	9404      	str	r4, [sp, #16]
 8001d40:	4c42      	ldr	r4, [pc, #264]	@ (8001e4c <EngTrModel_step+0x49c>)
 8001d42:	9403      	str	r4, [sp, #12]
 8001d44:	4c42      	ldr	r4, [pc, #264]	@ (8001e50 <EngTrModel_step+0x4a0>)
 8001d46:	9402      	str	r4, [sp, #8]
 8001d48:	4c42      	ldr	r4, [pc, #264]	@ (8001e54 <EngTrModel_step+0x4a4>)
 8001d4a:	9401      	str	r4, [sp, #4]
 8001d4c:	4c42      	ldr	r4, [pc, #264]	@ (8001e58 <EngTrModel_step+0x4a8>)
 8001d4e:	9400      	str	r4, [sp, #0]
 8001d50:	f7ff f9ae 	bl	80010b0 <look2_binlxpw>
    (EngTrModel_U.Throttle, EngTrModel_B.EngineRPM,
     EngTrModel_ConstP.EngineTorque_bp01Data,
     EngTrModel_ConstP.EngineTorque_bp02Data,
     EngTrModel_ConstP.EngineTorque_tableData,
     EngTrModel_ConstP.EngineTorque_maxIndex, 10U) - EngTrModel_B.ImpellerTorque)
 8001d54:	4b35      	ldr	r3, [pc, #212]	@ (8001e2c <EngTrModel_step+0x47c>)
 8001d56:	e9d3 2306 	ldrd	r2, r3, [r3, #24]
 8001d5a:	f7fe fa15 	bl	8000188 <__aeabi_dsub>
 8001d5e:	4602      	mov	r2, r0
 8001d60:	460b      	mov	r3, r1
 8001d62:	4610      	mov	r0, r2
 8001d64:	4619      	mov	r1, r3
    * 45.472138452209627 * 0.04;
 8001d66:	a32c      	add	r3, pc, #176	@ (adr r3, 8001e18 <EngTrModel_step+0x468>)
 8001d68:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001d6c:	f7fe fbc4 	bl	80004f8 <__aeabi_dmul>
 8001d70:	4602      	mov	r2, r0
 8001d72:	460b      	mov	r3, r1
 8001d74:	4610      	mov	r0, r2
 8001d76:	4619      	mov	r1, r3
 8001d78:	a329      	add	r3, pc, #164	@ (adr r3, 8001e20 <EngTrModel_step+0x470>)
 8001d7a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001d7e:	f7fe fbbb 	bl	80004f8 <__aeabi_dmul>
 8001d82:	4602      	mov	r2, r0
 8001d84:	460b      	mov	r3, r1
 8001d86:	4610      	mov	r0, r2
 8001d88:	4619      	mov	r1, r3
  EngTrModel_DW.DiscreteTimeIntegrator_DSTATE += (look2_binlxpw
 8001d8a:	4b27      	ldr	r3, [pc, #156]	@ (8001e28 <EngTrModel_step+0x478>)
 8001d8c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001d90:	f7fe f9fc 	bl	800018c <__adddf3>
 8001d94:	4602      	mov	r2, r0
 8001d96:	460b      	mov	r3, r1
 8001d98:	4923      	ldr	r1, [pc, #140]	@ (8001e28 <EngTrModel_step+0x478>)
 8001d9a:	e9c1 2300 	strd	r2, r3, [r1]

  /* Signum: '<S4>/Sign' */
  if (EngTrModel_B.VehicleSpeed < 0.0) {
 8001d9e:	4b23      	ldr	r3, [pc, #140]	@ (8001e2c <EngTrModel_step+0x47c>)
 8001da0:	e9d3 0102 	ldrd	r0, r1, [r3, #8]
 8001da4:	f04f 0200 	mov.w	r2, #0
 8001da8:	f04f 0300 	mov.w	r3, #0
 8001dac:	f7fe fe16 	bl	80009dc <__aeabi_dcmplt>
 8001db0:	4603      	mov	r3, r0
 8001db2:	2b00      	cmp	r3, #0
 8001db4:	d005      	beq.n	8001dc2 <EngTrModel_step+0x412>
    InterpDown = -1.0;
 8001db6:	f04f 0200 	mov.w	r2, #0
 8001dba:	4b28      	ldr	r3, [pc, #160]	@ (8001e5c <EngTrModel_step+0x4ac>)
 8001dbc:	e9c7 2304 	strd	r2, r3, [r7, #16]
 8001dc0:	e055      	b.n	8001e6e <EngTrModel_step+0x4be>
  } else if (EngTrModel_B.VehicleSpeed > 0.0) {
 8001dc2:	4b1a      	ldr	r3, [pc, #104]	@ (8001e2c <EngTrModel_step+0x47c>)
 8001dc4:	e9d3 0102 	ldrd	r0, r1, [r3, #8]
 8001dc8:	f04f 0200 	mov.w	r2, #0
 8001dcc:	f04f 0300 	mov.w	r3, #0
 8001dd0:	f7fe fe22 	bl	8000a18 <__aeabi_dcmpgt>
 8001dd4:	4603      	mov	r3, r0
 8001dd6:	2b00      	cmp	r3, #0
 8001dd8:	d005      	beq.n	8001de6 <EngTrModel_step+0x436>
    InterpDown = 1.0;
 8001dda:	f04f 0200 	mov.w	r2, #0
 8001dde:	4b20      	ldr	r3, [pc, #128]	@ (8001e60 <EngTrModel_step+0x4b0>)
 8001de0:	e9c7 2304 	strd	r2, r3, [r7, #16]
 8001de4:	e043      	b.n	8001e6e <EngTrModel_step+0x4be>
  } else if (EngTrModel_B.VehicleSpeed == 0.0) {
 8001de6:	4b11      	ldr	r3, [pc, #68]	@ (8001e2c <EngTrModel_step+0x47c>)
 8001de8:	e9d3 0102 	ldrd	r0, r1, [r3, #8]
 8001dec:	f04f 0200 	mov.w	r2, #0
 8001df0:	f04f 0300 	mov.w	r3, #0
 8001df4:	f7fe fde8 	bl	80009c8 <__aeabi_dcmpeq>
 8001df8:	4603      	mov	r3, r0
 8001dfa:	2b00      	cmp	r3, #0
 8001dfc:	d032      	beq.n	8001e64 <EngTrModel_step+0x4b4>
    InterpDown = 0.0;
 8001dfe:	f04f 0200 	mov.w	r2, #0
 8001e02:	f04f 0300 	mov.w	r3, #0
 8001e06:	e9c7 2304 	strd	r2, r3, [r7, #16]
 8001e0a:	e030      	b.n	8001e6e <EngTrModel_step+0x4be>
 8001e0c:	f3af 8000 	nop.w
 8001e10:	3d70a3d7 	.word	0x3d70a3d7
 8001e14:	4009d70a 	.word	0x4009d70a
 8001e18:	0865b653 	.word	0x0865b653
 8001e1c:	4046bc6f 	.word	0x4046bc6f
 8001e20:	47ae147b 	.word	0x47ae147b
 8001e24:	3fa47ae1 	.word	0x3fa47ae1
 8001e28:	20000228 	.word	0x20000228
 8001e2c:	200001f8 	.word	0x200001f8
 8001e30:	080091c8 	.word	0x080091c8
 8001e34:	08008ca0 	.word	0x08008ca0
 8001e38:	080091e8 	.word	0x080091e8
 8001e3c:	08009290 	.word	0x08009290
 8001e40:	08009338 	.word	0x08009338
 8001e44:	20000260 	.word	0x20000260
 8001e48:	20000250 	.word	0x20000250
 8001e4c:	080093e8 	.word	0x080093e8
 8001e50:	08008db0 	.word	0x08008db0
 8001e54:	08009170 	.word	0x08009170
 8001e58:	08009120 	.word	0x08009120
 8001e5c:	bff00000 	.word	0xbff00000
 8001e60:	3ff00000 	.word	0x3ff00000
  } else {
    InterpDown = (rtNaN);
 8001e64:	4b3a      	ldr	r3, [pc, #232]	@ (8001f50 <EngTrModel_step+0x5a0>)
 8001e66:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001e6a:	e9c7 2304 	strd	r2, r3, [r7, #16]
   *  Inport: '<Root>/Brake'
   *  Product: '<S4>/SignedLoad'
   *  Sum: '<S4>/Sum'
   *  Sum: '<S4>/Sum1'
   */
  EngTrModel_DW.WheelSpeed_DSTATE += (3.23 * EngTrModel_B.OutputTorque - ((0.02 *
 8001e6e:	4b39      	ldr	r3, [pc, #228]	@ (8001f54 <EngTrModel_step+0x5a4>)
 8001e70:	e9d3 0108 	ldrd	r0, r1, [r3, #32]
 8001e74:	a32e      	add	r3, pc, #184	@ (adr r3, 8001f30 <EngTrModel_step+0x580>)
 8001e76:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001e7a:	f7fe fb3d 	bl	80004f8 <__aeabi_dmul>
 8001e7e:	4602      	mov	r2, r0
 8001e80:	460b      	mov	r3, r1
 8001e82:	4614      	mov	r4, r2
 8001e84:	461d      	mov	r5, r3
    rt_powd_snf(EngTrModel_B.VehicleSpeed, 2.0) + 40.0) +
 8001e86:	4b33      	ldr	r3, [pc, #204]	@ (8001f54 <EngTrModel_step+0x5a4>)
 8001e88:	e9d3 0102 	ldrd	r0, r1, [r3, #8]
 8001e8c:	f04f 0200 	mov.w	r2, #0
 8001e90:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8001e94:	f7ff fc72 	bl	800177c <rt_powd_snf>
  EngTrModel_DW.WheelSpeed_DSTATE += (3.23 * EngTrModel_B.OutputTorque - ((0.02 *
 8001e98:	a327      	add	r3, pc, #156	@ (adr r3, 8001f38 <EngTrModel_step+0x588>)
 8001e9a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001e9e:	f7fe fb2b 	bl	80004f8 <__aeabi_dmul>
 8001ea2:	4602      	mov	r2, r0
 8001ea4:	460b      	mov	r3, r1
 8001ea6:	4610      	mov	r0, r2
 8001ea8:	4619      	mov	r1, r3
    rt_powd_snf(EngTrModel_B.VehicleSpeed, 2.0) + 40.0) +
 8001eaa:	f04f 0200 	mov.w	r2, #0
 8001eae:	4b2a      	ldr	r3, [pc, #168]	@ (8001f58 <EngTrModel_step+0x5a8>)
 8001eb0:	f7fe f96c 	bl	800018c <__adddf3>
 8001eb4:	4602      	mov	r2, r0
 8001eb6:	460b      	mov	r3, r1
 8001eb8:	4610      	mov	r0, r2
 8001eba:	4619      	mov	r1, r3
    EngTrModel_U.BrakeTorque) * InterpDown) * 0.082684618362373577 * 0.04;
 8001ebc:	4b27      	ldr	r3, [pc, #156]	@ (8001f5c <EngTrModel_step+0x5ac>)
 8001ebe:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
    rt_powd_snf(EngTrModel_B.VehicleSpeed, 2.0) + 40.0) +
 8001ec2:	f7fe f963 	bl	800018c <__adddf3>
 8001ec6:	4602      	mov	r2, r0
 8001ec8:	460b      	mov	r3, r1
 8001eca:	4610      	mov	r0, r2
 8001ecc:	4619      	mov	r1, r3
    EngTrModel_U.BrakeTorque) * InterpDown) * 0.082684618362373577 * 0.04;
 8001ece:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 8001ed2:	f7fe fb11 	bl	80004f8 <__aeabi_dmul>
 8001ed6:	4602      	mov	r2, r0
 8001ed8:	460b      	mov	r3, r1
  EngTrModel_DW.WheelSpeed_DSTATE += (3.23 * EngTrModel_B.OutputTorque - ((0.02 *
 8001eda:	4620      	mov	r0, r4
 8001edc:	4629      	mov	r1, r5
 8001ede:	f7fe f953 	bl	8000188 <__aeabi_dsub>
 8001ee2:	4602      	mov	r2, r0
 8001ee4:	460b      	mov	r3, r1
 8001ee6:	4610      	mov	r0, r2
 8001ee8:	4619      	mov	r1, r3
    EngTrModel_U.BrakeTorque) * InterpDown) * 0.082684618362373577 * 0.04;
 8001eea:	a315      	add	r3, pc, #84	@ (adr r3, 8001f40 <EngTrModel_step+0x590>)
 8001eec:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001ef0:	f7fe fb02 	bl	80004f8 <__aeabi_dmul>
 8001ef4:	4602      	mov	r2, r0
 8001ef6:	460b      	mov	r3, r1
 8001ef8:	4610      	mov	r0, r2
 8001efa:	4619      	mov	r1, r3
 8001efc:	a312      	add	r3, pc, #72	@ (adr r3, 8001f48 <EngTrModel_step+0x598>)
 8001efe:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001f02:	f7fe faf9 	bl	80004f8 <__aeabi_dmul>
 8001f06:	4602      	mov	r2, r0
 8001f08:	460b      	mov	r3, r1
 8001f0a:	4610      	mov	r0, r2
 8001f0c:	4619      	mov	r1, r3
  EngTrModel_DW.WheelSpeed_DSTATE += (3.23 * EngTrModel_B.OutputTorque - ((0.02 *
 8001f0e:	4b14      	ldr	r3, [pc, #80]	@ (8001f60 <EngTrModel_step+0x5b0>)
 8001f10:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8001f14:	f7fe f93a 	bl	800018c <__adddf3>
 8001f18:	4602      	mov	r2, r0
 8001f1a:	460b      	mov	r3, r1
 8001f1c:	4910      	ldr	r1, [pc, #64]	@ (8001f60 <EngTrModel_step+0x5b0>)
 8001f1e:	e9c1 2302 	strd	r2, r3, [r1, #8]
}
 8001f22:	bf00      	nop
 8001f24:	3718      	adds	r7, #24
 8001f26:	46bd      	mov	sp, r7
 8001f28:	bdb0      	pop	{r4, r5, r7, pc}
 8001f2a:	bf00      	nop
 8001f2c:	f3af 8000 	nop.w
 8001f30:	3d70a3d7 	.word	0x3d70a3d7
 8001f34:	4009d70a 	.word	0x4009d70a
 8001f38:	47ae147b 	.word	0x47ae147b
 8001f3c:	3f947ae1 	.word	0x3f947ae1
 8001f40:	b3bfa695 	.word	0xb3bfa695
 8001f44:	3fb52ad1 	.word	0x3fb52ad1
 8001f48:	47ae147b 	.word	0x47ae147b
 8001f4c:	3fa47ae1 	.word	0x3fa47ae1
 8001f50:	20000290 	.word	0x20000290
 8001f54:	200001f8 	.word	0x200001f8
 8001f58:	40440000 	.word	0x40440000
 8001f5c:	20000250 	.word	0x20000250
 8001f60:	20000228 	.word	0x20000228

08001f64 <EngTrModel_initialize>:

/* Model initialize function */
void EngTrModel_initialize(void)
{
 8001f64:	b580      	push	{r7, lr}
 8001f66:	af00      	add	r7, sp, #0
  /* Registration code */

  /* initialize non-finites */
  rt_InitInfAndNaN(sizeof(real_T));
 8001f68:	2008      	movs	r0, #8
 8001f6a:	f000 ff69 	bl	8002e40 <rt_InitInfAndNaN>
}
 8001f6e:	bf00      	nop
 8001f70:	bd80      	pop	{r7, pc}
	...

08001f74 <KEYPAD_Init>:
    {'7', '8', '9'},  // Tercera fila
    {'*', '0', '#'}   // Cuarta fila
};

void KEYPAD_Init(void)
{
 8001f74:	b480      	push	{r7}
 8001f76:	af00      	add	r7, sp, #0
    // Configura PA5 (fila 1) como entrada con resistencia pull-down
    GPIOA->CRL &= ~(0xFUL << 20U);  // Limpia la configuración anterior de PA5
 8001f78:	4b34      	ldr	r3, [pc, #208]	@ (800204c <KEYPAD_Init+0xd8>)
 8001f7a:	681b      	ldr	r3, [r3, #0]
 8001f7c:	4a33      	ldr	r2, [pc, #204]	@ (800204c <KEYPAD_Init+0xd8>)
 8001f7e:	f423 0370 	bic.w	r3, r3, #15728640	@ 0xf00000
 8001f82:	6013      	str	r3, [r2, #0]
    GPIOA->CRL |= (0x8UL << 20U);   // Entrada con pull-down
 8001f84:	4b31      	ldr	r3, [pc, #196]	@ (800204c <KEYPAD_Init+0xd8>)
 8001f86:	681b      	ldr	r3, [r3, #0]
 8001f88:	4a30      	ldr	r2, [pc, #192]	@ (800204c <KEYPAD_Init+0xd8>)
 8001f8a:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8001f8e:	6013      	str	r3, [r2, #0]

    // Configura PA8 (fila 2) como entrada con resistencia pull-down
    GPIOA->CRH &= ~(0xFUL << 0U);  // Limpia la configuración anterior de PA8
 8001f90:	4b2e      	ldr	r3, [pc, #184]	@ (800204c <KEYPAD_Init+0xd8>)
 8001f92:	685b      	ldr	r3, [r3, #4]
 8001f94:	4a2d      	ldr	r2, [pc, #180]	@ (800204c <KEYPAD_Init+0xd8>)
 8001f96:	f023 030f 	bic.w	r3, r3, #15
 8001f9a:	6053      	str	r3, [r2, #4]
    GPIOA->CRH |= (0x8UL << 0U);   // Entrada con pull-down
 8001f9c:	4b2b      	ldr	r3, [pc, #172]	@ (800204c <KEYPAD_Init+0xd8>)
 8001f9e:	685b      	ldr	r3, [r3, #4]
 8001fa0:	4a2a      	ldr	r2, [pc, #168]	@ (800204c <KEYPAD_Init+0xd8>)
 8001fa2:	f043 0308 	orr.w	r3, r3, #8
 8001fa6:	6053      	str	r3, [r2, #4]

    // Configura PA1 (fila 3) como entrada con resistencia pull-down
    GPIOA->CRL &= ~(0xFUL << 4U);  // Limpia la configuración anterior de PA1
 8001fa8:	4b28      	ldr	r3, [pc, #160]	@ (800204c <KEYPAD_Init+0xd8>)
 8001faa:	681b      	ldr	r3, [r3, #0]
 8001fac:	4a27      	ldr	r2, [pc, #156]	@ (800204c <KEYPAD_Init+0xd8>)
 8001fae:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8001fb2:	6013      	str	r3, [r2, #0]
    GPIOA->CRL |= (0x8UL << 4U);   // Entrada con pull-down
 8001fb4:	4b25      	ldr	r3, [pc, #148]	@ (800204c <KEYPAD_Init+0xd8>)
 8001fb6:	681b      	ldr	r3, [r3, #0]
 8001fb8:	4a24      	ldr	r2, [pc, #144]	@ (800204c <KEYPAD_Init+0xd8>)
 8001fba:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8001fbe:	6013      	str	r3, [r2, #0]

    // Configura PA4 (fila 4) como entrada con resistencia pull-down
    GPIOA->CRL &= ~(0xFUL << 16U);  // Limpia la configuración anterior de PA4
 8001fc0:	4b22      	ldr	r3, [pc, #136]	@ (800204c <KEYPAD_Init+0xd8>)
 8001fc2:	681b      	ldr	r3, [r3, #0]
 8001fc4:	4a21      	ldr	r2, [pc, #132]	@ (800204c <KEYPAD_Init+0xd8>)
 8001fc6:	f423 2370 	bic.w	r3, r3, #983040	@ 0xf0000
 8001fca:	6013      	str	r3, [r2, #0]
    GPIOA->CRL |= (0x8UL << 16U);   // Entrada con pull-down
 8001fcc:	4b1f      	ldr	r3, [pc, #124]	@ (800204c <KEYPAD_Init+0xd8>)
 8001fce:	681b      	ldr	r3, [r3, #0]
 8001fd0:	4a1e      	ldr	r2, [pc, #120]	@ (800204c <KEYPAD_Init+0xd8>)
 8001fd2:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 8001fd6:	6013      	str	r3, [r2, #0]

    // Configura PA6 (columna 1) como salida push-pull
    GPIOA->CRL &= ~(0xFUL << 24U);  // Limpia la configuración anterior de PA6
 8001fd8:	4b1c      	ldr	r3, [pc, #112]	@ (800204c <KEYPAD_Init+0xd8>)
 8001fda:	681b      	ldr	r3, [r3, #0]
 8001fdc:	4a1b      	ldr	r2, [pc, #108]	@ (800204c <KEYPAD_Init+0xd8>)
 8001fde:	f023 6370 	bic.w	r3, r3, #251658240	@ 0xf000000
 8001fe2:	6013      	str	r3, [r2, #0]
    GPIOA->CRL |= (0x1UL << 24U);   // Salida push-pull
 8001fe4:	4b19      	ldr	r3, [pc, #100]	@ (800204c <KEYPAD_Init+0xd8>)
 8001fe6:	681b      	ldr	r3, [r3, #0]
 8001fe8:	4a18      	ldr	r2, [pc, #96]	@ (800204c <KEYPAD_Init+0xd8>)
 8001fea:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 8001fee:	6013      	str	r3, [r2, #0]

    // Configura PA7 (columna 2) como salida push-pull
    GPIOA->CRL &= ~(0xFUL << 28U);  // Limpia la configuración anterior de PA7
 8001ff0:	4b16      	ldr	r3, [pc, #88]	@ (800204c <KEYPAD_Init+0xd8>)
 8001ff2:	681b      	ldr	r3, [r3, #0]
 8001ff4:	4a15      	ldr	r2, [pc, #84]	@ (800204c <KEYPAD_Init+0xd8>)
 8001ff6:	f023 4370 	bic.w	r3, r3, #4026531840	@ 0xf0000000
 8001ffa:	6013      	str	r3, [r2, #0]
    GPIOA->CRL |= (0x1UL << 28U);   // Salida push-pull
 8001ffc:	4b13      	ldr	r3, [pc, #76]	@ (800204c <KEYPAD_Init+0xd8>)
 8001ffe:	681b      	ldr	r3, [r3, #0]
 8002000:	4a12      	ldr	r2, [pc, #72]	@ (800204c <KEYPAD_Init+0xd8>)
 8002002:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8002006:	6013      	str	r3, [r2, #0]

    // Configura PA10 (columna 3) como salida push-pull
    GPIOA->CRH &= ~(0xFUL << 8U);  // Limpia la configuración anterior de PA10
 8002008:	4b10      	ldr	r3, [pc, #64]	@ (800204c <KEYPAD_Init+0xd8>)
 800200a:	685b      	ldr	r3, [r3, #4]
 800200c:	4a0f      	ldr	r2, [pc, #60]	@ (800204c <KEYPAD_Init+0xd8>)
 800200e:	f423 6370 	bic.w	r3, r3, #3840	@ 0xf00
 8002012:	6053      	str	r3, [r2, #4]
    GPIOA->CRH |= (0x1UL << 8U);   // Salida push-pull
 8002014:	4b0d      	ldr	r3, [pc, #52]	@ (800204c <KEYPAD_Init+0xd8>)
 8002016:	685b      	ldr	r3, [r3, #4]
 8002018:	4a0c      	ldr	r2, [pc, #48]	@ (800204c <KEYPAD_Init+0xd8>)
 800201a:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800201e:	6053      	str	r3, [r2, #4]

    // Inicializa todas las columnas (PA6, PA7 y PA10) en estado LOW (desactivadas)
    GPIOA->ODR &= ~(0x1UL << 6);
 8002020:	4b0a      	ldr	r3, [pc, #40]	@ (800204c <KEYPAD_Init+0xd8>)
 8002022:	68db      	ldr	r3, [r3, #12]
 8002024:	4a09      	ldr	r2, [pc, #36]	@ (800204c <KEYPAD_Init+0xd8>)
 8002026:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800202a:	60d3      	str	r3, [r2, #12]
    GPIOA->ODR &= ~(0x1UL << 7);
 800202c:	4b07      	ldr	r3, [pc, #28]	@ (800204c <KEYPAD_Init+0xd8>)
 800202e:	68db      	ldr	r3, [r3, #12]
 8002030:	4a06      	ldr	r2, [pc, #24]	@ (800204c <KEYPAD_Init+0xd8>)
 8002032:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8002036:	60d3      	str	r3, [r2, #12]
    GPIOA->ODR &= ~(0x1UL << 10);
 8002038:	4b04      	ldr	r3, [pc, #16]	@ (800204c <KEYPAD_Init+0xd8>)
 800203a:	68db      	ldr	r3, [r3, #12]
 800203c:	4a03      	ldr	r2, [pc, #12]	@ (800204c <KEYPAD_Init+0xd8>)
 800203e:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8002042:	60d3      	str	r3, [r2, #12]
}
 8002044:	bf00      	nop
 8002046:	46bd      	mov	sp, r7
 8002048:	bc80      	pop	{r7}
 800204a:	4770      	bx	lr
 800204c:	40010800 	.word	0x40010800

08002050 <KEYPAD_ReadKey>:

char KEYPAD_ReadKey(void)
{
 8002050:	b480      	push	{r7}
 8002052:	b08f      	sub	sp, #60	@ 0x3c
 8002054:	af00      	add	r7, sp, #0
    char key = '\0';  // Inicializa sin carácter presionado
 8002056:	2300      	movs	r3, #0
 8002058:	f887 3037 	strb.w	r3, [r7, #55]	@ 0x37

    // Activa PA6 (columna 1) en HIGH
    GPIOA->ODR |= (0x1UL << 6);
 800205c:	4b91      	ldr	r3, [pc, #580]	@ (80022a4 <KEYPAD_ReadKey+0x254>)
 800205e:	68db      	ldr	r3, [r3, #12]
 8002060:	4a90      	ldr	r2, [pc, #576]	@ (80022a4 <KEYPAD_ReadKey+0x254>)
 8002062:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8002066:	60d3      	str	r3, [r2, #12]

    // Verifica cada fila (PA5, PA8, PA1, PA4)
    if (GPIOA->IDR & (0x1UL << 5))
 8002068:	4b8e      	ldr	r3, [pc, #568]	@ (80022a4 <KEYPAD_ReadKey+0x254>)
 800206a:	689b      	ldr	r3, [r3, #8]
 800206c:	f003 0320 	and.w	r3, r3, #32
 8002070:	2b00      	cmp	r3, #0
 8002072:	d00e      	beq.n	8002092 <KEYPAD_ReadKey+0x42>
    {
        for (volatile int i = 0; i < 10000; i++);
 8002074:	2300      	movs	r3, #0
 8002076:	633b      	str	r3, [r7, #48]	@ 0x30
 8002078:	e002      	b.n	8002080 <KEYPAD_ReadKey+0x30>
 800207a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800207c:	3301      	adds	r3, #1
 800207e:	633b      	str	r3, [r7, #48]	@ 0x30
 8002080:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8002082:	f242 720f 	movw	r2, #9999	@ 0x270f
 8002086:	4293      	cmp	r3, r2
 8002088:	ddf7      	ble.n	800207a <KEYPAD_ReadKey+0x2a>
        key = KEYPAD_MAP[0][0];  // Retorna '1'
 800208a:	2331      	movs	r3, #49	@ 0x31
 800208c:	f887 3037 	strb.w	r3, [r7, #55]	@ 0x37
 8002090:	e03d      	b.n	800210e <KEYPAD_ReadKey+0xbe>
    }
    else if (GPIOA->IDR & (0x1UL << 8))
 8002092:	4b84      	ldr	r3, [pc, #528]	@ (80022a4 <KEYPAD_ReadKey+0x254>)
 8002094:	689b      	ldr	r3, [r3, #8]
 8002096:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800209a:	2b00      	cmp	r3, #0
 800209c:	d00e      	beq.n	80020bc <KEYPAD_ReadKey+0x6c>
    {
        for (volatile int i = 0; i < 10000; i++);
 800209e:	2300      	movs	r3, #0
 80020a0:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80020a2:	e002      	b.n	80020aa <KEYPAD_ReadKey+0x5a>
 80020a4:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80020a6:	3301      	adds	r3, #1
 80020a8:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80020aa:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80020ac:	f242 720f 	movw	r2, #9999	@ 0x270f
 80020b0:	4293      	cmp	r3, r2
 80020b2:	ddf7      	ble.n	80020a4 <KEYPAD_ReadKey+0x54>
        key = KEYPAD_MAP[1][0];  // Retorna '4'
 80020b4:	2334      	movs	r3, #52	@ 0x34
 80020b6:	f887 3037 	strb.w	r3, [r7, #55]	@ 0x37
 80020ba:	e028      	b.n	800210e <KEYPAD_ReadKey+0xbe>
    }
    else if (GPIOA->IDR & (0x1UL << 1))
 80020bc:	4b79      	ldr	r3, [pc, #484]	@ (80022a4 <KEYPAD_ReadKey+0x254>)
 80020be:	689b      	ldr	r3, [r3, #8]
 80020c0:	f003 0302 	and.w	r3, r3, #2
 80020c4:	2b00      	cmp	r3, #0
 80020c6:	d00e      	beq.n	80020e6 <KEYPAD_ReadKey+0x96>
    {
        for (volatile int i = 0; i < 10000; i++);
 80020c8:	2300      	movs	r3, #0
 80020ca:	62bb      	str	r3, [r7, #40]	@ 0x28
 80020cc:	e002      	b.n	80020d4 <KEYPAD_ReadKey+0x84>
 80020ce:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80020d0:	3301      	adds	r3, #1
 80020d2:	62bb      	str	r3, [r7, #40]	@ 0x28
 80020d4:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80020d6:	f242 720f 	movw	r2, #9999	@ 0x270f
 80020da:	4293      	cmp	r3, r2
 80020dc:	ddf7      	ble.n	80020ce <KEYPAD_ReadKey+0x7e>
        key = KEYPAD_MAP[2][0];  // Retorna '7'
 80020de:	2337      	movs	r3, #55	@ 0x37
 80020e0:	f887 3037 	strb.w	r3, [r7, #55]	@ 0x37
 80020e4:	e013      	b.n	800210e <KEYPAD_ReadKey+0xbe>
    }
    else if (GPIOA->IDR & (0x1UL << 4))
 80020e6:	4b6f      	ldr	r3, [pc, #444]	@ (80022a4 <KEYPAD_ReadKey+0x254>)
 80020e8:	689b      	ldr	r3, [r3, #8]
 80020ea:	f003 0310 	and.w	r3, r3, #16
 80020ee:	2b00      	cmp	r3, #0
 80020f0:	d00d      	beq.n	800210e <KEYPAD_ReadKey+0xbe>
    {
        for (volatile int i = 0; i < 10000; i++);
 80020f2:	2300      	movs	r3, #0
 80020f4:	627b      	str	r3, [r7, #36]	@ 0x24
 80020f6:	e002      	b.n	80020fe <KEYPAD_ReadKey+0xae>
 80020f8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80020fa:	3301      	adds	r3, #1
 80020fc:	627b      	str	r3, [r7, #36]	@ 0x24
 80020fe:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8002100:	f242 720f 	movw	r2, #9999	@ 0x270f
 8002104:	4293      	cmp	r3, r2
 8002106:	ddf7      	ble.n	80020f8 <KEYPAD_ReadKey+0xa8>
        key = KEYPAD_MAP[3][0];  // Retorna 'A'
 8002108:	232a      	movs	r3, #42	@ 0x2a
 800210a:	f887 3037 	strb.w	r3, [r7, #55]	@ 0x37
    }

    // Desactiva PA6 (columna 1) volviéndola a LOW
    GPIOA->ODR &= ~(0x1UL << 6);
 800210e:	4b65      	ldr	r3, [pc, #404]	@ (80022a4 <KEYPAD_ReadKey+0x254>)
 8002110:	68db      	ldr	r3, [r3, #12]
 8002112:	4a64      	ldr	r2, [pc, #400]	@ (80022a4 <KEYPAD_ReadKey+0x254>)
 8002114:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8002118:	60d3      	str	r3, [r2, #12]

    // Activa PA7 (columna 2) en HIGH
    GPIOA->ODR |= (0x1UL << 7);
 800211a:	4b62      	ldr	r3, [pc, #392]	@ (80022a4 <KEYPAD_ReadKey+0x254>)
 800211c:	68db      	ldr	r3, [r3, #12]
 800211e:	4a61      	ldr	r2, [pc, #388]	@ (80022a4 <KEYPAD_ReadKey+0x254>)
 8002120:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8002124:	60d3      	str	r3, [r2, #12]

    // Verifica cada fila (PA5, PA8, PA1, PA4)
    if (GPIOA->IDR & (0x1UL << 5))
 8002126:	4b5f      	ldr	r3, [pc, #380]	@ (80022a4 <KEYPAD_ReadKey+0x254>)
 8002128:	689b      	ldr	r3, [r3, #8]
 800212a:	f003 0320 	and.w	r3, r3, #32
 800212e:	2b00      	cmp	r3, #0
 8002130:	d00e      	beq.n	8002150 <KEYPAD_ReadKey+0x100>
    {
        for (volatile int i = 0; i < 10000; i++);
 8002132:	2300      	movs	r3, #0
 8002134:	623b      	str	r3, [r7, #32]
 8002136:	e002      	b.n	800213e <KEYPAD_ReadKey+0xee>
 8002138:	6a3b      	ldr	r3, [r7, #32]
 800213a:	3301      	adds	r3, #1
 800213c:	623b      	str	r3, [r7, #32]
 800213e:	6a3b      	ldr	r3, [r7, #32]
 8002140:	f242 720f 	movw	r2, #9999	@ 0x270f
 8002144:	4293      	cmp	r3, r2
 8002146:	ddf7      	ble.n	8002138 <KEYPAD_ReadKey+0xe8>
        key = KEYPAD_MAP[0][1];  // Retorna '2'
 8002148:	2332      	movs	r3, #50	@ 0x32
 800214a:	f887 3037 	strb.w	r3, [r7, #55]	@ 0x37
 800214e:	e03d      	b.n	80021cc <KEYPAD_ReadKey+0x17c>
    }
    else if (GPIOA->IDR & (0x1UL << 8))
 8002150:	4b54      	ldr	r3, [pc, #336]	@ (80022a4 <KEYPAD_ReadKey+0x254>)
 8002152:	689b      	ldr	r3, [r3, #8]
 8002154:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002158:	2b00      	cmp	r3, #0
 800215a:	d00e      	beq.n	800217a <KEYPAD_ReadKey+0x12a>
    {
        for (volatile int i = 0; i < 10000; i++);
 800215c:	2300      	movs	r3, #0
 800215e:	61fb      	str	r3, [r7, #28]
 8002160:	e002      	b.n	8002168 <KEYPAD_ReadKey+0x118>
 8002162:	69fb      	ldr	r3, [r7, #28]
 8002164:	3301      	adds	r3, #1
 8002166:	61fb      	str	r3, [r7, #28]
 8002168:	69fb      	ldr	r3, [r7, #28]
 800216a:	f242 720f 	movw	r2, #9999	@ 0x270f
 800216e:	4293      	cmp	r3, r2
 8002170:	ddf7      	ble.n	8002162 <KEYPAD_ReadKey+0x112>
        key = KEYPAD_MAP[1][1];  // Retorna '5'
 8002172:	2335      	movs	r3, #53	@ 0x35
 8002174:	f887 3037 	strb.w	r3, [r7, #55]	@ 0x37
 8002178:	e028      	b.n	80021cc <KEYPAD_ReadKey+0x17c>
    }
    else if (GPIOA->IDR & (0x1UL << 1))
 800217a:	4b4a      	ldr	r3, [pc, #296]	@ (80022a4 <KEYPAD_ReadKey+0x254>)
 800217c:	689b      	ldr	r3, [r3, #8]
 800217e:	f003 0302 	and.w	r3, r3, #2
 8002182:	2b00      	cmp	r3, #0
 8002184:	d00e      	beq.n	80021a4 <KEYPAD_ReadKey+0x154>
    {
        for (volatile int i = 0; i < 10000; i++);
 8002186:	2300      	movs	r3, #0
 8002188:	61bb      	str	r3, [r7, #24]
 800218a:	e002      	b.n	8002192 <KEYPAD_ReadKey+0x142>
 800218c:	69bb      	ldr	r3, [r7, #24]
 800218e:	3301      	adds	r3, #1
 8002190:	61bb      	str	r3, [r7, #24]
 8002192:	69bb      	ldr	r3, [r7, #24]
 8002194:	f242 720f 	movw	r2, #9999	@ 0x270f
 8002198:	4293      	cmp	r3, r2
 800219a:	ddf7      	ble.n	800218c <KEYPAD_ReadKey+0x13c>
        key = KEYPAD_MAP[2][1];  // Retorna '8'
 800219c:	2338      	movs	r3, #56	@ 0x38
 800219e:	f887 3037 	strb.w	r3, [r7, #55]	@ 0x37
 80021a2:	e013      	b.n	80021cc <KEYPAD_ReadKey+0x17c>
    }
    else if (GPIOA->IDR & (0x1UL << 4))
 80021a4:	4b3f      	ldr	r3, [pc, #252]	@ (80022a4 <KEYPAD_ReadKey+0x254>)
 80021a6:	689b      	ldr	r3, [r3, #8]
 80021a8:	f003 0310 	and.w	r3, r3, #16
 80021ac:	2b00      	cmp	r3, #0
 80021ae:	d00d      	beq.n	80021cc <KEYPAD_ReadKey+0x17c>
    {
        for (volatile int i = 0; i < 10000; i++);
 80021b0:	2300      	movs	r3, #0
 80021b2:	617b      	str	r3, [r7, #20]
 80021b4:	e002      	b.n	80021bc <KEYPAD_ReadKey+0x16c>
 80021b6:	697b      	ldr	r3, [r7, #20]
 80021b8:	3301      	adds	r3, #1
 80021ba:	617b      	str	r3, [r7, #20]
 80021bc:	697b      	ldr	r3, [r7, #20]
 80021be:	f242 720f 	movw	r2, #9999	@ 0x270f
 80021c2:	4293      	cmp	r3, r2
 80021c4:	ddf7      	ble.n	80021b6 <KEYPAD_ReadKey+0x166>
        key = KEYPAD_MAP[3][1];  // Retorna 'B'
 80021c6:	2330      	movs	r3, #48	@ 0x30
 80021c8:	f887 3037 	strb.w	r3, [r7, #55]	@ 0x37
    }

    // Desactiva PA7 (columna 2) volviéndola a LOW
    GPIOA->ODR &= ~(0x1UL << 7);
 80021cc:	4b35      	ldr	r3, [pc, #212]	@ (80022a4 <KEYPAD_ReadKey+0x254>)
 80021ce:	68db      	ldr	r3, [r3, #12]
 80021d0:	4a34      	ldr	r2, [pc, #208]	@ (80022a4 <KEYPAD_ReadKey+0x254>)
 80021d2:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 80021d6:	60d3      	str	r3, [r2, #12]

    // Activa PA10 (columna 3) en HIGH
    GPIOA->ODR |= (0x1UL << 10);
 80021d8:	4b32      	ldr	r3, [pc, #200]	@ (80022a4 <KEYPAD_ReadKey+0x254>)
 80021da:	68db      	ldr	r3, [r3, #12]
 80021dc:	4a31      	ldr	r2, [pc, #196]	@ (80022a4 <KEYPAD_ReadKey+0x254>)
 80021de:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 80021e2:	60d3      	str	r3, [r2, #12]

    // Verifica cada fila (PA5, PA8, PA1, PA4)
    if (GPIOA->IDR & (0x1UL << 5))
 80021e4:	4b2f      	ldr	r3, [pc, #188]	@ (80022a4 <KEYPAD_ReadKey+0x254>)
 80021e6:	689b      	ldr	r3, [r3, #8]
 80021e8:	f003 0320 	and.w	r3, r3, #32
 80021ec:	2b00      	cmp	r3, #0
 80021ee:	d00e      	beq.n	800220e <KEYPAD_ReadKey+0x1be>
    {
        for (volatile int i = 0; i < 10000; i++);
 80021f0:	2300      	movs	r3, #0
 80021f2:	613b      	str	r3, [r7, #16]
 80021f4:	e002      	b.n	80021fc <KEYPAD_ReadKey+0x1ac>
 80021f6:	693b      	ldr	r3, [r7, #16]
 80021f8:	3301      	adds	r3, #1
 80021fa:	613b      	str	r3, [r7, #16]
 80021fc:	693b      	ldr	r3, [r7, #16]
 80021fe:	f242 720f 	movw	r2, #9999	@ 0x270f
 8002202:	4293      	cmp	r3, r2
 8002204:	ddf7      	ble.n	80021f6 <KEYPAD_ReadKey+0x1a6>
        key = KEYPAD_MAP[0][2];  // Retorna '3'
 8002206:	2333      	movs	r3, #51	@ 0x33
 8002208:	f887 3037 	strb.w	r3, [r7, #55]	@ 0x37
 800220c:	e03d      	b.n	800228a <KEYPAD_ReadKey+0x23a>
    }
    else if (GPIOA->IDR & (0x1UL << 8))
 800220e:	4b25      	ldr	r3, [pc, #148]	@ (80022a4 <KEYPAD_ReadKey+0x254>)
 8002210:	689b      	ldr	r3, [r3, #8]
 8002212:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002216:	2b00      	cmp	r3, #0
 8002218:	d00e      	beq.n	8002238 <KEYPAD_ReadKey+0x1e8>
    {
        for (volatile int i = 0; i < 10000; i++);
 800221a:	2300      	movs	r3, #0
 800221c:	60fb      	str	r3, [r7, #12]
 800221e:	e002      	b.n	8002226 <KEYPAD_ReadKey+0x1d6>
 8002220:	68fb      	ldr	r3, [r7, #12]
 8002222:	3301      	adds	r3, #1
 8002224:	60fb      	str	r3, [r7, #12]
 8002226:	68fb      	ldr	r3, [r7, #12]
 8002228:	f242 720f 	movw	r2, #9999	@ 0x270f
 800222c:	4293      	cmp	r3, r2
 800222e:	ddf7      	ble.n	8002220 <KEYPAD_ReadKey+0x1d0>
        key = KEYPAD_MAP[1][2];  // Retorna '6'
 8002230:	2336      	movs	r3, #54	@ 0x36
 8002232:	f887 3037 	strb.w	r3, [r7, #55]	@ 0x37
 8002236:	e028      	b.n	800228a <KEYPAD_ReadKey+0x23a>
    }
    else if (GPIOA->IDR & (0x1UL << 1))
 8002238:	4b1a      	ldr	r3, [pc, #104]	@ (80022a4 <KEYPAD_ReadKey+0x254>)
 800223a:	689b      	ldr	r3, [r3, #8]
 800223c:	f003 0302 	and.w	r3, r3, #2
 8002240:	2b00      	cmp	r3, #0
 8002242:	d00e      	beq.n	8002262 <KEYPAD_ReadKey+0x212>
    {
        for (volatile int i = 0; i < 10000; i++);
 8002244:	2300      	movs	r3, #0
 8002246:	60bb      	str	r3, [r7, #8]
 8002248:	e002      	b.n	8002250 <KEYPAD_ReadKey+0x200>
 800224a:	68bb      	ldr	r3, [r7, #8]
 800224c:	3301      	adds	r3, #1
 800224e:	60bb      	str	r3, [r7, #8]
 8002250:	68bb      	ldr	r3, [r7, #8]
 8002252:	f242 720f 	movw	r2, #9999	@ 0x270f
 8002256:	4293      	cmp	r3, r2
 8002258:	ddf7      	ble.n	800224a <KEYPAD_ReadKey+0x1fa>
        key = KEYPAD_MAP[2][2];  // Retorna '9'
 800225a:	2339      	movs	r3, #57	@ 0x39
 800225c:	f887 3037 	strb.w	r3, [r7, #55]	@ 0x37
 8002260:	e013      	b.n	800228a <KEYPAD_ReadKey+0x23a>
    }
    else if (GPIOA->IDR & (0x1UL << 4))
 8002262:	4b10      	ldr	r3, [pc, #64]	@ (80022a4 <KEYPAD_ReadKey+0x254>)
 8002264:	689b      	ldr	r3, [r3, #8]
 8002266:	f003 0310 	and.w	r3, r3, #16
 800226a:	2b00      	cmp	r3, #0
 800226c:	d00d      	beq.n	800228a <KEYPAD_ReadKey+0x23a>
    {
        for (volatile int i = 0; i < 10000; i++);
 800226e:	2300      	movs	r3, #0
 8002270:	607b      	str	r3, [r7, #4]
 8002272:	e002      	b.n	800227a <KEYPAD_ReadKey+0x22a>
 8002274:	687b      	ldr	r3, [r7, #4]
 8002276:	3301      	adds	r3, #1
 8002278:	607b      	str	r3, [r7, #4]
 800227a:	687b      	ldr	r3, [r7, #4]
 800227c:	f242 720f 	movw	r2, #9999	@ 0x270f
 8002280:	4293      	cmp	r3, r2
 8002282:	ddf7      	ble.n	8002274 <KEYPAD_ReadKey+0x224>
        key = KEYPAD_MAP[3][2];  // Retorna 'C'
 8002284:	2323      	movs	r3, #35	@ 0x23
 8002286:	f887 3037 	strb.w	r3, [r7, #55]	@ 0x37
    }

    // Desactiva PA10 (columna 3) volviéndola a LOW
    GPIOA->ODR &= ~(0x1UL << 10);
 800228a:	4b06      	ldr	r3, [pc, #24]	@ (80022a4 <KEYPAD_ReadKey+0x254>)
 800228c:	68db      	ldr	r3, [r3, #12]
 800228e:	4a05      	ldr	r2, [pc, #20]	@ (80022a4 <KEYPAD_ReadKey+0x254>)
 8002290:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8002294:	60d3      	str	r3, [r2, #12]

    return key;
 8002296:	f897 3037 	ldrb.w	r3, [r7, #55]	@ 0x37
}
 800229a:	4618      	mov	r0, r3
 800229c:	373c      	adds	r7, #60	@ 0x3c
 800229e:	46bd      	mov	sp, r7
 80022a0:	bc80      	pop	{r7}
 80022a2:	4770      	bx	lr
 80022a4:	40010800 	.word	0x40010800

080022a8 <LCD_Init>:
		{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
		{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }
};

//Funcion que inicializa el LCD a 4 bits
void LCD_Init(void){
 80022a8:	b580      	push	{r7, lr}
 80022aa:	b082      	sub	sp, #8
 80022ac:	af00      	add	r7, sp, #0
	int8_t const *p;
/**
  * Configuracion de todos los pines hacia el LCD general purpose output push-pull, 10 MHz speed
  */
	RCC->APB2ENR	|=	 ( 0x1UL <<  4U );//			IO port C clock enable
 80022ae:	4b62      	ldr	r3, [pc, #392]	@ (8002438 <LCD_Init+0x190>)
 80022b0:	699b      	ldr	r3, [r3, #24]
 80022b2:	4a61      	ldr	r2, [pc, #388]	@ (8002438 <LCD_Init+0x190>)
 80022b4:	f043 0310 	orr.w	r3, r3, #16
 80022b8:	6193      	str	r3, [r2, #24]
	GPIOC->CRL	&=	~( 0x3UL << 30U ) & ~( 0x2UL << 28U )
 80022ba:	4b60      	ldr	r3, [pc, #384]	@ (800243c <LCD_Init+0x194>)
 80022bc:	681b      	ldr	r3, [r3, #0]
 80022be:	4a5f      	ldr	r2, [pc, #380]	@ (800243c <LCD_Init+0x194>)
 80022c0:	f023 436e 	bic.w	r3, r3, #3992977408	@ 0xee000000
 80022c4:	6013      	str	r3, [r2, #0]
			& 	~( 0x3UL << 26U ) & ~( 0x2UL << 24U );
	GPIOC->CRL 	|= 	 ( 0x1UL << 28U )
 80022c6:	4b5d      	ldr	r3, [pc, #372]	@ (800243c <LCD_Init+0x194>)
 80022c8:	681b      	ldr	r3, [r3, #0]
 80022ca:	4a5c      	ldr	r2, [pc, #368]	@ (800243c <LCD_Init+0x194>)
 80022cc:	f043 5388 	orr.w	r3, r3, #285212672	@ 0x11000000
 80022d0:	6013      	str	r3, [r2, #0]
			|  	 ( 0x1UL << 24U );
	GPIOC->CRH	&=	~( 0x3UL << 18U ) & ~( 0x2UL << 16U )
 80022d2:	4b5a      	ldr	r3, [pc, #360]	@ (800243c <LCD_Init+0x194>)
 80022d4:	685a      	ldr	r2, [r3, #4]
 80022d6:	4959      	ldr	r1, [pc, #356]	@ (800243c <LCD_Init+0x194>)
 80022d8:	4b59      	ldr	r3, [pc, #356]	@ (8002440 <LCD_Init+0x198>)
 80022da:	4013      	ands	r3, r2
 80022dc:	604b      	str	r3, [r1, #4]
			& 	~( 0x3UL << 14U ) & ~( 0x2UL << 12U )
			&	~( 0x3UL << 10U ) & ~( 0x2UL <<  8U )
			& 	~( 0x3UL <<  6U ) & ~( 0x2UL <<  4U )
			& 	~( 0x3UL <<  2U ) & ~( 0x2UL <<  0U );
	GPIOC->CRH	|= 	 ( 0x1UL << 16U )
 80022de:	4b57      	ldr	r3, [pc, #348]	@ (800243c <LCD_Init+0x194>)
 80022e0:	685a      	ldr	r2, [r3, #4]
 80022e2:	4956      	ldr	r1, [pc, #344]	@ (800243c <LCD_Init+0x194>)
 80022e4:	4b57      	ldr	r3, [pc, #348]	@ (8002444 <LCD_Init+0x19c>)
 80022e6:	4313      	orrs	r3, r2
 80022e8:	604b      	str	r3, [r1, #4]
/**
  * Inicialización del LCD
  * https://web.alfredstate.edu/faculty/weimandn/lcd/lcd_initialization/lcd_initialization_index.html
  * Power ON
  */
	GPIOC->BSRR	 =	 LCD_RS_PIN_LOW;
 80022ea:	4b54      	ldr	r3, [pc, #336]	@ (800243c <LCD_Init+0x194>)
 80022ec:	f44f 0280 	mov.w	r2, #4194304	@ 0x400000
 80022f0:	611a      	str	r2, [r3, #16]
	GPIOC->BSRR	 =	 LCD_RW_PIN_LOW;
 80022f2:	4b52      	ldr	r3, [pc, #328]	@ (800243c <LCD_Init+0x194>)
 80022f4:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 80022f8:	611a      	str	r2, [r3, #16]
	GPIOC->BSRR	 =	 LCD_EN_PIN_LOW;
 80022fa:	4b50      	ldr	r3, [pc, #320]	@ (800243c <LCD_Init+0x194>)
 80022fc:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8002300:	611a      	str	r2, [r3, #16]
	GPIOC->BSRR	 =	 LCD_D4_PIN_LOW;
 8002302:	4b4e      	ldr	r3, [pc, #312]	@ (800243c <LCD_Init+0x194>)
 8002304:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8002308:	611a      	str	r2, [r3, #16]
	GPIOC->BSRR	 =	 LCD_D5_PIN_LOW;
 800230a:	4b4c      	ldr	r3, [pc, #304]	@ (800243c <LCD_Init+0x194>)
 800230c:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 8002310:	611a      	str	r2, [r3, #16]
	GPIOC->BSRR	 =	 LCD_D6_PIN_LOW;
 8002312:	4b4a      	ldr	r3, [pc, #296]	@ (800243c <LCD_Init+0x194>)
 8002314:	f04f 6200 	mov.w	r2, #134217728	@ 0x8000000
 8002318:	611a      	str	r2, [r3, #16]
	GPIOC->BSRR	 =	 LCD_D7_PIN_LOW;
 800231a:	4b48      	ldr	r3, [pc, #288]	@ (800243c <LCD_Init+0x194>)
 800231c:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8002320:	611a      	str	r2, [r3, #16]

	tim2_delay(TIM2_TIME_50MS);//  50ms
 8002322:	4849      	ldr	r0, [pc, #292]	@ (8002448 <LCD_Init+0x1a0>)
 8002324:	f000 ff66 	bl	80031f4 <tim2_delay>

	/* Special case of 'Function Set' 				*/
	GPIOC->BSRR	 =	 LCD_D4_PIN_HIGH;
 8002328:	4b44      	ldr	r3, [pc, #272]	@ (800243c <LCD_Init+0x194>)
 800232a:	f44f 7200 	mov.w	r2, #512	@ 0x200
 800232e:	611a      	str	r2, [r3, #16]
	GPIOC->BSRR	 =	 LCD_D5_PIN_HIGH;
 8002330:	4b42      	ldr	r3, [pc, #264]	@ (800243c <LCD_Init+0x194>)
 8002332:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 8002336:	611a      	str	r2, [r3, #16]
	GPIOC->BSRR	 =	 LCD_D6_PIN_LOW;
 8002338:	4b40      	ldr	r3, [pc, #256]	@ (800243c <LCD_Init+0x194>)
 800233a:	f04f 6200 	mov.w	r2, #134217728	@ 0x8000000
 800233e:	611a      	str	r2, [r3, #16]
	GPIOC->BSRR	 =	 LCD_D7_PIN_LOW;
 8002340:	4b3e      	ldr	r3, [pc, #248]	@ (800243c <LCD_Init+0x194>)
 8002342:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8002346:	611a      	str	r2, [r3, #16]
	LCD_Pulse_EN( );
 8002348:	f000 fa24 	bl	8002794 <LCD_Pulse_EN>
	tim2_delay(TIM2_TIME_5MS);//	5ms
 800234c:	483f      	ldr	r0, [pc, #252]	@ (800244c <LCD_Init+0x1a4>)
 800234e:	f000 ff51 	bl	80031f4 <tim2_delay>
	/* Special case of 'Function Set' 				*/
	GPIOC->BSRR	 =	 LCD_D4_PIN_HIGH;
 8002352:	4b3a      	ldr	r3, [pc, #232]	@ (800243c <LCD_Init+0x194>)
 8002354:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8002358:	611a      	str	r2, [r3, #16]
	GPIOC->BSRR	 =	 LCD_D5_PIN_HIGH;
 800235a:	4b38      	ldr	r3, [pc, #224]	@ (800243c <LCD_Init+0x194>)
 800235c:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 8002360:	611a      	str	r2, [r3, #16]
	GPIOC->BSRR	 =	 LCD_D6_PIN_LOW;
 8002362:	4b36      	ldr	r3, [pc, #216]	@ (800243c <LCD_Init+0x194>)
 8002364:	f04f 6200 	mov.w	r2, #134217728	@ 0x8000000
 8002368:	611a      	str	r2, [r3, #16]
	GPIOC->BSRR	 =	 LCD_D7_PIN_LOW;
 800236a:	4b34      	ldr	r3, [pc, #208]	@ (800243c <LCD_Init+0x194>)
 800236c:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8002370:	611a      	str	r2, [r3, #16]
	LCD_Pulse_EN( );
 8002372:	f000 fa0f 	bl	8002794 <LCD_Pulse_EN>
	tim2_delay(TIM2_TIME_100uS);//	100us
 8002376:	4836      	ldr	r0, [pc, #216]	@ (8002450 <LCD_Init+0x1a8>)
 8002378:	f000 ff3c 	bl	80031f4 <tim2_delay>
	/* Special case of 'Function Set' 				*/
	GPIOC->BSRR	 =	 LCD_D4_PIN_HIGH;
 800237c:	4b2f      	ldr	r3, [pc, #188]	@ (800243c <LCD_Init+0x194>)
 800237e:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8002382:	611a      	str	r2, [r3, #16]
	GPIOC->BSRR	 =	 LCD_D5_PIN_HIGH;
 8002384:	4b2d      	ldr	r3, [pc, #180]	@ (800243c <LCD_Init+0x194>)
 8002386:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 800238a:	611a      	str	r2, [r3, #16]
	GPIOC->BSRR	 =	 LCD_D6_PIN_LOW;
 800238c:	4b2b      	ldr	r3, [pc, #172]	@ (800243c <LCD_Init+0x194>)
 800238e:	f04f 6200 	mov.w	r2, #134217728	@ 0x8000000
 8002392:	611a      	str	r2, [r3, #16]
	GPIOC->BSRR	 =	 LCD_D7_PIN_LOW;
 8002394:	4b29      	ldr	r3, [pc, #164]	@ (800243c <LCD_Init+0x194>)
 8002396:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800239a:	611a      	str	r2, [r3, #16]
	LCD_Pulse_EN( );
 800239c:	f000 f9fa 	bl	8002794 <LCD_Pulse_EN>
	while( LCD_Busy( ) );//						checking the busy flag
 80023a0:	bf00      	nop
 80023a2:	f000 f9a3 	bl	80026ec <LCD_Busy>
 80023a6:	4603      	mov	r3, r0
 80023a8:	2b00      	cmp	r3, #0
 80023aa:	d1fa      	bne.n	80023a2 <LCD_Init+0xfa>
	/* Initial 'Function Set' to change 4-bit mode 			*/
	GPIOC->BSRR	 =	 LCD_D4_PIN_LOW;
 80023ac:	4b23      	ldr	r3, [pc, #140]	@ (800243c <LCD_Init+0x194>)
 80023ae:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 80023b2:	611a      	str	r2, [r3, #16]
	GPIOC->BSRR	 =	 LCD_D5_PIN_HIGH;
 80023b4:	4b21      	ldr	r3, [pc, #132]	@ (800243c <LCD_Init+0x194>)
 80023b6:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 80023ba:	611a      	str	r2, [r3, #16]
	GPIOC->BSRR	 =	 LCD_D6_PIN_LOW;
 80023bc:	4b1f      	ldr	r3, [pc, #124]	@ (800243c <LCD_Init+0x194>)
 80023be:	f04f 6200 	mov.w	r2, #134217728	@ 0x8000000
 80023c2:	611a      	str	r2, [r3, #16]
	GPIOC->BSRR	 =	 LCD_D7_PIN_LOW;
 80023c4:	4b1d      	ldr	r3, [pc, #116]	@ (800243c <LCD_Init+0x194>)
 80023c6:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80023ca:	611a      	str	r2, [r3, #16]
	LCD_Pulse_EN( );
 80023cc:	f000 f9e2 	bl	8002794 <LCD_Pulse_EN>
	while( LCD_Busy( ) );//						checking the busy flag
 80023d0:	bf00      	nop
 80023d2:	f000 f98b 	bl	80026ec <LCD_Busy>
 80023d6:	4603      	mov	r3, r0
 80023d8:	2b00      	cmp	r3, #0
 80023da:	d1fa      	bne.n	80023d2 <LCD_Init+0x12a>
	/* 'Function Set' (I=1, N and F as required)			*/
	LCD_Write_Cmd( 0x28U );//					2-line display, 5x7 dot
 80023dc:	2028      	movs	r0, #40	@ 0x28
 80023de:	f000 f8a1 	bl	8002524 <LCD_Write_Cmd>
	/* 'Display ON/OFF Control' (D=0, C=0, B=0)			*/
	LCD_Write_Cmd( 0x08U );//					display, cursor and blinking off
 80023e2:	2008      	movs	r0, #8
 80023e4:	f000 f89e 	bl	8002524 <LCD_Write_Cmd>
	/* 'Clear Display'						*/
	LCD_Write_Cmd( 0x01U );//
 80023e8:	2001      	movs	r0, #1
 80023ea:	f000 f89b 	bl	8002524 <LCD_Write_Cmd>
	/* 'Entry Mode Set' (I/D and S as required)			*/
	LCD_Write_Cmd( 0x06U );//					cursor increment by 1, shift off
 80023ee:	2006      	movs	r0, #6
 80023f0:	f000 f898 	bl	8002524 <LCD_Write_Cmd>
	/* Initialization Ends						*/
	LCD_Write_Cmd( 0x0FU );//					display, cursor and blinking on
 80023f4:	200f      	movs	r0, #15
 80023f6:	f000 f895 	bl	8002524 <LCD_Write_Cmd>

	//Cargamos el caracter definido por el usuario en la CGRAM
	LCD_Write_Cmd( 0x40 );//					establece la direccion CGRAM desde 0
 80023fa:	2040      	movs	r0, #64	@ 0x40
 80023fc:	f000 f892 	bl	8002524 <LCD_Write_Cmd>
	p = &UserFont[0][0];
 8002400:	4b14      	ldr	r3, [pc, #80]	@ (8002454 <LCD_Init+0x1ac>)
 8002402:	607b      	str	r3, [r7, #4]

	for( int i = 0; i < sizeof( UserFont ); i++, p++ )
 8002404:	2300      	movs	r3, #0
 8002406:	603b      	str	r3, [r7, #0]
 8002408:	e00c      	b.n	8002424 <LCD_Init+0x17c>
		LCD_Put_Char( *p );
 800240a:	687b      	ldr	r3, [r7, #4]
 800240c:	f993 3000 	ldrsb.w	r3, [r3]
 8002410:	b2db      	uxtb	r3, r3
 8002412:	4618      	mov	r0, r3
 8002414:	f000 f89a 	bl	800254c <LCD_Put_Char>
	for( int i = 0; i < sizeof( UserFont ); i++, p++ )
 8002418:	683b      	ldr	r3, [r7, #0]
 800241a:	3301      	adds	r3, #1
 800241c:	603b      	str	r3, [r7, #0]
 800241e:	687b      	ldr	r3, [r7, #4]
 8002420:	3301      	adds	r3, #1
 8002422:	607b      	str	r3, [r7, #4]
 8002424:	683b      	ldr	r3, [r7, #0]
 8002426:	2b3f      	cmp	r3, #63	@ 0x3f
 8002428:	d9ef      	bls.n	800240a <LCD_Init+0x162>

	/*	Set DDRAM address in address			*/
	LCD_Write_Cmd( 0x80 );//
 800242a:	2080      	movs	r0, #128	@ 0x80
 800242c:	f000 f87a 	bl	8002524 <LCD_Write_Cmd>
}
 8002430:	bf00      	nop
 8002432:	3708      	adds	r7, #8
 8002434:	46bd      	mov	sp, r7
 8002436:	bd80      	pop	{r7, pc}
 8002438:	40021000 	.word	0x40021000
 800243c:	40011000 	.word	0x40011000
 8002440:	fff11111 	.word	0xfff11111
 8002444:	00011111 	.word	0x00011111
 8002448:	3d4ccccd 	.word	0x3d4ccccd
 800244c:	3ba3d70a 	.word	0x3ba3d70a
 8002450:	38d1b717 	.word	0x38d1b717
 8002454:	080093f0 	.word	0x080093f0

08002458 <LCD_Out_Data4>:

//Funcion que genera un strobe en el LCD
void LCD_Out_Data4(uint8_t val){
 8002458:	b480      	push	{r7}
 800245a:	b083      	sub	sp, #12
 800245c:	af00      	add	r7, sp, #0
 800245e:	4603      	mov	r3, r0
 8002460:	71fb      	strb	r3, [r7, #7]
	if( ( val & 0x01U ) == 0x01U )//				Bit[0]
 8002462:	79fb      	ldrb	r3, [r7, #7]
 8002464:	f003 0301 	and.w	r3, r3, #1
 8002468:	2b00      	cmp	r3, #0
 800246a:	d004      	beq.n	8002476 <LCD_Out_Data4+0x1e>
		GPIOC->BSRR	=	LCD_D4_PIN_HIGH;
 800246c:	4b1b      	ldr	r3, [pc, #108]	@ (80024dc <LCD_Out_Data4+0x84>)
 800246e:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8002472:	611a      	str	r2, [r3, #16]
 8002474:	e003      	b.n	800247e <LCD_Out_Data4+0x26>
	else
		GPIOC->BSRR	=	LCD_D4_PIN_LOW;
 8002476:	4b19      	ldr	r3, [pc, #100]	@ (80024dc <LCD_Out_Data4+0x84>)
 8002478:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 800247c:	611a      	str	r2, [r3, #16]

	if( ( val & 0x02U ) == 0x02U )//				Bit[1]
 800247e:	79fb      	ldrb	r3, [r7, #7]
 8002480:	f003 0302 	and.w	r3, r3, #2
 8002484:	2b00      	cmp	r3, #0
 8002486:	d004      	beq.n	8002492 <LCD_Out_Data4+0x3a>
		GPIOC->BSRR	=	LCD_D5_PIN_HIGH;
 8002488:	4b14      	ldr	r3, [pc, #80]	@ (80024dc <LCD_Out_Data4+0x84>)
 800248a:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 800248e:	611a      	str	r2, [r3, #16]
 8002490:	e003      	b.n	800249a <LCD_Out_Data4+0x42>
	else
		GPIOC->BSRR	=	LCD_D5_PIN_LOW;
 8002492:	4b12      	ldr	r3, [pc, #72]	@ (80024dc <LCD_Out_Data4+0x84>)
 8002494:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 8002498:	611a      	str	r2, [r3, #16]

	if( ( val & 0x04U ) == 0x04U )//				Bit[2]
 800249a:	79fb      	ldrb	r3, [r7, #7]
 800249c:	f003 0304 	and.w	r3, r3, #4
 80024a0:	2b00      	cmp	r3, #0
 80024a2:	d004      	beq.n	80024ae <LCD_Out_Data4+0x56>
		GPIOC->BSRR	=	LCD_D6_PIN_HIGH;
 80024a4:	4b0d      	ldr	r3, [pc, #52]	@ (80024dc <LCD_Out_Data4+0x84>)
 80024a6:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 80024aa:	611a      	str	r2, [r3, #16]
 80024ac:	e003      	b.n	80024b6 <LCD_Out_Data4+0x5e>
	else
		GPIOC->BSRR	=	LCD_D6_PIN_LOW;
 80024ae:	4b0b      	ldr	r3, [pc, #44]	@ (80024dc <LCD_Out_Data4+0x84>)
 80024b0:	f04f 6200 	mov.w	r2, #134217728	@ 0x8000000
 80024b4:	611a      	str	r2, [r3, #16]

	if( ( val & 0x08U ) == 0x08U )//				Bit[3]
 80024b6:	79fb      	ldrb	r3, [r7, #7]
 80024b8:	f003 0308 	and.w	r3, r3, #8
 80024bc:	2b00      	cmp	r3, #0
 80024be:	d004      	beq.n	80024ca <LCD_Out_Data4+0x72>
		GPIOC->BSRR	=	LCD_D7_PIN_HIGH;
 80024c0:	4b06      	ldr	r3, [pc, #24]	@ (80024dc <LCD_Out_Data4+0x84>)
 80024c2:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
 80024c6:	611a      	str	r2, [r3, #16]
	else
		GPIOC->BSRR	=	LCD_D7_PIN_LOW;
}
 80024c8:	e003      	b.n	80024d2 <LCD_Out_Data4+0x7a>
		GPIOC->BSRR	=	LCD_D7_PIN_LOW;
 80024ca:	4b04      	ldr	r3, [pc, #16]	@ (80024dc <LCD_Out_Data4+0x84>)
 80024cc:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80024d0:	611a      	str	r2, [r3, #16]
}
 80024d2:	bf00      	nop
 80024d4:	370c      	adds	r7, #12
 80024d6:	46bd      	mov	sp, r7
 80024d8:	bc80      	pop	{r7}
 80024da:	4770      	bx	lr
 80024dc:	40011000 	.word	0x40011000

080024e0 <LCD_Write_Byte>:

//Funcion que escribe 1 byte de datos en el LCD
void LCD_Write_Byte(uint8_t val){
 80024e0:	b580      	push	{r7, lr}
 80024e2:	b082      	sub	sp, #8
 80024e4:	af00      	add	r7, sp, #0
 80024e6:	4603      	mov	r3, r0
 80024e8:	71fb      	strb	r3, [r7, #7]
	LCD_Out_Data4( ( val >> 4 ) & 0x0FU );
 80024ea:	79fb      	ldrb	r3, [r7, #7]
 80024ec:	091b      	lsrs	r3, r3, #4
 80024ee:	b2db      	uxtb	r3, r3
 80024f0:	4618      	mov	r0, r3
 80024f2:	f7ff ffb1 	bl	8002458 <LCD_Out_Data4>
	LCD_Pulse_EN( );
 80024f6:	f000 f94d 	bl	8002794 <LCD_Pulse_EN>
	LCD_Out_Data4( val & 0x0FU );
 80024fa:	79fb      	ldrb	r3, [r7, #7]
 80024fc:	f003 030f 	and.w	r3, r3, #15
 8002500:	b2db      	uxtb	r3, r3
 8002502:	4618      	mov	r0, r3
 8002504:	f7ff ffa8 	bl	8002458 <LCD_Out_Data4>
	LCD_Pulse_EN( );
 8002508:	f000 f944 	bl	8002794 <LCD_Pulse_EN>
	while( LCD_Busy( ) );
 800250c:	bf00      	nop
 800250e:	f000 f8ed 	bl	80026ec <LCD_Busy>
 8002512:	4603      	mov	r3, r0
 8002514:	2b00      	cmp	r3, #0
 8002516:	d1fa      	bne.n	800250e <LCD_Write_Byte+0x2e>
}
 8002518:	bf00      	nop
 800251a:	bf00      	nop
 800251c:	3708      	adds	r7, #8
 800251e:	46bd      	mov	sp, r7
 8002520:	bd80      	pop	{r7, pc}
	...

08002524 <LCD_Write_Cmd>:

//Funcion que escribe un comando en el LCD
void LCD_Write_Cmd(uint8_t val){
 8002524:	b580      	push	{r7, lr}
 8002526:	b082      	sub	sp, #8
 8002528:	af00      	add	r7, sp, #0
 800252a:	4603      	mov	r3, r0
 800252c:	71fb      	strb	r3, [r7, #7]
	GPIOC->BSRR	=	LCD_RS_PIN_LOW;//			RS=0 (seleccion de comando)
 800252e:	4b06      	ldr	r3, [pc, #24]	@ (8002548 <LCD_Write_Cmd+0x24>)
 8002530:	f44f 0280 	mov.w	r2, #4194304	@ 0x400000
 8002534:	611a      	str	r2, [r3, #16]
	LCD_Write_Byte( val );
 8002536:	79fb      	ldrb	r3, [r7, #7]
 8002538:	4618      	mov	r0, r3
 800253a:	f7ff ffd1 	bl	80024e0 <LCD_Write_Byte>
}
 800253e:	bf00      	nop
 8002540:	3708      	adds	r7, #8
 8002542:	46bd      	mov	sp, r7
 8002544:	bd80      	pop	{r7, pc}
 8002546:	bf00      	nop
 8002548:	40011000 	.word	0x40011000

0800254c <LCD_Put_Char>:

//Escribe un caracter ASCII en el LCD
void LCD_Put_Char(uint8_t c){
 800254c:	b580      	push	{r7, lr}
 800254e:	b082      	sub	sp, #8
 8002550:	af00      	add	r7, sp, #0
 8002552:	4603      	mov	r3, r0
 8002554:	71fb      	strb	r3, [r7, #7]
	GPIOC->BSRR	=	LCD_RS_PIN_HIGH;//			RS=1 (seleccion de caracteres)
 8002556:	4b05      	ldr	r3, [pc, #20]	@ (800256c <LCD_Put_Char+0x20>)
 8002558:	2240      	movs	r2, #64	@ 0x40
 800255a:	611a      	str	r2, [r3, #16]
	LCD_Write_Byte( c );
 800255c:	79fb      	ldrb	r3, [r7, #7]
 800255e:	4618      	mov	r0, r3
 8002560:	f7ff ffbe 	bl	80024e0 <LCD_Write_Byte>
}
 8002564:	bf00      	nop
 8002566:	3708      	adds	r7, #8
 8002568:	46bd      	mov	sp, r7
 800256a:	bd80      	pop	{r7, pc}
 800256c:	40011000 	.word	0x40011000

08002570 <LCD_Set_Cursor>:

//Funcion que establece el cursor en una posicion de la pantalla del LCD
//Minimum values for line and column must be 1
void LCD_Set_Cursor(uint8_t line, uint8_t column){
 8002570:	b580      	push	{r7, lr}
 8002572:	b084      	sub	sp, #16
 8002574:	af00      	add	r7, sp, #0
 8002576:	4603      	mov	r3, r0
 8002578:	460a      	mov	r2, r1
 800257a:	71fb      	strb	r3, [r7, #7]
 800257c:	4613      	mov	r3, r2
 800257e:	71bb      	strb	r3, [r7, #6]
	uint8_t address;
	column--;
 8002580:	79bb      	ldrb	r3, [r7, #6]
 8002582:	3b01      	subs	r3, #1
 8002584:	71bb      	strb	r3, [r7, #6]
	line--;
 8002586:	79fb      	ldrb	r3, [r7, #7]
 8002588:	3b01      	subs	r3, #1
 800258a:	71fb      	strb	r3, [r7, #7]
	address = ( line * 0x40U ) + column;
 800258c:	79fb      	ldrb	r3, [r7, #7]
 800258e:	019b      	lsls	r3, r3, #6
 8002590:	b2da      	uxtb	r2, r3
 8002592:	79bb      	ldrb	r3, [r7, #6]
 8002594:	4413      	add	r3, r2
 8002596:	73fb      	strb	r3, [r7, #15]
	address = 0x80U + ( address & 0x7FU );
 8002598:	7bfb      	ldrb	r3, [r7, #15]
 800259a:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 800259e:	b2db      	uxtb	r3, r3
 80025a0:	3b80      	subs	r3, #128	@ 0x80
 80025a2:	73fb      	strb	r3, [r7, #15]
	LCD_Write_Cmd( address );
 80025a4:	7bfb      	ldrb	r3, [r7, #15]
 80025a6:	4618      	mov	r0, r3
 80025a8:	f7ff ffbc 	bl	8002524 <LCD_Write_Cmd>
}
 80025ac:	bf00      	nop
 80025ae:	3710      	adds	r7, #16
 80025b0:	46bd      	mov	sp, r7
 80025b2:	bd80      	pop	{r7, pc}

080025b4 <LCD_Put_Str>:

//Funcion que envia una cadena de caracteres ASCII al LCD
void LCD_Put_Str(char * str){
 80025b4:	b580      	push	{r7, lr}
 80025b6:	b084      	sub	sp, #16
 80025b8:	af00      	add	r7, sp, #0
 80025ba:	6078      	str	r0, [r7, #4]
	for( int16_t i = 0; i < 16 && str[ i ] != 0; i++ )
 80025bc:	2300      	movs	r3, #0
 80025be:	81fb      	strh	r3, [r7, #14]
 80025c0:	e00d      	b.n	80025de <LCD_Put_Str+0x2a>
		LCD_Put_Char( str[ i ] );//				envia 1 byte al LCD
 80025c2:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 80025c6:	687a      	ldr	r2, [r7, #4]
 80025c8:	4413      	add	r3, r2
 80025ca:	781b      	ldrb	r3, [r3, #0]
 80025cc:	4618      	mov	r0, r3
 80025ce:	f7ff ffbd 	bl	800254c <LCD_Put_Char>
	for( int16_t i = 0; i < 16 && str[ i ] != 0; i++ )
 80025d2:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 80025d6:	b29b      	uxth	r3, r3
 80025d8:	3301      	adds	r3, #1
 80025da:	b29b      	uxth	r3, r3
 80025dc:	81fb      	strh	r3, [r7, #14]
 80025de:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 80025e2:	2b0f      	cmp	r3, #15
 80025e4:	dc06      	bgt.n	80025f4 <LCD_Put_Str+0x40>
 80025e6:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 80025ea:	687a      	ldr	r2, [r7, #4]
 80025ec:	4413      	add	r3, r2
 80025ee:	781b      	ldrb	r3, [r3, #0]
 80025f0:	2b00      	cmp	r3, #0
 80025f2:	d1e6      	bne.n	80025c2 <LCD_Put_Str+0xe>
}
 80025f4:	bf00      	nop
 80025f6:	3710      	adds	r7, #16
 80025f8:	46bd      	mov	sp, r7
 80025fa:	bd80      	pop	{r7, pc}

080025fc <LCD_Put_Num>:

//Funcion que envia un caracter numerico al LCD
//El número debe ser entero y de 5 dígitos máximo
void LCD_Put_Num(int16_t num){
 80025fc:	b580      	push	{r7, lr}
 80025fe:	b086      	sub	sp, #24
 8002600:	af00      	add	r7, sp, #0
 8002602:	4603      	mov	r3, r0
 8002604:	80fb      	strh	r3, [r7, #6]
	int16_t p;
	int16_t f = 0;
 8002606:	2300      	movs	r3, #0
 8002608:	82bb      	strh	r3, [r7, #20]
	int8_t ch[ 5 ];

	for( int16_t i = 0; i < 5; i++ ){
 800260a:	2300      	movs	r3, #0
 800260c:	827b      	strh	r3, [r7, #18]
 800260e:	e064      	b.n	80026da <LCD_Put_Num+0xde>
		p = 1;
 8002610:	2301      	movs	r3, #1
 8002612:	82fb      	strh	r3, [r7, #22]
		for( int16_t j = 4 - i; j > 0; j-- )
 8002614:	8a7b      	ldrh	r3, [r7, #18]
 8002616:	f1c3 0304 	rsb	r3, r3, #4
 800261a:	b29b      	uxth	r3, r3
 800261c:	823b      	strh	r3, [r7, #16]
 800261e:	e00c      	b.n	800263a <LCD_Put_Num+0x3e>
			p = p * 10;
 8002620:	8afb      	ldrh	r3, [r7, #22]
 8002622:	461a      	mov	r2, r3
 8002624:	0092      	lsls	r2, r2, #2
 8002626:	4413      	add	r3, r2
 8002628:	005b      	lsls	r3, r3, #1
 800262a:	b29b      	uxth	r3, r3
 800262c:	82fb      	strh	r3, [r7, #22]
		for( int16_t j = 4 - i; j > 0; j-- )
 800262e:	f9b7 3010 	ldrsh.w	r3, [r7, #16]
 8002632:	b29b      	uxth	r3, r3
 8002634:	3b01      	subs	r3, #1
 8002636:	b29b      	uxth	r3, r3
 8002638:	823b      	strh	r3, [r7, #16]
 800263a:	f9b7 3010 	ldrsh.w	r3, [r7, #16]
 800263e:	2b00      	cmp	r3, #0
 8002640:	dcee      	bgt.n	8002620 <LCD_Put_Num+0x24>
		ch[ i ] = ( num / p );
 8002642:	f9b7 2006 	ldrsh.w	r2, [r7, #6]
 8002646:	f9b7 3016 	ldrsh.w	r3, [r7, #22]
 800264a:	fb92 f2f3 	sdiv	r2, r2, r3
 800264e:	f9b7 3012 	ldrsh.w	r3, [r7, #18]
 8002652:	b252      	sxtb	r2, r2
 8002654:	3318      	adds	r3, #24
 8002656:	443b      	add	r3, r7
 8002658:	f803 2c10 	strb.w	r2, [r3, #-16]
		if( num >= p && !f )
 800265c:	f9b7 2006 	ldrsh.w	r2, [r7, #6]
 8002660:	f9b7 3016 	ldrsh.w	r3, [r7, #22]
 8002664:	429a      	cmp	r2, r3
 8002666:	db05      	blt.n	8002674 <LCD_Put_Num+0x78>
 8002668:	f9b7 3014 	ldrsh.w	r3, [r7, #20]
 800266c:	2b00      	cmp	r3, #0
 800266e:	d101      	bne.n	8002674 <LCD_Put_Num+0x78>
			f = 1;
 8002670:	2301      	movs	r3, #1
 8002672:	82bb      	strh	r3, [r7, #20]
		num = num - ch[ i ] * p;
 8002674:	88fa      	ldrh	r2, [r7, #6]
 8002676:	f9b7 3012 	ldrsh.w	r3, [r7, #18]
 800267a:	3318      	adds	r3, #24
 800267c:	443b      	add	r3, r7
 800267e:	f913 3c10 	ldrsb.w	r3, [r3, #-16]
 8002682:	b29b      	uxth	r3, r3
 8002684:	8af9      	ldrh	r1, [r7, #22]
 8002686:	fb01 f303 	mul.w	r3, r1, r3
 800268a:	b29b      	uxth	r3, r3
 800268c:	1ad3      	subs	r3, r2, r3
 800268e:	b29b      	uxth	r3, r3
 8002690:	80fb      	strh	r3, [r7, #6]
		ch[ i ] = ch[ i ] + 48;
 8002692:	f9b7 3012 	ldrsh.w	r3, [r7, #18]
 8002696:	3318      	adds	r3, #24
 8002698:	443b      	add	r3, r7
 800269a:	f913 3c10 	ldrsb.w	r3, [r3, #-16]
 800269e:	b2db      	uxtb	r3, r3
 80026a0:	3330      	adds	r3, #48	@ 0x30
 80026a2:	b2da      	uxtb	r2, r3
 80026a4:	f9b7 3012 	ldrsh.w	r3, [r7, #18]
 80026a8:	b252      	sxtb	r2, r2
 80026aa:	3318      	adds	r3, #24
 80026ac:	443b      	add	r3, r7
 80026ae:	f803 2c10 	strb.w	r2, [r3, #-16]
		if( f )
 80026b2:	f9b7 3014 	ldrsh.w	r3, [r7, #20]
 80026b6:	2b00      	cmp	r3, #0
 80026b8:	d009      	beq.n	80026ce <LCD_Put_Num+0xd2>
			LCD_Put_Char( ch[ i ] );
 80026ba:	f9b7 3012 	ldrsh.w	r3, [r7, #18]
 80026be:	3318      	adds	r3, #24
 80026c0:	443b      	add	r3, r7
 80026c2:	f913 3c10 	ldrsb.w	r3, [r3, #-16]
 80026c6:	b2db      	uxtb	r3, r3
 80026c8:	4618      	mov	r0, r3
 80026ca:	f7ff ff3f 	bl	800254c <LCD_Put_Char>
	for( int16_t i = 0; i < 5; i++ ){
 80026ce:	f9b7 3012 	ldrsh.w	r3, [r7, #18]
 80026d2:	b29b      	uxth	r3, r3
 80026d4:	3301      	adds	r3, #1
 80026d6:	b29b      	uxth	r3, r3
 80026d8:	827b      	strh	r3, [r7, #18]
 80026da:	f9b7 3012 	ldrsh.w	r3, [r7, #18]
 80026de:	2b04      	cmp	r3, #4
 80026e0:	dd96      	ble.n	8002610 <LCD_Put_Num+0x14>
	}
}
 80026e2:	bf00      	nop
 80026e4:	bf00      	nop
 80026e6:	3718      	adds	r7, #24
 80026e8:	46bd      	mov	sp, r7
 80026ea:	bd80      	pop	{r7, pc}

080026ec <LCD_Busy>:

//Funcion que provoca tiempos de espera en el LCD
char LCD_Busy(void){
 80026ec:	b580      	push	{r7, lr}
 80026ee:	af00      	add	r7, sp, #0
/**
  * Configuracion de D7 as input floating
  */
	GPIOC->CRH	&=	~( 0x2UL << 18U ) & ~( 0x3UL << 16U );
 80026f0:	4b26      	ldr	r3, [pc, #152]	@ (800278c <LCD_Busy+0xa0>)
 80026f2:	685b      	ldr	r3, [r3, #4]
 80026f4:	4a25      	ldr	r2, [pc, #148]	@ (800278c <LCD_Busy+0xa0>)
 80026f6:	f423 2330 	bic.w	r3, r3, #720896	@ 0xb0000
 80026fa:	6053      	str	r3, [r2, #4]
	GPIOC->CRH	|=   	 ( 0x1UL << 18U );
 80026fc:	4b23      	ldr	r3, [pc, #140]	@ (800278c <LCD_Busy+0xa0>)
 80026fe:	685b      	ldr	r3, [r3, #4]
 8002700:	4a22      	ldr	r2, [pc, #136]	@ (800278c <LCD_Busy+0xa0>)
 8002702:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8002706:	6053      	str	r3, [r2, #4]
	GPIOC->BSRR	 =	 LCD_RS_PIN_LOW;
 8002708:	4b20      	ldr	r3, [pc, #128]	@ (800278c <LCD_Busy+0xa0>)
 800270a:	f44f 0280 	mov.w	r2, #4194304	@ 0x400000
 800270e:	611a      	str	r2, [r3, #16]
	GPIOC->BSRR	 =	 LCD_RW_PIN_HIGH;
 8002710:	4b1e      	ldr	r3, [pc, #120]	@ (800278c <LCD_Busy+0xa0>)
 8002712:	2280      	movs	r2, #128	@ 0x80
 8002714:	611a      	str	r2, [r3, #16]
	GPIOC->BSRR	 =	 LCD_EN_PIN_HIGH;
 8002716:	4b1d      	ldr	r3, [pc, #116]	@ (800278c <LCD_Busy+0xa0>)
 8002718:	f44f 7280 	mov.w	r2, #256	@ 0x100
 800271c:	611a      	str	r2, [r3, #16]
	tim2_delay(TIM2_TIME_100uS) ;//	100us
 800271e:	481c      	ldr	r0, [pc, #112]	@ (8002790 <LCD_Busy+0xa4>)
 8002720:	f000 fd68 	bl	80031f4 <tim2_delay>
	if(( GPIOC->IDR	& LCD_D7_PIN_HIGH )) {//			if D7 is set, then
 8002724:	4b19      	ldr	r3, [pc, #100]	@ (800278c <LCD_Busy+0xa0>)
 8002726:	689b      	ldr	r3, [r3, #8]
 8002728:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 800272c:	2b00      	cmp	r3, #0
 800272e:	d015      	beq.n	800275c <LCD_Busy+0x70>
		GPIOC->BSRR	= 	LCD_EN_PIN_LOW;
 8002730:	4b16      	ldr	r3, [pc, #88]	@ (800278c <LCD_Busy+0xa0>)
 8002732:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8002736:	611a      	str	r2, [r3, #16]
		GPIOC->BSRR	=	LCD_RW_PIN_LOW;
 8002738:	4b14      	ldr	r3, [pc, #80]	@ (800278c <LCD_Busy+0xa0>)
 800273a:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 800273e:	611a      	str	r2, [r3, #16]
/**
  * Configuracion de D7 as output push-pull, 10 MHz speed
  */
		GPIOC->CRH	&=	~( 0x3UL << 18U ) & ~( 0x2UL << 16U );
 8002740:	4b12      	ldr	r3, [pc, #72]	@ (800278c <LCD_Busy+0xa0>)
 8002742:	685b      	ldr	r3, [r3, #4]
 8002744:	4a11      	ldr	r2, [pc, #68]	@ (800278c <LCD_Busy+0xa0>)
 8002746:	f423 2360 	bic.w	r3, r3, #917504	@ 0xe0000
 800274a:	6053      	str	r3, [r2, #4]
		GPIOC->CRH	|=   	 ( 0x1UL << 16U );
 800274c:	4b0f      	ldr	r3, [pc, #60]	@ (800278c <LCD_Busy+0xa0>)
 800274e:	685b      	ldr	r3, [r3, #4]
 8002750:	4a0e      	ldr	r2, [pc, #56]	@ (800278c <LCD_Busy+0xa0>)
 8002752:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8002756:	6053      	str	r3, [r2, #4]
		return 1;
 8002758:	2301      	movs	r3, #1
 800275a:	e014      	b.n	8002786 <LCD_Busy+0x9a>
	} else {
		GPIOC->BSRR	= 	LCD_EN_PIN_LOW;
 800275c:	4b0b      	ldr	r3, [pc, #44]	@ (800278c <LCD_Busy+0xa0>)
 800275e:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8002762:	611a      	str	r2, [r3, #16]
		GPIOC->BSRR	=	LCD_RW_PIN_LOW;
 8002764:	4b09      	ldr	r3, [pc, #36]	@ (800278c <LCD_Busy+0xa0>)
 8002766:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 800276a:	611a      	str	r2, [r3, #16]
/**
  * Configuracion de D7 as output push-pull, 10 MHz speed
  */
		GPIOC->CRH	&=	~( 0x3UL << 18U ) & ~( 0x2UL << 16U );
 800276c:	4b07      	ldr	r3, [pc, #28]	@ (800278c <LCD_Busy+0xa0>)
 800276e:	685b      	ldr	r3, [r3, #4]
 8002770:	4a06      	ldr	r2, [pc, #24]	@ (800278c <LCD_Busy+0xa0>)
 8002772:	f423 2360 	bic.w	r3, r3, #917504	@ 0xe0000
 8002776:	6053      	str	r3, [r2, #4]
		GPIOC->CRH	|=   	 ( 0x1UL << 16U );
 8002778:	4b04      	ldr	r3, [pc, #16]	@ (800278c <LCD_Busy+0xa0>)
 800277a:	685b      	ldr	r3, [r3, #4]
 800277c:	4a03      	ldr	r2, [pc, #12]	@ (800278c <LCD_Busy+0xa0>)
 800277e:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8002782:	6053      	str	r3, [r2, #4]
		return 0;
 8002784:	2300      	movs	r3, #0
	}
}
 8002786:	4618      	mov	r0, r3
 8002788:	bd80      	pop	{r7, pc}
 800278a:	bf00      	nop
 800278c:	40011000 	.word	0x40011000
 8002790:	38d1b717 	.word	0x38d1b717

08002794 <LCD_Pulse_EN>:

//Funcion que genera un pulso en el pin EN del LCD
void LCD_Pulse_EN(void){
 8002794:	b580      	push	{r7, lr}
 8002796:	af00      	add	r7, sp, #0
	GPIOC->BSRR	=	LCD_EN_PIN_LOW;//
 8002798:	4b0b      	ldr	r3, [pc, #44]	@ (80027c8 <LCD_Pulse_EN+0x34>)
 800279a:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 800279e:	611a      	str	r2, [r3, #16]
	tim2_delay(TIM2_TIME_10uS) ;//	10us
 80027a0:	480a      	ldr	r0, [pc, #40]	@ (80027cc <LCD_Pulse_EN+0x38>)
 80027a2:	f000 fd27 	bl	80031f4 <tim2_delay>
	GPIOC->BSRR	=	LCD_EN_PIN_HIGH;//			habilita pin EN ON
 80027a6:	4b08      	ldr	r3, [pc, #32]	@ (80027c8 <LCD_Pulse_EN+0x34>)
 80027a8:	f44f 7280 	mov.w	r2, #256	@ 0x100
 80027ac:	611a      	str	r2, [r3, #16]
	tim2_delay(TIM2_TIME_10uS) ;//	10us
 80027ae:	4807      	ldr	r0, [pc, #28]	@ (80027cc <LCD_Pulse_EN+0x38>)
 80027b0:	f000 fd20 	bl	80031f4 <tim2_delay>
	GPIOC->BSRR	=	LCD_EN_PIN_LOW;//			habilita pin EN OFF
 80027b4:	4b04      	ldr	r3, [pc, #16]	@ (80027c8 <LCD_Pulse_EN+0x34>)
 80027b6:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 80027ba:	611a      	str	r2, [r3, #16]
	tim2_delay(TIM2_TIME_1MS) ;//	1ms
 80027bc:	4804      	ldr	r0, [pc, #16]	@ (80027d0 <LCD_Pulse_EN+0x3c>)
 80027be:	f000 fd19 	bl	80031f4 <tim2_delay>
}
 80027c2:	bf00      	nop
 80027c4:	bd80      	pop	{r7, pc}
 80027c6:	bf00      	nop
 80027c8:	40011000 	.word	0x40011000
 80027cc:	3727c5ac 	.word	0x3727c5ac
 80027d0:	3a83126f 	.word	0x3a83126f

080027d4 <main>:

void turnOnLED(uint16_t);
void turnOffLED(uint16_t);

int main(void)
{
 80027d4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80027d6:	b08b      	sub	sp, #44	@ 0x2c
 80027d8:	af06      	add	r7, sp, #24
	USER_RCC_Init();
 80027da:	f000 f8ed 	bl	80029b8 <USER_RCC_Init>
	USER_GPIO_Init();
 80027de:	f000 f9a1 	bl	8002b24 <USER_GPIO_Init>
  	USER_USART1_Init();
 80027e2:	f000 fd7d 	bl	80032e0 <USER_USART1_Init>
  	USE_ADC1_MODULE();
 80027e6:	f000 f981 	bl	8002aec <USE_ADC1_MODULE>
	EngTrModel_initialize();
 80027ea:	f7ff fbbb 	bl	8001f64 <EngTrModel_initialize>

	LCD_Init();
 80027ee:	f7ff fd5b 	bl	80022a8 <LCD_Init>

	uint16_t readValue = 0;
 80027f2:	2300      	movs	r3, #0
 80027f4:	80fb      	strh	r3, [r7, #6]
	int ThrottleValue = 0;
 80027f6:	2300      	movs	r3, #0
 80027f8:	60fb      	str	r3, [r7, #12]
//		printf("Gear: %f\r\n", EngTrModel_Y.Gear);
//		USER_TIM2_Delay(TIM2_PRESC_200MS, TIM2_INIT_COUNT_200MS);//  200ms

//// -------------- PRACTICA PANTALLLA LCD Y DATOS  ----------------

		char *direccion = "Front";
 80027fa:	4b5f      	ldr	r3, [pc, #380]	@ (8002978 <main+0x1a4>)
 80027fc:	60bb      	str	r3, [r7, #8]

		KEYPAD_Init();
 80027fe:	f7ff fbb9 	bl	8001f74 <KEYPAD_Init>
		pressedButton = KEYPAD_ReadKey();
 8002802:	f7ff fc25 	bl	8002050 <KEYPAD_ReadKey>
 8002806:	4603      	mov	r3, r0
 8002808:	461a      	mov	r2, r3
 800280a:	4b5c      	ldr	r3, [pc, #368]	@ (800297c <main+0x1a8>)
 800280c:	701a      	strb	r2, [r3, #0]


		readValue = USE_ADC1_MODULE();
 800280e:	f000 f96d 	bl	8002aec <USE_ADC1_MODULE>
 8002812:	4603      	mov	r3, r0
 8002814:	80fb      	strh	r3, [r7, #6]
		ThrottleValue = ((readValue*100)/4095);
 8002816:	88fb      	ldrh	r3, [r7, #6]
 8002818:	2264      	movs	r2, #100	@ 0x64
 800281a:	fb02 f303 	mul.w	r3, r2, r3
 800281e:	4a58      	ldr	r2, [pc, #352]	@ (8002980 <main+0x1ac>)
 8002820:	fb82 1203 	smull	r1, r2, r2, r3
 8002824:	441a      	add	r2, r3
 8002826:	12d2      	asrs	r2, r2, #11
 8002828:	17db      	asrs	r3, r3, #31
 800282a:	1ad3      	subs	r3, r2, r3
 800282c:	60fb      	str	r3, [r7, #12]

		if (ThrottleValue < 5){
 800282e:	68fb      	ldr	r3, [r7, #12]
 8002830:	2b04      	cmp	r3, #4
 8002832:	dc01      	bgt.n	8002838 <main+0x64>
			ThrottleValue = 5;
 8002834:	2305      	movs	r3, #5
 8002836:	60fb      	str	r3, [r7, #12]
		}

		EngTrModel_U.Throttle = ThrottleValue;
 8002838:	68f8      	ldr	r0, [r7, #12]
 800283a:	f7fd fdf3 	bl	8000424 <__aeabi_i2d>
 800283e:	4602      	mov	r2, r0
 8002840:	460b      	mov	r3, r1
 8002842:	4950      	ldr	r1, [pc, #320]	@ (8002984 <main+0x1b0>)
 8002844:	e9c1 2300 	strd	r2, r3, [r1]


	    if(pressedButton == '2')
 8002848:	4b4c      	ldr	r3, [pc, #304]	@ (800297c <main+0x1a8>)
 800284a:	781b      	ldrb	r3, [r3, #0]
 800284c:	b2db      	uxtb	r3, r3
 800284e:	2b32      	cmp	r3, #50	@ 0x32
 8002850:	d10e      	bne.n	8002870 <main+0x9c>
	    {
	    	EngTrModel_U.BrakeTorque = 100.0;
 8002852:	494c      	ldr	r1, [pc, #304]	@ (8002984 <main+0x1b0>)
 8002854:	f04f 0200 	mov.w	r2, #0
 8002858:	4b4b      	ldr	r3, [pc, #300]	@ (8002988 <main+0x1b4>)
 800285a:	e9c1 2302 	strd	r2, r3, [r1, #8]
	    	direccion = "Break";
 800285e:	4b4b      	ldr	r3, [pc, #300]	@ (800298c <main+0x1b8>)
 8002860:	60bb      	str	r3, [r7, #8]
	    	turnOnLED(11);
 8002862:	200b      	movs	r0, #11
 8002864:	f000 f9aa 	bl	8002bbc <turnOnLED>
	    	turnOnLED(12);
 8002868:	200c      	movs	r0, #12
 800286a:	f000 f9a7 	bl	8002bbc <turnOnLED>
 800286e:	e028      	b.n	80028c2 <main+0xee>
	    }
	    else if(pressedButton == '1')
 8002870:	4b42      	ldr	r3, [pc, #264]	@ (800297c <main+0x1a8>)
 8002872:	781b      	ldrb	r3, [r3, #0]
 8002874:	b2db      	uxtb	r3, r3
 8002876:	2b31      	cmp	r3, #49	@ 0x31
 8002878:	d108      	bne.n	800288c <main+0xb8>
	    {
	    	direccion = "Left";
 800287a:	4b45      	ldr	r3, [pc, #276]	@ (8002990 <main+0x1bc>)
 800287c:	60bb      	str	r3, [r7, #8]
	    	turnOnLED(11);
 800287e:	200b      	movs	r0, #11
 8002880:	f000 f99c 	bl	8002bbc <turnOnLED>
	    	turnOffLED(12);
 8002884:	200c      	movs	r0, #12
 8002886:	f000 f9af 	bl	8002be8 <turnOffLED>
 800288a:	e01a      	b.n	80028c2 <main+0xee>
	    }
	    else if(pressedButton == '3')
 800288c:	4b3b      	ldr	r3, [pc, #236]	@ (800297c <main+0x1a8>)
 800288e:	781b      	ldrb	r3, [r3, #0]
 8002890:	b2db      	uxtb	r3, r3
 8002892:	2b33      	cmp	r3, #51	@ 0x33
 8002894:	d108      	bne.n	80028a8 <main+0xd4>
		{
	    	direccion = "Right";
 8002896:	4b3f      	ldr	r3, [pc, #252]	@ (8002994 <main+0x1c0>)
 8002898:	60bb      	str	r3, [r7, #8]
	    	turnOnLED(12);
 800289a:	200c      	movs	r0, #12
 800289c:	f000 f98e 	bl	8002bbc <turnOnLED>
	    	turnOffLED(11);
 80028a0:	200b      	movs	r0, #11
 80028a2:	f000 f9a1 	bl	8002be8 <turnOffLED>
 80028a6:	e00c      	b.n	80028c2 <main+0xee>
		}
	    else
	    {
	    	turnOffLED(11);
 80028a8:	200b      	movs	r0, #11
 80028aa:	f000 f99d 	bl	8002be8 <turnOffLED>
	    	turnOffLED(12);
 80028ae:	200c      	movs	r0, #12
 80028b0:	f000 f99a 	bl	8002be8 <turnOffLED>
	    	EngTrModel_U.BrakeTorque = 0.0;
 80028b4:	4933      	ldr	r1, [pc, #204]	@ (8002984 <main+0x1b0>)
 80028b6:	f04f 0200 	mov.w	r2, #0
 80028ba:	f04f 0300 	mov.w	r3, #0
 80028be:	e9c1 2302 	strd	r2, r3, [r1, #8]
	    }

	    // Update the values into the vehicle model
	    EngTrModel_step();
 80028c2:	f7ff f875 	bl	80019b0 <EngTrModel_step>

	    // Send the output values
	    printf("%f,%f,%f,%s\n\r", EngTrModel_Y.VehicleSpeed, EngTrModel_Y.Gear ,EngTrModel_Y.EngineSpeed, direccion);
 80028c6:	4b34      	ldr	r3, [pc, #208]	@ (8002998 <main+0x1c4>)
 80028c8:	e9d3 4502 	ldrd	r4, r5, [r3, #8]
 80028cc:	4b32      	ldr	r3, [pc, #200]	@ (8002998 <main+0x1c4>)
 80028ce:	e9d3 2304 	ldrd	r2, r3, [r3, #16]
 80028d2:	4931      	ldr	r1, [pc, #196]	@ (8002998 <main+0x1c4>)
 80028d4:	e9d1 0100 	ldrd	r0, r1, [r1]
 80028d8:	68be      	ldr	r6, [r7, #8]
 80028da:	9604      	str	r6, [sp, #16]
 80028dc:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80028e0:	e9cd 2300 	strd	r2, r3, [sp]
 80028e4:	4622      	mov	r2, r4
 80028e6:	462b      	mov	r3, r5
 80028e8:	482c      	ldr	r0, [pc, #176]	@ (800299c <main+0x1c8>)
 80028ea:	f002 fb19 	bl	8004f20 <iprintf>
	    tim2_delay(TIM2_TIME_50MS);
 80028ee:	482c      	ldr	r0, [pc, #176]	@ (80029a0 <main+0x1cc>)
 80028f0:	f000 fc80 	bl	80031f4 <tim2_delay>

		LCD_Clear();
 80028f4:	2001      	movs	r0, #1
 80028f6:	f7ff fe15 	bl	8002524 <LCD_Write_Cmd>
		LCD_Set_Cursor( 1, 1 );
 80028fa:	2101      	movs	r1, #1
 80028fc:	2001      	movs	r0, #1
 80028fe:	f7ff fe37 	bl	8002570 <LCD_Set_Cursor>
		LCD_Put_Str( "VS:" );
 8002902:	4828      	ldr	r0, [pc, #160]	@ (80029a4 <main+0x1d0>)
 8002904:	f7ff fe56 	bl	80025b4 <LCD_Put_Str>
		LCD_Put_Num( EngTrModel_Y.VehicleSpeed );
 8002908:	4b23      	ldr	r3, [pc, #140]	@ (8002998 <main+0x1c4>)
 800290a:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 800290e:	4610      	mov	r0, r2
 8002910:	4619      	mov	r1, r3
 8002912:	f7fe f8a1 	bl	8000a58 <__aeabi_d2iz>
 8002916:	4603      	mov	r3, r0
 8002918:	b21b      	sxth	r3, r3
 800291a:	4618      	mov	r0, r3
 800291c:	f7ff fe6e 	bl	80025fc <LCD_Put_Num>
		LCD_Put_Str( "   G:");
 8002920:	4821      	ldr	r0, [pc, #132]	@ (80029a8 <main+0x1d4>)
 8002922:	f7ff fe47 	bl	80025b4 <LCD_Put_Str>
		LCD_Put_Num( EngTrModel_Y.Gear );
 8002926:	4b1c      	ldr	r3, [pc, #112]	@ (8002998 <main+0x1c4>)
 8002928:	e9d3 2304 	ldrd	r2, r3, [r3, #16]
 800292c:	4610      	mov	r0, r2
 800292e:	4619      	mov	r1, r3
 8002930:	f7fe f892 	bl	8000a58 <__aeabi_d2iz>
 8002934:	4603      	mov	r3, r0
 8002936:	b21b      	sxth	r3, r3
 8002938:	4618      	mov	r0, r3
 800293a:	f7ff fe5f 	bl	80025fc <LCD_Put_Num>
		LCD_Set_Cursor( 2, 1 );
 800293e:	2101      	movs	r1, #1
 8002940:	2002      	movs	r0, #2
 8002942:	f7ff fe15 	bl	8002570 <LCD_Set_Cursor>
		LCD_Put_Str( "ES:");
 8002946:	4819      	ldr	r0, [pc, #100]	@ (80029ac <main+0x1d8>)
 8002948:	f7ff fe34 	bl	80025b4 <LCD_Put_Str>
		LCD_Put_Num( EngTrModel_Y.EngineSpeed );
 800294c:	4b12      	ldr	r3, [pc, #72]	@ (8002998 <main+0x1c4>)
 800294e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002952:	4610      	mov	r0, r2
 8002954:	4619      	mov	r1, r3
 8002956:	f7fe f87f 	bl	8000a58 <__aeabi_d2iz>
 800295a:	4603      	mov	r3, r0
 800295c:	b21b      	sxth	r3, r3
 800295e:	4618      	mov	r0, r3
 8002960:	f7ff fe4c 	bl	80025fc <LCD_Put_Num>
		LCD_Put_Str( " D: ");
 8002964:	4812      	ldr	r0, [pc, #72]	@ (80029b0 <main+0x1dc>)
 8002966:	f7ff fe25 	bl	80025b4 <LCD_Put_Str>
		LCD_Put_Str( direccion );
 800296a:	68b8      	ldr	r0, [r7, #8]
 800296c:	f7ff fe22 	bl	80025b4 <LCD_Put_Str>
		tim2_delay(TIM2_TIME_200MS);
 8002970:	4810      	ldr	r0, [pc, #64]	@ (80029b4 <main+0x1e0>)
 8002972:	f000 fc3f 	bl	80031f4 <tim2_delay>
	{
 8002976:	e740      	b.n	80027fa <main+0x26>
 8002978:	08008b68 	.word	0x08008b68
 800297c:	20000278 	.word	0x20000278
 8002980:	80080081 	.word	0x80080081
 8002984:	20000250 	.word	0x20000250
 8002988:	40590000 	.word	0x40590000
 800298c:	08008b70 	.word	0x08008b70
 8002990:	08008b78 	.word	0x08008b78
 8002994:	08008b80 	.word	0x08008b80
 8002998:	20000260 	.word	0x20000260
 800299c:	08008b88 	.word	0x08008b88
 80029a0:	3d4ccccd 	.word	0x3d4ccccd
 80029a4:	08008b98 	.word	0x08008b98
 80029a8:	08008b9c 	.word	0x08008b9c
 80029ac:	08008ba4 	.word	0x08008ba4
 80029b0:	08008ba8 	.word	0x08008ba8
 80029b4:	3e4ccccd 	.word	0x3e4ccccd

080029b8 <USER_RCC_Init>:

	}
}

void USER_RCC_Init(void){
 80029b8:	b480      	push	{r7}
 80029ba:	af00      	add	r7, sp, #0
	/*System Clock (SYSCLK) Configuration or */
	FLASH->ACR		&=	~( 0X5UL <<  0U); // two wait states latency, if SYSCLK > 48MHz
 80029bc:	4b48      	ldr	r3, [pc, #288]	@ (8002ae0 <USER_RCC_Init+0x128>)
 80029be:	681b      	ldr	r3, [r3, #0]
 80029c0:	4a47      	ldr	r2, [pc, #284]	@ (8002ae0 <USER_RCC_Init+0x128>)
 80029c2:	f023 0305 	bic.w	r3, r3, #5
 80029c6:	6013      	str	r3, [r2, #0]
	FLASH->ACR		|=	 ( 0X2UL <<  0U); // two wait states latency, if SYSCLK > 48MHz
 80029c8:	4b45      	ldr	r3, [pc, #276]	@ (8002ae0 <USER_RCC_Init+0x128>)
 80029ca:	681b      	ldr	r3, [r3, #0]
 80029cc:	4a44      	ldr	r2, [pc, #272]	@ (8002ae0 <USER_RCC_Init+0x128>)
 80029ce:	f043 0302 	orr.w	r3, r3, #2
 80029d2:	6013      	str	r3, [r2, #0]
	RCC->CFGR		&=	~( 0x1UL << 16U)  // PLL HSI Clock /2 selected as PLL input clock
 80029d4:	4b43      	ldr	r3, [pc, #268]	@ (8002ae4 <USER_RCC_Init+0x12c>)
 80029d6:	685b      	ldr	r3, [r3, #4]
 80029d8:	4a42      	ldr	r2, [pc, #264]	@ (8002ae4 <USER_RCC_Init+0x12c>)
 80029da:	f423 339d 	bic.w	r3, r3, #80384	@ 0x13a00
 80029de:	f423 73f8 	bic.w	r3, r3, #496	@ 0x1f0
 80029e2:	6053      	str	r3, [r2, #4]
					&	~( 0x7UL << 11U)  // APB2 prescaler /1
					&	~( 0x3UL <<  8U)  // APB1 prescaler /2 (APB1 must not exceeed 36Mhz)
					&	~( 0xFUL <<  4U); // AHB perscaler /1
	RCC->CFGR		|=	 ( 0xFUL << 18U)  // PLL input clock x 16 (PLLMUL bits)
 80029e4:	4b3f      	ldr	r3, [pc, #252]	@ (8002ae4 <USER_RCC_Init+0x12c>)
 80029e6:	685b      	ldr	r3, [r3, #4]
 80029e8:	4a3e      	ldr	r2, [pc, #248]	@ (8002ae4 <USER_RCC_Init+0x12c>)
 80029ea:	f443 1370 	orr.w	r3, r3, #3932160	@ 0x3c0000
 80029ee:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 80029f2:	6053      	str	r3, [r2, #4]
					|	 ( 0x4UL <<  8U); // APB1 Prescaler /2
	RCC->CR			|= 	 ( 0x1UL << 24U); // PLL2 ON
 80029f4:	4b3b      	ldr	r3, [pc, #236]	@ (8002ae4 <USER_RCC_Init+0x12c>)
 80029f6:	681b      	ldr	r3, [r3, #0]
 80029f8:	4a3a      	ldr	r2, [pc, #232]	@ (8002ae4 <USER_RCC_Init+0x12c>)
 80029fa:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 80029fe:	6013      	str	r3, [r2, #0]
	while( !(RCC->CR & ~(0x1UL << 25U )));// Wait until PLL is locked
 8002a00:	bf00      	nop
 8002a02:	4b38      	ldr	r3, [pc, #224]	@ (8002ae4 <USER_RCC_Init+0x12c>)
 8002a04:	681b      	ldr	r3, [r3, #0]
 8002a06:	f023 7300 	bic.w	r3, r3, #33554432	@ 0x2000000
 8002a0a:	2b00      	cmp	r3, #0
 8002a0c:	d0f9      	beq.n	8002a02 <USER_RCC_Init+0x4a>
	RCC->CFGR 		&=  ~( 0x1UL <<  0U); // PLL used as system clock (SW bits)
 8002a0e:	4b35      	ldr	r3, [pc, #212]	@ (8002ae4 <USER_RCC_Init+0x12c>)
 8002a10:	685b      	ldr	r3, [r3, #4]
 8002a12:	4a34      	ldr	r2, [pc, #208]	@ (8002ae4 <USER_RCC_Init+0x12c>)
 8002a14:	f023 0301 	bic.w	r3, r3, #1
 8002a18:	6053      	str	r3, [r2, #4]
	RCC->CFGR		|=	 ( 0x2UL <<  0U); // PLL used as system clock (SW bits)
 8002a1a:	4b32      	ldr	r3, [pc, #200]	@ (8002ae4 <USER_RCC_Init+0x12c>)
 8002a1c:	685b      	ldr	r3, [r3, #4]
 8002a1e:	4a31      	ldr	r2, [pc, #196]	@ (8002ae4 <USER_RCC_Init+0x12c>)
 8002a20:	f043 0302 	orr.w	r3, r3, #2
 8002a24:	6053      	str	r3, [r2, #4]
	while( 0x8UL != (RCC->CFGR & 0xCUL)); // wait until PLL is switched
 8002a26:	bf00      	nop
 8002a28:	4b2e      	ldr	r3, [pc, #184]	@ (8002ae4 <USER_RCC_Init+0x12c>)
 8002a2a:	685b      	ldr	r3, [r3, #4]
 8002a2c:	f003 030c 	and.w	r3, r3, #12
 8002a30:	2b08      	cmp	r3, #8
 8002a32:	d1f9      	bne.n	8002a28 <USER_RCC_Init+0x70>

	// Enable clock for required peripherals
	RCC->APB2ENR    |=  ( 0x1UL <<  2U )    // IO port A clock enable
 8002a34:	4b2b      	ldr	r3, [pc, #172]	@ (8002ae4 <USER_RCC_Init+0x12c>)
 8002a36:	699b      	ldr	r3, [r3, #24]
 8002a38:	4a2a      	ldr	r2, [pc, #168]	@ (8002ae4 <USER_RCC_Init+0x12c>)
 8002a3a:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8002a3e:	f043 0304 	orr.w	r3, r3, #4
 8002a42:	6193      	str	r3, [r2, #24]
	                |   ( 0x1UL << 14U ); 	// USART 1 clock enable
	  // RCC_APB2ENR modified to IO port B clock enable
	RCC->APB2ENR |= (0x1UL << (3U));	// To set IOPBEN bit
 8002a44:	4b27      	ldr	r3, [pc, #156]	@ (8002ae4 <USER_RCC_Init+0x12c>)
 8002a46:	699b      	ldr	r3, [r3, #24]
 8002a48:	4a26      	ldr	r2, [pc, #152]	@ (8002ae4 <USER_RCC_Init+0x12c>)
 8002a4a:	f043 0308 	orr.w	r3, r3, #8
 8002a4e:	6193      	str	r3, [r2, #24]

	RCC->APB2ENR    |=  ( 0x1UL <<  4U );   // IO port C clock enable
 8002a50:	4b24      	ldr	r3, [pc, #144]	@ (8002ae4 <USER_RCC_Init+0x12c>)
 8002a52:	699b      	ldr	r3, [r3, #24]
 8002a54:	4a23      	ldr	r2, [pc, #140]	@ (8002ae4 <USER_RCC_Init+0x12c>)
 8002a56:	f043 0310 	orr.w	r3, r3, #16
 8002a5a:	6193      	str	r3, [r2, #24]
	RCC->APB2ENR    |=  ( 0x1UL <<  9U );   // ADC1 clock enable
 8002a5c:	4b21      	ldr	r3, [pc, #132]	@ (8002ae4 <USER_RCC_Init+0x12c>)
 8002a5e:	699b      	ldr	r3, [r3, #24]
 8002a60:	4a20      	ldr	r2, [pc, #128]	@ (8002ae4 <USER_RCC_Init+0x12c>)
 8002a62:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8002a66:	6193      	str	r3, [r2, #24]


	// Configure ADC1 clock peripheral
	RCC->CFGR		|= 	( 0x3  <<  14);	// PCLK2 divided by 8
 8002a68:	4b1e      	ldr	r3, [pc, #120]	@ (8002ae4 <USER_RCC_Init+0x12c>)
 8002a6a:	685b      	ldr	r3, [r3, #4]
 8002a6c:	4a1d      	ldr	r2, [pc, #116]	@ (8002ae4 <USER_RCC_Init+0x12c>)
 8002a6e:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 8002a72:	6053      	str	r3, [r2, #4]
	// INITIALIZE AND ENABLE THE ADC1 PERIPHERAL
	ADC1->CR1		&=	~(0xF << 16UL);
 8002a74:	4b1c      	ldr	r3, [pc, #112]	@ (8002ae8 <USER_RCC_Init+0x130>)
 8002a76:	685b      	ldr	r3, [r3, #4]
 8002a78:	4a1b      	ldr	r2, [pc, #108]	@ (8002ae8 <USER_RCC_Init+0x130>)
 8002a7a:	f423 2370 	bic.w	r3, r3, #983040	@ 0xf0000
 8002a7e:	6053      	str	r3, [r2, #4]
	// DETERMINE THE RESULT FORMAT
	ADC1->CR2		&= ~(0x1  << 11UL)  // Right Alignment
 8002a80:	4b19      	ldr	r3, [pc, #100]	@ (8002ae8 <USER_RCC_Init+0x130>)
 8002a82:	689b      	ldr	r3, [r3, #8]
 8002a84:	4a18      	ldr	r2, [pc, #96]	@ (8002ae8 <USER_RCC_Init+0x130>)
 8002a86:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8002a8a:	6093      	str	r3, [r2, #8]
					|	(0x1  <<  1UL); // Continuos conversion mode

	// DETERMINE THE SAMPLE TIME
	// ¿Cómo se determina el Sample time adecuado?
	ADC1->SMPR2		&= ~(0x7  <<  0UL); // 1.5 Cycles
 8002a8c:	4b16      	ldr	r3, [pc, #88]	@ (8002ae8 <USER_RCC_Init+0x130>)
 8002a8e:	691b      	ldr	r3, [r3, #16]
 8002a90:	4a15      	ldr	r2, [pc, #84]	@ (8002ae8 <USER_RCC_Init+0x130>)
 8002a92:	f023 0307 	bic.w	r3, r3, #7
 8002a96:	6113      	str	r3, [r2, #16]
	// THE SECUENCES AND/OR THE NUMBER OF CONVERSACIONS FOR THE ADC REGULAR CHANNELS
	ADC1->SQR1		&= ~(0xF  <<  20UL);// 1 Conversion for regular channels
 8002a98:	4b13      	ldr	r3, [pc, #76]	@ (8002ae8 <USER_RCC_Init+0x130>)
 8002a9a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002a9c:	4a12      	ldr	r2, [pc, #72]	@ (8002ae8 <USER_RCC_Init+0x130>)
 8002a9e:	f423 0370 	bic.w	r3, r3, #15728640	@ 0xf00000
 8002aa2:	62d3      	str	r3, [r2, #44]	@ 0x2c
	// SELECT THE CHANNEL FOR THE FIRST ADC CONVERSATION
	ADC1->SQR3		&= ~(0x1F  << 0UL);// first conversion in channel 0
 8002aa4:	4b10      	ldr	r3, [pc, #64]	@ (8002ae8 <USER_RCC_Init+0x130>)
 8002aa6:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8002aa8:	4a0f      	ldr	r2, [pc, #60]	@ (8002ae8 <USER_RCC_Init+0x130>)
 8002aaa:	f023 031f 	bic.w	r3, r3, #31
 8002aae:	6353      	str	r3, [r2, #52]	@ 0x34

	// ENABLE THE ADC MODULE
	ADC1->CR2		|=  (0x1  <<  0UL); // ADC Enable and start conversion
 8002ab0:	4b0d      	ldr	r3, [pc, #52]	@ (8002ae8 <USER_RCC_Init+0x130>)
 8002ab2:	689b      	ldr	r3, [r3, #8]
 8002ab4:	4a0c      	ldr	r2, [pc, #48]	@ (8002ae8 <USER_RCC_Init+0x130>)
 8002ab6:	f043 0301 	orr.w	r3, r3, #1
 8002aba:	6093      	str	r3, [r2, #8]
	// ADC Calibration
	ADC1->CR2		|=  (0x1  <<  2UL); // Start the calibration
 8002abc:	4b0a      	ldr	r3, [pc, #40]	@ (8002ae8 <USER_RCC_Init+0x130>)
 8002abe:	689b      	ldr	r3, [r3, #8]
 8002ac0:	4a09      	ldr	r2, [pc, #36]	@ (8002ae8 <USER_RCC_Init+0x130>)
 8002ac2:	f043 0304 	orr.w	r3, r3, #4
 8002ac6:	6093      	str	r3, [r2, #8]
    // Wait until after calibration is complete
    while ((ADC1->CR2 & (0x1UL << 2U)) == 0);
 8002ac8:	bf00      	nop
 8002aca:	4b07      	ldr	r3, [pc, #28]	@ (8002ae8 <USER_RCC_Init+0x130>)
 8002acc:	689b      	ldr	r3, [r3, #8]
 8002ace:	f003 0304 	and.w	r3, r3, #4
 8002ad2:	2b00      	cmp	r3, #0
 8002ad4:	d0f9      	beq.n	8002aca <USER_RCC_Init+0x112>
}
 8002ad6:	bf00      	nop
 8002ad8:	bf00      	nop
 8002ada:	46bd      	mov	sp, r7
 8002adc:	bc80      	pop	{r7}
 8002ade:	4770      	bx	lr
 8002ae0:	40022000 	.word	0x40022000
 8002ae4:	40021000 	.word	0x40021000
 8002ae8:	40012400 	.word	0x40012400

08002aec <USE_ADC1_MODULE>:


uint16_t USE_ADC1_MODULE(void){
 8002aec:	b480      	push	{r7}
 8002aee:	b083      	sub	sp, #12
 8002af0:	af00      	add	r7, sp, #0
	ADC1->CR2	|=  (0x1  <<  0UL); // ADC Enable and start conversion
 8002af2:	4b0b      	ldr	r3, [pc, #44]	@ (8002b20 <USE_ADC1_MODULE+0x34>)
 8002af4:	689b      	ldr	r3, [r3, #8]
 8002af6:	4a0a      	ldr	r2, [pc, #40]	@ (8002b20 <USE_ADC1_MODULE+0x34>)
 8002af8:	f043 0301 	orr.w	r3, r3, #1
 8002afc:	6093      	str	r3, [r2, #8]

	// Wait until conversation is done (SR reg EOC bit)
    while ((ADC1->SR & (0x1UL << 1U)) == 0);
 8002afe:	bf00      	nop
 8002b00:	4b07      	ldr	r3, [pc, #28]	@ (8002b20 <USE_ADC1_MODULE+0x34>)
 8002b02:	681b      	ldr	r3, [r3, #0]
 8002b04:	f003 0302 	and.w	r3, r3, #2
 8002b08:	2b00      	cmp	r3, #0
 8002b0a:	d0f9      	beq.n	8002b00 <USE_ADC1_MODULE+0x14>

    // Read the value in DR(15:0) of ADC1
    uint16_t readValue = ADC1->DR & 0xFFFF;
 8002b0c:	4b04      	ldr	r3, [pc, #16]	@ (8002b20 <USE_ADC1_MODULE+0x34>)
 8002b0e:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8002b10:	80fb      	strh	r3, [r7, #6]

    return readValue;
 8002b12:	88fb      	ldrh	r3, [r7, #6]
}
 8002b14:	4618      	mov	r0, r3
 8002b16:	370c      	adds	r7, #12
 8002b18:	46bd      	mov	sp, r7
 8002b1a:	bc80      	pop	{r7}
 8002b1c:	4770      	bx	lr
 8002b1e:	bf00      	nop
 8002b20:	40012400 	.word	0x40012400

08002b24 <USER_GPIO_Init>:



void USER_GPIO_Init(void) {
 8002b24:	b480      	push	{r7}
 8002b26:	af00      	add	r7, sp, #0
	// Configure USART1_TX pin (PA9) as alternate function output push-pull, max speed 10MHz
    GPIOA->CRH  &=  ~( 0x1UL <<  6U )
 8002b28:	4b22      	ldr	r3, [pc, #136]	@ (8002bb4 <USER_GPIO_Init+0x90>)
 8002b2a:	685b      	ldr	r3, [r3, #4]
 8002b2c:	4a21      	ldr	r2, [pc, #132]	@ (8002bb4 <USER_GPIO_Init+0x90>)
 8002b2e:	f023 0360 	bic.w	r3, r3, #96	@ 0x60
 8002b32:	6053      	str	r3, [r2, #4]
                &   ~( 0x2UL <<  4U );
    GPIOA->CRH  |=  ( 0x2UL <<  6U )
 8002b34:	4b1f      	ldr	r3, [pc, #124]	@ (8002bb4 <USER_GPIO_Init+0x90>)
 8002b36:	685b      	ldr	r3, [r3, #4]
 8002b38:	4a1e      	ldr	r2, [pc, #120]	@ (8002bb4 <USER_GPIO_Init+0x90>)
 8002b3a:	f043 0390 	orr.w	r3, r3, #144	@ 0x90
 8002b3e:	6053      	str	r3, [r2, #4]
                |   ( 0x1UL <<  4U );


	// GPIOx_BSRR modified to reset pin 5 of port A (LD2 is connected to PA5)
    GPIOA->BSRR &= (0x1UL << 21U); // Immediate value
 8002b40:	4b1c      	ldr	r3, [pc, #112]	@ (8002bb4 <USER_GPIO_Init+0x90>)
 8002b42:	691b      	ldr	r3, [r3, #16]
 8002b44:	4a1b      	ldr	r2, [pc, #108]	@ (8002bb4 <USER_GPIO_Init+0x90>)
 8002b46:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8002b4a:	6113      	str	r3, [r2, #16]
    // GPIOx_CRL modified to configure pin 5 as output
    GPIOA->CRL = GPIOA->CRL & ~(0x3UL << 22U) & ~(0x2UL << 20U); // GPIOx_CRL actual value & (to clear) (mask) CNF5[1:0] bits & (to clear) (mask) MODE5_1 bit
 8002b4c:	4b19      	ldr	r3, [pc, #100]	@ (8002bb4 <USER_GPIO_Init+0x90>)
 8002b4e:	681b      	ldr	r3, [r3, #0]
 8002b50:	4a18      	ldr	r2, [pc, #96]	@ (8002bb4 <USER_GPIO_Init+0x90>)
 8002b52:	f423 0360 	bic.w	r3, r3, #14680064	@ 0xe00000
 8002b56:	6013      	str	r3, [r2, #0]
    // GPIOx_CRL modified to select pin 5 max speed of 10MHz
    GPIOA->CRL = GPIOA->CRL | (0x1UL << 20U); // GPIOx_CRL actual value | (to set) (mask) MODE5_0 bit
 8002b58:	4b16      	ldr	r3, [pc, #88]	@ (8002bb4 <USER_GPIO_Init+0x90>)
 8002b5a:	681b      	ldr	r3, [r3, #0]
 8002b5c:	4a15      	ldr	r2, [pc, #84]	@ (8002bb4 <USER_GPIO_Init+0x90>)
 8002b5e:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8002b62:	6013      	str	r3, [r2, #0]

    // CONFIGURE THE ADC1 PIN3 TO INPUT THE VOLTAGE
    // GPIOx_BSRR modified to reset pin 0 of port A
	GPIOA->BSRR |= (0x1UL << 16U); // Immediate value
 8002b64:	4b13      	ldr	r3, [pc, #76]	@ (8002bb4 <USER_GPIO_Init+0x90>)
 8002b66:	691b      	ldr	r3, [r3, #16]
 8002b68:	4a12      	ldr	r2, [pc, #72]	@ (8002bb4 <USER_GPIO_Init+0x90>)
 8002b6a:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8002b6e:	6113      	str	r3, [r2, #16]
	// GPIOx_CRL modified to configure pin 0 as input analog
	GPIOA->CRL  &=  ~(0x3UL << 2U) & ~(0x3UL << 0U);
 8002b70:	4b10      	ldr	r3, [pc, #64]	@ (8002bb4 <USER_GPIO_Init+0x90>)
 8002b72:	681b      	ldr	r3, [r3, #0]
 8002b74:	4a0f      	ldr	r2, [pc, #60]	@ (8002bb4 <USER_GPIO_Init+0x90>)
 8002b76:	f023 030f 	bic.w	r3, r3, #15
 8002b7a:	6013      	str	r3, [r2, #0]


//	Configuración del PIN PB11 como salida push-pull
	GPIOB->CRH &= ~((0xF << 12));  // Limpiar bits de configuración para el PIN 11
 8002b7c:	4b0e      	ldr	r3, [pc, #56]	@ (8002bb8 <USER_GPIO_Init+0x94>)
 8002b7e:	685b      	ldr	r3, [r3, #4]
 8002b80:	4a0d      	ldr	r2, [pc, #52]	@ (8002bb8 <USER_GPIO_Init+0x94>)
 8002b82:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 8002b86:	6053      	str	r3, [r2, #4]
	GPIOB->CRH |=  (0x1 << 12);    // Configurar como salida de 10 MHz (MODE11[1:0] = 01, CNF11[1:0] = 00)
 8002b88:	4b0b      	ldr	r3, [pc, #44]	@ (8002bb8 <USER_GPIO_Init+0x94>)
 8002b8a:	685b      	ldr	r3, [r3, #4]
 8002b8c:	4a0a      	ldr	r2, [pc, #40]	@ (8002bb8 <USER_GPIO_Init+0x94>)
 8002b8e:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 8002b92:	6053      	str	r3, [r2, #4]

	// Configuración del PIN PB12 como salida push-pull
	GPIOB->CRH &= ~((0xF << 16));  // Limpiar bits de configuración para el PIN 12
 8002b94:	4b08      	ldr	r3, [pc, #32]	@ (8002bb8 <USER_GPIO_Init+0x94>)
 8002b96:	685b      	ldr	r3, [r3, #4]
 8002b98:	4a07      	ldr	r2, [pc, #28]	@ (8002bb8 <USER_GPIO_Init+0x94>)
 8002b9a:	f423 2370 	bic.w	r3, r3, #983040	@ 0xf0000
 8002b9e:	6053      	str	r3, [r2, #4]
	GPIOB->CRH |=  (0x1 << 16);    // Configurar como salida de 10 MHz (MODE12[1:0] = 01, CNF12[1:0] = 00)
 8002ba0:	4b05      	ldr	r3, [pc, #20]	@ (8002bb8 <USER_GPIO_Init+0x94>)
 8002ba2:	685b      	ldr	r3, [r3, #4]
 8002ba4:	4a04      	ldr	r2, [pc, #16]	@ (8002bb8 <USER_GPIO_Init+0x94>)
 8002ba6:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8002baa:	6053      	str	r3, [r2, #4]
}
 8002bac:	bf00      	nop
 8002bae:	46bd      	mov	sp, r7
 8002bb0:	bc80      	pop	{r7}
 8002bb2:	4770      	bx	lr
 8002bb4:	40010800 	.word	0x40010800
 8002bb8:	40010c00 	.word	0x40010c00

08002bbc <turnOnLED>:

    // Wait until Timer 2 update event occurs
    while ((TIM2->SR & (0x1UL << 0U)) == 0);
}

void turnOnLED(uint16_t pin) {
 8002bbc:	b480      	push	{r7}
 8002bbe:	b083      	sub	sp, #12
 8002bc0:	af00      	add	r7, sp, #0
 8002bc2:	4603      	mov	r3, r0
 8002bc4:	80fb      	strh	r3, [r7, #6]
    GPIOB->ODR |= (1 << pin);  // Establecer el pin correspondiente (alta)
 8002bc6:	4b07      	ldr	r3, [pc, #28]	@ (8002be4 <turnOnLED+0x28>)
 8002bc8:	68db      	ldr	r3, [r3, #12]
 8002bca:	88fa      	ldrh	r2, [r7, #6]
 8002bcc:	2101      	movs	r1, #1
 8002bce:	fa01 f202 	lsl.w	r2, r1, r2
 8002bd2:	4611      	mov	r1, r2
 8002bd4:	4a03      	ldr	r2, [pc, #12]	@ (8002be4 <turnOnLED+0x28>)
 8002bd6:	430b      	orrs	r3, r1
 8002bd8:	60d3      	str	r3, [r2, #12]
}
 8002bda:	bf00      	nop
 8002bdc:	370c      	adds	r7, #12
 8002bde:	46bd      	mov	sp, r7
 8002be0:	bc80      	pop	{r7}
 8002be2:	4770      	bx	lr
 8002be4:	40010c00 	.word	0x40010c00

08002be8 <turnOffLED>:

void turnOffLED(uint16_t pin) {
 8002be8:	b480      	push	{r7}
 8002bea:	b083      	sub	sp, #12
 8002bec:	af00      	add	r7, sp, #0
 8002bee:	4603      	mov	r3, r0
 8002bf0:	80fb      	strh	r3, [r7, #6]
    GPIOB->ODR &= ~(1 << pin);  // Restablecer el pin correspondiente (baja)
 8002bf2:	4b08      	ldr	r3, [pc, #32]	@ (8002c14 <turnOffLED+0x2c>)
 8002bf4:	68db      	ldr	r3, [r3, #12]
 8002bf6:	88fa      	ldrh	r2, [r7, #6]
 8002bf8:	2101      	movs	r1, #1
 8002bfa:	fa01 f202 	lsl.w	r2, r1, r2
 8002bfe:	43d2      	mvns	r2, r2
 8002c00:	4611      	mov	r1, r2
 8002c02:	4a04      	ldr	r2, [pc, #16]	@ (8002c14 <turnOffLED+0x2c>)
 8002c04:	400b      	ands	r3, r1
 8002c06:	60d3      	str	r3, [r2, #12]
}
 8002c08:	bf00      	nop
 8002c0a:	370c      	adds	r7, #12
 8002c0c:	46bd      	mov	sp, r7
 8002c0e:	bc80      	pop	{r7}
 8002c10:	4770      	bx	lr
 8002c12:	bf00      	nop
 8002c14:	40010c00 	.word	0x40010c00

08002c18 <rtGetInf>:
/*
 * Initialize rtInf needed by the generated code.
 * Inf is initialized as non-signaling. Assumes IEEE.
 */
real_T rtGetInf(void)
{
 8002c18:	b580      	push	{r7, lr}
 8002c1a:	b088      	sub	sp, #32
 8002c1c:	af00      	add	r7, sp, #0
  size_t bitsPerReal = sizeof(real_T) * (NumBitsPerChar);
 8002c1e:	2340      	movs	r3, #64	@ 0x40
 8002c20:	617b      	str	r3, [r7, #20]
  real_T inf = 0.0;
 8002c22:	f04f 0200 	mov.w	r2, #0
 8002c26:	f04f 0300 	mov.w	r3, #0
 8002c2a:	e9c7 2306 	strd	r2, r3, [r7, #24]
  if (bitsPerReal == 32U) {
 8002c2e:	697b      	ldr	r3, [r7, #20]
 8002c30:	2b20      	cmp	r3, #32
 8002c32:	d10a      	bne.n	8002c4a <rtGetInf+0x32>
    inf = rtGetInfF();
 8002c34:	f000 f836 	bl	8002ca4 <rtGetInfF>
 8002c38:	4603      	mov	r3, r0
 8002c3a:	4618      	mov	r0, r3
 8002c3c:	f7fd fc04 	bl	8000448 <__aeabi_f2d>
 8002c40:	4602      	mov	r2, r0
 8002c42:	460b      	mov	r3, r1
 8002c44:	e9c7 2306 	strd	r2, r3, [r7, #24]
 8002c48:	e022      	b.n	8002c90 <rtGetInf+0x78>
  } else {
    uint16_T one = 1U;
 8002c4a:	2301      	movs	r3, #1
 8002c4c:	823b      	strh	r3, [r7, #16]
    enum {
      LittleEndian,
      BigEndian
    } machByteOrder = (*((uint8_T *) &one) == 1U) ? LittleEndian : BigEndian;
 8002c4e:	f107 0310 	add.w	r3, r7, #16
 8002c52:	781b      	ldrb	r3, [r3, #0]
 8002c54:	2b01      	cmp	r3, #1
 8002c56:	bf14      	ite	ne
 8002c58:	2301      	movne	r3, #1
 8002c5a:	2300      	moveq	r3, #0
 8002c5c:	b2db      	uxtb	r3, r3
 8002c5e:	74fb      	strb	r3, [r7, #19]
    switch (machByteOrder) {
 8002c60:	7cfb      	ldrb	r3, [r7, #19]
 8002c62:	2b00      	cmp	r3, #0
 8002c64:	d002      	beq.n	8002c6c <rtGetInf+0x54>
 8002c66:	2b01      	cmp	r3, #1
 8002c68:	d009      	beq.n	8002c7e <rtGetInf+0x66>
 8002c6a:	e011      	b.n	8002c90 <rtGetInf+0x78>
        union {
          LittleEndianIEEEDouble bitVal;
          real_T fltVal;
        } tmpVal;

        tmpVal.bitVal.words.wordH = 0x7FF00000U;
 8002c6c:	4b0c      	ldr	r3, [pc, #48]	@ (8002ca0 <rtGetInf+0x88>)
 8002c6e:	60fb      	str	r3, [r7, #12]
        tmpVal.bitVal.words.wordL = 0x00000000U;
 8002c70:	2300      	movs	r3, #0
 8002c72:	60bb      	str	r3, [r7, #8]
        inf = tmpVal.fltVal;
 8002c74:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8002c78:	e9c7 2306 	strd	r2, r3, [r7, #24]
        break;
 8002c7c:	e008      	b.n	8002c90 <rtGetInf+0x78>
        union {
          BigEndianIEEEDouble bitVal;
          real_T fltVal;
        } tmpVal;

        tmpVal.bitVal.words.wordH = 0x7FF00000U;
 8002c7e:	4b08      	ldr	r3, [pc, #32]	@ (8002ca0 <rtGetInf+0x88>)
 8002c80:	603b      	str	r3, [r7, #0]
        tmpVal.bitVal.words.wordL = 0x00000000U;
 8002c82:	2300      	movs	r3, #0
 8002c84:	607b      	str	r3, [r7, #4]
        inf = tmpVal.fltVal;
 8002c86:	e9d7 2300 	ldrd	r2, r3, [r7]
 8002c8a:	e9c7 2306 	strd	r2, r3, [r7, #24]
        break;
 8002c8e:	bf00      	nop
      }
    }
  }

  return inf;
 8002c90:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
}
 8002c94:	4610      	mov	r0, r2
 8002c96:	4619      	mov	r1, r3
 8002c98:	3720      	adds	r7, #32
 8002c9a:	46bd      	mov	sp, r7
 8002c9c:	bd80      	pop	{r7, pc}
 8002c9e:	bf00      	nop
 8002ca0:	7ff00000 	.word	0x7ff00000

08002ca4 <rtGetInfF>:
/*
 * Initialize rtInfF needed by the generated code.
 * Inf is initialized as non-signaling. Assumes IEEE.
 */
real32_T rtGetInfF(void)
{
 8002ca4:	b480      	push	{r7}
 8002ca6:	b083      	sub	sp, #12
 8002ca8:	af00      	add	r7, sp, #0
  IEEESingle infF;
  infF.wordL.wordLuint = 0x7F800000U;
 8002caa:	f04f 43ff 	mov.w	r3, #2139095040	@ 0x7f800000
 8002cae:	607b      	str	r3, [r7, #4]
  return infF.wordL.wordLreal;
 8002cb0:	687b      	ldr	r3, [r7, #4]
}
 8002cb2:	4618      	mov	r0, r3
 8002cb4:	370c      	adds	r7, #12
 8002cb6:	46bd      	mov	sp, r7
 8002cb8:	bc80      	pop	{r7}
 8002cba:	4770      	bx	lr

08002cbc <rtGetMinusInf>:
/*
 * Initialize rtMinusInf needed by the generated code.
 * Inf is initialized as non-signaling. Assumes IEEE.
 */
real_T rtGetMinusInf(void)
{
 8002cbc:	b580      	push	{r7, lr}
 8002cbe:	b088      	sub	sp, #32
 8002cc0:	af00      	add	r7, sp, #0
  size_t bitsPerReal = sizeof(real_T) * (NumBitsPerChar);
 8002cc2:	2340      	movs	r3, #64	@ 0x40
 8002cc4:	617b      	str	r3, [r7, #20]
  real_T minf = 0.0;
 8002cc6:	f04f 0200 	mov.w	r2, #0
 8002cca:	f04f 0300 	mov.w	r3, #0
 8002cce:	e9c7 2306 	strd	r2, r3, [r7, #24]
  if (bitsPerReal == 32U) {
 8002cd2:	697b      	ldr	r3, [r7, #20]
 8002cd4:	2b20      	cmp	r3, #32
 8002cd6:	d10a      	bne.n	8002cee <rtGetMinusInf+0x32>
    minf = rtGetMinusInfF();
 8002cd8:	f000 f836 	bl	8002d48 <rtGetMinusInfF>
 8002cdc:	4603      	mov	r3, r0
 8002cde:	4618      	mov	r0, r3
 8002ce0:	f7fd fbb2 	bl	8000448 <__aeabi_f2d>
 8002ce4:	4602      	mov	r2, r0
 8002ce6:	460b      	mov	r3, r1
 8002ce8:	e9c7 2306 	strd	r2, r3, [r7, #24]
 8002cec:	e022      	b.n	8002d34 <rtGetMinusInf+0x78>
  } else {
    uint16_T one = 1U;
 8002cee:	2301      	movs	r3, #1
 8002cf0:	823b      	strh	r3, [r7, #16]
    enum {
      LittleEndian,
      BigEndian
    } machByteOrder = (*((uint8_T *) &one) == 1U) ? LittleEndian : BigEndian;
 8002cf2:	f107 0310 	add.w	r3, r7, #16
 8002cf6:	781b      	ldrb	r3, [r3, #0]
 8002cf8:	2b01      	cmp	r3, #1
 8002cfa:	bf14      	ite	ne
 8002cfc:	2301      	movne	r3, #1
 8002cfe:	2300      	moveq	r3, #0
 8002d00:	b2db      	uxtb	r3, r3
 8002d02:	74fb      	strb	r3, [r7, #19]
    switch (machByteOrder) {
 8002d04:	7cfb      	ldrb	r3, [r7, #19]
 8002d06:	2b00      	cmp	r3, #0
 8002d08:	d002      	beq.n	8002d10 <rtGetMinusInf+0x54>
 8002d0a:	2b01      	cmp	r3, #1
 8002d0c:	d009      	beq.n	8002d22 <rtGetMinusInf+0x66>
 8002d0e:	e011      	b.n	8002d34 <rtGetMinusInf+0x78>
        union {
          LittleEndianIEEEDouble bitVal;
          real_T fltVal;
        } tmpVal;

        tmpVal.bitVal.words.wordH = 0xFFF00000U;
 8002d10:	4b0c      	ldr	r3, [pc, #48]	@ (8002d44 <rtGetMinusInf+0x88>)
 8002d12:	60fb      	str	r3, [r7, #12]
        tmpVal.bitVal.words.wordL = 0x00000000U;
 8002d14:	2300      	movs	r3, #0
 8002d16:	60bb      	str	r3, [r7, #8]
        minf = tmpVal.fltVal;
 8002d18:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8002d1c:	e9c7 2306 	strd	r2, r3, [r7, #24]
        break;
 8002d20:	e008      	b.n	8002d34 <rtGetMinusInf+0x78>
        union {
          BigEndianIEEEDouble bitVal;
          real_T fltVal;
        } tmpVal;

        tmpVal.bitVal.words.wordH = 0xFFF00000U;
 8002d22:	4b08      	ldr	r3, [pc, #32]	@ (8002d44 <rtGetMinusInf+0x88>)
 8002d24:	603b      	str	r3, [r7, #0]
        tmpVal.bitVal.words.wordL = 0x00000000U;
 8002d26:	2300      	movs	r3, #0
 8002d28:	607b      	str	r3, [r7, #4]
        minf = tmpVal.fltVal;
 8002d2a:	e9d7 2300 	ldrd	r2, r3, [r7]
 8002d2e:	e9c7 2306 	strd	r2, r3, [r7, #24]
        break;
 8002d32:	bf00      	nop
      }
    }
  }

  return minf;
 8002d34:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
}
 8002d38:	4610      	mov	r0, r2
 8002d3a:	4619      	mov	r1, r3
 8002d3c:	3720      	adds	r7, #32
 8002d3e:	46bd      	mov	sp, r7
 8002d40:	bd80      	pop	{r7, pc}
 8002d42:	bf00      	nop
 8002d44:	fff00000 	.word	0xfff00000

08002d48 <rtGetMinusInfF>:
/*
 * Initialize rtMinusInfF needed by the generated code.
 * Inf is initialized as non-signaling. Assumes IEEE.
 */
real32_T rtGetMinusInfF(void)
{
 8002d48:	b480      	push	{r7}
 8002d4a:	b083      	sub	sp, #12
 8002d4c:	af00      	add	r7, sp, #0
  IEEESingle minfF;
  minfF.wordL.wordLuint = 0xFF800000U;
 8002d4e:	4b04      	ldr	r3, [pc, #16]	@ (8002d60 <rtGetMinusInfF+0x18>)
 8002d50:	607b      	str	r3, [r7, #4]
  return minfF.wordL.wordLreal;
 8002d52:	687b      	ldr	r3, [r7, #4]
}
 8002d54:	4618      	mov	r0, r3
 8002d56:	370c      	adds	r7, #12
 8002d58:	46bd      	mov	sp, r7
 8002d5a:	bc80      	pop	{r7}
 8002d5c:	4770      	bx	lr
 8002d5e:	bf00      	nop
 8002d60:	ff800000 	.word	0xff800000

08002d64 <rtGetNaN>:
/*
 * Initialize rtNaN needed by the generated code.
 * NaN is initialized as non-signaling. Assumes IEEE.
 */
real_T rtGetNaN(void)
{
 8002d64:	b580      	push	{r7, lr}
 8002d66:	b088      	sub	sp, #32
 8002d68:	af00      	add	r7, sp, #0
  size_t bitsPerReal = sizeof(real_T) * (NumBitsPerChar);
 8002d6a:	2340      	movs	r3, #64	@ 0x40
 8002d6c:	617b      	str	r3, [r7, #20]
  real_T nan = 0.0;
 8002d6e:	f04f 0200 	mov.w	r2, #0
 8002d72:	f04f 0300 	mov.w	r3, #0
 8002d76:	e9c7 2306 	strd	r2, r3, [r7, #24]
  if (bitsPerReal == 32U) {
 8002d7a:	697b      	ldr	r3, [r7, #20]
 8002d7c:	2b20      	cmp	r3, #32
 8002d7e:	d10a      	bne.n	8002d96 <rtGetNaN+0x32>
    nan = rtGetNaNF();
 8002d80:	f000 f838 	bl	8002df4 <rtGetNaNF>
 8002d84:	4603      	mov	r3, r0
 8002d86:	4618      	mov	r0, r3
 8002d88:	f7fd fb5e 	bl	8000448 <__aeabi_f2d>
 8002d8c:	4602      	mov	r2, r0
 8002d8e:	460b      	mov	r3, r1
 8002d90:	e9c7 2306 	strd	r2, r3, [r7, #24]
 8002d94:	e024      	b.n	8002de0 <rtGetNaN+0x7c>
  } else {
    uint16_T one = 1U;
 8002d96:	2301      	movs	r3, #1
 8002d98:	823b      	strh	r3, [r7, #16]
    enum {
      LittleEndian,
      BigEndian
    } machByteOrder = (*((uint8_T *) &one) == 1U) ? LittleEndian : BigEndian;
 8002d9a:	f107 0310 	add.w	r3, r7, #16
 8002d9e:	781b      	ldrb	r3, [r3, #0]
 8002da0:	2b01      	cmp	r3, #1
 8002da2:	bf14      	ite	ne
 8002da4:	2301      	movne	r3, #1
 8002da6:	2300      	moveq	r3, #0
 8002da8:	b2db      	uxtb	r3, r3
 8002daa:	74fb      	strb	r3, [r7, #19]
    switch (machByteOrder) {
 8002dac:	7cfb      	ldrb	r3, [r7, #19]
 8002dae:	2b00      	cmp	r3, #0
 8002db0:	d002      	beq.n	8002db8 <rtGetNaN+0x54>
 8002db2:	2b01      	cmp	r3, #1
 8002db4:	d009      	beq.n	8002dca <rtGetNaN+0x66>
 8002db6:	e013      	b.n	8002de0 <rtGetNaN+0x7c>
        union {
          LittleEndianIEEEDouble bitVal;
          real_T fltVal;
        } tmpVal;

        tmpVal.bitVal.words.wordH = 0xFFF80000U;
 8002db8:	4b0d      	ldr	r3, [pc, #52]	@ (8002df0 <rtGetNaN+0x8c>)
 8002dba:	60fb      	str	r3, [r7, #12]
        tmpVal.bitVal.words.wordL = 0x00000000U;
 8002dbc:	2300      	movs	r3, #0
 8002dbe:	60bb      	str	r3, [r7, #8]
        nan = tmpVal.fltVal;
 8002dc0:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8002dc4:	e9c7 2306 	strd	r2, r3, [r7, #24]
        break;
 8002dc8:	e00a      	b.n	8002de0 <rtGetNaN+0x7c>
        union {
          BigEndianIEEEDouble bitVal;
          real_T fltVal;
        } tmpVal;

        tmpVal.bitVal.words.wordH = 0x7FFFFFFFU;
 8002dca:	f06f 4300 	mvn.w	r3, #2147483648	@ 0x80000000
 8002dce:	603b      	str	r3, [r7, #0]
        tmpVal.bitVal.words.wordL = 0xFFFFFFFFU;
 8002dd0:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 8002dd4:	607b      	str	r3, [r7, #4]
        nan = tmpVal.fltVal;
 8002dd6:	e9d7 2300 	ldrd	r2, r3, [r7]
 8002dda:	e9c7 2306 	strd	r2, r3, [r7, #24]
        break;
 8002dde:	bf00      	nop
      }
    }
  }

  return nan;
 8002de0:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
}
 8002de4:	4610      	mov	r0, r2
 8002de6:	4619      	mov	r1, r3
 8002de8:	3720      	adds	r7, #32
 8002dea:	46bd      	mov	sp, r7
 8002dec:	bd80      	pop	{r7, pc}
 8002dee:	bf00      	nop
 8002df0:	fff80000 	.word	0xfff80000

08002df4 <rtGetNaNF>:
/*
 * Initialize rtNaNF needed by the generated code.
 * NaN is initialized as non-signaling. Assumes IEEE.
 */
real32_T rtGetNaNF(void)
{
 8002df4:	b480      	push	{r7}
 8002df6:	b085      	sub	sp, #20
 8002df8:	af00      	add	r7, sp, #0
  IEEESingle nanF = { { 0 } };
 8002dfa:	f04f 0300 	mov.w	r3, #0
 8002dfe:	60bb      	str	r3, [r7, #8]

  uint16_T one = 1U;
 8002e00:	2301      	movs	r3, #1
 8002e02:	80fb      	strh	r3, [r7, #6]
  enum {
    LittleEndian,
    BigEndian
  } machByteOrder = (*((uint8_T *) &one) == 1U) ? LittleEndian : BigEndian;
 8002e04:	1dbb      	adds	r3, r7, #6
 8002e06:	781b      	ldrb	r3, [r3, #0]
 8002e08:	2b01      	cmp	r3, #1
 8002e0a:	bf14      	ite	ne
 8002e0c:	2301      	movne	r3, #1
 8002e0e:	2300      	moveq	r3, #0
 8002e10:	b2db      	uxtb	r3, r3
 8002e12:	73fb      	strb	r3, [r7, #15]
  switch (machByteOrder) {
 8002e14:	7bfb      	ldrb	r3, [r7, #15]
 8002e16:	2b00      	cmp	r3, #0
 8002e18:	d002      	beq.n	8002e20 <rtGetNaNF+0x2c>
 8002e1a:	2b01      	cmp	r3, #1
 8002e1c:	d003      	beq.n	8002e26 <rtGetNaNF+0x32>
 8002e1e:	e006      	b.n	8002e2e <rtGetNaNF+0x3a>
   case LittleEndian:
    {
      nanF.wordL.wordLuint = 0xFFC00000U;
 8002e20:	4b06      	ldr	r3, [pc, #24]	@ (8002e3c <rtGetNaNF+0x48>)
 8002e22:	60bb      	str	r3, [r7, #8]
      break;
 8002e24:	e003      	b.n	8002e2e <rtGetNaNF+0x3a>
    }

   case BigEndian:
    {
      nanF.wordL.wordLuint = 0x7FFFFFFFU;
 8002e26:	f06f 4300 	mvn.w	r3, #2147483648	@ 0x80000000
 8002e2a:	60bb      	str	r3, [r7, #8]
      break;
 8002e2c:	bf00      	nop
    }
  }

  return nanF.wordL.wordLreal;
 8002e2e:	68bb      	ldr	r3, [r7, #8]
}
 8002e30:	4618      	mov	r0, r3
 8002e32:	3714      	adds	r7, #20
 8002e34:	46bd      	mov	sp, r7
 8002e36:	bc80      	pop	{r7}
 8002e38:	4770      	bx	lr
 8002e3a:	bf00      	nop
 8002e3c:	ffc00000 	.word	0xffc00000

08002e40 <rt_InitInfAndNaN>:
/*
 * Initialize the rtInf, rtMinusInf, and rtNaN needed by the
 * generated code. NaN is initialized as non-signaling. Assumes IEEE.
 */
void rt_InitInfAndNaN(size_t realSize)
{
 8002e40:	b580      	push	{r7, lr}
 8002e42:	b082      	sub	sp, #8
 8002e44:	af00      	add	r7, sp, #0
 8002e46:	6078      	str	r0, [r7, #4]
  (void) (realSize);
  rtNaN = rtGetNaN();
 8002e48:	f7ff ff8c 	bl	8002d64 <rtGetNaN>
 8002e4c:	4602      	mov	r2, r0
 8002e4e:	460b      	mov	r3, r1
 8002e50:	4911      	ldr	r1, [pc, #68]	@ (8002e98 <rt_InitInfAndNaN+0x58>)
 8002e52:	e9c1 2300 	strd	r2, r3, [r1]
  rtNaNF = rtGetNaNF();
 8002e56:	f7ff ffcd 	bl	8002df4 <rtGetNaNF>
 8002e5a:	4603      	mov	r3, r0
 8002e5c:	4a0f      	ldr	r2, [pc, #60]	@ (8002e9c <rt_InitInfAndNaN+0x5c>)
 8002e5e:	6013      	str	r3, [r2, #0]
  rtInf = rtGetInf();
 8002e60:	f7ff feda 	bl	8002c18 <rtGetInf>
 8002e64:	4602      	mov	r2, r0
 8002e66:	460b      	mov	r3, r1
 8002e68:	490d      	ldr	r1, [pc, #52]	@ (8002ea0 <rt_InitInfAndNaN+0x60>)
 8002e6a:	e9c1 2300 	strd	r2, r3, [r1]
  rtInfF = rtGetInfF();
 8002e6e:	f7ff ff19 	bl	8002ca4 <rtGetInfF>
 8002e72:	4603      	mov	r3, r0
 8002e74:	4a0b      	ldr	r2, [pc, #44]	@ (8002ea4 <rt_InitInfAndNaN+0x64>)
 8002e76:	6013      	str	r3, [r2, #0]
  rtMinusInf = rtGetMinusInf();
 8002e78:	f7ff ff20 	bl	8002cbc <rtGetMinusInf>
 8002e7c:	4602      	mov	r2, r0
 8002e7e:	460b      	mov	r3, r1
 8002e80:	4909      	ldr	r1, [pc, #36]	@ (8002ea8 <rt_InitInfAndNaN+0x68>)
 8002e82:	e9c1 2300 	strd	r2, r3, [r1]
  rtMinusInfF = rtGetMinusInfF();
 8002e86:	f7ff ff5f 	bl	8002d48 <rtGetMinusInfF>
 8002e8a:	4603      	mov	r3, r0
 8002e8c:	4a07      	ldr	r2, [pc, #28]	@ (8002eac <rt_InitInfAndNaN+0x6c>)
 8002e8e:	6013      	str	r3, [r2, #0]
}
 8002e90:	bf00      	nop
 8002e92:	3708      	adds	r7, #8
 8002e94:	46bd      	mov	sp, r7
 8002e96:	bd80      	pop	{r7, pc}
 8002e98:	20000290 	.word	0x20000290
 8002e9c:	200002a0 	.word	0x200002a0
 8002ea0:	20000280 	.word	0x20000280
 8002ea4:	20000298 	.word	0x20000298
 8002ea8:	20000288 	.word	0x20000288
 8002eac:	2000029c 	.word	0x2000029c

08002eb0 <rtIsInf>:

/* Test if value is infinite */
boolean_T rtIsInf(real_T value)
{
 8002eb0:	b580      	push	{r7, lr}
 8002eb2:	b082      	sub	sp, #8
 8002eb4:	af00      	add	r7, sp, #0
 8002eb6:	e9c7 0100 	strd	r0, r1, [r7]
  return (boolean_T)((value==rtInf || value==rtMinusInf) ? 1U : 0U);
 8002eba:	4b0d      	ldr	r3, [pc, #52]	@ (8002ef0 <rtIsInf+0x40>)
 8002ebc:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002ec0:	e9d7 0100 	ldrd	r0, r1, [r7]
 8002ec4:	f7fd fd80 	bl	80009c8 <__aeabi_dcmpeq>
 8002ec8:	4603      	mov	r3, r0
 8002eca:	2b00      	cmp	r3, #0
 8002ecc:	d109      	bne.n	8002ee2 <rtIsInf+0x32>
 8002ece:	4b09      	ldr	r3, [pc, #36]	@ (8002ef4 <rtIsInf+0x44>)
 8002ed0:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002ed4:	e9d7 0100 	ldrd	r0, r1, [r7]
 8002ed8:	f7fd fd76 	bl	80009c8 <__aeabi_dcmpeq>
 8002edc:	4603      	mov	r3, r0
 8002ede:	2b00      	cmp	r3, #0
 8002ee0:	d001      	beq.n	8002ee6 <rtIsInf+0x36>
 8002ee2:	2301      	movs	r3, #1
 8002ee4:	e000      	b.n	8002ee8 <rtIsInf+0x38>
 8002ee6:	2300      	movs	r3, #0
}
 8002ee8:	4618      	mov	r0, r3
 8002eea:	3708      	adds	r7, #8
 8002eec:	46bd      	mov	sp, r7
 8002eee:	bd80      	pop	{r7, pc}
 8002ef0:	20000280 	.word	0x20000280
 8002ef4:	20000288 	.word	0x20000288

08002ef8 <rtIsNaN>:
  return (boolean_T)(((value)==rtInfF || (value)==rtMinusInfF) ? 1U : 0U);
}

/* Test if value is not a number */
boolean_T rtIsNaN(real_T value)
{
 8002ef8:	b580      	push	{r7, lr}
 8002efa:	b08a      	sub	sp, #40	@ 0x28
 8002efc:	af00      	add	r7, sp, #0
 8002efe:	e9c7 0100 	strd	r0, r1, [r7]
  boolean_T result = (boolean_T) 0;
 8002f02:	2300      	movs	r3, #0
 8002f04:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
  size_t bitsPerReal = sizeof(real_T) * (NumBitsPerChar);
 8002f08:	2340      	movs	r3, #64	@ 0x40
 8002f0a:	623b      	str	r3, [r7, #32]
  if (bitsPerReal == 32U) {
 8002f0c:	6a3b      	ldr	r3, [r7, #32]
 8002f0e:	2b20      	cmp	r3, #32
 8002f10:	d10b      	bne.n	8002f2a <rtIsNaN+0x32>
    result = rtIsNaNF((real32_T)value);
 8002f12:	e9d7 0100 	ldrd	r0, r1, [r7]
 8002f16:	f7fd fde7 	bl	8000ae8 <__aeabi_d2f>
 8002f1a:	4603      	mov	r3, r0
 8002f1c:	4618      	mov	r0, r3
 8002f1e:	f000 f84d 	bl	8002fbc <rtIsNaNF>
 8002f22:	4603      	mov	r3, r0
 8002f24:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8002f28:	e040      	b.n	8002fac <rtIsNaN+0xb4>
  } else {
    uint16_T one = 1U;
 8002f2a:	2301      	movs	r3, #1
 8002f2c:	83bb      	strh	r3, [r7, #28]
    enum {
      LittleEndian,
      BigEndian
    } machByteOrder = (*((uint8_T *) &one) == 1U) ? LittleEndian : BigEndian;
 8002f2e:	f107 031c 	add.w	r3, r7, #28
 8002f32:	781b      	ldrb	r3, [r3, #0]
 8002f34:	2b01      	cmp	r3, #1
 8002f36:	bf14      	ite	ne
 8002f38:	2301      	movne	r3, #1
 8002f3a:	2300      	moveq	r3, #0
 8002f3c:	b2db      	uxtb	r3, r3
 8002f3e:	77fb      	strb	r3, [r7, #31]
    switch (machByteOrder) {
 8002f40:	7ffb      	ldrb	r3, [r7, #31]
 8002f42:	2b00      	cmp	r3, #0
 8002f44:	d002      	beq.n	8002f4c <rtIsNaN+0x54>
 8002f46:	2b01      	cmp	r3, #1
 8002f48:	d018      	beq.n	8002f7c <rtIsNaN+0x84>
 8002f4a:	e02f      	b.n	8002fac <rtIsNaN+0xb4>
        union {
          LittleEndianIEEEDouble bitVal;
          real_T fltVal;
        } tmpVal;

        tmpVal.fltVal = value;
 8002f4c:	e9d7 2300 	ldrd	r2, r3, [r7]
 8002f50:	e9c7 2304 	strd	r2, r3, [r7, #16]
        result = (boolean_T)((tmpVal.bitVal.words.wordH & 0x7FF00000) ==
 8002f54:	697a      	ldr	r2, [r7, #20]
 8002f56:	4b18      	ldr	r3, [pc, #96]	@ (8002fb8 <rtIsNaN+0xc0>)
 8002f58:	4013      	ands	r3, r2
                             0x7FF00000 &&
 8002f5a:	4a17      	ldr	r2, [pc, #92]	@ (8002fb8 <rtIsNaN+0xc0>)
 8002f5c:	4293      	cmp	r3, r2
 8002f5e:	d109      	bne.n	8002f74 <rtIsNaN+0x7c>
                             ( (tmpVal.bitVal.words.wordH & 0x000FFFFF) != 0 ||
 8002f60:	697b      	ldr	r3, [r7, #20]
 8002f62:	f3c3 0313 	ubfx	r3, r3, #0, #20
                             0x7FF00000 &&
 8002f66:	2b00      	cmp	r3, #0
 8002f68:	d102      	bne.n	8002f70 <rtIsNaN+0x78>
                              (tmpVal.bitVal.words.wordL != 0) ));
 8002f6a:	693b      	ldr	r3, [r7, #16]
                             ( (tmpVal.bitVal.words.wordH & 0x000FFFFF) != 0 ||
 8002f6c:	2b00      	cmp	r3, #0
 8002f6e:	d001      	beq.n	8002f74 <rtIsNaN+0x7c>
                             0x7FF00000 &&
 8002f70:	2301      	movs	r3, #1
 8002f72:	e000      	b.n	8002f76 <rtIsNaN+0x7e>
 8002f74:	2300      	movs	r3, #0
        result = (boolean_T)((tmpVal.bitVal.words.wordH & 0x7FF00000) ==
 8002f76:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
        break;
 8002f7a:	e017      	b.n	8002fac <rtIsNaN+0xb4>
        union {
          BigEndianIEEEDouble bitVal;
          real_T fltVal;
        } tmpVal;

        tmpVal.fltVal = value;
 8002f7c:	e9d7 2300 	ldrd	r2, r3, [r7]
 8002f80:	e9c7 2302 	strd	r2, r3, [r7, #8]
        result = (boolean_T)((tmpVal.bitVal.words.wordH & 0x7FF00000) ==
 8002f84:	68ba      	ldr	r2, [r7, #8]
 8002f86:	4b0c      	ldr	r3, [pc, #48]	@ (8002fb8 <rtIsNaN+0xc0>)
 8002f88:	4013      	ands	r3, r2
                             0x7FF00000 &&
 8002f8a:	4a0b      	ldr	r2, [pc, #44]	@ (8002fb8 <rtIsNaN+0xc0>)
 8002f8c:	4293      	cmp	r3, r2
 8002f8e:	d109      	bne.n	8002fa4 <rtIsNaN+0xac>
                             ( (tmpVal.bitVal.words.wordH & 0x000FFFFF) != 0 ||
 8002f90:	68bb      	ldr	r3, [r7, #8]
 8002f92:	f3c3 0313 	ubfx	r3, r3, #0, #20
                             0x7FF00000 &&
 8002f96:	2b00      	cmp	r3, #0
 8002f98:	d102      	bne.n	8002fa0 <rtIsNaN+0xa8>
                              (tmpVal.bitVal.words.wordL != 0) ));
 8002f9a:	68fb      	ldr	r3, [r7, #12]
                             ( (tmpVal.bitVal.words.wordH & 0x000FFFFF) != 0 ||
 8002f9c:	2b00      	cmp	r3, #0
 8002f9e:	d001      	beq.n	8002fa4 <rtIsNaN+0xac>
                             0x7FF00000 &&
 8002fa0:	2301      	movs	r3, #1
 8002fa2:	e000      	b.n	8002fa6 <rtIsNaN+0xae>
 8002fa4:	2300      	movs	r3, #0
        result = (boolean_T)((tmpVal.bitVal.words.wordH & 0x7FF00000) ==
 8002fa6:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
        break;
 8002faa:	bf00      	nop
      }
    }
  }

  return result;
 8002fac:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
}
 8002fb0:	4618      	mov	r0, r3
 8002fb2:	3728      	adds	r7, #40	@ 0x28
 8002fb4:	46bd      	mov	sp, r7
 8002fb6:	bd80      	pop	{r7, pc}
 8002fb8:	7ff00000 	.word	0x7ff00000

08002fbc <rtIsNaNF>:

/* Test if single-precision value is not a number */
boolean_T rtIsNaNF(real32_T value)
{
 8002fbc:	b480      	push	{r7}
 8002fbe:	b085      	sub	sp, #20
 8002fc0:	af00      	add	r7, sp, #0
 8002fc2:	6078      	str	r0, [r7, #4]
  IEEESingle tmp;
  tmp.wordL.wordLreal = value;
 8002fc4:	687b      	ldr	r3, [r7, #4]
 8002fc6:	60fb      	str	r3, [r7, #12]
  return (boolean_T)( (tmp.wordL.wordLuint & 0x7F800000) == 0x7F800000 &&
 8002fc8:	68fb      	ldr	r3, [r7, #12]
 8002fca:	f003 43ff 	and.w	r3, r3, #2139095040	@ 0x7f800000
 8002fce:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 8002fd2:	d106      	bne.n	8002fe2 <rtIsNaNF+0x26>
                     (tmp.wordL.wordLuint & 0x007FFFFF) != 0 );
 8002fd4:	68fb      	ldr	r3, [r7, #12]
 8002fd6:	f3c3 0316 	ubfx	r3, r3, #0, #23
  return (boolean_T)( (tmp.wordL.wordLuint & 0x7F800000) == 0x7F800000 &&
 8002fda:	2b00      	cmp	r3, #0
 8002fdc:	d001      	beq.n	8002fe2 <rtIsNaNF+0x26>
 8002fde:	2301      	movs	r3, #1
 8002fe0:	e000      	b.n	8002fe4 <rtIsNaNF+0x28>
 8002fe2:	2300      	movs	r3, #0
 8002fe4:	b2db      	uxtb	r3, r3
}
 8002fe6:	4618      	mov	r0, r3
 8002fe8:	3714      	adds	r7, #20
 8002fea:	46bd      	mov	sp, r7
 8002fec:	bc80      	pop	{r7}
 8002fee:	4770      	bx	lr

08002ff0 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8002ff0:	b480      	push	{r7}
 8002ff2:	af00      	add	r7, sp, #0
  return 1;
 8002ff4:	2301      	movs	r3, #1
}
 8002ff6:	4618      	mov	r0, r3
 8002ff8:	46bd      	mov	sp, r7
 8002ffa:	bc80      	pop	{r7}
 8002ffc:	4770      	bx	lr

08002ffe <_kill>:

int _kill(int pid, int sig)
{
 8002ffe:	b580      	push	{r7, lr}
 8003000:	b082      	sub	sp, #8
 8003002:	af00      	add	r7, sp, #0
 8003004:	6078      	str	r0, [r7, #4]
 8003006:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 8003008:	f001 ffba 	bl	8004f80 <__errno>
 800300c:	4603      	mov	r3, r0
 800300e:	2216      	movs	r2, #22
 8003010:	601a      	str	r2, [r3, #0]
  return -1;
 8003012:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
}
 8003016:	4618      	mov	r0, r3
 8003018:	3708      	adds	r7, #8
 800301a:	46bd      	mov	sp, r7
 800301c:	bd80      	pop	{r7, pc}

0800301e <_exit>:

void _exit (int status)
{
 800301e:	b580      	push	{r7, lr}
 8003020:	b082      	sub	sp, #8
 8003022:	af00      	add	r7, sp, #0
 8003024:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 8003026:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
 800302a:	6878      	ldr	r0, [r7, #4]
 800302c:	f7ff ffe7 	bl	8002ffe <_kill>
  while (1) {}    /* Make sure we hang here */
 8003030:	bf00      	nop
 8003032:	e7fd      	b.n	8003030 <_exit+0x12>

08003034 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8003034:	b580      	push	{r7, lr}
 8003036:	b086      	sub	sp, #24
 8003038:	af00      	add	r7, sp, #0
 800303a:	60f8      	str	r0, [r7, #12]
 800303c:	60b9      	str	r1, [r7, #8]
 800303e:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8003040:	2300      	movs	r3, #0
 8003042:	617b      	str	r3, [r7, #20]
 8003044:	e00a      	b.n	800305c <_read+0x28>
  {
    *ptr++ = __io_getchar();
 8003046:	f3af 8000 	nop.w
 800304a:	4601      	mov	r1, r0
 800304c:	68bb      	ldr	r3, [r7, #8]
 800304e:	1c5a      	adds	r2, r3, #1
 8003050:	60ba      	str	r2, [r7, #8]
 8003052:	b2ca      	uxtb	r2, r1
 8003054:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8003056:	697b      	ldr	r3, [r7, #20]
 8003058:	3301      	adds	r3, #1
 800305a:	617b      	str	r3, [r7, #20]
 800305c:	697a      	ldr	r2, [r7, #20]
 800305e:	687b      	ldr	r3, [r7, #4]
 8003060:	429a      	cmp	r2, r3
 8003062:	dbf0      	blt.n	8003046 <_read+0x12>
  }

  return len;
 8003064:	687b      	ldr	r3, [r7, #4]
}
 8003066:	4618      	mov	r0, r3
 8003068:	3718      	adds	r7, #24
 800306a:	46bd      	mov	sp, r7
 800306c:	bd80      	pop	{r7, pc}

0800306e <_close>:
  }
  return len;
}

int _close(int file)
{
 800306e:	b480      	push	{r7}
 8003070:	b083      	sub	sp, #12
 8003072:	af00      	add	r7, sp, #0
 8003074:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8003076:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
}
 800307a:	4618      	mov	r0, r3
 800307c:	370c      	adds	r7, #12
 800307e:	46bd      	mov	sp, r7
 8003080:	bc80      	pop	{r7}
 8003082:	4770      	bx	lr

08003084 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8003084:	b480      	push	{r7}
 8003086:	b083      	sub	sp, #12
 8003088:	af00      	add	r7, sp, #0
 800308a:	6078      	str	r0, [r7, #4]
 800308c:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 800308e:	683b      	ldr	r3, [r7, #0]
 8003090:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8003094:	605a      	str	r2, [r3, #4]
  return 0;
 8003096:	2300      	movs	r3, #0
}
 8003098:	4618      	mov	r0, r3
 800309a:	370c      	adds	r7, #12
 800309c:	46bd      	mov	sp, r7
 800309e:	bc80      	pop	{r7}
 80030a0:	4770      	bx	lr

080030a2 <_isatty>:

int _isatty(int file)
{
 80030a2:	b480      	push	{r7}
 80030a4:	b083      	sub	sp, #12
 80030a6:	af00      	add	r7, sp, #0
 80030a8:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 80030aa:	2301      	movs	r3, #1
}
 80030ac:	4618      	mov	r0, r3
 80030ae:	370c      	adds	r7, #12
 80030b0:	46bd      	mov	sp, r7
 80030b2:	bc80      	pop	{r7}
 80030b4:	4770      	bx	lr

080030b6 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80030b6:	b480      	push	{r7}
 80030b8:	b085      	sub	sp, #20
 80030ba:	af00      	add	r7, sp, #0
 80030bc:	60f8      	str	r0, [r7, #12]
 80030be:	60b9      	str	r1, [r7, #8]
 80030c0:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 80030c2:	2300      	movs	r3, #0
}
 80030c4:	4618      	mov	r0, r3
 80030c6:	3714      	adds	r7, #20
 80030c8:	46bd      	mov	sp, r7
 80030ca:	bc80      	pop	{r7}
 80030cc:	4770      	bx	lr
	...

080030d0 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80030d0:	b580      	push	{r7, lr}
 80030d2:	b086      	sub	sp, #24
 80030d4:	af00      	add	r7, sp, #0
 80030d6:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80030d8:	4a14      	ldr	r2, [pc, #80]	@ (800312c <_sbrk+0x5c>)
 80030da:	4b15      	ldr	r3, [pc, #84]	@ (8003130 <_sbrk+0x60>)
 80030dc:	1ad3      	subs	r3, r2, r3
 80030de:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80030e0:	697b      	ldr	r3, [r7, #20]
 80030e2:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80030e4:	4b13      	ldr	r3, [pc, #76]	@ (8003134 <_sbrk+0x64>)
 80030e6:	681b      	ldr	r3, [r3, #0]
 80030e8:	2b00      	cmp	r3, #0
 80030ea:	d102      	bne.n	80030f2 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80030ec:	4b11      	ldr	r3, [pc, #68]	@ (8003134 <_sbrk+0x64>)
 80030ee:	4a12      	ldr	r2, [pc, #72]	@ (8003138 <_sbrk+0x68>)
 80030f0:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80030f2:	4b10      	ldr	r3, [pc, #64]	@ (8003134 <_sbrk+0x64>)
 80030f4:	681a      	ldr	r2, [r3, #0]
 80030f6:	687b      	ldr	r3, [r7, #4]
 80030f8:	4413      	add	r3, r2
 80030fa:	693a      	ldr	r2, [r7, #16]
 80030fc:	429a      	cmp	r2, r3
 80030fe:	d207      	bcs.n	8003110 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8003100:	f001 ff3e 	bl	8004f80 <__errno>
 8003104:	4603      	mov	r3, r0
 8003106:	220c      	movs	r2, #12
 8003108:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800310a:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 800310e:	e009      	b.n	8003124 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8003110:	4b08      	ldr	r3, [pc, #32]	@ (8003134 <_sbrk+0x64>)
 8003112:	681b      	ldr	r3, [r3, #0]
 8003114:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8003116:	4b07      	ldr	r3, [pc, #28]	@ (8003134 <_sbrk+0x64>)
 8003118:	681a      	ldr	r2, [r3, #0]
 800311a:	687b      	ldr	r3, [r7, #4]
 800311c:	4413      	add	r3, r2
 800311e:	4a05      	ldr	r2, [pc, #20]	@ (8003134 <_sbrk+0x64>)
 8003120:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8003122:	68fb      	ldr	r3, [r7, #12]
}
 8003124:	4618      	mov	r0, r3
 8003126:	3718      	adds	r7, #24
 8003128:	46bd      	mov	sp, r7
 800312a:	bd80      	pop	{r7, pc}
 800312c:	20005000 	.word	0x20005000
 8003130:	00000400 	.word	0x00000400
 8003134:	200002a4 	.word	0x200002a4
 8003138:	200003f8 	.word	0x200003f8

0800313c <tim2_get_prescaler>:

#include "timers.h"
#include "main.h"
#include <math.h>

uint16_t tim2_get_prescaler(float time) {
 800313c:	b580      	push	{r7, lr}
 800313e:	b082      	sub	sp, #8
 8003140:	af00      	add	r7, sp, #0
 8003142:	6078      	str	r0, [r7, #4]
    return (uint16_t)(ceil((time / (T_HCLK * ((65535 + 1) - 0))) - 1));
 8003144:	490f      	ldr	r1, [pc, #60]	@ (8003184 <tim2_get_prescaler+0x48>)
 8003146:	6878      	ldr	r0, [r7, #4]
 8003148:	f7fd fee0 	bl	8000f0c <__aeabi_fdiv>
 800314c:	4603      	mov	r3, r0
 800314e:	f04f 517e 	mov.w	r1, #1065353216	@ 0x3f800000
 8003152:	4618      	mov	r0, r3
 8003154:	f7fd fd1c 	bl	8000b90 <__aeabi_fsub>
 8003158:	4603      	mov	r3, r0
 800315a:	4618      	mov	r0, r3
 800315c:	f7fd f974 	bl	8000448 <__aeabi_f2d>
 8003160:	4602      	mov	r2, r0
 8003162:	460b      	mov	r3, r1
 8003164:	4610      	mov	r0, r2
 8003166:	4619      	mov	r1, r3
 8003168:	f004 fde2 	bl	8007d30 <ceil>
 800316c:	4602      	mov	r2, r0
 800316e:	460b      	mov	r3, r1
 8003170:	4610      	mov	r0, r2
 8003172:	4619      	mov	r1, r3
 8003174:	f7fd fc98 	bl	8000aa8 <__aeabi_d2uiz>
 8003178:	4603      	mov	r3, r0
 800317a:	b29b      	uxth	r3, r3
}
 800317c:	4618      	mov	r0, r3
 800317e:	3708      	adds	r7, #8
 8003180:	46bd      	mov	sp, r7
 8003182:	bd80      	pop	{r7, pc}
 8003184:	3b0637bd 	.word	0x3b0637bd

08003188 <tim2_get_init_count>:

uint16_t tim2_get_init_count(float time, uint16_t prescaler) {
 8003188:	b580      	push	{r7, lr}
 800318a:	b082      	sub	sp, #8
 800318c:	af00      	add	r7, sp, #0
 800318e:	6078      	str	r0, [r7, #4]
 8003190:	460b      	mov	r3, r1
 8003192:	807b      	strh	r3, [r7, #2]
    return (uint16_t)((65535 + 1) - (round(time / (T_HCLK * (prescaler + 1)))));
 8003194:	887b      	ldrh	r3, [r7, #2]
 8003196:	3301      	adds	r3, #1
 8003198:	4618      	mov	r0, r3
 800319a:	f7fd fdaf 	bl	8000cfc <__aeabi_i2f>
 800319e:	4603      	mov	r3, r0
 80031a0:	4912      	ldr	r1, [pc, #72]	@ (80031ec <tim2_get_init_count+0x64>)
 80031a2:	4618      	mov	r0, r3
 80031a4:	f7fd fdfe 	bl	8000da4 <__aeabi_fmul>
 80031a8:	4603      	mov	r3, r0
 80031aa:	4619      	mov	r1, r3
 80031ac:	6878      	ldr	r0, [r7, #4]
 80031ae:	f7fd fead 	bl	8000f0c <__aeabi_fdiv>
 80031b2:	4603      	mov	r3, r0
 80031b4:	4618      	mov	r0, r3
 80031b6:	f7fd f947 	bl	8000448 <__aeabi_f2d>
 80031ba:	4602      	mov	r2, r0
 80031bc:	460b      	mov	r3, r1
 80031be:	4610      	mov	r0, r2
 80031c0:	4619      	mov	r1, r3
 80031c2:	f004 feb1 	bl	8007f28 <round>
 80031c6:	4602      	mov	r2, r0
 80031c8:	460b      	mov	r3, r1
 80031ca:	f04f 0000 	mov.w	r0, #0
 80031ce:	4908      	ldr	r1, [pc, #32]	@ (80031f0 <tim2_get_init_count+0x68>)
 80031d0:	f7fc ffda 	bl	8000188 <__aeabi_dsub>
 80031d4:	4602      	mov	r2, r0
 80031d6:	460b      	mov	r3, r1
 80031d8:	4610      	mov	r0, r2
 80031da:	4619      	mov	r1, r3
 80031dc:	f7fd fc64 	bl	8000aa8 <__aeabi_d2uiz>
 80031e0:	4603      	mov	r3, r0
 80031e2:	b29b      	uxth	r3, r3
}
 80031e4:	4618      	mov	r0, r3
 80031e6:	3708      	adds	r7, #8
 80031e8:	46bd      	mov	sp, r7
 80031ea:	bd80      	pop	{r7, pc}
 80031ec:	330637bd 	.word	0x330637bd
 80031f0:	40f00000 	.word	0x40f00000

080031f4 <tim2_delay>:

void tim2_delay(float time) {
 80031f4:	b580      	push	{r7, lr}
 80031f6:	b084      	sub	sp, #16
 80031f8:	af00      	add	r7, sp, #0
 80031fa:	6078      	str	r0, [r7, #4]
    uint16_t prescaler = tim2_get_prescaler(time);
 80031fc:	6878      	ldr	r0, [r7, #4]
 80031fe:	f7ff ff9d 	bl	800313c <tim2_get_prescaler>
 8003202:	4603      	mov	r3, r0
 8003204:	81fb      	strh	r3, [r7, #14]
    uint16_t init_count = tim2_get_init_count(time, prescaler);
 8003206:	89fb      	ldrh	r3, [r7, #14]
 8003208:	4619      	mov	r1, r3
 800320a:	6878      	ldr	r0, [r7, #4]
 800320c:	f7ff ffbc 	bl	8003188 <tim2_get_init_count>
 8003210:	4603      	mov	r3, r0
 8003212:	81bb      	strh	r3, [r7, #12]

    // Enable Timer 2 clock
    RCC->APB1ENR |= (0x1 << 0U);
 8003214:	4b1e      	ldr	r3, [pc, #120]	@ (8003290 <tim2_delay+0x9c>)
 8003216:	69db      	ldr	r3, [r3, #28]
 8003218:	4a1d      	ldr	r2, [pc, #116]	@ (8003290 <tim2_delay+0x9c>)
 800321a:	f043 0301 	orr.w	r3, r3, #1
 800321e:	61d3      	str	r3, [r2, #28]

    RCC->APB2ENR    |=  ( 0x1UL <<  4U );
 8003220:	4b1b      	ldr	r3, [pc, #108]	@ (8003290 <tim2_delay+0x9c>)
 8003222:	699b      	ldr	r3, [r3, #24]
 8003224:	4a1a      	ldr	r2, [pc, #104]	@ (8003290 <tim2_delay+0x9c>)
 8003226:	f043 0310 	orr.w	r3, r3, #16
 800322a:	6193      	str	r3, [r2, #24]

    // Clear control register 1 of Timer 2 to reset configuration
    TIM2->CR1 &= ~(0x72);
 800322c:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8003230:	681b      	ldr	r3, [r3, #0]
 8003232:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 8003236:	f023 0372 	bic.w	r3, r3, #114	@ 0x72
 800323a:	6013      	str	r3, [r2, #0]

    // Clear status register of Timer 2 to reset any pending flags
    TIM2->SR &= ~(0x1UL << 0U);
 800323c:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8003240:	691b      	ldr	r3, [r3, #16]
 8003242:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 8003246:	f023 0301 	bic.w	r3, r3, #1
 800324a:	6113      	str	r3, [r2, #16]

    // Set auto-reload register of Timer 2 to maximum value for longest delay
    TIM2->ARR = 65535;
 800324c:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8003250:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8003254:	62da      	str	r2, [r3, #44]	@ 0x2c

    // Set counter register of Timer 2 to initial value for desired delay
    TIM2->CNT = init_count;
 8003256:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 800325a:	89bb      	ldrh	r3, [r7, #12]
 800325c:	6253      	str	r3, [r2, #36]	@ 0x24

    // Set prescaler register of Timer 2 for desired time base
    TIM2->PSC = prescaler;
 800325e:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 8003262:	89fb      	ldrh	r3, [r7, #14]
 8003264:	6293      	str	r3, [r2, #40]	@ 0x28

    // Start Timer 2 by setting control register 1
    TIM2->CR1 |= (0x1 << 0U);
 8003266:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 800326a:	681b      	ldr	r3, [r3, #0]
 800326c:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 8003270:	f043 0301 	orr.w	r3, r3, #1
 8003274:	6013      	str	r3, [r2, #0]

    // Wait until Timer 2 update event occurs
    while ((TIM2->SR & (0x1UL << 0U)) == 0);
 8003276:	bf00      	nop
 8003278:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 800327c:	691b      	ldr	r3, [r3, #16]
 800327e:	f003 0301 	and.w	r3, r3, #1
 8003282:	2b00      	cmp	r3, #0
 8003284:	d0f8      	beq.n	8003278 <tim2_delay+0x84>

}
 8003286:	bf00      	nop
 8003288:	bf00      	nop
 800328a:	3710      	adds	r7, #16
 800328c:	46bd      	mov	sp, r7
 800328e:	bd80      	pop	{r7, pc}
 8003290:	40021000 	.word	0x40021000

08003294 <_write>:
#include "main.h"
#include "uart.h"

static void USER_USART1_Send_8bit( uint8_t Data );

int _write(int  file, char *ptr, int len){
 8003294:	b480      	push	{r7}
 8003296:	b087      	sub	sp, #28
 8003298:	af00      	add	r7, sp, #0
 800329a:	60f8      	str	r0, [r7, #12]
 800329c:	60b9      	str	r1, [r7, #8]
 800329e:	607a      	str	r2, [r7, #4]
	int DataIdx;
	for(DataIdx = 0; DataIdx < len ; DataIdx++){
 80032a0:	2300      	movs	r3, #0
 80032a2:	617b      	str	r3, [r7, #20]
 80032a4:	e00f      	b.n	80032c6 <_write+0x32>
		while(!( USART1 -> SR & USART_SR_TXE ));
 80032a6:	bf00      	nop
 80032a8:	4b0c      	ldr	r3, [pc, #48]	@ (80032dc <_write+0x48>)
 80032aa:	681b      	ldr	r3, [r3, #0]
 80032ac:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80032b0:	2b00      	cmp	r3, #0
 80032b2:	d0f9      	beq.n	80032a8 <_write+0x14>
		USART1 -> DR = *ptr++;
 80032b4:	68bb      	ldr	r3, [r7, #8]
 80032b6:	1c5a      	adds	r2, r3, #1
 80032b8:	60ba      	str	r2, [r7, #8]
 80032ba:	781a      	ldrb	r2, [r3, #0]
 80032bc:	4b07      	ldr	r3, [pc, #28]	@ (80032dc <_write+0x48>)
 80032be:	605a      	str	r2, [r3, #4]
	for(DataIdx = 0; DataIdx < len ; DataIdx++){
 80032c0:	697b      	ldr	r3, [r7, #20]
 80032c2:	3301      	adds	r3, #1
 80032c4:	617b      	str	r3, [r7, #20]
 80032c6:	697a      	ldr	r2, [r7, #20]
 80032c8:	687b      	ldr	r3, [r7, #4]
 80032ca:	429a      	cmp	r2, r3
 80032cc:	dbeb      	blt.n	80032a6 <_write+0x12>
	}
	return len;
 80032ce:	687b      	ldr	r3, [r7, #4]
}
 80032d0:	4618      	mov	r0, r3
 80032d2:	371c      	adds	r7, #28
 80032d4:	46bd      	mov	sp, r7
 80032d6:	bc80      	pop	{r7}
 80032d8:	4770      	bx	lr
 80032da:	bf00      	nop
 80032dc:	40013800 	.word	0x40013800

080032e0 <USER_USART1_Init>:

void USER_USART1_Init( void ){
 80032e0:	b480      	push	{r7}
 80032e2:	af00      	add	r7, sp, #0
	USART1->CR1	|=	 USART_CR1_UE;//	Step 1 Usart enabled
 80032e4:	4b12      	ldr	r3, [pc, #72]	@ (8003330 <USER_USART1_Init+0x50>)
 80032e6:	68db      	ldr	r3, [r3, #12]
 80032e8:	4a11      	ldr	r2, [pc, #68]	@ (8003330 <USER_USART1_Init+0x50>)
 80032ea:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 80032ee:	60d3      	str	r3, [r2, #12]
	USART1->CR1	&=	~USART_CR1_M;//		Step 2 8 Data bits
 80032f0:	4b0f      	ldr	r3, [pc, #60]	@ (8003330 <USER_USART1_Init+0x50>)
 80032f2:	68db      	ldr	r3, [r3, #12]
 80032f4:	4a0e      	ldr	r2, [pc, #56]	@ (8003330 <USER_USART1_Init+0x50>)
 80032f6:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 80032fa:	60d3      	str	r3, [r2, #12]
	USART1->CR2	&=	~USART_CR2_STOP;//	Step 3 1 Stop bit
 80032fc:	4b0c      	ldr	r3, [pc, #48]	@ (8003330 <USER_USART1_Init+0x50>)
 80032fe:	691b      	ldr	r3, [r3, #16]
 8003300:	4a0b      	ldr	r2, [pc, #44]	@ (8003330 <USER_USART1_Init+0x50>)
 8003302:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 8003306:	6113      	str	r3, [r2, #16]
	USART1->BRR	 =	 USARTDIV;//		Step 5 Desired baud rate
 8003308:	4b09      	ldr	r3, [pc, #36]	@ (8003330 <USER_USART1_Init+0x50>)
 800330a:	f44f 720b 	mov.w	r2, #556	@ 0x22c
 800330e:	609a      	str	r2, [r3, #8]
	USART1->CR1	|= 	 USART_CR1_TE;//	Step 6 Transmitter enabled
 8003310:	4b07      	ldr	r3, [pc, #28]	@ (8003330 <USER_USART1_Init+0x50>)
 8003312:	68db      	ldr	r3, [r3, #12]
 8003314:	4a06      	ldr	r2, [pc, #24]	@ (8003330 <USER_USART1_Init+0x50>)
 8003316:	f043 0308 	orr.w	r3, r3, #8
 800331a:	60d3      	str	r3, [r2, #12]
	USART1->CR1	|= 	 USART_CR1_RE;//	Step 7 Receiver enabled
 800331c:	4b04      	ldr	r3, [pc, #16]	@ (8003330 <USER_USART1_Init+0x50>)
 800331e:	68db      	ldr	r3, [r3, #12]
 8003320:	4a03      	ldr	r2, [pc, #12]	@ (8003330 <USER_USART1_Init+0x50>)
 8003322:	f043 0304 	orr.w	r3, r3, #4
 8003326:	60d3      	str	r3, [r2, #12]
}
 8003328:	bf00      	nop
 800332a:	46bd      	mov	sp, r7
 800332c:	bc80      	pop	{r7}
 800332e:	4770      	bx	lr
 8003330:	40013800 	.word	0x40013800

08003334 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8003334:	480d      	ldr	r0, [pc, #52]	@ (800336c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8003336:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8003338:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800333c:	480c      	ldr	r0, [pc, #48]	@ (8003370 <LoopForever+0x6>)
  ldr r1, =_edata
 800333e:	490d      	ldr	r1, [pc, #52]	@ (8003374 <LoopForever+0xa>)
  ldr r2, =_sidata
 8003340:	4a0d      	ldr	r2, [pc, #52]	@ (8003378 <LoopForever+0xe>)
  movs r3, #0
 8003342:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8003344:	e002      	b.n	800334c <LoopCopyDataInit>

08003346 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8003346:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8003348:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800334a:	3304      	adds	r3, #4

0800334c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800334c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800334e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8003350:	d3f9      	bcc.n	8003346 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8003352:	4a0a      	ldr	r2, [pc, #40]	@ (800337c <LoopForever+0x12>)
  ldr r4, =_ebss
 8003354:	4c0a      	ldr	r4, [pc, #40]	@ (8003380 <LoopForever+0x16>)
  movs r3, #0
 8003356:	2300      	movs	r3, #0
  b LoopFillZerobss
 8003358:	e001      	b.n	800335e <LoopFillZerobss>

0800335a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800335a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800335c:	3204      	adds	r2, #4

0800335e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800335e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8003360:	d3fb      	bcc.n	800335a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8003362:	f001 fe13 	bl	8004f8c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8003366:	f7ff fa35 	bl	80027d4 <main>

0800336a <LoopForever>:

LoopForever:
  b LoopForever
 800336a:	e7fe      	b.n	800336a <LoopForever>
  ldr   r0, =_estack
 800336c:	20005000 	.word	0x20005000
  ldr r0, =_sdata
 8003370:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8003374:	200001d8 	.word	0x200001d8
  ldr r2, =_sidata
 8003378:	080098a0 	.word	0x080098a0
  ldr r2, =_sbss
 800337c:	200001d8 	.word	0x200001d8
  ldr r4, =_ebss
 8003380:	200003f4 	.word	0x200003f4

08003384 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8003384:	e7fe      	b.n	8003384 <ADC1_2_IRQHandler>

08003386 <__cvt>:
 8003386:	2b00      	cmp	r3, #0
 8003388:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800338c:	461d      	mov	r5, r3
 800338e:	bfbb      	ittet	lt
 8003390:	f103 4300 	addlt.w	r3, r3, #2147483648	@ 0x80000000
 8003394:	461d      	movlt	r5, r3
 8003396:	2300      	movge	r3, #0
 8003398:	232d      	movlt	r3, #45	@ 0x2d
 800339a:	b088      	sub	sp, #32
 800339c:	4614      	mov	r4, r2
 800339e:	bfb8      	it	lt
 80033a0:	4614      	movlt	r4, r2
 80033a2:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80033a4:	9e10      	ldr	r6, [sp, #64]	@ 0x40
 80033a6:	7013      	strb	r3, [r2, #0]
 80033a8:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 80033aa:	f8dd a04c 	ldr.w	sl, [sp, #76]	@ 0x4c
 80033ae:	f023 0820 	bic.w	r8, r3, #32
 80033b2:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 80033b6:	d005      	beq.n	80033c4 <__cvt+0x3e>
 80033b8:	f1b8 0f45 	cmp.w	r8, #69	@ 0x45
 80033bc:	d100      	bne.n	80033c0 <__cvt+0x3a>
 80033be:	3601      	adds	r6, #1
 80033c0:	2302      	movs	r3, #2
 80033c2:	e000      	b.n	80033c6 <__cvt+0x40>
 80033c4:	2303      	movs	r3, #3
 80033c6:	aa07      	add	r2, sp, #28
 80033c8:	9204      	str	r2, [sp, #16]
 80033ca:	aa06      	add	r2, sp, #24
 80033cc:	e9cd a202 	strd	sl, r2, [sp, #8]
 80033d0:	e9cd 3600 	strd	r3, r6, [sp]
 80033d4:	4622      	mov	r2, r4
 80033d6:	462b      	mov	r3, r5
 80033d8:	f001 feae 	bl	8005138 <_dtoa_r>
 80033dc:	f1b8 0f47 	cmp.w	r8, #71	@ 0x47
 80033e0:	4607      	mov	r7, r0
 80033e2:	d119      	bne.n	8003418 <__cvt+0x92>
 80033e4:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 80033e6:	07db      	lsls	r3, r3, #31
 80033e8:	d50e      	bpl.n	8003408 <__cvt+0x82>
 80033ea:	eb00 0906 	add.w	r9, r0, r6
 80033ee:	2200      	movs	r2, #0
 80033f0:	2300      	movs	r3, #0
 80033f2:	4620      	mov	r0, r4
 80033f4:	4629      	mov	r1, r5
 80033f6:	f7fd fae7 	bl	80009c8 <__aeabi_dcmpeq>
 80033fa:	b108      	cbz	r0, 8003400 <__cvt+0x7a>
 80033fc:	f8cd 901c 	str.w	r9, [sp, #28]
 8003400:	2230      	movs	r2, #48	@ 0x30
 8003402:	9b07      	ldr	r3, [sp, #28]
 8003404:	454b      	cmp	r3, r9
 8003406:	d31e      	bcc.n	8003446 <__cvt+0xc0>
 8003408:	4638      	mov	r0, r7
 800340a:	9b07      	ldr	r3, [sp, #28]
 800340c:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 800340e:	1bdb      	subs	r3, r3, r7
 8003410:	6013      	str	r3, [r2, #0]
 8003412:	b008      	add	sp, #32
 8003414:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003418:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 800341c:	eb00 0906 	add.w	r9, r0, r6
 8003420:	d1e5      	bne.n	80033ee <__cvt+0x68>
 8003422:	7803      	ldrb	r3, [r0, #0]
 8003424:	2b30      	cmp	r3, #48	@ 0x30
 8003426:	d10a      	bne.n	800343e <__cvt+0xb8>
 8003428:	2200      	movs	r2, #0
 800342a:	2300      	movs	r3, #0
 800342c:	4620      	mov	r0, r4
 800342e:	4629      	mov	r1, r5
 8003430:	f7fd faca 	bl	80009c8 <__aeabi_dcmpeq>
 8003434:	b918      	cbnz	r0, 800343e <__cvt+0xb8>
 8003436:	f1c6 0601 	rsb	r6, r6, #1
 800343a:	f8ca 6000 	str.w	r6, [sl]
 800343e:	f8da 3000 	ldr.w	r3, [sl]
 8003442:	4499      	add	r9, r3
 8003444:	e7d3      	b.n	80033ee <__cvt+0x68>
 8003446:	1c59      	adds	r1, r3, #1
 8003448:	9107      	str	r1, [sp, #28]
 800344a:	701a      	strb	r2, [r3, #0]
 800344c:	e7d9      	b.n	8003402 <__cvt+0x7c>

0800344e <__exponent>:
 800344e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8003450:	2900      	cmp	r1, #0
 8003452:	bfb6      	itet	lt
 8003454:	232d      	movlt	r3, #45	@ 0x2d
 8003456:	232b      	movge	r3, #43	@ 0x2b
 8003458:	4249      	neglt	r1, r1
 800345a:	2909      	cmp	r1, #9
 800345c:	7002      	strb	r2, [r0, #0]
 800345e:	7043      	strb	r3, [r0, #1]
 8003460:	dd29      	ble.n	80034b6 <__exponent+0x68>
 8003462:	f10d 0307 	add.w	r3, sp, #7
 8003466:	461d      	mov	r5, r3
 8003468:	270a      	movs	r7, #10
 800346a:	fbb1 f6f7 	udiv	r6, r1, r7
 800346e:	461a      	mov	r2, r3
 8003470:	fb07 1416 	mls	r4, r7, r6, r1
 8003474:	3430      	adds	r4, #48	@ 0x30
 8003476:	f802 4c01 	strb.w	r4, [r2, #-1]
 800347a:	460c      	mov	r4, r1
 800347c:	2c63      	cmp	r4, #99	@ 0x63
 800347e:	4631      	mov	r1, r6
 8003480:	f103 33ff 	add.w	r3, r3, #4294967295	@ 0xffffffff
 8003484:	dcf1      	bgt.n	800346a <__exponent+0x1c>
 8003486:	3130      	adds	r1, #48	@ 0x30
 8003488:	1e94      	subs	r4, r2, #2
 800348a:	f803 1c01 	strb.w	r1, [r3, #-1]
 800348e:	4623      	mov	r3, r4
 8003490:	1c41      	adds	r1, r0, #1
 8003492:	42ab      	cmp	r3, r5
 8003494:	d30a      	bcc.n	80034ac <__exponent+0x5e>
 8003496:	f10d 0309 	add.w	r3, sp, #9
 800349a:	1a9b      	subs	r3, r3, r2
 800349c:	42ac      	cmp	r4, r5
 800349e:	bf88      	it	hi
 80034a0:	2300      	movhi	r3, #0
 80034a2:	3302      	adds	r3, #2
 80034a4:	4403      	add	r3, r0
 80034a6:	1a18      	subs	r0, r3, r0
 80034a8:	b003      	add	sp, #12
 80034aa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80034ac:	f813 6b01 	ldrb.w	r6, [r3], #1
 80034b0:	f801 6f01 	strb.w	r6, [r1, #1]!
 80034b4:	e7ed      	b.n	8003492 <__exponent+0x44>
 80034b6:	2330      	movs	r3, #48	@ 0x30
 80034b8:	3130      	adds	r1, #48	@ 0x30
 80034ba:	7083      	strb	r3, [r0, #2]
 80034bc:	70c1      	strb	r1, [r0, #3]
 80034be:	1d03      	adds	r3, r0, #4
 80034c0:	e7f1      	b.n	80034a6 <__exponent+0x58>
	...

080034c4 <_printf_float>:
 80034c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80034c8:	b091      	sub	sp, #68	@ 0x44
 80034ca:	460c      	mov	r4, r1
 80034cc:	f8dd 8068 	ldr.w	r8, [sp, #104]	@ 0x68
 80034d0:	4616      	mov	r6, r2
 80034d2:	461f      	mov	r7, r3
 80034d4:	4605      	mov	r5, r0
 80034d6:	f001 fd4f 	bl	8004f78 <_localeconv_r>
 80034da:	6803      	ldr	r3, [r0, #0]
 80034dc:	4618      	mov	r0, r3
 80034de:	9308      	str	r3, [sp, #32]
 80034e0:	f7fc fe46 	bl	8000170 <strlen>
 80034e4:	2300      	movs	r3, #0
 80034e6:	930e      	str	r3, [sp, #56]	@ 0x38
 80034e8:	f8d8 3000 	ldr.w	r3, [r8]
 80034ec:	9009      	str	r0, [sp, #36]	@ 0x24
 80034ee:	3307      	adds	r3, #7
 80034f0:	f023 0307 	bic.w	r3, r3, #7
 80034f4:	f103 0208 	add.w	r2, r3, #8
 80034f8:	f894 a018 	ldrb.w	sl, [r4, #24]
 80034fc:	f8d4 b000 	ldr.w	fp, [r4]
 8003500:	f8c8 2000 	str.w	r2, [r8]
 8003504:	e9d3 8900 	ldrd	r8, r9, [r3]
 8003508:	f029 4300 	bic.w	r3, r9, #2147483648	@ 0x80000000
 800350c:	930b      	str	r3, [sp, #44]	@ 0x2c
 800350e:	f8cd 8028 	str.w	r8, [sp, #40]	@ 0x28
 8003512:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8003516:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 800351a:	e9c4 8912 	strd	r8, r9, [r4, #72]	@ 0x48
 800351e:	4b9c      	ldr	r3, [pc, #624]	@ (8003790 <_printf_float+0x2cc>)
 8003520:	f7fd fa84 	bl	8000a2c <__aeabi_dcmpun>
 8003524:	bb70      	cbnz	r0, 8003584 <_printf_float+0xc0>
 8003526:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 800352a:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 800352e:	4b98      	ldr	r3, [pc, #608]	@ (8003790 <_printf_float+0x2cc>)
 8003530:	f7fd fa5e 	bl	80009f0 <__aeabi_dcmple>
 8003534:	bb30      	cbnz	r0, 8003584 <_printf_float+0xc0>
 8003536:	2200      	movs	r2, #0
 8003538:	2300      	movs	r3, #0
 800353a:	4640      	mov	r0, r8
 800353c:	4649      	mov	r1, r9
 800353e:	f7fd fa4d 	bl	80009dc <__aeabi_dcmplt>
 8003542:	b110      	cbz	r0, 800354a <_printf_float+0x86>
 8003544:	232d      	movs	r3, #45	@ 0x2d
 8003546:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800354a:	4a92      	ldr	r2, [pc, #584]	@ (8003794 <_printf_float+0x2d0>)
 800354c:	4b92      	ldr	r3, [pc, #584]	@ (8003798 <_printf_float+0x2d4>)
 800354e:	f1ba 0f47 	cmp.w	sl, #71	@ 0x47
 8003552:	bf94      	ite	ls
 8003554:	4690      	movls	r8, r2
 8003556:	4698      	movhi	r8, r3
 8003558:	2303      	movs	r3, #3
 800355a:	f04f 0900 	mov.w	r9, #0
 800355e:	6123      	str	r3, [r4, #16]
 8003560:	f02b 0304 	bic.w	r3, fp, #4
 8003564:	6023      	str	r3, [r4, #0]
 8003566:	4633      	mov	r3, r6
 8003568:	4621      	mov	r1, r4
 800356a:	4628      	mov	r0, r5
 800356c:	9700      	str	r7, [sp, #0]
 800356e:	aa0f      	add	r2, sp, #60	@ 0x3c
 8003570:	f000 f9d4 	bl	800391c <_printf_common>
 8003574:	3001      	adds	r0, #1
 8003576:	f040 8090 	bne.w	800369a <_printf_float+0x1d6>
 800357a:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 800357e:	b011      	add	sp, #68	@ 0x44
 8003580:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003584:	4642      	mov	r2, r8
 8003586:	464b      	mov	r3, r9
 8003588:	4640      	mov	r0, r8
 800358a:	4649      	mov	r1, r9
 800358c:	f7fd fa4e 	bl	8000a2c <__aeabi_dcmpun>
 8003590:	b148      	cbz	r0, 80035a6 <_printf_float+0xe2>
 8003592:	464b      	mov	r3, r9
 8003594:	2b00      	cmp	r3, #0
 8003596:	bfb8      	it	lt
 8003598:	232d      	movlt	r3, #45	@ 0x2d
 800359a:	4a80      	ldr	r2, [pc, #512]	@ (800379c <_printf_float+0x2d8>)
 800359c:	bfb8      	it	lt
 800359e:	f884 3043 	strblt.w	r3, [r4, #67]	@ 0x43
 80035a2:	4b7f      	ldr	r3, [pc, #508]	@ (80037a0 <_printf_float+0x2dc>)
 80035a4:	e7d3      	b.n	800354e <_printf_float+0x8a>
 80035a6:	6863      	ldr	r3, [r4, #4]
 80035a8:	f00a 01df 	and.w	r1, sl, #223	@ 0xdf
 80035ac:	1c5a      	adds	r2, r3, #1
 80035ae:	d13f      	bne.n	8003630 <_printf_float+0x16c>
 80035b0:	2306      	movs	r3, #6
 80035b2:	6063      	str	r3, [r4, #4]
 80035b4:	2200      	movs	r2, #0
 80035b6:	f44b 6380 	orr.w	r3, fp, #1024	@ 0x400
 80035ba:	6023      	str	r3, [r4, #0]
 80035bc:	9206      	str	r2, [sp, #24]
 80035be:	aa0e      	add	r2, sp, #56	@ 0x38
 80035c0:	e9cd a204 	strd	sl, r2, [sp, #16]
 80035c4:	aa0d      	add	r2, sp, #52	@ 0x34
 80035c6:	9203      	str	r2, [sp, #12]
 80035c8:	f10d 0233 	add.w	r2, sp, #51	@ 0x33
 80035cc:	e9cd 3201 	strd	r3, r2, [sp, #4]
 80035d0:	6863      	ldr	r3, [r4, #4]
 80035d2:	4642      	mov	r2, r8
 80035d4:	9300      	str	r3, [sp, #0]
 80035d6:	4628      	mov	r0, r5
 80035d8:	464b      	mov	r3, r9
 80035da:	910a      	str	r1, [sp, #40]	@ 0x28
 80035dc:	f7ff fed3 	bl	8003386 <__cvt>
 80035e0:	990a      	ldr	r1, [sp, #40]	@ 0x28
 80035e2:	4680      	mov	r8, r0
 80035e4:	2947      	cmp	r1, #71	@ 0x47
 80035e6:	990d      	ldr	r1, [sp, #52]	@ 0x34
 80035e8:	d128      	bne.n	800363c <_printf_float+0x178>
 80035ea:	1cc8      	adds	r0, r1, #3
 80035ec:	db02      	blt.n	80035f4 <_printf_float+0x130>
 80035ee:	6863      	ldr	r3, [r4, #4]
 80035f0:	4299      	cmp	r1, r3
 80035f2:	dd40      	ble.n	8003676 <_printf_float+0x1b2>
 80035f4:	f1aa 0a02 	sub.w	sl, sl, #2
 80035f8:	fa5f fa8a 	uxtb.w	sl, sl
 80035fc:	4652      	mov	r2, sl
 80035fe:	3901      	subs	r1, #1
 8003600:	f104 0050 	add.w	r0, r4, #80	@ 0x50
 8003604:	910d      	str	r1, [sp, #52]	@ 0x34
 8003606:	f7ff ff22 	bl	800344e <__exponent>
 800360a:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 800360c:	4681      	mov	r9, r0
 800360e:	1813      	adds	r3, r2, r0
 8003610:	2a01      	cmp	r2, #1
 8003612:	6123      	str	r3, [r4, #16]
 8003614:	dc02      	bgt.n	800361c <_printf_float+0x158>
 8003616:	6822      	ldr	r2, [r4, #0]
 8003618:	07d2      	lsls	r2, r2, #31
 800361a:	d501      	bpl.n	8003620 <_printf_float+0x15c>
 800361c:	3301      	adds	r3, #1
 800361e:	6123      	str	r3, [r4, #16]
 8003620:	f89d 3033 	ldrb.w	r3, [sp, #51]	@ 0x33
 8003624:	2b00      	cmp	r3, #0
 8003626:	d09e      	beq.n	8003566 <_printf_float+0xa2>
 8003628:	232d      	movs	r3, #45	@ 0x2d
 800362a:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800362e:	e79a      	b.n	8003566 <_printf_float+0xa2>
 8003630:	2947      	cmp	r1, #71	@ 0x47
 8003632:	d1bf      	bne.n	80035b4 <_printf_float+0xf0>
 8003634:	2b00      	cmp	r3, #0
 8003636:	d1bd      	bne.n	80035b4 <_printf_float+0xf0>
 8003638:	2301      	movs	r3, #1
 800363a:	e7ba      	b.n	80035b2 <_printf_float+0xee>
 800363c:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 8003640:	d9dc      	bls.n	80035fc <_printf_float+0x138>
 8003642:	f1ba 0f66 	cmp.w	sl, #102	@ 0x66
 8003646:	d118      	bne.n	800367a <_printf_float+0x1b6>
 8003648:	2900      	cmp	r1, #0
 800364a:	6863      	ldr	r3, [r4, #4]
 800364c:	dd0b      	ble.n	8003666 <_printf_float+0x1a2>
 800364e:	6121      	str	r1, [r4, #16]
 8003650:	b913      	cbnz	r3, 8003658 <_printf_float+0x194>
 8003652:	6822      	ldr	r2, [r4, #0]
 8003654:	07d0      	lsls	r0, r2, #31
 8003656:	d502      	bpl.n	800365e <_printf_float+0x19a>
 8003658:	3301      	adds	r3, #1
 800365a:	440b      	add	r3, r1
 800365c:	6123      	str	r3, [r4, #16]
 800365e:	f04f 0900 	mov.w	r9, #0
 8003662:	65a1      	str	r1, [r4, #88]	@ 0x58
 8003664:	e7dc      	b.n	8003620 <_printf_float+0x15c>
 8003666:	b913      	cbnz	r3, 800366e <_printf_float+0x1aa>
 8003668:	6822      	ldr	r2, [r4, #0]
 800366a:	07d2      	lsls	r2, r2, #31
 800366c:	d501      	bpl.n	8003672 <_printf_float+0x1ae>
 800366e:	3302      	adds	r3, #2
 8003670:	e7f4      	b.n	800365c <_printf_float+0x198>
 8003672:	2301      	movs	r3, #1
 8003674:	e7f2      	b.n	800365c <_printf_float+0x198>
 8003676:	f04f 0a67 	mov.w	sl, #103	@ 0x67
 800367a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800367c:	4299      	cmp	r1, r3
 800367e:	db05      	blt.n	800368c <_printf_float+0x1c8>
 8003680:	6823      	ldr	r3, [r4, #0]
 8003682:	6121      	str	r1, [r4, #16]
 8003684:	07d8      	lsls	r0, r3, #31
 8003686:	d5ea      	bpl.n	800365e <_printf_float+0x19a>
 8003688:	1c4b      	adds	r3, r1, #1
 800368a:	e7e7      	b.n	800365c <_printf_float+0x198>
 800368c:	2900      	cmp	r1, #0
 800368e:	bfcc      	ite	gt
 8003690:	2201      	movgt	r2, #1
 8003692:	f1c1 0202 	rsble	r2, r1, #2
 8003696:	4413      	add	r3, r2
 8003698:	e7e0      	b.n	800365c <_printf_float+0x198>
 800369a:	6823      	ldr	r3, [r4, #0]
 800369c:	055a      	lsls	r2, r3, #21
 800369e:	d407      	bmi.n	80036b0 <_printf_float+0x1ec>
 80036a0:	6923      	ldr	r3, [r4, #16]
 80036a2:	4642      	mov	r2, r8
 80036a4:	4631      	mov	r1, r6
 80036a6:	4628      	mov	r0, r5
 80036a8:	47b8      	blx	r7
 80036aa:	3001      	adds	r0, #1
 80036ac:	d12b      	bne.n	8003706 <_printf_float+0x242>
 80036ae:	e764      	b.n	800357a <_printf_float+0xb6>
 80036b0:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 80036b4:	f240 80dc 	bls.w	8003870 <_printf_float+0x3ac>
 80036b8:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 80036bc:	2200      	movs	r2, #0
 80036be:	2300      	movs	r3, #0
 80036c0:	f7fd f982 	bl	80009c8 <__aeabi_dcmpeq>
 80036c4:	2800      	cmp	r0, #0
 80036c6:	d033      	beq.n	8003730 <_printf_float+0x26c>
 80036c8:	2301      	movs	r3, #1
 80036ca:	4631      	mov	r1, r6
 80036cc:	4628      	mov	r0, r5
 80036ce:	4a35      	ldr	r2, [pc, #212]	@ (80037a4 <_printf_float+0x2e0>)
 80036d0:	47b8      	blx	r7
 80036d2:	3001      	adds	r0, #1
 80036d4:	f43f af51 	beq.w	800357a <_printf_float+0xb6>
 80036d8:	e9dd 380d 	ldrd	r3, r8, [sp, #52]	@ 0x34
 80036dc:	4543      	cmp	r3, r8
 80036de:	db02      	blt.n	80036e6 <_printf_float+0x222>
 80036e0:	6823      	ldr	r3, [r4, #0]
 80036e2:	07d8      	lsls	r0, r3, #31
 80036e4:	d50f      	bpl.n	8003706 <_printf_float+0x242>
 80036e6:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 80036ea:	4631      	mov	r1, r6
 80036ec:	4628      	mov	r0, r5
 80036ee:	47b8      	blx	r7
 80036f0:	3001      	adds	r0, #1
 80036f2:	f43f af42 	beq.w	800357a <_printf_float+0xb6>
 80036f6:	f04f 0900 	mov.w	r9, #0
 80036fa:	f108 38ff 	add.w	r8, r8, #4294967295	@ 0xffffffff
 80036fe:	f104 0a1a 	add.w	sl, r4, #26
 8003702:	45c8      	cmp	r8, r9
 8003704:	dc09      	bgt.n	800371a <_printf_float+0x256>
 8003706:	6823      	ldr	r3, [r4, #0]
 8003708:	079b      	lsls	r3, r3, #30
 800370a:	f100 8102 	bmi.w	8003912 <_printf_float+0x44e>
 800370e:	68e0      	ldr	r0, [r4, #12]
 8003710:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8003712:	4298      	cmp	r0, r3
 8003714:	bfb8      	it	lt
 8003716:	4618      	movlt	r0, r3
 8003718:	e731      	b.n	800357e <_printf_float+0xba>
 800371a:	2301      	movs	r3, #1
 800371c:	4652      	mov	r2, sl
 800371e:	4631      	mov	r1, r6
 8003720:	4628      	mov	r0, r5
 8003722:	47b8      	blx	r7
 8003724:	3001      	adds	r0, #1
 8003726:	f43f af28 	beq.w	800357a <_printf_float+0xb6>
 800372a:	f109 0901 	add.w	r9, r9, #1
 800372e:	e7e8      	b.n	8003702 <_printf_float+0x23e>
 8003730:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8003732:	2b00      	cmp	r3, #0
 8003734:	dc38      	bgt.n	80037a8 <_printf_float+0x2e4>
 8003736:	2301      	movs	r3, #1
 8003738:	4631      	mov	r1, r6
 800373a:	4628      	mov	r0, r5
 800373c:	4a19      	ldr	r2, [pc, #100]	@ (80037a4 <_printf_float+0x2e0>)
 800373e:	47b8      	blx	r7
 8003740:	3001      	adds	r0, #1
 8003742:	f43f af1a 	beq.w	800357a <_printf_float+0xb6>
 8003746:	e9dd 390d 	ldrd	r3, r9, [sp, #52]	@ 0x34
 800374a:	ea59 0303 	orrs.w	r3, r9, r3
 800374e:	d102      	bne.n	8003756 <_printf_float+0x292>
 8003750:	6823      	ldr	r3, [r4, #0]
 8003752:	07d9      	lsls	r1, r3, #31
 8003754:	d5d7      	bpl.n	8003706 <_printf_float+0x242>
 8003756:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800375a:	4631      	mov	r1, r6
 800375c:	4628      	mov	r0, r5
 800375e:	47b8      	blx	r7
 8003760:	3001      	adds	r0, #1
 8003762:	f43f af0a 	beq.w	800357a <_printf_float+0xb6>
 8003766:	f04f 0a00 	mov.w	sl, #0
 800376a:	f104 0b1a 	add.w	fp, r4, #26
 800376e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8003770:	425b      	negs	r3, r3
 8003772:	4553      	cmp	r3, sl
 8003774:	dc01      	bgt.n	800377a <_printf_float+0x2b6>
 8003776:	464b      	mov	r3, r9
 8003778:	e793      	b.n	80036a2 <_printf_float+0x1de>
 800377a:	2301      	movs	r3, #1
 800377c:	465a      	mov	r2, fp
 800377e:	4631      	mov	r1, r6
 8003780:	4628      	mov	r0, r5
 8003782:	47b8      	blx	r7
 8003784:	3001      	adds	r0, #1
 8003786:	f43f aef8 	beq.w	800357a <_printf_float+0xb6>
 800378a:	f10a 0a01 	add.w	sl, sl, #1
 800378e:	e7ee      	b.n	800376e <_printf_float+0x2aa>
 8003790:	7fefffff 	.word	0x7fefffff
 8003794:	08009430 	.word	0x08009430
 8003798:	08009434 	.word	0x08009434
 800379c:	08009438 	.word	0x08009438
 80037a0:	0800943c 	.word	0x0800943c
 80037a4:	08009440 	.word	0x08009440
 80037a8:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 80037aa:	f8dd a038 	ldr.w	sl, [sp, #56]	@ 0x38
 80037ae:	4553      	cmp	r3, sl
 80037b0:	bfa8      	it	ge
 80037b2:	4653      	movge	r3, sl
 80037b4:	2b00      	cmp	r3, #0
 80037b6:	4699      	mov	r9, r3
 80037b8:	dc36      	bgt.n	8003828 <_printf_float+0x364>
 80037ba:	f04f 0b00 	mov.w	fp, #0
 80037be:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 80037c2:	f104 021a 	add.w	r2, r4, #26
 80037c6:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 80037c8:	930a      	str	r3, [sp, #40]	@ 0x28
 80037ca:	eba3 0309 	sub.w	r3, r3, r9
 80037ce:	455b      	cmp	r3, fp
 80037d0:	dc31      	bgt.n	8003836 <_printf_float+0x372>
 80037d2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80037d4:	459a      	cmp	sl, r3
 80037d6:	dc3a      	bgt.n	800384e <_printf_float+0x38a>
 80037d8:	6823      	ldr	r3, [r4, #0]
 80037da:	07da      	lsls	r2, r3, #31
 80037dc:	d437      	bmi.n	800384e <_printf_float+0x38a>
 80037de:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80037e0:	ebaa 0903 	sub.w	r9, sl, r3
 80037e4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80037e6:	ebaa 0303 	sub.w	r3, sl, r3
 80037ea:	4599      	cmp	r9, r3
 80037ec:	bfa8      	it	ge
 80037ee:	4699      	movge	r9, r3
 80037f0:	f1b9 0f00 	cmp.w	r9, #0
 80037f4:	dc33      	bgt.n	800385e <_printf_float+0x39a>
 80037f6:	f04f 0800 	mov.w	r8, #0
 80037fa:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 80037fe:	f104 0b1a 	add.w	fp, r4, #26
 8003802:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8003804:	ebaa 0303 	sub.w	r3, sl, r3
 8003808:	eba3 0309 	sub.w	r3, r3, r9
 800380c:	4543      	cmp	r3, r8
 800380e:	f77f af7a 	ble.w	8003706 <_printf_float+0x242>
 8003812:	2301      	movs	r3, #1
 8003814:	465a      	mov	r2, fp
 8003816:	4631      	mov	r1, r6
 8003818:	4628      	mov	r0, r5
 800381a:	47b8      	blx	r7
 800381c:	3001      	adds	r0, #1
 800381e:	f43f aeac 	beq.w	800357a <_printf_float+0xb6>
 8003822:	f108 0801 	add.w	r8, r8, #1
 8003826:	e7ec      	b.n	8003802 <_printf_float+0x33e>
 8003828:	4642      	mov	r2, r8
 800382a:	4631      	mov	r1, r6
 800382c:	4628      	mov	r0, r5
 800382e:	47b8      	blx	r7
 8003830:	3001      	adds	r0, #1
 8003832:	d1c2      	bne.n	80037ba <_printf_float+0x2f6>
 8003834:	e6a1      	b.n	800357a <_printf_float+0xb6>
 8003836:	2301      	movs	r3, #1
 8003838:	4631      	mov	r1, r6
 800383a:	4628      	mov	r0, r5
 800383c:	920a      	str	r2, [sp, #40]	@ 0x28
 800383e:	47b8      	blx	r7
 8003840:	3001      	adds	r0, #1
 8003842:	f43f ae9a 	beq.w	800357a <_printf_float+0xb6>
 8003846:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8003848:	f10b 0b01 	add.w	fp, fp, #1
 800384c:	e7bb      	b.n	80037c6 <_printf_float+0x302>
 800384e:	4631      	mov	r1, r6
 8003850:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8003854:	4628      	mov	r0, r5
 8003856:	47b8      	blx	r7
 8003858:	3001      	adds	r0, #1
 800385a:	d1c0      	bne.n	80037de <_printf_float+0x31a>
 800385c:	e68d      	b.n	800357a <_printf_float+0xb6>
 800385e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8003860:	464b      	mov	r3, r9
 8003862:	4631      	mov	r1, r6
 8003864:	4628      	mov	r0, r5
 8003866:	4442      	add	r2, r8
 8003868:	47b8      	blx	r7
 800386a:	3001      	adds	r0, #1
 800386c:	d1c3      	bne.n	80037f6 <_printf_float+0x332>
 800386e:	e684      	b.n	800357a <_printf_float+0xb6>
 8003870:	f8dd a038 	ldr.w	sl, [sp, #56]	@ 0x38
 8003874:	f1ba 0f01 	cmp.w	sl, #1
 8003878:	dc01      	bgt.n	800387e <_printf_float+0x3ba>
 800387a:	07db      	lsls	r3, r3, #31
 800387c:	d536      	bpl.n	80038ec <_printf_float+0x428>
 800387e:	2301      	movs	r3, #1
 8003880:	4642      	mov	r2, r8
 8003882:	4631      	mov	r1, r6
 8003884:	4628      	mov	r0, r5
 8003886:	47b8      	blx	r7
 8003888:	3001      	adds	r0, #1
 800388a:	f43f ae76 	beq.w	800357a <_printf_float+0xb6>
 800388e:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8003892:	4631      	mov	r1, r6
 8003894:	4628      	mov	r0, r5
 8003896:	47b8      	blx	r7
 8003898:	3001      	adds	r0, #1
 800389a:	f43f ae6e 	beq.w	800357a <_printf_float+0xb6>
 800389e:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 80038a2:	2200      	movs	r2, #0
 80038a4:	2300      	movs	r3, #0
 80038a6:	f10a 3aff 	add.w	sl, sl, #4294967295	@ 0xffffffff
 80038aa:	f7fd f88d 	bl	80009c8 <__aeabi_dcmpeq>
 80038ae:	b9c0      	cbnz	r0, 80038e2 <_printf_float+0x41e>
 80038b0:	4653      	mov	r3, sl
 80038b2:	f108 0201 	add.w	r2, r8, #1
 80038b6:	4631      	mov	r1, r6
 80038b8:	4628      	mov	r0, r5
 80038ba:	47b8      	blx	r7
 80038bc:	3001      	adds	r0, #1
 80038be:	d10c      	bne.n	80038da <_printf_float+0x416>
 80038c0:	e65b      	b.n	800357a <_printf_float+0xb6>
 80038c2:	2301      	movs	r3, #1
 80038c4:	465a      	mov	r2, fp
 80038c6:	4631      	mov	r1, r6
 80038c8:	4628      	mov	r0, r5
 80038ca:	47b8      	blx	r7
 80038cc:	3001      	adds	r0, #1
 80038ce:	f43f ae54 	beq.w	800357a <_printf_float+0xb6>
 80038d2:	f108 0801 	add.w	r8, r8, #1
 80038d6:	45d0      	cmp	r8, sl
 80038d8:	dbf3      	blt.n	80038c2 <_printf_float+0x3fe>
 80038da:	464b      	mov	r3, r9
 80038dc:	f104 0250 	add.w	r2, r4, #80	@ 0x50
 80038e0:	e6e0      	b.n	80036a4 <_printf_float+0x1e0>
 80038e2:	f04f 0800 	mov.w	r8, #0
 80038e6:	f104 0b1a 	add.w	fp, r4, #26
 80038ea:	e7f4      	b.n	80038d6 <_printf_float+0x412>
 80038ec:	2301      	movs	r3, #1
 80038ee:	4642      	mov	r2, r8
 80038f0:	e7e1      	b.n	80038b6 <_printf_float+0x3f2>
 80038f2:	2301      	movs	r3, #1
 80038f4:	464a      	mov	r2, r9
 80038f6:	4631      	mov	r1, r6
 80038f8:	4628      	mov	r0, r5
 80038fa:	47b8      	blx	r7
 80038fc:	3001      	adds	r0, #1
 80038fe:	f43f ae3c 	beq.w	800357a <_printf_float+0xb6>
 8003902:	f108 0801 	add.w	r8, r8, #1
 8003906:	68e3      	ldr	r3, [r4, #12]
 8003908:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 800390a:	1a5b      	subs	r3, r3, r1
 800390c:	4543      	cmp	r3, r8
 800390e:	dcf0      	bgt.n	80038f2 <_printf_float+0x42e>
 8003910:	e6fd      	b.n	800370e <_printf_float+0x24a>
 8003912:	f04f 0800 	mov.w	r8, #0
 8003916:	f104 0919 	add.w	r9, r4, #25
 800391a:	e7f4      	b.n	8003906 <_printf_float+0x442>

0800391c <_printf_common>:
 800391c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003920:	4616      	mov	r6, r2
 8003922:	4698      	mov	r8, r3
 8003924:	688a      	ldr	r2, [r1, #8]
 8003926:	690b      	ldr	r3, [r1, #16]
 8003928:	4607      	mov	r7, r0
 800392a:	4293      	cmp	r3, r2
 800392c:	bfb8      	it	lt
 800392e:	4613      	movlt	r3, r2
 8003930:	6033      	str	r3, [r6, #0]
 8003932:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8003936:	460c      	mov	r4, r1
 8003938:	f8dd 9020 	ldr.w	r9, [sp, #32]
 800393c:	b10a      	cbz	r2, 8003942 <_printf_common+0x26>
 800393e:	3301      	adds	r3, #1
 8003940:	6033      	str	r3, [r6, #0]
 8003942:	6823      	ldr	r3, [r4, #0]
 8003944:	0699      	lsls	r1, r3, #26
 8003946:	bf42      	ittt	mi
 8003948:	6833      	ldrmi	r3, [r6, #0]
 800394a:	3302      	addmi	r3, #2
 800394c:	6033      	strmi	r3, [r6, #0]
 800394e:	6825      	ldr	r5, [r4, #0]
 8003950:	f015 0506 	ands.w	r5, r5, #6
 8003954:	d106      	bne.n	8003964 <_printf_common+0x48>
 8003956:	f104 0a19 	add.w	sl, r4, #25
 800395a:	68e3      	ldr	r3, [r4, #12]
 800395c:	6832      	ldr	r2, [r6, #0]
 800395e:	1a9b      	subs	r3, r3, r2
 8003960:	42ab      	cmp	r3, r5
 8003962:	dc2b      	bgt.n	80039bc <_printf_common+0xa0>
 8003964:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8003968:	6822      	ldr	r2, [r4, #0]
 800396a:	3b00      	subs	r3, #0
 800396c:	bf18      	it	ne
 800396e:	2301      	movne	r3, #1
 8003970:	0692      	lsls	r2, r2, #26
 8003972:	d430      	bmi.n	80039d6 <_printf_common+0xba>
 8003974:	4641      	mov	r1, r8
 8003976:	4638      	mov	r0, r7
 8003978:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 800397c:	47c8      	blx	r9
 800397e:	3001      	adds	r0, #1
 8003980:	d023      	beq.n	80039ca <_printf_common+0xae>
 8003982:	6823      	ldr	r3, [r4, #0]
 8003984:	6922      	ldr	r2, [r4, #16]
 8003986:	f003 0306 	and.w	r3, r3, #6
 800398a:	2b04      	cmp	r3, #4
 800398c:	bf14      	ite	ne
 800398e:	2500      	movne	r5, #0
 8003990:	6833      	ldreq	r3, [r6, #0]
 8003992:	f04f 0600 	mov.w	r6, #0
 8003996:	bf08      	it	eq
 8003998:	68e5      	ldreq	r5, [r4, #12]
 800399a:	f104 041a 	add.w	r4, r4, #26
 800399e:	bf08      	it	eq
 80039a0:	1aed      	subeq	r5, r5, r3
 80039a2:	f854 3c12 	ldr.w	r3, [r4, #-18]
 80039a6:	bf08      	it	eq
 80039a8:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80039ac:	4293      	cmp	r3, r2
 80039ae:	bfc4      	itt	gt
 80039b0:	1a9b      	subgt	r3, r3, r2
 80039b2:	18ed      	addgt	r5, r5, r3
 80039b4:	42b5      	cmp	r5, r6
 80039b6:	d11a      	bne.n	80039ee <_printf_common+0xd2>
 80039b8:	2000      	movs	r0, #0
 80039ba:	e008      	b.n	80039ce <_printf_common+0xb2>
 80039bc:	2301      	movs	r3, #1
 80039be:	4652      	mov	r2, sl
 80039c0:	4641      	mov	r1, r8
 80039c2:	4638      	mov	r0, r7
 80039c4:	47c8      	blx	r9
 80039c6:	3001      	adds	r0, #1
 80039c8:	d103      	bne.n	80039d2 <_printf_common+0xb6>
 80039ca:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 80039ce:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80039d2:	3501      	adds	r5, #1
 80039d4:	e7c1      	b.n	800395a <_printf_common+0x3e>
 80039d6:	2030      	movs	r0, #48	@ 0x30
 80039d8:	18e1      	adds	r1, r4, r3
 80039da:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 80039de:	1c5a      	adds	r2, r3, #1
 80039e0:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 80039e4:	4422      	add	r2, r4
 80039e6:	3302      	adds	r3, #2
 80039e8:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 80039ec:	e7c2      	b.n	8003974 <_printf_common+0x58>
 80039ee:	2301      	movs	r3, #1
 80039f0:	4622      	mov	r2, r4
 80039f2:	4641      	mov	r1, r8
 80039f4:	4638      	mov	r0, r7
 80039f6:	47c8      	blx	r9
 80039f8:	3001      	adds	r0, #1
 80039fa:	d0e6      	beq.n	80039ca <_printf_common+0xae>
 80039fc:	3601      	adds	r6, #1
 80039fe:	e7d9      	b.n	80039b4 <_printf_common+0x98>

08003a00 <_printf_i>:
 8003a00:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8003a04:	7e0f      	ldrb	r7, [r1, #24]
 8003a06:	4691      	mov	r9, r2
 8003a08:	2f78      	cmp	r7, #120	@ 0x78
 8003a0a:	4680      	mov	r8, r0
 8003a0c:	460c      	mov	r4, r1
 8003a0e:	469a      	mov	sl, r3
 8003a10:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8003a12:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8003a16:	d807      	bhi.n	8003a28 <_printf_i+0x28>
 8003a18:	2f62      	cmp	r7, #98	@ 0x62
 8003a1a:	d80a      	bhi.n	8003a32 <_printf_i+0x32>
 8003a1c:	2f00      	cmp	r7, #0
 8003a1e:	f000 80d3 	beq.w	8003bc8 <_printf_i+0x1c8>
 8003a22:	2f58      	cmp	r7, #88	@ 0x58
 8003a24:	f000 80ba 	beq.w	8003b9c <_printf_i+0x19c>
 8003a28:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8003a2c:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8003a30:	e03a      	b.n	8003aa8 <_printf_i+0xa8>
 8003a32:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8003a36:	2b15      	cmp	r3, #21
 8003a38:	d8f6      	bhi.n	8003a28 <_printf_i+0x28>
 8003a3a:	a101      	add	r1, pc, #4	@ (adr r1, 8003a40 <_printf_i+0x40>)
 8003a3c:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8003a40:	08003a99 	.word	0x08003a99
 8003a44:	08003aad 	.word	0x08003aad
 8003a48:	08003a29 	.word	0x08003a29
 8003a4c:	08003a29 	.word	0x08003a29
 8003a50:	08003a29 	.word	0x08003a29
 8003a54:	08003a29 	.word	0x08003a29
 8003a58:	08003aad 	.word	0x08003aad
 8003a5c:	08003a29 	.word	0x08003a29
 8003a60:	08003a29 	.word	0x08003a29
 8003a64:	08003a29 	.word	0x08003a29
 8003a68:	08003a29 	.word	0x08003a29
 8003a6c:	08003baf 	.word	0x08003baf
 8003a70:	08003ad7 	.word	0x08003ad7
 8003a74:	08003b69 	.word	0x08003b69
 8003a78:	08003a29 	.word	0x08003a29
 8003a7c:	08003a29 	.word	0x08003a29
 8003a80:	08003bd1 	.word	0x08003bd1
 8003a84:	08003a29 	.word	0x08003a29
 8003a88:	08003ad7 	.word	0x08003ad7
 8003a8c:	08003a29 	.word	0x08003a29
 8003a90:	08003a29 	.word	0x08003a29
 8003a94:	08003b71 	.word	0x08003b71
 8003a98:	6833      	ldr	r3, [r6, #0]
 8003a9a:	1d1a      	adds	r2, r3, #4
 8003a9c:	681b      	ldr	r3, [r3, #0]
 8003a9e:	6032      	str	r2, [r6, #0]
 8003aa0:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8003aa4:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8003aa8:	2301      	movs	r3, #1
 8003aaa:	e09e      	b.n	8003bea <_printf_i+0x1ea>
 8003aac:	6833      	ldr	r3, [r6, #0]
 8003aae:	6820      	ldr	r0, [r4, #0]
 8003ab0:	1d19      	adds	r1, r3, #4
 8003ab2:	6031      	str	r1, [r6, #0]
 8003ab4:	0606      	lsls	r6, r0, #24
 8003ab6:	d501      	bpl.n	8003abc <_printf_i+0xbc>
 8003ab8:	681d      	ldr	r5, [r3, #0]
 8003aba:	e003      	b.n	8003ac4 <_printf_i+0xc4>
 8003abc:	0645      	lsls	r5, r0, #25
 8003abe:	d5fb      	bpl.n	8003ab8 <_printf_i+0xb8>
 8003ac0:	f9b3 5000 	ldrsh.w	r5, [r3]
 8003ac4:	2d00      	cmp	r5, #0
 8003ac6:	da03      	bge.n	8003ad0 <_printf_i+0xd0>
 8003ac8:	232d      	movs	r3, #45	@ 0x2d
 8003aca:	426d      	negs	r5, r5
 8003acc:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8003ad0:	230a      	movs	r3, #10
 8003ad2:	4859      	ldr	r0, [pc, #356]	@ (8003c38 <_printf_i+0x238>)
 8003ad4:	e011      	b.n	8003afa <_printf_i+0xfa>
 8003ad6:	6821      	ldr	r1, [r4, #0]
 8003ad8:	6833      	ldr	r3, [r6, #0]
 8003ada:	0608      	lsls	r0, r1, #24
 8003adc:	f853 5b04 	ldr.w	r5, [r3], #4
 8003ae0:	d402      	bmi.n	8003ae8 <_printf_i+0xe8>
 8003ae2:	0649      	lsls	r1, r1, #25
 8003ae4:	bf48      	it	mi
 8003ae6:	b2ad      	uxthmi	r5, r5
 8003ae8:	2f6f      	cmp	r7, #111	@ 0x6f
 8003aea:	6033      	str	r3, [r6, #0]
 8003aec:	bf14      	ite	ne
 8003aee:	230a      	movne	r3, #10
 8003af0:	2308      	moveq	r3, #8
 8003af2:	4851      	ldr	r0, [pc, #324]	@ (8003c38 <_printf_i+0x238>)
 8003af4:	2100      	movs	r1, #0
 8003af6:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8003afa:	6866      	ldr	r6, [r4, #4]
 8003afc:	2e00      	cmp	r6, #0
 8003afe:	bfa8      	it	ge
 8003b00:	6821      	ldrge	r1, [r4, #0]
 8003b02:	60a6      	str	r6, [r4, #8]
 8003b04:	bfa4      	itt	ge
 8003b06:	f021 0104 	bicge.w	r1, r1, #4
 8003b0a:	6021      	strge	r1, [r4, #0]
 8003b0c:	b90d      	cbnz	r5, 8003b12 <_printf_i+0x112>
 8003b0e:	2e00      	cmp	r6, #0
 8003b10:	d04b      	beq.n	8003baa <_printf_i+0x1aa>
 8003b12:	4616      	mov	r6, r2
 8003b14:	fbb5 f1f3 	udiv	r1, r5, r3
 8003b18:	fb03 5711 	mls	r7, r3, r1, r5
 8003b1c:	5dc7      	ldrb	r7, [r0, r7]
 8003b1e:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8003b22:	462f      	mov	r7, r5
 8003b24:	42bb      	cmp	r3, r7
 8003b26:	460d      	mov	r5, r1
 8003b28:	d9f4      	bls.n	8003b14 <_printf_i+0x114>
 8003b2a:	2b08      	cmp	r3, #8
 8003b2c:	d10b      	bne.n	8003b46 <_printf_i+0x146>
 8003b2e:	6823      	ldr	r3, [r4, #0]
 8003b30:	07df      	lsls	r7, r3, #31
 8003b32:	d508      	bpl.n	8003b46 <_printf_i+0x146>
 8003b34:	6923      	ldr	r3, [r4, #16]
 8003b36:	6861      	ldr	r1, [r4, #4]
 8003b38:	4299      	cmp	r1, r3
 8003b3a:	bfde      	ittt	le
 8003b3c:	2330      	movle	r3, #48	@ 0x30
 8003b3e:	f806 3c01 	strble.w	r3, [r6, #-1]
 8003b42:	f106 36ff 	addle.w	r6, r6, #4294967295	@ 0xffffffff
 8003b46:	1b92      	subs	r2, r2, r6
 8003b48:	6122      	str	r2, [r4, #16]
 8003b4a:	464b      	mov	r3, r9
 8003b4c:	4621      	mov	r1, r4
 8003b4e:	4640      	mov	r0, r8
 8003b50:	f8cd a000 	str.w	sl, [sp]
 8003b54:	aa03      	add	r2, sp, #12
 8003b56:	f7ff fee1 	bl	800391c <_printf_common>
 8003b5a:	3001      	adds	r0, #1
 8003b5c:	d14a      	bne.n	8003bf4 <_printf_i+0x1f4>
 8003b5e:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8003b62:	b004      	add	sp, #16
 8003b64:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003b68:	6823      	ldr	r3, [r4, #0]
 8003b6a:	f043 0320 	orr.w	r3, r3, #32
 8003b6e:	6023      	str	r3, [r4, #0]
 8003b70:	2778      	movs	r7, #120	@ 0x78
 8003b72:	4832      	ldr	r0, [pc, #200]	@ (8003c3c <_printf_i+0x23c>)
 8003b74:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8003b78:	6823      	ldr	r3, [r4, #0]
 8003b7a:	6831      	ldr	r1, [r6, #0]
 8003b7c:	061f      	lsls	r7, r3, #24
 8003b7e:	f851 5b04 	ldr.w	r5, [r1], #4
 8003b82:	d402      	bmi.n	8003b8a <_printf_i+0x18a>
 8003b84:	065f      	lsls	r7, r3, #25
 8003b86:	bf48      	it	mi
 8003b88:	b2ad      	uxthmi	r5, r5
 8003b8a:	6031      	str	r1, [r6, #0]
 8003b8c:	07d9      	lsls	r1, r3, #31
 8003b8e:	bf44      	itt	mi
 8003b90:	f043 0320 	orrmi.w	r3, r3, #32
 8003b94:	6023      	strmi	r3, [r4, #0]
 8003b96:	b11d      	cbz	r5, 8003ba0 <_printf_i+0x1a0>
 8003b98:	2310      	movs	r3, #16
 8003b9a:	e7ab      	b.n	8003af4 <_printf_i+0xf4>
 8003b9c:	4826      	ldr	r0, [pc, #152]	@ (8003c38 <_printf_i+0x238>)
 8003b9e:	e7e9      	b.n	8003b74 <_printf_i+0x174>
 8003ba0:	6823      	ldr	r3, [r4, #0]
 8003ba2:	f023 0320 	bic.w	r3, r3, #32
 8003ba6:	6023      	str	r3, [r4, #0]
 8003ba8:	e7f6      	b.n	8003b98 <_printf_i+0x198>
 8003baa:	4616      	mov	r6, r2
 8003bac:	e7bd      	b.n	8003b2a <_printf_i+0x12a>
 8003bae:	6833      	ldr	r3, [r6, #0]
 8003bb0:	6825      	ldr	r5, [r4, #0]
 8003bb2:	1d18      	adds	r0, r3, #4
 8003bb4:	6961      	ldr	r1, [r4, #20]
 8003bb6:	6030      	str	r0, [r6, #0]
 8003bb8:	062e      	lsls	r6, r5, #24
 8003bba:	681b      	ldr	r3, [r3, #0]
 8003bbc:	d501      	bpl.n	8003bc2 <_printf_i+0x1c2>
 8003bbe:	6019      	str	r1, [r3, #0]
 8003bc0:	e002      	b.n	8003bc8 <_printf_i+0x1c8>
 8003bc2:	0668      	lsls	r0, r5, #25
 8003bc4:	d5fb      	bpl.n	8003bbe <_printf_i+0x1be>
 8003bc6:	8019      	strh	r1, [r3, #0]
 8003bc8:	2300      	movs	r3, #0
 8003bca:	4616      	mov	r6, r2
 8003bcc:	6123      	str	r3, [r4, #16]
 8003bce:	e7bc      	b.n	8003b4a <_printf_i+0x14a>
 8003bd0:	6833      	ldr	r3, [r6, #0]
 8003bd2:	2100      	movs	r1, #0
 8003bd4:	1d1a      	adds	r2, r3, #4
 8003bd6:	6032      	str	r2, [r6, #0]
 8003bd8:	681e      	ldr	r6, [r3, #0]
 8003bda:	6862      	ldr	r2, [r4, #4]
 8003bdc:	4630      	mov	r0, r6
 8003bde:	f001 f9fc 	bl	8004fda <memchr>
 8003be2:	b108      	cbz	r0, 8003be8 <_printf_i+0x1e8>
 8003be4:	1b80      	subs	r0, r0, r6
 8003be6:	6060      	str	r0, [r4, #4]
 8003be8:	6863      	ldr	r3, [r4, #4]
 8003bea:	6123      	str	r3, [r4, #16]
 8003bec:	2300      	movs	r3, #0
 8003bee:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8003bf2:	e7aa      	b.n	8003b4a <_printf_i+0x14a>
 8003bf4:	4632      	mov	r2, r6
 8003bf6:	4649      	mov	r1, r9
 8003bf8:	4640      	mov	r0, r8
 8003bfa:	6923      	ldr	r3, [r4, #16]
 8003bfc:	47d0      	blx	sl
 8003bfe:	3001      	adds	r0, #1
 8003c00:	d0ad      	beq.n	8003b5e <_printf_i+0x15e>
 8003c02:	6823      	ldr	r3, [r4, #0]
 8003c04:	079b      	lsls	r3, r3, #30
 8003c06:	d413      	bmi.n	8003c30 <_printf_i+0x230>
 8003c08:	68e0      	ldr	r0, [r4, #12]
 8003c0a:	9b03      	ldr	r3, [sp, #12]
 8003c0c:	4298      	cmp	r0, r3
 8003c0e:	bfb8      	it	lt
 8003c10:	4618      	movlt	r0, r3
 8003c12:	e7a6      	b.n	8003b62 <_printf_i+0x162>
 8003c14:	2301      	movs	r3, #1
 8003c16:	4632      	mov	r2, r6
 8003c18:	4649      	mov	r1, r9
 8003c1a:	4640      	mov	r0, r8
 8003c1c:	47d0      	blx	sl
 8003c1e:	3001      	adds	r0, #1
 8003c20:	d09d      	beq.n	8003b5e <_printf_i+0x15e>
 8003c22:	3501      	adds	r5, #1
 8003c24:	68e3      	ldr	r3, [r4, #12]
 8003c26:	9903      	ldr	r1, [sp, #12]
 8003c28:	1a5b      	subs	r3, r3, r1
 8003c2a:	42ab      	cmp	r3, r5
 8003c2c:	dcf2      	bgt.n	8003c14 <_printf_i+0x214>
 8003c2e:	e7eb      	b.n	8003c08 <_printf_i+0x208>
 8003c30:	2500      	movs	r5, #0
 8003c32:	f104 0619 	add.w	r6, r4, #25
 8003c36:	e7f5      	b.n	8003c24 <_printf_i+0x224>
 8003c38:	08009442 	.word	0x08009442
 8003c3c:	08009453 	.word	0x08009453

08003c40 <_scanf_float>:
 8003c40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003c44:	b087      	sub	sp, #28
 8003c46:	9303      	str	r3, [sp, #12]
 8003c48:	688b      	ldr	r3, [r1, #8]
 8003c4a:	4617      	mov	r7, r2
 8003c4c:	1e5a      	subs	r2, r3, #1
 8003c4e:	f5b2 7fae 	cmp.w	r2, #348	@ 0x15c
 8003c52:	bf82      	ittt	hi
 8003c54:	f46f 75ae 	mvnhi.w	r5, #348	@ 0x15c
 8003c58:	eb03 0b05 	addhi.w	fp, r3, r5
 8003c5c:	f240 135d 	movwhi	r3, #349	@ 0x15d
 8003c60:	460a      	mov	r2, r1
 8003c62:	f04f 0500 	mov.w	r5, #0
 8003c66:	bf88      	it	hi
 8003c68:	608b      	strhi	r3, [r1, #8]
 8003c6a:	680b      	ldr	r3, [r1, #0]
 8003c6c:	4680      	mov	r8, r0
 8003c6e:	f443 63f0 	orr.w	r3, r3, #1920	@ 0x780
 8003c72:	f842 3b1c 	str.w	r3, [r2], #28
 8003c76:	460c      	mov	r4, r1
 8003c78:	bf98      	it	ls
 8003c7a:	f04f 0b00 	movls.w	fp, #0
 8003c7e:	4616      	mov	r6, r2
 8003c80:	46aa      	mov	sl, r5
 8003c82:	46a9      	mov	r9, r5
 8003c84:	e9cd 5504 	strd	r5, r5, [sp, #16]
 8003c88:	9201      	str	r2, [sp, #4]
 8003c8a:	9502      	str	r5, [sp, #8]
 8003c8c:	68a2      	ldr	r2, [r4, #8]
 8003c8e:	b152      	cbz	r2, 8003ca6 <_scanf_float+0x66>
 8003c90:	683b      	ldr	r3, [r7, #0]
 8003c92:	781b      	ldrb	r3, [r3, #0]
 8003c94:	2b4e      	cmp	r3, #78	@ 0x4e
 8003c96:	d865      	bhi.n	8003d64 <_scanf_float+0x124>
 8003c98:	2b40      	cmp	r3, #64	@ 0x40
 8003c9a:	d83d      	bhi.n	8003d18 <_scanf_float+0xd8>
 8003c9c:	f1a3 012b 	sub.w	r1, r3, #43	@ 0x2b
 8003ca0:	b2c8      	uxtb	r0, r1
 8003ca2:	280e      	cmp	r0, #14
 8003ca4:	d93b      	bls.n	8003d1e <_scanf_float+0xde>
 8003ca6:	f1b9 0f00 	cmp.w	r9, #0
 8003caa:	d003      	beq.n	8003cb4 <_scanf_float+0x74>
 8003cac:	6823      	ldr	r3, [r4, #0]
 8003cae:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8003cb2:	6023      	str	r3, [r4, #0]
 8003cb4:	f10a 3aff 	add.w	sl, sl, #4294967295	@ 0xffffffff
 8003cb8:	f1ba 0f01 	cmp.w	sl, #1
 8003cbc:	f200 8118 	bhi.w	8003ef0 <_scanf_float+0x2b0>
 8003cc0:	9b01      	ldr	r3, [sp, #4]
 8003cc2:	429e      	cmp	r6, r3
 8003cc4:	f200 8109 	bhi.w	8003eda <_scanf_float+0x29a>
 8003cc8:	2001      	movs	r0, #1
 8003cca:	b007      	add	sp, #28
 8003ccc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003cd0:	f1a3 0261 	sub.w	r2, r3, #97	@ 0x61
 8003cd4:	2a0d      	cmp	r2, #13
 8003cd6:	d8e6      	bhi.n	8003ca6 <_scanf_float+0x66>
 8003cd8:	a101      	add	r1, pc, #4	@ (adr r1, 8003ce0 <_scanf_float+0xa0>)
 8003cda:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 8003cde:	bf00      	nop
 8003ce0:	08003e27 	.word	0x08003e27
 8003ce4:	08003ca7 	.word	0x08003ca7
 8003ce8:	08003ca7 	.word	0x08003ca7
 8003cec:	08003ca7 	.word	0x08003ca7
 8003cf0:	08003e87 	.word	0x08003e87
 8003cf4:	08003e5f 	.word	0x08003e5f
 8003cf8:	08003ca7 	.word	0x08003ca7
 8003cfc:	08003ca7 	.word	0x08003ca7
 8003d00:	08003e35 	.word	0x08003e35
 8003d04:	08003ca7 	.word	0x08003ca7
 8003d08:	08003ca7 	.word	0x08003ca7
 8003d0c:	08003ca7 	.word	0x08003ca7
 8003d10:	08003ca7 	.word	0x08003ca7
 8003d14:	08003ded 	.word	0x08003ded
 8003d18:	f1a3 0241 	sub.w	r2, r3, #65	@ 0x41
 8003d1c:	e7da      	b.n	8003cd4 <_scanf_float+0x94>
 8003d1e:	290e      	cmp	r1, #14
 8003d20:	d8c1      	bhi.n	8003ca6 <_scanf_float+0x66>
 8003d22:	a001      	add	r0, pc, #4	@ (adr r0, 8003d28 <_scanf_float+0xe8>)
 8003d24:	f850 f021 	ldr.w	pc, [r0, r1, lsl #2]
 8003d28:	08003ddd 	.word	0x08003ddd
 8003d2c:	08003ca7 	.word	0x08003ca7
 8003d30:	08003ddd 	.word	0x08003ddd
 8003d34:	08003e73 	.word	0x08003e73
 8003d38:	08003ca7 	.word	0x08003ca7
 8003d3c:	08003d85 	.word	0x08003d85
 8003d40:	08003dc3 	.word	0x08003dc3
 8003d44:	08003dc3 	.word	0x08003dc3
 8003d48:	08003dc3 	.word	0x08003dc3
 8003d4c:	08003dc3 	.word	0x08003dc3
 8003d50:	08003dc3 	.word	0x08003dc3
 8003d54:	08003dc3 	.word	0x08003dc3
 8003d58:	08003dc3 	.word	0x08003dc3
 8003d5c:	08003dc3 	.word	0x08003dc3
 8003d60:	08003dc3 	.word	0x08003dc3
 8003d64:	2b6e      	cmp	r3, #110	@ 0x6e
 8003d66:	d809      	bhi.n	8003d7c <_scanf_float+0x13c>
 8003d68:	2b60      	cmp	r3, #96	@ 0x60
 8003d6a:	d8b1      	bhi.n	8003cd0 <_scanf_float+0x90>
 8003d6c:	2b54      	cmp	r3, #84	@ 0x54
 8003d6e:	d07b      	beq.n	8003e68 <_scanf_float+0x228>
 8003d70:	2b59      	cmp	r3, #89	@ 0x59
 8003d72:	d198      	bne.n	8003ca6 <_scanf_float+0x66>
 8003d74:	2d07      	cmp	r5, #7
 8003d76:	d196      	bne.n	8003ca6 <_scanf_float+0x66>
 8003d78:	2508      	movs	r5, #8
 8003d7a:	e02c      	b.n	8003dd6 <_scanf_float+0x196>
 8003d7c:	2b74      	cmp	r3, #116	@ 0x74
 8003d7e:	d073      	beq.n	8003e68 <_scanf_float+0x228>
 8003d80:	2b79      	cmp	r3, #121	@ 0x79
 8003d82:	e7f6      	b.n	8003d72 <_scanf_float+0x132>
 8003d84:	6821      	ldr	r1, [r4, #0]
 8003d86:	05c8      	lsls	r0, r1, #23
 8003d88:	d51b      	bpl.n	8003dc2 <_scanf_float+0x182>
 8003d8a:	f021 0180 	bic.w	r1, r1, #128	@ 0x80
 8003d8e:	6021      	str	r1, [r4, #0]
 8003d90:	f109 0901 	add.w	r9, r9, #1
 8003d94:	f1bb 0f00 	cmp.w	fp, #0
 8003d98:	d003      	beq.n	8003da2 <_scanf_float+0x162>
 8003d9a:	3201      	adds	r2, #1
 8003d9c:	f10b 3bff 	add.w	fp, fp, #4294967295	@ 0xffffffff
 8003da0:	60a2      	str	r2, [r4, #8]
 8003da2:	68a3      	ldr	r3, [r4, #8]
 8003da4:	3b01      	subs	r3, #1
 8003da6:	60a3      	str	r3, [r4, #8]
 8003da8:	6923      	ldr	r3, [r4, #16]
 8003daa:	3301      	adds	r3, #1
 8003dac:	6123      	str	r3, [r4, #16]
 8003dae:	687b      	ldr	r3, [r7, #4]
 8003db0:	3b01      	subs	r3, #1
 8003db2:	2b00      	cmp	r3, #0
 8003db4:	607b      	str	r3, [r7, #4]
 8003db6:	f340 8087 	ble.w	8003ec8 <_scanf_float+0x288>
 8003dba:	683b      	ldr	r3, [r7, #0]
 8003dbc:	3301      	adds	r3, #1
 8003dbe:	603b      	str	r3, [r7, #0]
 8003dc0:	e764      	b.n	8003c8c <_scanf_float+0x4c>
 8003dc2:	eb1a 0105 	adds.w	r1, sl, r5
 8003dc6:	f47f af6e 	bne.w	8003ca6 <_scanf_float+0x66>
 8003dca:	460d      	mov	r5, r1
 8003dcc:	468a      	mov	sl, r1
 8003dce:	6822      	ldr	r2, [r4, #0]
 8003dd0:	f422 72c0 	bic.w	r2, r2, #384	@ 0x180
 8003dd4:	6022      	str	r2, [r4, #0]
 8003dd6:	f806 3b01 	strb.w	r3, [r6], #1
 8003dda:	e7e2      	b.n	8003da2 <_scanf_float+0x162>
 8003ddc:	6822      	ldr	r2, [r4, #0]
 8003dde:	0610      	lsls	r0, r2, #24
 8003de0:	f57f af61 	bpl.w	8003ca6 <_scanf_float+0x66>
 8003de4:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8003de8:	6022      	str	r2, [r4, #0]
 8003dea:	e7f4      	b.n	8003dd6 <_scanf_float+0x196>
 8003dec:	f1ba 0f00 	cmp.w	sl, #0
 8003df0:	d10e      	bne.n	8003e10 <_scanf_float+0x1d0>
 8003df2:	f1b9 0f00 	cmp.w	r9, #0
 8003df6:	d10e      	bne.n	8003e16 <_scanf_float+0x1d6>
 8003df8:	6822      	ldr	r2, [r4, #0]
 8003dfa:	f402 61e0 	and.w	r1, r2, #1792	@ 0x700
 8003dfe:	f5b1 6fe0 	cmp.w	r1, #1792	@ 0x700
 8003e02:	d108      	bne.n	8003e16 <_scanf_float+0x1d6>
 8003e04:	f422 62f0 	bic.w	r2, r2, #1920	@ 0x780
 8003e08:	f04f 0a01 	mov.w	sl, #1
 8003e0c:	6022      	str	r2, [r4, #0]
 8003e0e:	e7e2      	b.n	8003dd6 <_scanf_float+0x196>
 8003e10:	f1ba 0f02 	cmp.w	sl, #2
 8003e14:	d055      	beq.n	8003ec2 <_scanf_float+0x282>
 8003e16:	2d01      	cmp	r5, #1
 8003e18:	d002      	beq.n	8003e20 <_scanf_float+0x1e0>
 8003e1a:	2d04      	cmp	r5, #4
 8003e1c:	f47f af43 	bne.w	8003ca6 <_scanf_float+0x66>
 8003e20:	3501      	adds	r5, #1
 8003e22:	b2ed      	uxtb	r5, r5
 8003e24:	e7d7      	b.n	8003dd6 <_scanf_float+0x196>
 8003e26:	f1ba 0f01 	cmp.w	sl, #1
 8003e2a:	f47f af3c 	bne.w	8003ca6 <_scanf_float+0x66>
 8003e2e:	f04f 0a02 	mov.w	sl, #2
 8003e32:	e7d0      	b.n	8003dd6 <_scanf_float+0x196>
 8003e34:	b97d      	cbnz	r5, 8003e56 <_scanf_float+0x216>
 8003e36:	f1b9 0f00 	cmp.w	r9, #0
 8003e3a:	f47f af37 	bne.w	8003cac <_scanf_float+0x6c>
 8003e3e:	6822      	ldr	r2, [r4, #0]
 8003e40:	f402 61e0 	and.w	r1, r2, #1792	@ 0x700
 8003e44:	f5b1 6fe0 	cmp.w	r1, #1792	@ 0x700
 8003e48:	f040 8103 	bne.w	8004052 <_scanf_float+0x412>
 8003e4c:	f422 62f0 	bic.w	r2, r2, #1920	@ 0x780
 8003e50:	2501      	movs	r5, #1
 8003e52:	6022      	str	r2, [r4, #0]
 8003e54:	e7bf      	b.n	8003dd6 <_scanf_float+0x196>
 8003e56:	2d03      	cmp	r5, #3
 8003e58:	d0e2      	beq.n	8003e20 <_scanf_float+0x1e0>
 8003e5a:	2d05      	cmp	r5, #5
 8003e5c:	e7de      	b.n	8003e1c <_scanf_float+0x1dc>
 8003e5e:	2d02      	cmp	r5, #2
 8003e60:	f47f af21 	bne.w	8003ca6 <_scanf_float+0x66>
 8003e64:	2503      	movs	r5, #3
 8003e66:	e7b6      	b.n	8003dd6 <_scanf_float+0x196>
 8003e68:	2d06      	cmp	r5, #6
 8003e6a:	f47f af1c 	bne.w	8003ca6 <_scanf_float+0x66>
 8003e6e:	2507      	movs	r5, #7
 8003e70:	e7b1      	b.n	8003dd6 <_scanf_float+0x196>
 8003e72:	6822      	ldr	r2, [r4, #0]
 8003e74:	0591      	lsls	r1, r2, #22
 8003e76:	f57f af16 	bpl.w	8003ca6 <_scanf_float+0x66>
 8003e7a:	f422 7220 	bic.w	r2, r2, #640	@ 0x280
 8003e7e:	6022      	str	r2, [r4, #0]
 8003e80:	f8cd 9008 	str.w	r9, [sp, #8]
 8003e84:	e7a7      	b.n	8003dd6 <_scanf_float+0x196>
 8003e86:	6822      	ldr	r2, [r4, #0]
 8003e88:	f402 61a0 	and.w	r1, r2, #1280	@ 0x500
 8003e8c:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
 8003e90:	d006      	beq.n	8003ea0 <_scanf_float+0x260>
 8003e92:	0550      	lsls	r0, r2, #21
 8003e94:	f57f af07 	bpl.w	8003ca6 <_scanf_float+0x66>
 8003e98:	f1b9 0f00 	cmp.w	r9, #0
 8003e9c:	f000 80d9 	beq.w	8004052 <_scanf_float+0x412>
 8003ea0:	0591      	lsls	r1, r2, #22
 8003ea2:	bf58      	it	pl
 8003ea4:	9902      	ldrpl	r1, [sp, #8]
 8003ea6:	f422 62f0 	bic.w	r2, r2, #1920	@ 0x780
 8003eaa:	bf58      	it	pl
 8003eac:	eba9 0101 	subpl.w	r1, r9, r1
 8003eb0:	f442 72c0 	orr.w	r2, r2, #384	@ 0x180
 8003eb4:	f04f 0900 	mov.w	r9, #0
 8003eb8:	bf58      	it	pl
 8003eba:	e9cd 1604 	strdpl	r1, r6, [sp, #16]
 8003ebe:	6022      	str	r2, [r4, #0]
 8003ec0:	e789      	b.n	8003dd6 <_scanf_float+0x196>
 8003ec2:	f04f 0a03 	mov.w	sl, #3
 8003ec6:	e786      	b.n	8003dd6 <_scanf_float+0x196>
 8003ec8:	4639      	mov	r1, r7
 8003eca:	4640      	mov	r0, r8
 8003ecc:	f8d4 3180 	ldr.w	r3, [r4, #384]	@ 0x180
 8003ed0:	4798      	blx	r3
 8003ed2:	2800      	cmp	r0, #0
 8003ed4:	f43f aeda 	beq.w	8003c8c <_scanf_float+0x4c>
 8003ed8:	e6e5      	b.n	8003ca6 <_scanf_float+0x66>
 8003eda:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 8003ede:	463a      	mov	r2, r7
 8003ee0:	4640      	mov	r0, r8
 8003ee2:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 8003ee6:	4798      	blx	r3
 8003ee8:	6923      	ldr	r3, [r4, #16]
 8003eea:	3b01      	subs	r3, #1
 8003eec:	6123      	str	r3, [r4, #16]
 8003eee:	e6e7      	b.n	8003cc0 <_scanf_float+0x80>
 8003ef0:	1e6b      	subs	r3, r5, #1
 8003ef2:	2b06      	cmp	r3, #6
 8003ef4:	d824      	bhi.n	8003f40 <_scanf_float+0x300>
 8003ef6:	2d02      	cmp	r5, #2
 8003ef8:	d836      	bhi.n	8003f68 <_scanf_float+0x328>
 8003efa:	9b01      	ldr	r3, [sp, #4]
 8003efc:	429e      	cmp	r6, r3
 8003efe:	f67f aee3 	bls.w	8003cc8 <_scanf_float+0x88>
 8003f02:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 8003f06:	463a      	mov	r2, r7
 8003f08:	4640      	mov	r0, r8
 8003f0a:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 8003f0e:	4798      	blx	r3
 8003f10:	6923      	ldr	r3, [r4, #16]
 8003f12:	3b01      	subs	r3, #1
 8003f14:	6123      	str	r3, [r4, #16]
 8003f16:	e7f0      	b.n	8003efa <_scanf_float+0x2ba>
 8003f18:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 8003f1c:	463a      	mov	r2, r7
 8003f1e:	4640      	mov	r0, r8
 8003f20:	f81b 1d01 	ldrb.w	r1, [fp, #-1]!
 8003f24:	4798      	blx	r3
 8003f26:	6923      	ldr	r3, [r4, #16]
 8003f28:	3b01      	subs	r3, #1
 8003f2a:	6123      	str	r3, [r4, #16]
 8003f2c:	f10a 3aff 	add.w	sl, sl, #4294967295	@ 0xffffffff
 8003f30:	fa5f fa8a 	uxtb.w	sl, sl
 8003f34:	f1ba 0f02 	cmp.w	sl, #2
 8003f38:	d1ee      	bne.n	8003f18 <_scanf_float+0x2d8>
 8003f3a:	3d03      	subs	r5, #3
 8003f3c:	b2ed      	uxtb	r5, r5
 8003f3e:	1b76      	subs	r6, r6, r5
 8003f40:	6823      	ldr	r3, [r4, #0]
 8003f42:	05da      	lsls	r2, r3, #23
 8003f44:	d530      	bpl.n	8003fa8 <_scanf_float+0x368>
 8003f46:	055b      	lsls	r3, r3, #21
 8003f48:	d511      	bpl.n	8003f6e <_scanf_float+0x32e>
 8003f4a:	9b01      	ldr	r3, [sp, #4]
 8003f4c:	429e      	cmp	r6, r3
 8003f4e:	f67f aebb 	bls.w	8003cc8 <_scanf_float+0x88>
 8003f52:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 8003f56:	463a      	mov	r2, r7
 8003f58:	4640      	mov	r0, r8
 8003f5a:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 8003f5e:	4798      	blx	r3
 8003f60:	6923      	ldr	r3, [r4, #16]
 8003f62:	3b01      	subs	r3, #1
 8003f64:	6123      	str	r3, [r4, #16]
 8003f66:	e7f0      	b.n	8003f4a <_scanf_float+0x30a>
 8003f68:	46aa      	mov	sl, r5
 8003f6a:	46b3      	mov	fp, r6
 8003f6c:	e7de      	b.n	8003f2c <_scanf_float+0x2ec>
 8003f6e:	f816 1c01 	ldrb.w	r1, [r6, #-1]
 8003f72:	6923      	ldr	r3, [r4, #16]
 8003f74:	2965      	cmp	r1, #101	@ 0x65
 8003f76:	f103 33ff 	add.w	r3, r3, #4294967295	@ 0xffffffff
 8003f7a:	f106 35ff 	add.w	r5, r6, #4294967295	@ 0xffffffff
 8003f7e:	6123      	str	r3, [r4, #16]
 8003f80:	d00c      	beq.n	8003f9c <_scanf_float+0x35c>
 8003f82:	2945      	cmp	r1, #69	@ 0x45
 8003f84:	d00a      	beq.n	8003f9c <_scanf_float+0x35c>
 8003f86:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 8003f8a:	463a      	mov	r2, r7
 8003f8c:	4640      	mov	r0, r8
 8003f8e:	4798      	blx	r3
 8003f90:	6923      	ldr	r3, [r4, #16]
 8003f92:	f816 1c02 	ldrb.w	r1, [r6, #-2]
 8003f96:	3b01      	subs	r3, #1
 8003f98:	1eb5      	subs	r5, r6, #2
 8003f9a:	6123      	str	r3, [r4, #16]
 8003f9c:	463a      	mov	r2, r7
 8003f9e:	4640      	mov	r0, r8
 8003fa0:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 8003fa4:	4798      	blx	r3
 8003fa6:	462e      	mov	r6, r5
 8003fa8:	6822      	ldr	r2, [r4, #0]
 8003faa:	f012 0210 	ands.w	r2, r2, #16
 8003fae:	d001      	beq.n	8003fb4 <_scanf_float+0x374>
 8003fb0:	2000      	movs	r0, #0
 8003fb2:	e68a      	b.n	8003cca <_scanf_float+0x8a>
 8003fb4:	7032      	strb	r2, [r6, #0]
 8003fb6:	6823      	ldr	r3, [r4, #0]
 8003fb8:	f403 63c0 	and.w	r3, r3, #1536	@ 0x600
 8003fbc:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8003fc0:	d11c      	bne.n	8003ffc <_scanf_float+0x3bc>
 8003fc2:	9b02      	ldr	r3, [sp, #8]
 8003fc4:	454b      	cmp	r3, r9
 8003fc6:	eba3 0209 	sub.w	r2, r3, r9
 8003fca:	d123      	bne.n	8004014 <_scanf_float+0x3d4>
 8003fcc:	2200      	movs	r2, #0
 8003fce:	4640      	mov	r0, r8
 8003fd0:	9901      	ldr	r1, [sp, #4]
 8003fd2:	f000 ff05 	bl	8004de0 <_strtod_r>
 8003fd6:	9b03      	ldr	r3, [sp, #12]
 8003fd8:	6825      	ldr	r5, [r4, #0]
 8003fda:	681b      	ldr	r3, [r3, #0]
 8003fdc:	f015 0f02 	tst.w	r5, #2
 8003fe0:	4606      	mov	r6, r0
 8003fe2:	460f      	mov	r7, r1
 8003fe4:	f103 0204 	add.w	r2, r3, #4
 8003fe8:	d01f      	beq.n	800402a <_scanf_float+0x3ea>
 8003fea:	9903      	ldr	r1, [sp, #12]
 8003fec:	600a      	str	r2, [r1, #0]
 8003fee:	681b      	ldr	r3, [r3, #0]
 8003ff0:	e9c3 6700 	strd	r6, r7, [r3]
 8003ff4:	68e3      	ldr	r3, [r4, #12]
 8003ff6:	3301      	adds	r3, #1
 8003ff8:	60e3      	str	r3, [r4, #12]
 8003ffa:	e7d9      	b.n	8003fb0 <_scanf_float+0x370>
 8003ffc:	9b04      	ldr	r3, [sp, #16]
 8003ffe:	2b00      	cmp	r3, #0
 8004000:	d0e4      	beq.n	8003fcc <_scanf_float+0x38c>
 8004002:	9905      	ldr	r1, [sp, #20]
 8004004:	230a      	movs	r3, #10
 8004006:	4640      	mov	r0, r8
 8004008:	3101      	adds	r1, #1
 800400a:	f000 ff69 	bl	8004ee0 <_strtol_r>
 800400e:	9b04      	ldr	r3, [sp, #16]
 8004010:	9e05      	ldr	r6, [sp, #20]
 8004012:	1ac2      	subs	r2, r0, r3
 8004014:	f204 136f 	addw	r3, r4, #367	@ 0x16f
 8004018:	429e      	cmp	r6, r3
 800401a:	bf28      	it	cs
 800401c:	f504 76b7 	addcs.w	r6, r4, #366	@ 0x16e
 8004020:	4630      	mov	r0, r6
 8004022:	490d      	ldr	r1, [pc, #52]	@ (8004058 <_scanf_float+0x418>)
 8004024:	f000 f81c 	bl	8004060 <siprintf>
 8004028:	e7d0      	b.n	8003fcc <_scanf_float+0x38c>
 800402a:	076d      	lsls	r5, r5, #29
 800402c:	d4dd      	bmi.n	8003fea <_scanf_float+0x3aa>
 800402e:	9d03      	ldr	r5, [sp, #12]
 8004030:	602a      	str	r2, [r5, #0]
 8004032:	681d      	ldr	r5, [r3, #0]
 8004034:	4602      	mov	r2, r0
 8004036:	460b      	mov	r3, r1
 8004038:	f7fc fcf8 	bl	8000a2c <__aeabi_dcmpun>
 800403c:	b120      	cbz	r0, 8004048 <_scanf_float+0x408>
 800403e:	4807      	ldr	r0, [pc, #28]	@ (800405c <_scanf_float+0x41c>)
 8004040:	f000 ffee 	bl	8005020 <nanf>
 8004044:	6028      	str	r0, [r5, #0]
 8004046:	e7d5      	b.n	8003ff4 <_scanf_float+0x3b4>
 8004048:	4630      	mov	r0, r6
 800404a:	4639      	mov	r1, r7
 800404c:	f7fc fd4c 	bl	8000ae8 <__aeabi_d2f>
 8004050:	e7f8      	b.n	8004044 <_scanf_float+0x404>
 8004052:	f04f 0900 	mov.w	r9, #0
 8004056:	e62d      	b.n	8003cb4 <_scanf_float+0x74>
 8004058:	08009464 	.word	0x08009464
 800405c:	0800985b 	.word	0x0800985b

08004060 <siprintf>:
 8004060:	b40e      	push	{r1, r2, r3}
 8004062:	f06f 4100 	mvn.w	r1, #2147483648	@ 0x80000000
 8004066:	b500      	push	{lr}
 8004068:	b09c      	sub	sp, #112	@ 0x70
 800406a:	ab1d      	add	r3, sp, #116	@ 0x74
 800406c:	9002      	str	r0, [sp, #8]
 800406e:	9006      	str	r0, [sp, #24]
 8004070:	9107      	str	r1, [sp, #28]
 8004072:	9104      	str	r1, [sp, #16]
 8004074:	4808      	ldr	r0, [pc, #32]	@ (8004098 <siprintf+0x38>)
 8004076:	4909      	ldr	r1, [pc, #36]	@ (800409c <siprintf+0x3c>)
 8004078:	f853 2b04 	ldr.w	r2, [r3], #4
 800407c:	9105      	str	r1, [sp, #20]
 800407e:	6800      	ldr	r0, [r0, #0]
 8004080:	a902      	add	r1, sp, #8
 8004082:	9301      	str	r3, [sp, #4]
 8004084:	f002 f9b4 	bl	80063f0 <_svfiprintf_r>
 8004088:	2200      	movs	r2, #0
 800408a:	9b02      	ldr	r3, [sp, #8]
 800408c:	701a      	strb	r2, [r3, #0]
 800408e:	b01c      	add	sp, #112	@ 0x70
 8004090:	f85d eb04 	ldr.w	lr, [sp], #4
 8004094:	b003      	add	sp, #12
 8004096:	4770      	bx	lr
 8004098:	20000178 	.word	0x20000178
 800409c:	ffff0208 	.word	0xffff0208

080040a0 <std>:
 80040a0:	2300      	movs	r3, #0
 80040a2:	b510      	push	{r4, lr}
 80040a4:	4604      	mov	r4, r0
 80040a6:	e9c0 3300 	strd	r3, r3, [r0]
 80040aa:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80040ae:	6083      	str	r3, [r0, #8]
 80040b0:	8181      	strh	r1, [r0, #12]
 80040b2:	6643      	str	r3, [r0, #100]	@ 0x64
 80040b4:	81c2      	strh	r2, [r0, #14]
 80040b6:	6183      	str	r3, [r0, #24]
 80040b8:	4619      	mov	r1, r3
 80040ba:	2208      	movs	r2, #8
 80040bc:	305c      	adds	r0, #92	@ 0x5c
 80040be:	f000 ff53 	bl	8004f68 <memset>
 80040c2:	4b0d      	ldr	r3, [pc, #52]	@ (80040f8 <std+0x58>)
 80040c4:	6224      	str	r4, [r4, #32]
 80040c6:	6263      	str	r3, [r4, #36]	@ 0x24
 80040c8:	4b0c      	ldr	r3, [pc, #48]	@ (80040fc <std+0x5c>)
 80040ca:	62a3      	str	r3, [r4, #40]	@ 0x28
 80040cc:	4b0c      	ldr	r3, [pc, #48]	@ (8004100 <std+0x60>)
 80040ce:	62e3      	str	r3, [r4, #44]	@ 0x2c
 80040d0:	4b0c      	ldr	r3, [pc, #48]	@ (8004104 <std+0x64>)
 80040d2:	6323      	str	r3, [r4, #48]	@ 0x30
 80040d4:	4b0c      	ldr	r3, [pc, #48]	@ (8004108 <std+0x68>)
 80040d6:	429c      	cmp	r4, r3
 80040d8:	d006      	beq.n	80040e8 <std+0x48>
 80040da:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 80040de:	4294      	cmp	r4, r2
 80040e0:	d002      	beq.n	80040e8 <std+0x48>
 80040e2:	33d0      	adds	r3, #208	@ 0xd0
 80040e4:	429c      	cmp	r4, r3
 80040e6:	d105      	bne.n	80040f4 <std+0x54>
 80040e8:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 80040ec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80040f0:	f000 bf70 	b.w	8004fd4 <__retarget_lock_init_recursive>
 80040f4:	bd10      	pop	{r4, pc}
 80040f6:	bf00      	nop
 80040f8:	08007495 	.word	0x08007495
 80040fc:	080074b7 	.word	0x080074b7
 8004100:	080074ef 	.word	0x080074ef
 8004104:	08007513 	.word	0x08007513
 8004108:	200002a8 	.word	0x200002a8

0800410c <stdio_exit_handler>:
 800410c:	4a02      	ldr	r2, [pc, #8]	@ (8004118 <stdio_exit_handler+0xc>)
 800410e:	4903      	ldr	r1, [pc, #12]	@ (800411c <stdio_exit_handler+0x10>)
 8004110:	4803      	ldr	r0, [pc, #12]	@ (8004120 <stdio_exit_handler+0x14>)
 8004112:	f000 bee7 	b.w	8004ee4 <_fwalk_sglue>
 8004116:	bf00      	nop
 8004118:	20000000 	.word	0x20000000
 800411c:	08006ae1 	.word	0x08006ae1
 8004120:	2000017c 	.word	0x2000017c

08004124 <cleanup_stdio>:
 8004124:	6841      	ldr	r1, [r0, #4]
 8004126:	4b0c      	ldr	r3, [pc, #48]	@ (8004158 <cleanup_stdio+0x34>)
 8004128:	b510      	push	{r4, lr}
 800412a:	4299      	cmp	r1, r3
 800412c:	4604      	mov	r4, r0
 800412e:	d001      	beq.n	8004134 <cleanup_stdio+0x10>
 8004130:	f002 fcd6 	bl	8006ae0 <_fflush_r>
 8004134:	68a1      	ldr	r1, [r4, #8]
 8004136:	4b09      	ldr	r3, [pc, #36]	@ (800415c <cleanup_stdio+0x38>)
 8004138:	4299      	cmp	r1, r3
 800413a:	d002      	beq.n	8004142 <cleanup_stdio+0x1e>
 800413c:	4620      	mov	r0, r4
 800413e:	f002 fccf 	bl	8006ae0 <_fflush_r>
 8004142:	68e1      	ldr	r1, [r4, #12]
 8004144:	4b06      	ldr	r3, [pc, #24]	@ (8004160 <cleanup_stdio+0x3c>)
 8004146:	4299      	cmp	r1, r3
 8004148:	d004      	beq.n	8004154 <cleanup_stdio+0x30>
 800414a:	4620      	mov	r0, r4
 800414c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8004150:	f002 bcc6 	b.w	8006ae0 <_fflush_r>
 8004154:	bd10      	pop	{r4, pc}
 8004156:	bf00      	nop
 8004158:	200002a8 	.word	0x200002a8
 800415c:	20000310 	.word	0x20000310
 8004160:	20000378 	.word	0x20000378

08004164 <global_stdio_init.part.0>:
 8004164:	b510      	push	{r4, lr}
 8004166:	4b0b      	ldr	r3, [pc, #44]	@ (8004194 <global_stdio_init.part.0+0x30>)
 8004168:	4c0b      	ldr	r4, [pc, #44]	@ (8004198 <global_stdio_init.part.0+0x34>)
 800416a:	4a0c      	ldr	r2, [pc, #48]	@ (800419c <global_stdio_init.part.0+0x38>)
 800416c:	4620      	mov	r0, r4
 800416e:	601a      	str	r2, [r3, #0]
 8004170:	2104      	movs	r1, #4
 8004172:	2200      	movs	r2, #0
 8004174:	f7ff ff94 	bl	80040a0 <std>
 8004178:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 800417c:	2201      	movs	r2, #1
 800417e:	2109      	movs	r1, #9
 8004180:	f7ff ff8e 	bl	80040a0 <std>
 8004184:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8004188:	2202      	movs	r2, #2
 800418a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800418e:	2112      	movs	r1, #18
 8004190:	f7ff bf86 	b.w	80040a0 <std>
 8004194:	200003e0 	.word	0x200003e0
 8004198:	200002a8 	.word	0x200002a8
 800419c:	0800410d 	.word	0x0800410d

080041a0 <__sfp_lock_acquire>:
 80041a0:	4801      	ldr	r0, [pc, #4]	@ (80041a8 <__sfp_lock_acquire+0x8>)
 80041a2:	f000 bf18 	b.w	8004fd6 <__retarget_lock_acquire_recursive>
 80041a6:	bf00      	nop
 80041a8:	200003e5 	.word	0x200003e5

080041ac <__sfp_lock_release>:
 80041ac:	4801      	ldr	r0, [pc, #4]	@ (80041b4 <__sfp_lock_release+0x8>)
 80041ae:	f000 bf13 	b.w	8004fd8 <__retarget_lock_release_recursive>
 80041b2:	bf00      	nop
 80041b4:	200003e5 	.word	0x200003e5

080041b8 <__sinit>:
 80041b8:	b510      	push	{r4, lr}
 80041ba:	4604      	mov	r4, r0
 80041bc:	f7ff fff0 	bl	80041a0 <__sfp_lock_acquire>
 80041c0:	6a23      	ldr	r3, [r4, #32]
 80041c2:	b11b      	cbz	r3, 80041cc <__sinit+0x14>
 80041c4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80041c8:	f7ff bff0 	b.w	80041ac <__sfp_lock_release>
 80041cc:	4b04      	ldr	r3, [pc, #16]	@ (80041e0 <__sinit+0x28>)
 80041ce:	6223      	str	r3, [r4, #32]
 80041d0:	4b04      	ldr	r3, [pc, #16]	@ (80041e4 <__sinit+0x2c>)
 80041d2:	681b      	ldr	r3, [r3, #0]
 80041d4:	2b00      	cmp	r3, #0
 80041d6:	d1f5      	bne.n	80041c4 <__sinit+0xc>
 80041d8:	f7ff ffc4 	bl	8004164 <global_stdio_init.part.0>
 80041dc:	e7f2      	b.n	80041c4 <__sinit+0xc>
 80041de:	bf00      	nop
 80041e0:	08004125 	.word	0x08004125
 80041e4:	200003e0 	.word	0x200003e0

080041e8 <sulp>:
 80041e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80041ec:	460f      	mov	r7, r1
 80041ee:	4690      	mov	r8, r2
 80041f0:	f003 f81c 	bl	800722c <__ulp>
 80041f4:	4604      	mov	r4, r0
 80041f6:	460d      	mov	r5, r1
 80041f8:	f1b8 0f00 	cmp.w	r8, #0
 80041fc:	d011      	beq.n	8004222 <sulp+0x3a>
 80041fe:	f3c7 530a 	ubfx	r3, r7, #20, #11
 8004202:	f1c3 036b 	rsb	r3, r3, #107	@ 0x6b
 8004206:	2b00      	cmp	r3, #0
 8004208:	dd0b      	ble.n	8004222 <sulp+0x3a>
 800420a:	2400      	movs	r4, #0
 800420c:	051b      	lsls	r3, r3, #20
 800420e:	f103 557f 	add.w	r5, r3, #1069547520	@ 0x3fc00000
 8004212:	f505 1540 	add.w	r5, r5, #3145728	@ 0x300000
 8004216:	4622      	mov	r2, r4
 8004218:	462b      	mov	r3, r5
 800421a:	f7fc f96d 	bl	80004f8 <__aeabi_dmul>
 800421e:	4604      	mov	r4, r0
 8004220:	460d      	mov	r5, r1
 8004222:	4620      	mov	r0, r4
 8004224:	4629      	mov	r1, r5
 8004226:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800422a:	0000      	movs	r0, r0
 800422c:	0000      	movs	r0, r0
	...

08004230 <_strtod_l>:
 8004230:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004234:	b09f      	sub	sp, #124	@ 0x7c
 8004236:	9217      	str	r2, [sp, #92]	@ 0x5c
 8004238:	2200      	movs	r2, #0
 800423a:	460c      	mov	r4, r1
 800423c:	921a      	str	r2, [sp, #104]	@ 0x68
 800423e:	f04f 0a00 	mov.w	sl, #0
 8004242:	f04f 0b00 	mov.w	fp, #0
 8004246:	460a      	mov	r2, r1
 8004248:	9005      	str	r0, [sp, #20]
 800424a:	9219      	str	r2, [sp, #100]	@ 0x64
 800424c:	7811      	ldrb	r1, [r2, #0]
 800424e:	292b      	cmp	r1, #43	@ 0x2b
 8004250:	d048      	beq.n	80042e4 <_strtod_l+0xb4>
 8004252:	d836      	bhi.n	80042c2 <_strtod_l+0x92>
 8004254:	290d      	cmp	r1, #13
 8004256:	d830      	bhi.n	80042ba <_strtod_l+0x8a>
 8004258:	2908      	cmp	r1, #8
 800425a:	d830      	bhi.n	80042be <_strtod_l+0x8e>
 800425c:	2900      	cmp	r1, #0
 800425e:	d039      	beq.n	80042d4 <_strtod_l+0xa4>
 8004260:	2200      	movs	r2, #0
 8004262:	920b      	str	r2, [sp, #44]	@ 0x2c
 8004264:	9d19      	ldr	r5, [sp, #100]	@ 0x64
 8004266:	782a      	ldrb	r2, [r5, #0]
 8004268:	2a30      	cmp	r2, #48	@ 0x30
 800426a:	f040 80b1 	bne.w	80043d0 <_strtod_l+0x1a0>
 800426e:	786a      	ldrb	r2, [r5, #1]
 8004270:	f002 02df 	and.w	r2, r2, #223	@ 0xdf
 8004274:	2a58      	cmp	r2, #88	@ 0x58
 8004276:	d16c      	bne.n	8004352 <_strtod_l+0x122>
 8004278:	9302      	str	r3, [sp, #8]
 800427a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800427c:	4a8e      	ldr	r2, [pc, #568]	@ (80044b8 <_strtod_l+0x288>)
 800427e:	9301      	str	r3, [sp, #4]
 8004280:	ab1a      	add	r3, sp, #104	@ 0x68
 8004282:	9300      	str	r3, [sp, #0]
 8004284:	9805      	ldr	r0, [sp, #20]
 8004286:	ab1b      	add	r3, sp, #108	@ 0x6c
 8004288:	a919      	add	r1, sp, #100	@ 0x64
 800428a:	f001 fd85 	bl	8005d98 <__gethex>
 800428e:	f010 060f 	ands.w	r6, r0, #15
 8004292:	4604      	mov	r4, r0
 8004294:	d005      	beq.n	80042a2 <_strtod_l+0x72>
 8004296:	2e06      	cmp	r6, #6
 8004298:	d126      	bne.n	80042e8 <_strtod_l+0xb8>
 800429a:	2300      	movs	r3, #0
 800429c:	3501      	adds	r5, #1
 800429e:	9519      	str	r5, [sp, #100]	@ 0x64
 80042a0:	930b      	str	r3, [sp, #44]	@ 0x2c
 80042a2:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 80042a4:	2b00      	cmp	r3, #0
 80042a6:	f040 8584 	bne.w	8004db2 <_strtod_l+0xb82>
 80042aa:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80042ac:	b1bb      	cbz	r3, 80042de <_strtod_l+0xae>
 80042ae:	4650      	mov	r0, sl
 80042b0:	f10b 4100 	add.w	r1, fp, #2147483648	@ 0x80000000
 80042b4:	b01f      	add	sp, #124	@ 0x7c
 80042b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80042ba:	2920      	cmp	r1, #32
 80042bc:	d1d0      	bne.n	8004260 <_strtod_l+0x30>
 80042be:	3201      	adds	r2, #1
 80042c0:	e7c3      	b.n	800424a <_strtod_l+0x1a>
 80042c2:	292d      	cmp	r1, #45	@ 0x2d
 80042c4:	d1cc      	bne.n	8004260 <_strtod_l+0x30>
 80042c6:	2101      	movs	r1, #1
 80042c8:	910b      	str	r1, [sp, #44]	@ 0x2c
 80042ca:	1c51      	adds	r1, r2, #1
 80042cc:	9119      	str	r1, [sp, #100]	@ 0x64
 80042ce:	7852      	ldrb	r2, [r2, #1]
 80042d0:	2a00      	cmp	r2, #0
 80042d2:	d1c7      	bne.n	8004264 <_strtod_l+0x34>
 80042d4:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 80042d6:	9419      	str	r4, [sp, #100]	@ 0x64
 80042d8:	2b00      	cmp	r3, #0
 80042da:	f040 8568 	bne.w	8004dae <_strtod_l+0xb7e>
 80042de:	4650      	mov	r0, sl
 80042e0:	4659      	mov	r1, fp
 80042e2:	e7e7      	b.n	80042b4 <_strtod_l+0x84>
 80042e4:	2100      	movs	r1, #0
 80042e6:	e7ef      	b.n	80042c8 <_strtod_l+0x98>
 80042e8:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 80042ea:	b13a      	cbz	r2, 80042fc <_strtod_l+0xcc>
 80042ec:	2135      	movs	r1, #53	@ 0x35
 80042ee:	a81c      	add	r0, sp, #112	@ 0x70
 80042f0:	f003 f88c 	bl	800740c <__copybits>
 80042f4:	991a      	ldr	r1, [sp, #104]	@ 0x68
 80042f6:	9805      	ldr	r0, [sp, #20]
 80042f8:	f002 fc66 	bl	8006bc8 <_Bfree>
 80042fc:	3e01      	subs	r6, #1
 80042fe:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 8004300:	2e04      	cmp	r6, #4
 8004302:	d806      	bhi.n	8004312 <_strtod_l+0xe2>
 8004304:	e8df f006 	tbb	[pc, r6]
 8004308:	201d0314 	.word	0x201d0314
 800430c:	14          	.byte	0x14
 800430d:	00          	.byte	0x00
 800430e:	e9dd ab1c 	ldrd	sl, fp, [sp, #112]	@ 0x70
 8004312:	05e1      	lsls	r1, r4, #23
 8004314:	bf48      	it	mi
 8004316:	f04b 4b00 	orrmi.w	fp, fp, #2147483648	@ 0x80000000
 800431a:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 800431e:	0d1b      	lsrs	r3, r3, #20
 8004320:	051b      	lsls	r3, r3, #20
 8004322:	2b00      	cmp	r3, #0
 8004324:	d1bd      	bne.n	80042a2 <_strtod_l+0x72>
 8004326:	f000 fe2b 	bl	8004f80 <__errno>
 800432a:	2322      	movs	r3, #34	@ 0x22
 800432c:	6003      	str	r3, [r0, #0]
 800432e:	e7b8      	b.n	80042a2 <_strtod_l+0x72>
 8004330:	f202 4233 	addw	r2, r2, #1075	@ 0x433
 8004334:	e9dd a31c 	ldrd	sl, r3, [sp, #112]	@ 0x70
 8004338:	f423 1380 	bic.w	r3, r3, #1048576	@ 0x100000
 800433c:	ea43 5b02 	orr.w	fp, r3, r2, lsl #20
 8004340:	e7e7      	b.n	8004312 <_strtod_l+0xe2>
 8004342:	f8df b178 	ldr.w	fp, [pc, #376]	@ 80044bc <_strtod_l+0x28c>
 8004346:	e7e4      	b.n	8004312 <_strtod_l+0xe2>
 8004348:	f06f 4b00 	mvn.w	fp, #2147483648	@ 0x80000000
 800434c:	f04f 3aff 	mov.w	sl, #4294967295	@ 0xffffffff
 8004350:	e7df      	b.n	8004312 <_strtod_l+0xe2>
 8004352:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8004354:	1c5a      	adds	r2, r3, #1
 8004356:	9219      	str	r2, [sp, #100]	@ 0x64
 8004358:	785b      	ldrb	r3, [r3, #1]
 800435a:	2b30      	cmp	r3, #48	@ 0x30
 800435c:	d0f9      	beq.n	8004352 <_strtod_l+0x122>
 800435e:	2b00      	cmp	r3, #0
 8004360:	d09f      	beq.n	80042a2 <_strtod_l+0x72>
 8004362:	2301      	movs	r3, #1
 8004364:	9309      	str	r3, [sp, #36]	@ 0x24
 8004366:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8004368:	220a      	movs	r2, #10
 800436a:	930c      	str	r3, [sp, #48]	@ 0x30
 800436c:	2300      	movs	r3, #0
 800436e:	461f      	mov	r7, r3
 8004370:	9308      	str	r3, [sp, #32]
 8004372:	930a      	str	r3, [sp, #40]	@ 0x28
 8004374:	9819      	ldr	r0, [sp, #100]	@ 0x64
 8004376:	7805      	ldrb	r5, [r0, #0]
 8004378:	f1a5 0330 	sub.w	r3, r5, #48	@ 0x30
 800437c:	b2d9      	uxtb	r1, r3
 800437e:	2909      	cmp	r1, #9
 8004380:	d928      	bls.n	80043d4 <_strtod_l+0x1a4>
 8004382:	2201      	movs	r2, #1
 8004384:	494e      	ldr	r1, [pc, #312]	@ (80044c0 <_strtod_l+0x290>)
 8004386:	f000 fddd 	bl	8004f44 <strncmp>
 800438a:	2800      	cmp	r0, #0
 800438c:	d032      	beq.n	80043f4 <_strtod_l+0x1c4>
 800438e:	2000      	movs	r0, #0
 8004390:	462a      	mov	r2, r5
 8004392:	4681      	mov	r9, r0
 8004394:	463d      	mov	r5, r7
 8004396:	4603      	mov	r3, r0
 8004398:	2a65      	cmp	r2, #101	@ 0x65
 800439a:	d001      	beq.n	80043a0 <_strtod_l+0x170>
 800439c:	2a45      	cmp	r2, #69	@ 0x45
 800439e:	d114      	bne.n	80043ca <_strtod_l+0x19a>
 80043a0:	b91d      	cbnz	r5, 80043aa <_strtod_l+0x17a>
 80043a2:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80043a4:	4302      	orrs	r2, r0
 80043a6:	d095      	beq.n	80042d4 <_strtod_l+0xa4>
 80043a8:	2500      	movs	r5, #0
 80043aa:	9c19      	ldr	r4, [sp, #100]	@ 0x64
 80043ac:	1c62      	adds	r2, r4, #1
 80043ae:	9219      	str	r2, [sp, #100]	@ 0x64
 80043b0:	7862      	ldrb	r2, [r4, #1]
 80043b2:	2a2b      	cmp	r2, #43	@ 0x2b
 80043b4:	d077      	beq.n	80044a6 <_strtod_l+0x276>
 80043b6:	2a2d      	cmp	r2, #45	@ 0x2d
 80043b8:	d07b      	beq.n	80044b2 <_strtod_l+0x282>
 80043ba:	f04f 0c00 	mov.w	ip, #0
 80043be:	f1a2 0130 	sub.w	r1, r2, #48	@ 0x30
 80043c2:	2909      	cmp	r1, #9
 80043c4:	f240 8082 	bls.w	80044cc <_strtod_l+0x29c>
 80043c8:	9419      	str	r4, [sp, #100]	@ 0x64
 80043ca:	f04f 0800 	mov.w	r8, #0
 80043ce:	e0a2      	b.n	8004516 <_strtod_l+0x2e6>
 80043d0:	2300      	movs	r3, #0
 80043d2:	e7c7      	b.n	8004364 <_strtod_l+0x134>
 80043d4:	2f08      	cmp	r7, #8
 80043d6:	bfd5      	itete	le
 80043d8:	990a      	ldrle	r1, [sp, #40]	@ 0x28
 80043da:	9908      	ldrgt	r1, [sp, #32]
 80043dc:	fb02 3301 	mlale	r3, r2, r1, r3
 80043e0:	fb02 3301 	mlagt	r3, r2, r1, r3
 80043e4:	f100 0001 	add.w	r0, r0, #1
 80043e8:	bfd4      	ite	le
 80043ea:	930a      	strle	r3, [sp, #40]	@ 0x28
 80043ec:	9308      	strgt	r3, [sp, #32]
 80043ee:	3701      	adds	r7, #1
 80043f0:	9019      	str	r0, [sp, #100]	@ 0x64
 80043f2:	e7bf      	b.n	8004374 <_strtod_l+0x144>
 80043f4:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 80043f6:	1c5a      	adds	r2, r3, #1
 80043f8:	9219      	str	r2, [sp, #100]	@ 0x64
 80043fa:	785a      	ldrb	r2, [r3, #1]
 80043fc:	b37f      	cbz	r7, 800445e <_strtod_l+0x22e>
 80043fe:	4681      	mov	r9, r0
 8004400:	463d      	mov	r5, r7
 8004402:	f1a2 0330 	sub.w	r3, r2, #48	@ 0x30
 8004406:	2b09      	cmp	r3, #9
 8004408:	d912      	bls.n	8004430 <_strtod_l+0x200>
 800440a:	2301      	movs	r3, #1
 800440c:	e7c4      	b.n	8004398 <_strtod_l+0x168>
 800440e:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8004410:	3001      	adds	r0, #1
 8004412:	1c5a      	adds	r2, r3, #1
 8004414:	9219      	str	r2, [sp, #100]	@ 0x64
 8004416:	785a      	ldrb	r2, [r3, #1]
 8004418:	2a30      	cmp	r2, #48	@ 0x30
 800441a:	d0f8      	beq.n	800440e <_strtod_l+0x1de>
 800441c:	f1a2 0331 	sub.w	r3, r2, #49	@ 0x31
 8004420:	2b08      	cmp	r3, #8
 8004422:	f200 84cb 	bhi.w	8004dbc <_strtod_l+0xb8c>
 8004426:	4681      	mov	r9, r0
 8004428:	2000      	movs	r0, #0
 800442a:	4605      	mov	r5, r0
 800442c:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 800442e:	930c      	str	r3, [sp, #48]	@ 0x30
 8004430:	3a30      	subs	r2, #48	@ 0x30
 8004432:	f100 0301 	add.w	r3, r0, #1
 8004436:	d02a      	beq.n	800448e <_strtod_l+0x25e>
 8004438:	4499      	add	r9, r3
 800443a:	210a      	movs	r1, #10
 800443c:	462b      	mov	r3, r5
 800443e:	eb00 0c05 	add.w	ip, r0, r5
 8004442:	4563      	cmp	r3, ip
 8004444:	d10d      	bne.n	8004462 <_strtod_l+0x232>
 8004446:	1c69      	adds	r1, r5, #1
 8004448:	4401      	add	r1, r0
 800444a:	4428      	add	r0, r5
 800444c:	2808      	cmp	r0, #8
 800444e:	dc16      	bgt.n	800447e <_strtod_l+0x24e>
 8004450:	230a      	movs	r3, #10
 8004452:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8004454:	fb03 2300 	mla	r3, r3, r0, r2
 8004458:	930a      	str	r3, [sp, #40]	@ 0x28
 800445a:	2300      	movs	r3, #0
 800445c:	e018      	b.n	8004490 <_strtod_l+0x260>
 800445e:	4638      	mov	r0, r7
 8004460:	e7da      	b.n	8004418 <_strtod_l+0x1e8>
 8004462:	2b08      	cmp	r3, #8
 8004464:	f103 0301 	add.w	r3, r3, #1
 8004468:	dc03      	bgt.n	8004472 <_strtod_l+0x242>
 800446a:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
 800446c:	434e      	muls	r6, r1
 800446e:	960a      	str	r6, [sp, #40]	@ 0x28
 8004470:	e7e7      	b.n	8004442 <_strtod_l+0x212>
 8004472:	2b10      	cmp	r3, #16
 8004474:	bfde      	ittt	le
 8004476:	9e08      	ldrle	r6, [sp, #32]
 8004478:	434e      	mulle	r6, r1
 800447a:	9608      	strle	r6, [sp, #32]
 800447c:	e7e1      	b.n	8004442 <_strtod_l+0x212>
 800447e:	280f      	cmp	r0, #15
 8004480:	dceb      	bgt.n	800445a <_strtod_l+0x22a>
 8004482:	230a      	movs	r3, #10
 8004484:	9808      	ldr	r0, [sp, #32]
 8004486:	fb03 2300 	mla	r3, r3, r0, r2
 800448a:	9308      	str	r3, [sp, #32]
 800448c:	e7e5      	b.n	800445a <_strtod_l+0x22a>
 800448e:	4629      	mov	r1, r5
 8004490:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 8004492:	460d      	mov	r5, r1
 8004494:	1c50      	adds	r0, r2, #1
 8004496:	9019      	str	r0, [sp, #100]	@ 0x64
 8004498:	7852      	ldrb	r2, [r2, #1]
 800449a:	4618      	mov	r0, r3
 800449c:	e7b1      	b.n	8004402 <_strtod_l+0x1d2>
 800449e:	f04f 0900 	mov.w	r9, #0
 80044a2:	2301      	movs	r3, #1
 80044a4:	e77d      	b.n	80043a2 <_strtod_l+0x172>
 80044a6:	f04f 0c00 	mov.w	ip, #0
 80044aa:	1ca2      	adds	r2, r4, #2
 80044ac:	9219      	str	r2, [sp, #100]	@ 0x64
 80044ae:	78a2      	ldrb	r2, [r4, #2]
 80044b0:	e785      	b.n	80043be <_strtod_l+0x18e>
 80044b2:	f04f 0c01 	mov.w	ip, #1
 80044b6:	e7f8      	b.n	80044aa <_strtod_l+0x27a>
 80044b8:	08009480 	.word	0x08009480
 80044bc:	7ff00000 	.word	0x7ff00000
 80044c0:	08009469 	.word	0x08009469
 80044c4:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 80044c6:	1c51      	adds	r1, r2, #1
 80044c8:	9119      	str	r1, [sp, #100]	@ 0x64
 80044ca:	7852      	ldrb	r2, [r2, #1]
 80044cc:	2a30      	cmp	r2, #48	@ 0x30
 80044ce:	d0f9      	beq.n	80044c4 <_strtod_l+0x294>
 80044d0:	f1a2 0131 	sub.w	r1, r2, #49	@ 0x31
 80044d4:	2908      	cmp	r1, #8
 80044d6:	f63f af78 	bhi.w	80043ca <_strtod_l+0x19a>
 80044da:	f04f 080a 	mov.w	r8, #10
 80044de:	3a30      	subs	r2, #48	@ 0x30
 80044e0:	920e      	str	r2, [sp, #56]	@ 0x38
 80044e2:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 80044e4:	920f      	str	r2, [sp, #60]	@ 0x3c
 80044e6:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 80044e8:	1c56      	adds	r6, r2, #1
 80044ea:	9619      	str	r6, [sp, #100]	@ 0x64
 80044ec:	7852      	ldrb	r2, [r2, #1]
 80044ee:	f1a2 0e30 	sub.w	lr, r2, #48	@ 0x30
 80044f2:	f1be 0f09 	cmp.w	lr, #9
 80044f6:	d939      	bls.n	800456c <_strtod_l+0x33c>
 80044f8:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 80044fa:	f644 681f 	movw	r8, #19999	@ 0x4e1f
 80044fe:	1a76      	subs	r6, r6, r1
 8004500:	2e08      	cmp	r6, #8
 8004502:	dc03      	bgt.n	800450c <_strtod_l+0x2dc>
 8004504:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8004506:	4588      	cmp	r8, r1
 8004508:	bfa8      	it	ge
 800450a:	4688      	movge	r8, r1
 800450c:	f1bc 0f00 	cmp.w	ip, #0
 8004510:	d001      	beq.n	8004516 <_strtod_l+0x2e6>
 8004512:	f1c8 0800 	rsb	r8, r8, #0
 8004516:	2d00      	cmp	r5, #0
 8004518:	d14e      	bne.n	80045b8 <_strtod_l+0x388>
 800451a:	9909      	ldr	r1, [sp, #36]	@ 0x24
 800451c:	4308      	orrs	r0, r1
 800451e:	f47f aec0 	bne.w	80042a2 <_strtod_l+0x72>
 8004522:	2b00      	cmp	r3, #0
 8004524:	f47f aed6 	bne.w	80042d4 <_strtod_l+0xa4>
 8004528:	2a69      	cmp	r2, #105	@ 0x69
 800452a:	d028      	beq.n	800457e <_strtod_l+0x34e>
 800452c:	dc25      	bgt.n	800457a <_strtod_l+0x34a>
 800452e:	2a49      	cmp	r2, #73	@ 0x49
 8004530:	d025      	beq.n	800457e <_strtod_l+0x34e>
 8004532:	2a4e      	cmp	r2, #78	@ 0x4e
 8004534:	f47f aece 	bne.w	80042d4 <_strtod_l+0xa4>
 8004538:	499a      	ldr	r1, [pc, #616]	@ (80047a4 <_strtod_l+0x574>)
 800453a:	a819      	add	r0, sp, #100	@ 0x64
 800453c:	f001 fe4e 	bl	80061dc <__match>
 8004540:	2800      	cmp	r0, #0
 8004542:	f43f aec7 	beq.w	80042d4 <_strtod_l+0xa4>
 8004546:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8004548:	781b      	ldrb	r3, [r3, #0]
 800454a:	2b28      	cmp	r3, #40	@ 0x28
 800454c:	d12e      	bne.n	80045ac <_strtod_l+0x37c>
 800454e:	4996      	ldr	r1, [pc, #600]	@ (80047a8 <_strtod_l+0x578>)
 8004550:	aa1c      	add	r2, sp, #112	@ 0x70
 8004552:	a819      	add	r0, sp, #100	@ 0x64
 8004554:	f001 fe56 	bl	8006204 <__hexnan>
 8004558:	2805      	cmp	r0, #5
 800455a:	d127      	bne.n	80045ac <_strtod_l+0x37c>
 800455c:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 800455e:	f8dd a070 	ldr.w	sl, [sp, #112]	@ 0x70
 8004562:	f043 4bff 	orr.w	fp, r3, #2139095040	@ 0x7f800000
 8004566:	f44b 0be0 	orr.w	fp, fp, #7340032	@ 0x700000
 800456a:	e69a      	b.n	80042a2 <_strtod_l+0x72>
 800456c:	990e      	ldr	r1, [sp, #56]	@ 0x38
 800456e:	fb08 2101 	mla	r1, r8, r1, r2
 8004572:	f1a1 0230 	sub.w	r2, r1, #48	@ 0x30
 8004576:	920e      	str	r2, [sp, #56]	@ 0x38
 8004578:	e7b5      	b.n	80044e6 <_strtod_l+0x2b6>
 800457a:	2a6e      	cmp	r2, #110	@ 0x6e
 800457c:	e7da      	b.n	8004534 <_strtod_l+0x304>
 800457e:	498b      	ldr	r1, [pc, #556]	@ (80047ac <_strtod_l+0x57c>)
 8004580:	a819      	add	r0, sp, #100	@ 0x64
 8004582:	f001 fe2b 	bl	80061dc <__match>
 8004586:	2800      	cmp	r0, #0
 8004588:	f43f aea4 	beq.w	80042d4 <_strtod_l+0xa4>
 800458c:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 800458e:	4988      	ldr	r1, [pc, #544]	@ (80047b0 <_strtod_l+0x580>)
 8004590:	3b01      	subs	r3, #1
 8004592:	a819      	add	r0, sp, #100	@ 0x64
 8004594:	9319      	str	r3, [sp, #100]	@ 0x64
 8004596:	f001 fe21 	bl	80061dc <__match>
 800459a:	b910      	cbnz	r0, 80045a2 <_strtod_l+0x372>
 800459c:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 800459e:	3301      	adds	r3, #1
 80045a0:	9319      	str	r3, [sp, #100]	@ 0x64
 80045a2:	f04f 0a00 	mov.w	sl, #0
 80045a6:	f8df b20c 	ldr.w	fp, [pc, #524]	@ 80047b4 <_strtod_l+0x584>
 80045aa:	e67a      	b.n	80042a2 <_strtod_l+0x72>
 80045ac:	4882      	ldr	r0, [pc, #520]	@ (80047b8 <_strtod_l+0x588>)
 80045ae:	f000 fd31 	bl	8005014 <nan>
 80045b2:	4682      	mov	sl, r0
 80045b4:	468b      	mov	fp, r1
 80045b6:	e674      	b.n	80042a2 <_strtod_l+0x72>
 80045b8:	eba8 0309 	sub.w	r3, r8, r9
 80045bc:	2f00      	cmp	r7, #0
 80045be:	bf08      	it	eq
 80045c0:	462f      	moveq	r7, r5
 80045c2:	980a      	ldr	r0, [sp, #40]	@ 0x28
 80045c4:	2d10      	cmp	r5, #16
 80045c6:	462c      	mov	r4, r5
 80045c8:	9309      	str	r3, [sp, #36]	@ 0x24
 80045ca:	bfa8      	it	ge
 80045cc:	2410      	movge	r4, #16
 80045ce:	f7fb ff19 	bl	8000404 <__aeabi_ui2d>
 80045d2:	2d09      	cmp	r5, #9
 80045d4:	4682      	mov	sl, r0
 80045d6:	468b      	mov	fp, r1
 80045d8:	dc11      	bgt.n	80045fe <_strtod_l+0x3ce>
 80045da:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80045dc:	2b00      	cmp	r3, #0
 80045de:	f43f ae60 	beq.w	80042a2 <_strtod_l+0x72>
 80045e2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80045e4:	dd76      	ble.n	80046d4 <_strtod_l+0x4a4>
 80045e6:	2b16      	cmp	r3, #22
 80045e8:	dc5d      	bgt.n	80046a6 <_strtod_l+0x476>
 80045ea:	4974      	ldr	r1, [pc, #464]	@ (80047bc <_strtod_l+0x58c>)
 80045ec:	4652      	mov	r2, sl
 80045ee:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 80045f2:	465b      	mov	r3, fp
 80045f4:	e9d1 0100 	ldrd	r0, r1, [r1]
 80045f8:	f7fb ff7e 	bl	80004f8 <__aeabi_dmul>
 80045fc:	e7d9      	b.n	80045b2 <_strtod_l+0x382>
 80045fe:	4b6f      	ldr	r3, [pc, #444]	@ (80047bc <_strtod_l+0x58c>)
 8004600:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8004604:	e953 2312 	ldrd	r2, r3, [r3, #-72]	@ 0x48
 8004608:	f7fb ff76 	bl	80004f8 <__aeabi_dmul>
 800460c:	4682      	mov	sl, r0
 800460e:	9808      	ldr	r0, [sp, #32]
 8004610:	468b      	mov	fp, r1
 8004612:	f7fb fef7 	bl	8000404 <__aeabi_ui2d>
 8004616:	4602      	mov	r2, r0
 8004618:	460b      	mov	r3, r1
 800461a:	4650      	mov	r0, sl
 800461c:	4659      	mov	r1, fp
 800461e:	f7fb fdb5 	bl	800018c <__adddf3>
 8004622:	2d0f      	cmp	r5, #15
 8004624:	4682      	mov	sl, r0
 8004626:	468b      	mov	fp, r1
 8004628:	ddd7      	ble.n	80045da <_strtod_l+0x3aa>
 800462a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800462c:	1b2c      	subs	r4, r5, r4
 800462e:	441c      	add	r4, r3
 8004630:	2c00      	cmp	r4, #0
 8004632:	f340 8096 	ble.w	8004762 <_strtod_l+0x532>
 8004636:	f014 030f 	ands.w	r3, r4, #15
 800463a:	d00a      	beq.n	8004652 <_strtod_l+0x422>
 800463c:	495f      	ldr	r1, [pc, #380]	@ (80047bc <_strtod_l+0x58c>)
 800463e:	4652      	mov	r2, sl
 8004640:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 8004644:	e9d1 0100 	ldrd	r0, r1, [r1]
 8004648:	465b      	mov	r3, fp
 800464a:	f7fb ff55 	bl	80004f8 <__aeabi_dmul>
 800464e:	4682      	mov	sl, r0
 8004650:	468b      	mov	fp, r1
 8004652:	f034 040f 	bics.w	r4, r4, #15
 8004656:	d073      	beq.n	8004740 <_strtod_l+0x510>
 8004658:	f5b4 7f9a 	cmp.w	r4, #308	@ 0x134
 800465c:	dd48      	ble.n	80046f0 <_strtod_l+0x4c0>
 800465e:	2400      	movs	r4, #0
 8004660:	46a0      	mov	r8, r4
 8004662:	46a1      	mov	r9, r4
 8004664:	940a      	str	r4, [sp, #40]	@ 0x28
 8004666:	2322      	movs	r3, #34	@ 0x22
 8004668:	f04f 0a00 	mov.w	sl, #0
 800466c:	9a05      	ldr	r2, [sp, #20]
 800466e:	f8df b144 	ldr.w	fp, [pc, #324]	@ 80047b4 <_strtod_l+0x584>
 8004672:	6013      	str	r3, [r2, #0]
 8004674:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8004676:	2b00      	cmp	r3, #0
 8004678:	f43f ae13 	beq.w	80042a2 <_strtod_l+0x72>
 800467c:	991a      	ldr	r1, [sp, #104]	@ 0x68
 800467e:	9805      	ldr	r0, [sp, #20]
 8004680:	f002 faa2 	bl	8006bc8 <_Bfree>
 8004684:	4649      	mov	r1, r9
 8004686:	9805      	ldr	r0, [sp, #20]
 8004688:	f002 fa9e 	bl	8006bc8 <_Bfree>
 800468c:	4641      	mov	r1, r8
 800468e:	9805      	ldr	r0, [sp, #20]
 8004690:	f002 fa9a 	bl	8006bc8 <_Bfree>
 8004694:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8004696:	9805      	ldr	r0, [sp, #20]
 8004698:	f002 fa96 	bl	8006bc8 <_Bfree>
 800469c:	4621      	mov	r1, r4
 800469e:	9805      	ldr	r0, [sp, #20]
 80046a0:	f002 fa92 	bl	8006bc8 <_Bfree>
 80046a4:	e5fd      	b.n	80042a2 <_strtod_l+0x72>
 80046a6:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80046a8:	f1c5 0325 	rsb	r3, r5, #37	@ 0x25
 80046ac:	4293      	cmp	r3, r2
 80046ae:	dbbc      	blt.n	800462a <_strtod_l+0x3fa>
 80046b0:	4c42      	ldr	r4, [pc, #264]	@ (80047bc <_strtod_l+0x58c>)
 80046b2:	f1c5 050f 	rsb	r5, r5, #15
 80046b6:	eb04 01c5 	add.w	r1, r4, r5, lsl #3
 80046ba:	4652      	mov	r2, sl
 80046bc:	e9d1 0100 	ldrd	r0, r1, [r1]
 80046c0:	465b      	mov	r3, fp
 80046c2:	f7fb ff19 	bl	80004f8 <__aeabi_dmul>
 80046c6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80046c8:	1b5d      	subs	r5, r3, r5
 80046ca:	eb04 04c5 	add.w	r4, r4, r5, lsl #3
 80046ce:	e9d4 2300 	ldrd	r2, r3, [r4]
 80046d2:	e791      	b.n	80045f8 <_strtod_l+0x3c8>
 80046d4:	3316      	adds	r3, #22
 80046d6:	dba8      	blt.n	800462a <_strtod_l+0x3fa>
 80046d8:	4b38      	ldr	r3, [pc, #224]	@ (80047bc <_strtod_l+0x58c>)
 80046da:	eba9 0808 	sub.w	r8, r9, r8
 80046de:	eb03 08c8 	add.w	r8, r3, r8, lsl #3
 80046e2:	4650      	mov	r0, sl
 80046e4:	e9d8 2300 	ldrd	r2, r3, [r8]
 80046e8:	4659      	mov	r1, fp
 80046ea:	f7fc f82f 	bl	800074c <__aeabi_ddiv>
 80046ee:	e760      	b.n	80045b2 <_strtod_l+0x382>
 80046f0:	4b33      	ldr	r3, [pc, #204]	@ (80047c0 <_strtod_l+0x590>)
 80046f2:	4650      	mov	r0, sl
 80046f4:	9308      	str	r3, [sp, #32]
 80046f6:	2300      	movs	r3, #0
 80046f8:	4659      	mov	r1, fp
 80046fa:	461e      	mov	r6, r3
 80046fc:	1124      	asrs	r4, r4, #4
 80046fe:	2c01      	cmp	r4, #1
 8004700:	dc21      	bgt.n	8004746 <_strtod_l+0x516>
 8004702:	b10b      	cbz	r3, 8004708 <_strtod_l+0x4d8>
 8004704:	4682      	mov	sl, r0
 8004706:	468b      	mov	fp, r1
 8004708:	492d      	ldr	r1, [pc, #180]	@ (80047c0 <_strtod_l+0x590>)
 800470a:	f1ab 7b54 	sub.w	fp, fp, #55574528	@ 0x3500000
 800470e:	eb01 01c6 	add.w	r1, r1, r6, lsl #3
 8004712:	4652      	mov	r2, sl
 8004714:	e9d1 0100 	ldrd	r0, r1, [r1]
 8004718:	465b      	mov	r3, fp
 800471a:	f7fb feed 	bl	80004f8 <__aeabi_dmul>
 800471e:	4b25      	ldr	r3, [pc, #148]	@ (80047b4 <_strtod_l+0x584>)
 8004720:	460a      	mov	r2, r1
 8004722:	400b      	ands	r3, r1
 8004724:	4927      	ldr	r1, [pc, #156]	@ (80047c4 <_strtod_l+0x594>)
 8004726:	4682      	mov	sl, r0
 8004728:	428b      	cmp	r3, r1
 800472a:	d898      	bhi.n	800465e <_strtod_l+0x42e>
 800472c:	f5a1 1180 	sub.w	r1, r1, #1048576	@ 0x100000
 8004730:	428b      	cmp	r3, r1
 8004732:	bf86      	itte	hi
 8004734:	f04f 3aff 	movhi.w	sl, #4294967295	@ 0xffffffff
 8004738:	f8df b08c 	ldrhi.w	fp, [pc, #140]	@ 80047c8 <_strtod_l+0x598>
 800473c:	f102 7b54 	addls.w	fp, r2, #55574528	@ 0x3500000
 8004740:	2300      	movs	r3, #0
 8004742:	9308      	str	r3, [sp, #32]
 8004744:	e07a      	b.n	800483c <_strtod_l+0x60c>
 8004746:	07e2      	lsls	r2, r4, #31
 8004748:	d505      	bpl.n	8004756 <_strtod_l+0x526>
 800474a:	9b08      	ldr	r3, [sp, #32]
 800474c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004750:	f7fb fed2 	bl	80004f8 <__aeabi_dmul>
 8004754:	2301      	movs	r3, #1
 8004756:	9a08      	ldr	r2, [sp, #32]
 8004758:	3601      	adds	r6, #1
 800475a:	3208      	adds	r2, #8
 800475c:	1064      	asrs	r4, r4, #1
 800475e:	9208      	str	r2, [sp, #32]
 8004760:	e7cd      	b.n	80046fe <_strtod_l+0x4ce>
 8004762:	d0ed      	beq.n	8004740 <_strtod_l+0x510>
 8004764:	4264      	negs	r4, r4
 8004766:	f014 020f 	ands.w	r2, r4, #15
 800476a:	d00a      	beq.n	8004782 <_strtod_l+0x552>
 800476c:	4b13      	ldr	r3, [pc, #76]	@ (80047bc <_strtod_l+0x58c>)
 800476e:	4650      	mov	r0, sl
 8004770:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8004774:	4659      	mov	r1, fp
 8004776:	e9d3 2300 	ldrd	r2, r3, [r3]
 800477a:	f7fb ffe7 	bl	800074c <__aeabi_ddiv>
 800477e:	4682      	mov	sl, r0
 8004780:	468b      	mov	fp, r1
 8004782:	1124      	asrs	r4, r4, #4
 8004784:	d0dc      	beq.n	8004740 <_strtod_l+0x510>
 8004786:	2c1f      	cmp	r4, #31
 8004788:	dd20      	ble.n	80047cc <_strtod_l+0x59c>
 800478a:	2400      	movs	r4, #0
 800478c:	46a0      	mov	r8, r4
 800478e:	46a1      	mov	r9, r4
 8004790:	940a      	str	r4, [sp, #40]	@ 0x28
 8004792:	2322      	movs	r3, #34	@ 0x22
 8004794:	9a05      	ldr	r2, [sp, #20]
 8004796:	f04f 0a00 	mov.w	sl, #0
 800479a:	f04f 0b00 	mov.w	fp, #0
 800479e:	6013      	str	r3, [r2, #0]
 80047a0:	e768      	b.n	8004674 <_strtod_l+0x444>
 80047a2:	bf00      	nop
 80047a4:	0800943d 	.word	0x0800943d
 80047a8:	0800946c 	.word	0x0800946c
 80047ac:	08009435 	.word	0x08009435
 80047b0:	080095cc 	.word	0x080095cc
 80047b4:	7ff00000 	.word	0x7ff00000
 80047b8:	0800985b 	.word	0x0800985b
 80047bc:	08009758 	.word	0x08009758
 80047c0:	08009730 	.word	0x08009730
 80047c4:	7ca00000 	.word	0x7ca00000
 80047c8:	7fefffff 	.word	0x7fefffff
 80047cc:	f014 0310 	ands.w	r3, r4, #16
 80047d0:	bf18      	it	ne
 80047d2:	236a      	movne	r3, #106	@ 0x6a
 80047d4:	4650      	mov	r0, sl
 80047d6:	9308      	str	r3, [sp, #32]
 80047d8:	4659      	mov	r1, fp
 80047da:	2300      	movs	r3, #0
 80047dc:	4ea9      	ldr	r6, [pc, #676]	@ (8004a84 <_strtod_l+0x854>)
 80047de:	07e2      	lsls	r2, r4, #31
 80047e0:	d504      	bpl.n	80047ec <_strtod_l+0x5bc>
 80047e2:	e9d6 2300 	ldrd	r2, r3, [r6]
 80047e6:	f7fb fe87 	bl	80004f8 <__aeabi_dmul>
 80047ea:	2301      	movs	r3, #1
 80047ec:	1064      	asrs	r4, r4, #1
 80047ee:	f106 0608 	add.w	r6, r6, #8
 80047f2:	d1f4      	bne.n	80047de <_strtod_l+0x5ae>
 80047f4:	b10b      	cbz	r3, 80047fa <_strtod_l+0x5ca>
 80047f6:	4682      	mov	sl, r0
 80047f8:	468b      	mov	fp, r1
 80047fa:	9b08      	ldr	r3, [sp, #32]
 80047fc:	b1b3      	cbz	r3, 800482c <_strtod_l+0x5fc>
 80047fe:	f3cb 520a 	ubfx	r2, fp, #20, #11
 8004802:	f1c2 036b 	rsb	r3, r2, #107	@ 0x6b
 8004806:	2b00      	cmp	r3, #0
 8004808:	4659      	mov	r1, fp
 800480a:	dd0f      	ble.n	800482c <_strtod_l+0x5fc>
 800480c:	2b1f      	cmp	r3, #31
 800480e:	dd57      	ble.n	80048c0 <_strtod_l+0x690>
 8004810:	2b34      	cmp	r3, #52	@ 0x34
 8004812:	bfd8      	it	le
 8004814:	f04f 33ff 	movle.w	r3, #4294967295	@ 0xffffffff
 8004818:	f04f 0a00 	mov.w	sl, #0
 800481c:	bfcf      	iteee	gt
 800481e:	f04f 7b5c 	movgt.w	fp, #57671680	@ 0x3700000
 8004822:	f1c2 024b 	rsble	r2, r2, #75	@ 0x4b
 8004826:	4093      	lslle	r3, r2
 8004828:	ea03 0b01 	andle.w	fp, r3, r1
 800482c:	2200      	movs	r2, #0
 800482e:	2300      	movs	r3, #0
 8004830:	4650      	mov	r0, sl
 8004832:	4659      	mov	r1, fp
 8004834:	f7fc f8c8 	bl	80009c8 <__aeabi_dcmpeq>
 8004838:	2800      	cmp	r0, #0
 800483a:	d1a6      	bne.n	800478a <_strtod_l+0x55a>
 800483c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800483e:	463a      	mov	r2, r7
 8004840:	9300      	str	r3, [sp, #0]
 8004842:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8004844:	462b      	mov	r3, r5
 8004846:	9805      	ldr	r0, [sp, #20]
 8004848:	f002 fa26 	bl	8006c98 <__s2b>
 800484c:	900a      	str	r0, [sp, #40]	@ 0x28
 800484e:	2800      	cmp	r0, #0
 8004850:	f43f af05 	beq.w	800465e <_strtod_l+0x42e>
 8004854:	2400      	movs	r4, #0
 8004856:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8004858:	eba9 0308 	sub.w	r3, r9, r8
 800485c:	2a00      	cmp	r2, #0
 800485e:	bfa8      	it	ge
 8004860:	2300      	movge	r3, #0
 8004862:	46a0      	mov	r8, r4
 8004864:	9312      	str	r3, [sp, #72]	@ 0x48
 8004866:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
 800486a:	9316      	str	r3, [sp, #88]	@ 0x58
 800486c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800486e:	9805      	ldr	r0, [sp, #20]
 8004870:	6859      	ldr	r1, [r3, #4]
 8004872:	f002 f969 	bl	8006b48 <_Balloc>
 8004876:	4681      	mov	r9, r0
 8004878:	2800      	cmp	r0, #0
 800487a:	f43f aef4 	beq.w	8004666 <_strtod_l+0x436>
 800487e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8004880:	300c      	adds	r0, #12
 8004882:	691a      	ldr	r2, [r3, #16]
 8004884:	f103 010c 	add.w	r1, r3, #12
 8004888:	3202      	adds	r2, #2
 800488a:	0092      	lsls	r2, r2, #2
 800488c:	f000 fbb3 	bl	8004ff6 <memcpy>
 8004890:	ab1c      	add	r3, sp, #112	@ 0x70
 8004892:	9301      	str	r3, [sp, #4]
 8004894:	ab1b      	add	r3, sp, #108	@ 0x6c
 8004896:	9300      	str	r3, [sp, #0]
 8004898:	4652      	mov	r2, sl
 800489a:	465b      	mov	r3, fp
 800489c:	9805      	ldr	r0, [sp, #20]
 800489e:	e9cd ab0c 	strd	sl, fp, [sp, #48]	@ 0x30
 80048a2:	f002 fd2b 	bl	80072fc <__d2b>
 80048a6:	901a      	str	r0, [sp, #104]	@ 0x68
 80048a8:	2800      	cmp	r0, #0
 80048aa:	f43f aedc 	beq.w	8004666 <_strtod_l+0x436>
 80048ae:	2101      	movs	r1, #1
 80048b0:	9805      	ldr	r0, [sp, #20]
 80048b2:	f002 fa87 	bl	8006dc4 <__i2b>
 80048b6:	4680      	mov	r8, r0
 80048b8:	b948      	cbnz	r0, 80048ce <_strtod_l+0x69e>
 80048ba:	f04f 0800 	mov.w	r8, #0
 80048be:	e6d2      	b.n	8004666 <_strtod_l+0x436>
 80048c0:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 80048c4:	fa02 f303 	lsl.w	r3, r2, r3
 80048c8:	ea03 0a0a 	and.w	sl, r3, sl
 80048cc:	e7ae      	b.n	800482c <_strtod_l+0x5fc>
 80048ce:	9d1b      	ldr	r5, [sp, #108]	@ 0x6c
 80048d0:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 80048d2:	2d00      	cmp	r5, #0
 80048d4:	bfab      	itete	ge
 80048d6:	9b12      	ldrge	r3, [sp, #72]	@ 0x48
 80048d8:	9b16      	ldrlt	r3, [sp, #88]	@ 0x58
 80048da:	18ef      	addge	r7, r5, r3
 80048dc:	1b5e      	sublt	r6, r3, r5
 80048de:	9b08      	ldr	r3, [sp, #32]
 80048e0:	bfa8      	it	ge
 80048e2:	9e16      	ldrge	r6, [sp, #88]	@ 0x58
 80048e4:	eba5 0503 	sub.w	r5, r5, r3
 80048e8:	4415      	add	r5, r2
 80048ea:	4b67      	ldr	r3, [pc, #412]	@ (8004a88 <_strtod_l+0x858>)
 80048ec:	f105 35ff 	add.w	r5, r5, #4294967295	@ 0xffffffff
 80048f0:	bfb8      	it	lt
 80048f2:	9f12      	ldrlt	r7, [sp, #72]	@ 0x48
 80048f4:	429d      	cmp	r5, r3
 80048f6:	f1c2 0236 	rsb	r2, r2, #54	@ 0x36
 80048fa:	da50      	bge.n	800499e <_strtod_l+0x76e>
 80048fc:	1b5b      	subs	r3, r3, r5
 80048fe:	2b1f      	cmp	r3, #31
 8004900:	f04f 0101 	mov.w	r1, #1
 8004904:	eba2 0203 	sub.w	r2, r2, r3
 8004908:	dc3d      	bgt.n	8004986 <_strtod_l+0x756>
 800490a:	fa01 f303 	lsl.w	r3, r1, r3
 800490e:	9313      	str	r3, [sp, #76]	@ 0x4c
 8004910:	2300      	movs	r3, #0
 8004912:	9310      	str	r3, [sp, #64]	@ 0x40
 8004914:	18bd      	adds	r5, r7, r2
 8004916:	9b08      	ldr	r3, [sp, #32]
 8004918:	42af      	cmp	r7, r5
 800491a:	4416      	add	r6, r2
 800491c:	441e      	add	r6, r3
 800491e:	463b      	mov	r3, r7
 8004920:	bfa8      	it	ge
 8004922:	462b      	movge	r3, r5
 8004924:	42b3      	cmp	r3, r6
 8004926:	bfa8      	it	ge
 8004928:	4633      	movge	r3, r6
 800492a:	2b00      	cmp	r3, #0
 800492c:	bfc2      	ittt	gt
 800492e:	1aed      	subgt	r5, r5, r3
 8004930:	1af6      	subgt	r6, r6, r3
 8004932:	1aff      	subgt	r7, r7, r3
 8004934:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8004936:	2b00      	cmp	r3, #0
 8004938:	dd16      	ble.n	8004968 <_strtod_l+0x738>
 800493a:	4641      	mov	r1, r8
 800493c:	461a      	mov	r2, r3
 800493e:	9805      	ldr	r0, [sp, #20]
 8004940:	f002 fafe 	bl	8006f40 <__pow5mult>
 8004944:	4680      	mov	r8, r0
 8004946:	2800      	cmp	r0, #0
 8004948:	d0b7      	beq.n	80048ba <_strtod_l+0x68a>
 800494a:	4601      	mov	r1, r0
 800494c:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 800494e:	9805      	ldr	r0, [sp, #20]
 8004950:	f002 fa4e 	bl	8006df0 <__multiply>
 8004954:	900e      	str	r0, [sp, #56]	@ 0x38
 8004956:	2800      	cmp	r0, #0
 8004958:	f43f ae85 	beq.w	8004666 <_strtod_l+0x436>
 800495c:	991a      	ldr	r1, [sp, #104]	@ 0x68
 800495e:	9805      	ldr	r0, [sp, #20]
 8004960:	f002 f932 	bl	8006bc8 <_Bfree>
 8004964:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8004966:	931a      	str	r3, [sp, #104]	@ 0x68
 8004968:	2d00      	cmp	r5, #0
 800496a:	dc1d      	bgt.n	80049a8 <_strtod_l+0x778>
 800496c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800496e:	2b00      	cmp	r3, #0
 8004970:	dd23      	ble.n	80049ba <_strtod_l+0x78a>
 8004972:	4649      	mov	r1, r9
 8004974:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 8004976:	9805      	ldr	r0, [sp, #20]
 8004978:	f002 fae2 	bl	8006f40 <__pow5mult>
 800497c:	4681      	mov	r9, r0
 800497e:	b9e0      	cbnz	r0, 80049ba <_strtod_l+0x78a>
 8004980:	f04f 0900 	mov.w	r9, #0
 8004984:	e66f      	b.n	8004666 <_strtod_l+0x436>
 8004986:	f1c5 457f 	rsb	r5, r5, #4278190080	@ 0xff000000
 800498a:	f505 057f 	add.w	r5, r5, #16711680	@ 0xff0000
 800498e:	f505 457b 	add.w	r5, r5, #64256	@ 0xfb00
 8004992:	35e2      	adds	r5, #226	@ 0xe2
 8004994:	fa01 f305 	lsl.w	r3, r1, r5
 8004998:	9310      	str	r3, [sp, #64]	@ 0x40
 800499a:	9113      	str	r1, [sp, #76]	@ 0x4c
 800499c:	e7ba      	b.n	8004914 <_strtod_l+0x6e4>
 800499e:	2300      	movs	r3, #0
 80049a0:	9310      	str	r3, [sp, #64]	@ 0x40
 80049a2:	2301      	movs	r3, #1
 80049a4:	9313      	str	r3, [sp, #76]	@ 0x4c
 80049a6:	e7b5      	b.n	8004914 <_strtod_l+0x6e4>
 80049a8:	462a      	mov	r2, r5
 80049aa:	991a      	ldr	r1, [sp, #104]	@ 0x68
 80049ac:	9805      	ldr	r0, [sp, #20]
 80049ae:	f002 fb21 	bl	8006ff4 <__lshift>
 80049b2:	901a      	str	r0, [sp, #104]	@ 0x68
 80049b4:	2800      	cmp	r0, #0
 80049b6:	d1d9      	bne.n	800496c <_strtod_l+0x73c>
 80049b8:	e655      	b.n	8004666 <_strtod_l+0x436>
 80049ba:	2e00      	cmp	r6, #0
 80049bc:	dd07      	ble.n	80049ce <_strtod_l+0x79e>
 80049be:	4649      	mov	r1, r9
 80049c0:	4632      	mov	r2, r6
 80049c2:	9805      	ldr	r0, [sp, #20]
 80049c4:	f002 fb16 	bl	8006ff4 <__lshift>
 80049c8:	4681      	mov	r9, r0
 80049ca:	2800      	cmp	r0, #0
 80049cc:	d0d8      	beq.n	8004980 <_strtod_l+0x750>
 80049ce:	2f00      	cmp	r7, #0
 80049d0:	dd08      	ble.n	80049e4 <_strtod_l+0x7b4>
 80049d2:	4641      	mov	r1, r8
 80049d4:	463a      	mov	r2, r7
 80049d6:	9805      	ldr	r0, [sp, #20]
 80049d8:	f002 fb0c 	bl	8006ff4 <__lshift>
 80049dc:	4680      	mov	r8, r0
 80049de:	2800      	cmp	r0, #0
 80049e0:	f43f ae41 	beq.w	8004666 <_strtod_l+0x436>
 80049e4:	464a      	mov	r2, r9
 80049e6:	991a      	ldr	r1, [sp, #104]	@ 0x68
 80049e8:	9805      	ldr	r0, [sp, #20]
 80049ea:	f002 fb8b 	bl	8007104 <__mdiff>
 80049ee:	4604      	mov	r4, r0
 80049f0:	2800      	cmp	r0, #0
 80049f2:	f43f ae38 	beq.w	8004666 <_strtod_l+0x436>
 80049f6:	68c3      	ldr	r3, [r0, #12]
 80049f8:	4641      	mov	r1, r8
 80049fa:	930f      	str	r3, [sp, #60]	@ 0x3c
 80049fc:	2300      	movs	r3, #0
 80049fe:	60c3      	str	r3, [r0, #12]
 8004a00:	f002 fb64 	bl	80070cc <__mcmp>
 8004a04:	2800      	cmp	r0, #0
 8004a06:	da45      	bge.n	8004a94 <_strtod_l+0x864>
 8004a08:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8004a0a:	ea53 030a 	orrs.w	r3, r3, sl
 8004a0e:	d16b      	bne.n	8004ae8 <_strtod_l+0x8b8>
 8004a10:	f3cb 0313 	ubfx	r3, fp, #0, #20
 8004a14:	2b00      	cmp	r3, #0
 8004a16:	d167      	bne.n	8004ae8 <_strtod_l+0x8b8>
 8004a18:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 8004a1c:	0d1b      	lsrs	r3, r3, #20
 8004a1e:	051b      	lsls	r3, r3, #20
 8004a20:	f1b3 6fd6 	cmp.w	r3, #112197632	@ 0x6b00000
 8004a24:	d960      	bls.n	8004ae8 <_strtod_l+0x8b8>
 8004a26:	6963      	ldr	r3, [r4, #20]
 8004a28:	b913      	cbnz	r3, 8004a30 <_strtod_l+0x800>
 8004a2a:	6923      	ldr	r3, [r4, #16]
 8004a2c:	2b01      	cmp	r3, #1
 8004a2e:	dd5b      	ble.n	8004ae8 <_strtod_l+0x8b8>
 8004a30:	4621      	mov	r1, r4
 8004a32:	2201      	movs	r2, #1
 8004a34:	9805      	ldr	r0, [sp, #20]
 8004a36:	f002 fadd 	bl	8006ff4 <__lshift>
 8004a3a:	4641      	mov	r1, r8
 8004a3c:	4604      	mov	r4, r0
 8004a3e:	f002 fb45 	bl	80070cc <__mcmp>
 8004a42:	2800      	cmp	r0, #0
 8004a44:	dd50      	ble.n	8004ae8 <_strtod_l+0x8b8>
 8004a46:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 8004a4a:	9a08      	ldr	r2, [sp, #32]
 8004a4c:	0d1b      	lsrs	r3, r3, #20
 8004a4e:	051b      	lsls	r3, r3, #20
 8004a50:	2a00      	cmp	r2, #0
 8004a52:	d06a      	beq.n	8004b2a <_strtod_l+0x8fa>
 8004a54:	f1b3 6fd6 	cmp.w	r3, #112197632	@ 0x6b00000
 8004a58:	d867      	bhi.n	8004b2a <_strtod_l+0x8fa>
 8004a5a:	f1b3 7f5c 	cmp.w	r3, #57671680	@ 0x3700000
 8004a5e:	f67f ae98 	bls.w	8004792 <_strtod_l+0x562>
 8004a62:	4650      	mov	r0, sl
 8004a64:	4659      	mov	r1, fp
 8004a66:	4b09      	ldr	r3, [pc, #36]	@ (8004a8c <_strtod_l+0x85c>)
 8004a68:	2200      	movs	r2, #0
 8004a6a:	f7fb fd45 	bl	80004f8 <__aeabi_dmul>
 8004a6e:	4b08      	ldr	r3, [pc, #32]	@ (8004a90 <_strtod_l+0x860>)
 8004a70:	4682      	mov	sl, r0
 8004a72:	400b      	ands	r3, r1
 8004a74:	468b      	mov	fp, r1
 8004a76:	2b00      	cmp	r3, #0
 8004a78:	f47f ae00 	bne.w	800467c <_strtod_l+0x44c>
 8004a7c:	2322      	movs	r3, #34	@ 0x22
 8004a7e:	9a05      	ldr	r2, [sp, #20]
 8004a80:	6013      	str	r3, [r2, #0]
 8004a82:	e5fb      	b.n	800467c <_strtod_l+0x44c>
 8004a84:	08009498 	.word	0x08009498
 8004a88:	fffffc02 	.word	0xfffffc02
 8004a8c:	39500000 	.word	0x39500000
 8004a90:	7ff00000 	.word	0x7ff00000
 8004a94:	f8cd b038 	str.w	fp, [sp, #56]	@ 0x38
 8004a98:	d165      	bne.n	8004b66 <_strtod_l+0x936>
 8004a9a:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8004a9c:	f3cb 0313 	ubfx	r3, fp, #0, #20
 8004aa0:	b35a      	cbz	r2, 8004afa <_strtod_l+0x8ca>
 8004aa2:	4a99      	ldr	r2, [pc, #612]	@ (8004d08 <_strtod_l+0xad8>)
 8004aa4:	4293      	cmp	r3, r2
 8004aa6:	d12b      	bne.n	8004b00 <_strtod_l+0x8d0>
 8004aa8:	9b08      	ldr	r3, [sp, #32]
 8004aaa:	4651      	mov	r1, sl
 8004aac:	b303      	cbz	r3, 8004af0 <_strtod_l+0x8c0>
 8004aae:	465a      	mov	r2, fp
 8004ab0:	4b96      	ldr	r3, [pc, #600]	@ (8004d0c <_strtod_l+0xadc>)
 8004ab2:	4013      	ands	r3, r2
 8004ab4:	f1b3 6fd4 	cmp.w	r3, #111149056	@ 0x6a00000
 8004ab8:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8004abc:	d81b      	bhi.n	8004af6 <_strtod_l+0x8c6>
 8004abe:	0d1b      	lsrs	r3, r3, #20
 8004ac0:	f1c3 036b 	rsb	r3, r3, #107	@ 0x6b
 8004ac4:	fa02 f303 	lsl.w	r3, r2, r3
 8004ac8:	4299      	cmp	r1, r3
 8004aca:	d119      	bne.n	8004b00 <_strtod_l+0x8d0>
 8004acc:	4b90      	ldr	r3, [pc, #576]	@ (8004d10 <_strtod_l+0xae0>)
 8004ace:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8004ad0:	429a      	cmp	r2, r3
 8004ad2:	d102      	bne.n	8004ada <_strtod_l+0x8aa>
 8004ad4:	3101      	adds	r1, #1
 8004ad6:	f43f adc6 	beq.w	8004666 <_strtod_l+0x436>
 8004ada:	f04f 0a00 	mov.w	sl, #0
 8004ade:	4b8b      	ldr	r3, [pc, #556]	@ (8004d0c <_strtod_l+0xadc>)
 8004ae0:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8004ae2:	401a      	ands	r2, r3
 8004ae4:	f502 1b80 	add.w	fp, r2, #1048576	@ 0x100000
 8004ae8:	9b08      	ldr	r3, [sp, #32]
 8004aea:	2b00      	cmp	r3, #0
 8004aec:	d1b9      	bne.n	8004a62 <_strtod_l+0x832>
 8004aee:	e5c5      	b.n	800467c <_strtod_l+0x44c>
 8004af0:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 8004af4:	e7e8      	b.n	8004ac8 <_strtod_l+0x898>
 8004af6:	4613      	mov	r3, r2
 8004af8:	e7e6      	b.n	8004ac8 <_strtod_l+0x898>
 8004afa:	ea53 030a 	orrs.w	r3, r3, sl
 8004afe:	d0a2      	beq.n	8004a46 <_strtod_l+0x816>
 8004b00:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8004b02:	b1db      	cbz	r3, 8004b3c <_strtod_l+0x90c>
 8004b04:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8004b06:	4213      	tst	r3, r2
 8004b08:	d0ee      	beq.n	8004ae8 <_strtod_l+0x8b8>
 8004b0a:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8004b0c:	4650      	mov	r0, sl
 8004b0e:	4659      	mov	r1, fp
 8004b10:	9a08      	ldr	r2, [sp, #32]
 8004b12:	b1bb      	cbz	r3, 8004b44 <_strtod_l+0x914>
 8004b14:	f7ff fb68 	bl	80041e8 <sulp>
 8004b18:	4602      	mov	r2, r0
 8004b1a:	460b      	mov	r3, r1
 8004b1c:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8004b20:	f7fb fb34 	bl	800018c <__adddf3>
 8004b24:	4682      	mov	sl, r0
 8004b26:	468b      	mov	fp, r1
 8004b28:	e7de      	b.n	8004ae8 <_strtod_l+0x8b8>
 8004b2a:	f5a3 1380 	sub.w	r3, r3, #1048576	@ 0x100000
 8004b2e:	ea6f 5b13 	mvn.w	fp, r3, lsr #20
 8004b32:	f04f 3aff 	mov.w	sl, #4294967295	@ 0xffffffff
 8004b36:	ea6f 5b0b 	mvn.w	fp, fp, lsl #20
 8004b3a:	e7d5      	b.n	8004ae8 <_strtod_l+0x8b8>
 8004b3c:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8004b3e:	ea13 0f0a 	tst.w	r3, sl
 8004b42:	e7e1      	b.n	8004b08 <_strtod_l+0x8d8>
 8004b44:	f7ff fb50 	bl	80041e8 <sulp>
 8004b48:	4602      	mov	r2, r0
 8004b4a:	460b      	mov	r3, r1
 8004b4c:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8004b50:	f7fb fb1a 	bl	8000188 <__aeabi_dsub>
 8004b54:	2200      	movs	r2, #0
 8004b56:	2300      	movs	r3, #0
 8004b58:	4682      	mov	sl, r0
 8004b5a:	468b      	mov	fp, r1
 8004b5c:	f7fb ff34 	bl	80009c8 <__aeabi_dcmpeq>
 8004b60:	2800      	cmp	r0, #0
 8004b62:	d0c1      	beq.n	8004ae8 <_strtod_l+0x8b8>
 8004b64:	e615      	b.n	8004792 <_strtod_l+0x562>
 8004b66:	4641      	mov	r1, r8
 8004b68:	4620      	mov	r0, r4
 8004b6a:	f002 fc1f 	bl	80073ac <__ratio>
 8004b6e:	2200      	movs	r2, #0
 8004b70:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8004b74:	4606      	mov	r6, r0
 8004b76:	460f      	mov	r7, r1
 8004b78:	f7fb ff3a 	bl	80009f0 <__aeabi_dcmple>
 8004b7c:	2800      	cmp	r0, #0
 8004b7e:	d06d      	beq.n	8004c5c <_strtod_l+0xa2c>
 8004b80:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8004b82:	2b00      	cmp	r3, #0
 8004b84:	d178      	bne.n	8004c78 <_strtod_l+0xa48>
 8004b86:	f1ba 0f00 	cmp.w	sl, #0
 8004b8a:	d156      	bne.n	8004c3a <_strtod_l+0xa0a>
 8004b8c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8004b8e:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8004b92:	2b00      	cmp	r3, #0
 8004b94:	d158      	bne.n	8004c48 <_strtod_l+0xa18>
 8004b96:	2200      	movs	r2, #0
 8004b98:	4630      	mov	r0, r6
 8004b9a:	4639      	mov	r1, r7
 8004b9c:	4b5d      	ldr	r3, [pc, #372]	@ (8004d14 <_strtod_l+0xae4>)
 8004b9e:	f7fb ff1d 	bl	80009dc <__aeabi_dcmplt>
 8004ba2:	2800      	cmp	r0, #0
 8004ba4:	d157      	bne.n	8004c56 <_strtod_l+0xa26>
 8004ba6:	4630      	mov	r0, r6
 8004ba8:	4639      	mov	r1, r7
 8004baa:	2200      	movs	r2, #0
 8004bac:	4b5a      	ldr	r3, [pc, #360]	@ (8004d18 <_strtod_l+0xae8>)
 8004bae:	f7fb fca3 	bl	80004f8 <__aeabi_dmul>
 8004bb2:	4606      	mov	r6, r0
 8004bb4:	460f      	mov	r7, r1
 8004bb6:	f107 4300 	add.w	r3, r7, #2147483648	@ 0x80000000
 8004bba:	9606      	str	r6, [sp, #24]
 8004bbc:	9307      	str	r3, [sp, #28]
 8004bbe:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8004bc2:	4d52      	ldr	r5, [pc, #328]	@ (8004d0c <_strtod_l+0xadc>)
 8004bc4:	e9cd 2310 	strd	r2, r3, [sp, #64]	@ 0x40
 8004bc8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8004bca:	401d      	ands	r5, r3
 8004bcc:	4b53      	ldr	r3, [pc, #332]	@ (8004d1c <_strtod_l+0xaec>)
 8004bce:	429d      	cmp	r5, r3
 8004bd0:	f040 80aa 	bne.w	8004d28 <_strtod_l+0xaf8>
 8004bd4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8004bd6:	4650      	mov	r0, sl
 8004bd8:	f1a3 7b54 	sub.w	fp, r3, #55574528	@ 0x3500000
 8004bdc:	4659      	mov	r1, fp
 8004bde:	f002 fb25 	bl	800722c <__ulp>
 8004be2:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8004be6:	f7fb fc87 	bl	80004f8 <__aeabi_dmul>
 8004bea:	4652      	mov	r2, sl
 8004bec:	465b      	mov	r3, fp
 8004bee:	f7fb facd 	bl	800018c <__adddf3>
 8004bf2:	460b      	mov	r3, r1
 8004bf4:	4945      	ldr	r1, [pc, #276]	@ (8004d0c <_strtod_l+0xadc>)
 8004bf6:	4a4a      	ldr	r2, [pc, #296]	@ (8004d20 <_strtod_l+0xaf0>)
 8004bf8:	4019      	ands	r1, r3
 8004bfa:	4291      	cmp	r1, r2
 8004bfc:	4682      	mov	sl, r0
 8004bfe:	d942      	bls.n	8004c86 <_strtod_l+0xa56>
 8004c00:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8004c02:	4b43      	ldr	r3, [pc, #268]	@ (8004d10 <_strtod_l+0xae0>)
 8004c04:	429a      	cmp	r2, r3
 8004c06:	d103      	bne.n	8004c10 <_strtod_l+0x9e0>
 8004c08:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8004c0a:	3301      	adds	r3, #1
 8004c0c:	f43f ad2b 	beq.w	8004666 <_strtod_l+0x436>
 8004c10:	f04f 3aff 	mov.w	sl, #4294967295	@ 0xffffffff
 8004c14:	f8df b0f8 	ldr.w	fp, [pc, #248]	@ 8004d10 <_strtod_l+0xae0>
 8004c18:	991a      	ldr	r1, [sp, #104]	@ 0x68
 8004c1a:	9805      	ldr	r0, [sp, #20]
 8004c1c:	f001 ffd4 	bl	8006bc8 <_Bfree>
 8004c20:	4649      	mov	r1, r9
 8004c22:	9805      	ldr	r0, [sp, #20]
 8004c24:	f001 ffd0 	bl	8006bc8 <_Bfree>
 8004c28:	4641      	mov	r1, r8
 8004c2a:	9805      	ldr	r0, [sp, #20]
 8004c2c:	f001 ffcc 	bl	8006bc8 <_Bfree>
 8004c30:	4621      	mov	r1, r4
 8004c32:	9805      	ldr	r0, [sp, #20]
 8004c34:	f001 ffc8 	bl	8006bc8 <_Bfree>
 8004c38:	e618      	b.n	800486c <_strtod_l+0x63c>
 8004c3a:	f1ba 0f01 	cmp.w	sl, #1
 8004c3e:	d103      	bne.n	8004c48 <_strtod_l+0xa18>
 8004c40:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8004c42:	2b00      	cmp	r3, #0
 8004c44:	f43f ada5 	beq.w	8004792 <_strtod_l+0x562>
 8004c48:	2200      	movs	r2, #0
 8004c4a:	4b36      	ldr	r3, [pc, #216]	@ (8004d24 <_strtod_l+0xaf4>)
 8004c4c:	2600      	movs	r6, #0
 8004c4e:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8004c52:	4f30      	ldr	r7, [pc, #192]	@ (8004d14 <_strtod_l+0xae4>)
 8004c54:	e7b3      	b.n	8004bbe <_strtod_l+0x98e>
 8004c56:	2600      	movs	r6, #0
 8004c58:	4f2f      	ldr	r7, [pc, #188]	@ (8004d18 <_strtod_l+0xae8>)
 8004c5a:	e7ac      	b.n	8004bb6 <_strtod_l+0x986>
 8004c5c:	4630      	mov	r0, r6
 8004c5e:	4639      	mov	r1, r7
 8004c60:	4b2d      	ldr	r3, [pc, #180]	@ (8004d18 <_strtod_l+0xae8>)
 8004c62:	2200      	movs	r2, #0
 8004c64:	f7fb fc48 	bl	80004f8 <__aeabi_dmul>
 8004c68:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8004c6a:	4606      	mov	r6, r0
 8004c6c:	460f      	mov	r7, r1
 8004c6e:	2b00      	cmp	r3, #0
 8004c70:	d0a1      	beq.n	8004bb6 <_strtod_l+0x986>
 8004c72:	e9cd 6706 	strd	r6, r7, [sp, #24]
 8004c76:	e7a2      	b.n	8004bbe <_strtod_l+0x98e>
 8004c78:	2200      	movs	r2, #0
 8004c7a:	4b26      	ldr	r3, [pc, #152]	@ (8004d14 <_strtod_l+0xae4>)
 8004c7c:	4616      	mov	r6, r2
 8004c7e:	461f      	mov	r7, r3
 8004c80:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8004c84:	e79b      	b.n	8004bbe <_strtod_l+0x98e>
 8004c86:	f103 7b54 	add.w	fp, r3, #55574528	@ 0x3500000
 8004c8a:	9b08      	ldr	r3, [sp, #32]
 8004c8c:	f8cd b038 	str.w	fp, [sp, #56]	@ 0x38
 8004c90:	2b00      	cmp	r3, #0
 8004c92:	d1c1      	bne.n	8004c18 <_strtod_l+0x9e8>
 8004c94:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 8004c98:	0d1b      	lsrs	r3, r3, #20
 8004c9a:	051b      	lsls	r3, r3, #20
 8004c9c:	429d      	cmp	r5, r3
 8004c9e:	d1bb      	bne.n	8004c18 <_strtod_l+0x9e8>
 8004ca0:	4630      	mov	r0, r6
 8004ca2:	4639      	mov	r1, r7
 8004ca4:	f7fc f9ce 	bl	8001044 <__aeabi_d2lz>
 8004ca8:	f7fb fbf8 	bl	800049c <__aeabi_l2d>
 8004cac:	4602      	mov	r2, r0
 8004cae:	460b      	mov	r3, r1
 8004cb0:	4630      	mov	r0, r6
 8004cb2:	4639      	mov	r1, r7
 8004cb4:	f7fb fa68 	bl	8000188 <__aeabi_dsub>
 8004cb8:	460b      	mov	r3, r1
 8004cba:	4602      	mov	r2, r0
 8004cbc:	f3cb 0613 	ubfx	r6, fp, #0, #20
 8004cc0:	e9cd 230c 	strd	r2, r3, [sp, #48]	@ 0x30
 8004cc4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8004cc6:	ea46 060a 	orr.w	r6, r6, sl
 8004cca:	431e      	orrs	r6, r3
 8004ccc:	d069      	beq.n	8004da2 <_strtod_l+0xb72>
 8004cce:	a30a      	add	r3, pc, #40	@ (adr r3, 8004cf8 <_strtod_l+0xac8>)
 8004cd0:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004cd4:	f7fb fe82 	bl	80009dc <__aeabi_dcmplt>
 8004cd8:	2800      	cmp	r0, #0
 8004cda:	f47f accf 	bne.w	800467c <_strtod_l+0x44c>
 8004cde:	a308      	add	r3, pc, #32	@ (adr r3, 8004d00 <_strtod_l+0xad0>)
 8004ce0:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004ce4:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8004ce8:	f7fb fe96 	bl	8000a18 <__aeabi_dcmpgt>
 8004cec:	2800      	cmp	r0, #0
 8004cee:	d093      	beq.n	8004c18 <_strtod_l+0x9e8>
 8004cf0:	e4c4      	b.n	800467c <_strtod_l+0x44c>
 8004cf2:	bf00      	nop
 8004cf4:	f3af 8000 	nop.w
 8004cf8:	94a03595 	.word	0x94a03595
 8004cfc:	3fdfffff 	.word	0x3fdfffff
 8004d00:	35afe535 	.word	0x35afe535
 8004d04:	3fe00000 	.word	0x3fe00000
 8004d08:	000fffff 	.word	0x000fffff
 8004d0c:	7ff00000 	.word	0x7ff00000
 8004d10:	7fefffff 	.word	0x7fefffff
 8004d14:	3ff00000 	.word	0x3ff00000
 8004d18:	3fe00000 	.word	0x3fe00000
 8004d1c:	7fe00000 	.word	0x7fe00000
 8004d20:	7c9fffff 	.word	0x7c9fffff
 8004d24:	bff00000 	.word	0xbff00000
 8004d28:	9b08      	ldr	r3, [sp, #32]
 8004d2a:	b323      	cbz	r3, 8004d76 <_strtod_l+0xb46>
 8004d2c:	f1b5 6fd4 	cmp.w	r5, #111149056	@ 0x6a00000
 8004d30:	d821      	bhi.n	8004d76 <_strtod_l+0xb46>
 8004d32:	a327      	add	r3, pc, #156	@ (adr r3, 8004dd0 <_strtod_l+0xba0>)
 8004d34:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004d38:	4630      	mov	r0, r6
 8004d3a:	4639      	mov	r1, r7
 8004d3c:	f7fb fe58 	bl	80009f0 <__aeabi_dcmple>
 8004d40:	b1a0      	cbz	r0, 8004d6c <_strtod_l+0xb3c>
 8004d42:	4639      	mov	r1, r7
 8004d44:	4630      	mov	r0, r6
 8004d46:	f7fb feaf 	bl	8000aa8 <__aeabi_d2uiz>
 8004d4a:	2801      	cmp	r0, #1
 8004d4c:	bf38      	it	cc
 8004d4e:	2001      	movcc	r0, #1
 8004d50:	f7fb fb58 	bl	8000404 <__aeabi_ui2d>
 8004d54:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8004d56:	4606      	mov	r6, r0
 8004d58:	460f      	mov	r7, r1
 8004d5a:	b9fb      	cbnz	r3, 8004d9c <_strtod_l+0xb6c>
 8004d5c:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 8004d60:	9014      	str	r0, [sp, #80]	@ 0x50
 8004d62:	9315      	str	r3, [sp, #84]	@ 0x54
 8004d64:	e9dd 2314 	ldrd	r2, r3, [sp, #80]	@ 0x50
 8004d68:	e9cd 2310 	strd	r2, r3, [sp, #64]	@ 0x40
 8004d6c:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8004d6e:	f103 63d6 	add.w	r3, r3, #112197632	@ 0x6b00000
 8004d72:	1b5b      	subs	r3, r3, r5
 8004d74:	9311      	str	r3, [sp, #68]	@ 0x44
 8004d76:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8004d7a:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	@ 0x40
 8004d7e:	f002 fa55 	bl	800722c <__ulp>
 8004d82:	4602      	mov	r2, r0
 8004d84:	460b      	mov	r3, r1
 8004d86:	4650      	mov	r0, sl
 8004d88:	4659      	mov	r1, fp
 8004d8a:	f7fb fbb5 	bl	80004f8 <__aeabi_dmul>
 8004d8e:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	@ 0x30
 8004d92:	f7fb f9fb 	bl	800018c <__adddf3>
 8004d96:	4682      	mov	sl, r0
 8004d98:	468b      	mov	fp, r1
 8004d9a:	e776      	b.n	8004c8a <_strtod_l+0xa5a>
 8004d9c:	e9cd 6714 	strd	r6, r7, [sp, #80]	@ 0x50
 8004da0:	e7e0      	b.n	8004d64 <_strtod_l+0xb34>
 8004da2:	a30d      	add	r3, pc, #52	@ (adr r3, 8004dd8 <_strtod_l+0xba8>)
 8004da4:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004da8:	f7fb fe18 	bl	80009dc <__aeabi_dcmplt>
 8004dac:	e79e      	b.n	8004cec <_strtod_l+0xabc>
 8004dae:	2300      	movs	r3, #0
 8004db0:	930b      	str	r3, [sp, #44]	@ 0x2c
 8004db2:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8004db4:	9a17      	ldr	r2, [sp, #92]	@ 0x5c
 8004db6:	6013      	str	r3, [r2, #0]
 8004db8:	f7ff ba77 	b.w	80042aa <_strtod_l+0x7a>
 8004dbc:	2a65      	cmp	r2, #101	@ 0x65
 8004dbe:	f43f ab6e 	beq.w	800449e <_strtod_l+0x26e>
 8004dc2:	2a45      	cmp	r2, #69	@ 0x45
 8004dc4:	f43f ab6b 	beq.w	800449e <_strtod_l+0x26e>
 8004dc8:	2301      	movs	r3, #1
 8004dca:	f7ff bba6 	b.w	800451a <_strtod_l+0x2ea>
 8004dce:	bf00      	nop
 8004dd0:	ffc00000 	.word	0xffc00000
 8004dd4:	41dfffff 	.word	0x41dfffff
 8004dd8:	94a03595 	.word	0x94a03595
 8004ddc:	3fcfffff 	.word	0x3fcfffff

08004de0 <_strtod_r>:
 8004de0:	4b01      	ldr	r3, [pc, #4]	@ (8004de8 <_strtod_r+0x8>)
 8004de2:	f7ff ba25 	b.w	8004230 <_strtod_l>
 8004de6:	bf00      	nop
 8004de8:	2000000c 	.word	0x2000000c

08004dec <_strtol_l.constprop.0>:
 8004dec:	2b24      	cmp	r3, #36	@ 0x24
 8004dee:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004df2:	4686      	mov	lr, r0
 8004df4:	4690      	mov	r8, r2
 8004df6:	d801      	bhi.n	8004dfc <_strtol_l.constprop.0+0x10>
 8004df8:	2b01      	cmp	r3, #1
 8004dfa:	d106      	bne.n	8004e0a <_strtol_l.constprop.0+0x1e>
 8004dfc:	f000 f8c0 	bl	8004f80 <__errno>
 8004e00:	2316      	movs	r3, #22
 8004e02:	6003      	str	r3, [r0, #0]
 8004e04:	2000      	movs	r0, #0
 8004e06:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004e0a:	460d      	mov	r5, r1
 8004e0c:	4833      	ldr	r0, [pc, #204]	@ (8004edc <_strtol_l.constprop.0+0xf0>)
 8004e0e:	462a      	mov	r2, r5
 8004e10:	f815 4b01 	ldrb.w	r4, [r5], #1
 8004e14:	5d06      	ldrb	r6, [r0, r4]
 8004e16:	f016 0608 	ands.w	r6, r6, #8
 8004e1a:	d1f8      	bne.n	8004e0e <_strtol_l.constprop.0+0x22>
 8004e1c:	2c2d      	cmp	r4, #45	@ 0x2d
 8004e1e:	d12d      	bne.n	8004e7c <_strtol_l.constprop.0+0x90>
 8004e20:	2601      	movs	r6, #1
 8004e22:	782c      	ldrb	r4, [r5, #0]
 8004e24:	1c95      	adds	r5, r2, #2
 8004e26:	f033 0210 	bics.w	r2, r3, #16
 8004e2a:	d109      	bne.n	8004e40 <_strtol_l.constprop.0+0x54>
 8004e2c:	2c30      	cmp	r4, #48	@ 0x30
 8004e2e:	d12a      	bne.n	8004e86 <_strtol_l.constprop.0+0x9a>
 8004e30:	782a      	ldrb	r2, [r5, #0]
 8004e32:	f002 02df 	and.w	r2, r2, #223	@ 0xdf
 8004e36:	2a58      	cmp	r2, #88	@ 0x58
 8004e38:	d125      	bne.n	8004e86 <_strtol_l.constprop.0+0x9a>
 8004e3a:	2310      	movs	r3, #16
 8004e3c:	786c      	ldrb	r4, [r5, #1]
 8004e3e:	3502      	adds	r5, #2
 8004e40:	2200      	movs	r2, #0
 8004e42:	f106 4c00 	add.w	ip, r6, #2147483648	@ 0x80000000
 8004e46:	f10c 3cff 	add.w	ip, ip, #4294967295	@ 0xffffffff
 8004e4a:	fbbc f9f3 	udiv	r9, ip, r3
 8004e4e:	4610      	mov	r0, r2
 8004e50:	fb03 ca19 	mls	sl, r3, r9, ip
 8004e54:	f1a4 0730 	sub.w	r7, r4, #48	@ 0x30
 8004e58:	2f09      	cmp	r7, #9
 8004e5a:	d81b      	bhi.n	8004e94 <_strtol_l.constprop.0+0xa8>
 8004e5c:	463c      	mov	r4, r7
 8004e5e:	42a3      	cmp	r3, r4
 8004e60:	dd27      	ble.n	8004eb2 <_strtol_l.constprop.0+0xc6>
 8004e62:	1c57      	adds	r7, r2, #1
 8004e64:	d007      	beq.n	8004e76 <_strtol_l.constprop.0+0x8a>
 8004e66:	4581      	cmp	r9, r0
 8004e68:	d320      	bcc.n	8004eac <_strtol_l.constprop.0+0xc0>
 8004e6a:	d101      	bne.n	8004e70 <_strtol_l.constprop.0+0x84>
 8004e6c:	45a2      	cmp	sl, r4
 8004e6e:	db1d      	blt.n	8004eac <_strtol_l.constprop.0+0xc0>
 8004e70:	2201      	movs	r2, #1
 8004e72:	fb00 4003 	mla	r0, r0, r3, r4
 8004e76:	f815 4b01 	ldrb.w	r4, [r5], #1
 8004e7a:	e7eb      	b.n	8004e54 <_strtol_l.constprop.0+0x68>
 8004e7c:	2c2b      	cmp	r4, #43	@ 0x2b
 8004e7e:	bf04      	itt	eq
 8004e80:	782c      	ldrbeq	r4, [r5, #0]
 8004e82:	1c95      	addeq	r5, r2, #2
 8004e84:	e7cf      	b.n	8004e26 <_strtol_l.constprop.0+0x3a>
 8004e86:	2b00      	cmp	r3, #0
 8004e88:	d1da      	bne.n	8004e40 <_strtol_l.constprop.0+0x54>
 8004e8a:	2c30      	cmp	r4, #48	@ 0x30
 8004e8c:	bf0c      	ite	eq
 8004e8e:	2308      	moveq	r3, #8
 8004e90:	230a      	movne	r3, #10
 8004e92:	e7d5      	b.n	8004e40 <_strtol_l.constprop.0+0x54>
 8004e94:	f1a4 0741 	sub.w	r7, r4, #65	@ 0x41
 8004e98:	2f19      	cmp	r7, #25
 8004e9a:	d801      	bhi.n	8004ea0 <_strtol_l.constprop.0+0xb4>
 8004e9c:	3c37      	subs	r4, #55	@ 0x37
 8004e9e:	e7de      	b.n	8004e5e <_strtol_l.constprop.0+0x72>
 8004ea0:	f1a4 0761 	sub.w	r7, r4, #97	@ 0x61
 8004ea4:	2f19      	cmp	r7, #25
 8004ea6:	d804      	bhi.n	8004eb2 <_strtol_l.constprop.0+0xc6>
 8004ea8:	3c57      	subs	r4, #87	@ 0x57
 8004eaa:	e7d8      	b.n	8004e5e <_strtol_l.constprop.0+0x72>
 8004eac:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8004eb0:	e7e1      	b.n	8004e76 <_strtol_l.constprop.0+0x8a>
 8004eb2:	1c53      	adds	r3, r2, #1
 8004eb4:	d108      	bne.n	8004ec8 <_strtol_l.constprop.0+0xdc>
 8004eb6:	2322      	movs	r3, #34	@ 0x22
 8004eb8:	4660      	mov	r0, ip
 8004eba:	f8ce 3000 	str.w	r3, [lr]
 8004ebe:	f1b8 0f00 	cmp.w	r8, #0
 8004ec2:	d0a0      	beq.n	8004e06 <_strtol_l.constprop.0+0x1a>
 8004ec4:	1e69      	subs	r1, r5, #1
 8004ec6:	e006      	b.n	8004ed6 <_strtol_l.constprop.0+0xea>
 8004ec8:	b106      	cbz	r6, 8004ecc <_strtol_l.constprop.0+0xe0>
 8004eca:	4240      	negs	r0, r0
 8004ecc:	f1b8 0f00 	cmp.w	r8, #0
 8004ed0:	d099      	beq.n	8004e06 <_strtol_l.constprop.0+0x1a>
 8004ed2:	2a00      	cmp	r2, #0
 8004ed4:	d1f6      	bne.n	8004ec4 <_strtol_l.constprop.0+0xd8>
 8004ed6:	f8c8 1000 	str.w	r1, [r8]
 8004eda:	e794      	b.n	8004e06 <_strtol_l.constprop.0+0x1a>
 8004edc:	080094c9 	.word	0x080094c9

08004ee0 <_strtol_r>:
 8004ee0:	f7ff bf84 	b.w	8004dec <_strtol_l.constprop.0>

08004ee4 <_fwalk_sglue>:
 8004ee4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8004ee8:	4607      	mov	r7, r0
 8004eea:	4688      	mov	r8, r1
 8004eec:	4614      	mov	r4, r2
 8004eee:	2600      	movs	r6, #0
 8004ef0:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8004ef4:	f1b9 0901 	subs.w	r9, r9, #1
 8004ef8:	d505      	bpl.n	8004f06 <_fwalk_sglue+0x22>
 8004efa:	6824      	ldr	r4, [r4, #0]
 8004efc:	2c00      	cmp	r4, #0
 8004efe:	d1f7      	bne.n	8004ef0 <_fwalk_sglue+0xc>
 8004f00:	4630      	mov	r0, r6
 8004f02:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8004f06:	89ab      	ldrh	r3, [r5, #12]
 8004f08:	2b01      	cmp	r3, #1
 8004f0a:	d907      	bls.n	8004f1c <_fwalk_sglue+0x38>
 8004f0c:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8004f10:	3301      	adds	r3, #1
 8004f12:	d003      	beq.n	8004f1c <_fwalk_sglue+0x38>
 8004f14:	4629      	mov	r1, r5
 8004f16:	4638      	mov	r0, r7
 8004f18:	47c0      	blx	r8
 8004f1a:	4306      	orrs	r6, r0
 8004f1c:	3568      	adds	r5, #104	@ 0x68
 8004f1e:	e7e9      	b.n	8004ef4 <_fwalk_sglue+0x10>

08004f20 <iprintf>:
 8004f20:	b40f      	push	{r0, r1, r2, r3}
 8004f22:	b507      	push	{r0, r1, r2, lr}
 8004f24:	4906      	ldr	r1, [pc, #24]	@ (8004f40 <iprintf+0x20>)
 8004f26:	ab04      	add	r3, sp, #16
 8004f28:	6808      	ldr	r0, [r1, #0]
 8004f2a:	f853 2b04 	ldr.w	r2, [r3], #4
 8004f2e:	6881      	ldr	r1, [r0, #8]
 8004f30:	9301      	str	r3, [sp, #4]
 8004f32:	f001 fb81 	bl	8006638 <_vfiprintf_r>
 8004f36:	b003      	add	sp, #12
 8004f38:	f85d eb04 	ldr.w	lr, [sp], #4
 8004f3c:	b004      	add	sp, #16
 8004f3e:	4770      	bx	lr
 8004f40:	20000178 	.word	0x20000178

08004f44 <strncmp>:
 8004f44:	b510      	push	{r4, lr}
 8004f46:	b16a      	cbz	r2, 8004f64 <strncmp+0x20>
 8004f48:	3901      	subs	r1, #1
 8004f4a:	1884      	adds	r4, r0, r2
 8004f4c:	f810 2b01 	ldrb.w	r2, [r0], #1
 8004f50:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 8004f54:	429a      	cmp	r2, r3
 8004f56:	d103      	bne.n	8004f60 <strncmp+0x1c>
 8004f58:	42a0      	cmp	r0, r4
 8004f5a:	d001      	beq.n	8004f60 <strncmp+0x1c>
 8004f5c:	2a00      	cmp	r2, #0
 8004f5e:	d1f5      	bne.n	8004f4c <strncmp+0x8>
 8004f60:	1ad0      	subs	r0, r2, r3
 8004f62:	bd10      	pop	{r4, pc}
 8004f64:	4610      	mov	r0, r2
 8004f66:	e7fc      	b.n	8004f62 <strncmp+0x1e>

08004f68 <memset>:
 8004f68:	4603      	mov	r3, r0
 8004f6a:	4402      	add	r2, r0
 8004f6c:	4293      	cmp	r3, r2
 8004f6e:	d100      	bne.n	8004f72 <memset+0xa>
 8004f70:	4770      	bx	lr
 8004f72:	f803 1b01 	strb.w	r1, [r3], #1
 8004f76:	e7f9      	b.n	8004f6c <memset+0x4>

08004f78 <_localeconv_r>:
 8004f78:	4800      	ldr	r0, [pc, #0]	@ (8004f7c <_localeconv_r+0x4>)
 8004f7a:	4770      	bx	lr
 8004f7c:	200000fc 	.word	0x200000fc

08004f80 <__errno>:
 8004f80:	4b01      	ldr	r3, [pc, #4]	@ (8004f88 <__errno+0x8>)
 8004f82:	6818      	ldr	r0, [r3, #0]
 8004f84:	4770      	bx	lr
 8004f86:	bf00      	nop
 8004f88:	20000178 	.word	0x20000178

08004f8c <__libc_init_array>:
 8004f8c:	b570      	push	{r4, r5, r6, lr}
 8004f8e:	2600      	movs	r6, #0
 8004f90:	4d0c      	ldr	r5, [pc, #48]	@ (8004fc4 <__libc_init_array+0x38>)
 8004f92:	4c0d      	ldr	r4, [pc, #52]	@ (8004fc8 <__libc_init_array+0x3c>)
 8004f94:	1b64      	subs	r4, r4, r5
 8004f96:	10a4      	asrs	r4, r4, #2
 8004f98:	42a6      	cmp	r6, r4
 8004f9a:	d109      	bne.n	8004fb0 <__libc_init_array+0x24>
 8004f9c:	f003 fdd6 	bl	8008b4c <_init>
 8004fa0:	2600      	movs	r6, #0
 8004fa2:	4d0a      	ldr	r5, [pc, #40]	@ (8004fcc <__libc_init_array+0x40>)
 8004fa4:	4c0a      	ldr	r4, [pc, #40]	@ (8004fd0 <__libc_init_array+0x44>)
 8004fa6:	1b64      	subs	r4, r4, r5
 8004fa8:	10a4      	asrs	r4, r4, #2
 8004faa:	42a6      	cmp	r6, r4
 8004fac:	d105      	bne.n	8004fba <__libc_init_array+0x2e>
 8004fae:	bd70      	pop	{r4, r5, r6, pc}
 8004fb0:	f855 3b04 	ldr.w	r3, [r5], #4
 8004fb4:	4798      	blx	r3
 8004fb6:	3601      	adds	r6, #1
 8004fb8:	e7ee      	b.n	8004f98 <__libc_init_array+0xc>
 8004fba:	f855 3b04 	ldr.w	r3, [r5], #4
 8004fbe:	4798      	blx	r3
 8004fc0:	3601      	adds	r6, #1
 8004fc2:	e7f2      	b.n	8004faa <__libc_init_array+0x1e>
 8004fc4:	08009898 	.word	0x08009898
 8004fc8:	08009898 	.word	0x08009898
 8004fcc:	08009898 	.word	0x08009898
 8004fd0:	0800989c 	.word	0x0800989c

08004fd4 <__retarget_lock_init_recursive>:
 8004fd4:	4770      	bx	lr

08004fd6 <__retarget_lock_acquire_recursive>:
 8004fd6:	4770      	bx	lr

08004fd8 <__retarget_lock_release_recursive>:
 8004fd8:	4770      	bx	lr

08004fda <memchr>:
 8004fda:	4603      	mov	r3, r0
 8004fdc:	b510      	push	{r4, lr}
 8004fde:	b2c9      	uxtb	r1, r1
 8004fe0:	4402      	add	r2, r0
 8004fe2:	4293      	cmp	r3, r2
 8004fe4:	4618      	mov	r0, r3
 8004fe6:	d101      	bne.n	8004fec <memchr+0x12>
 8004fe8:	2000      	movs	r0, #0
 8004fea:	e003      	b.n	8004ff4 <memchr+0x1a>
 8004fec:	7804      	ldrb	r4, [r0, #0]
 8004fee:	3301      	adds	r3, #1
 8004ff0:	428c      	cmp	r4, r1
 8004ff2:	d1f6      	bne.n	8004fe2 <memchr+0x8>
 8004ff4:	bd10      	pop	{r4, pc}

08004ff6 <memcpy>:
 8004ff6:	440a      	add	r2, r1
 8004ff8:	4291      	cmp	r1, r2
 8004ffa:	f100 33ff 	add.w	r3, r0, #4294967295	@ 0xffffffff
 8004ffe:	d100      	bne.n	8005002 <memcpy+0xc>
 8005000:	4770      	bx	lr
 8005002:	b510      	push	{r4, lr}
 8005004:	f811 4b01 	ldrb.w	r4, [r1], #1
 8005008:	4291      	cmp	r1, r2
 800500a:	f803 4f01 	strb.w	r4, [r3, #1]!
 800500e:	d1f9      	bne.n	8005004 <memcpy+0xe>
 8005010:	bd10      	pop	{r4, pc}
	...

08005014 <nan>:
 8005014:	2000      	movs	r0, #0
 8005016:	4901      	ldr	r1, [pc, #4]	@ (800501c <nan+0x8>)
 8005018:	4770      	bx	lr
 800501a:	bf00      	nop
 800501c:	7ff80000 	.word	0x7ff80000

08005020 <nanf>:
 8005020:	4800      	ldr	r0, [pc, #0]	@ (8005024 <nanf+0x4>)
 8005022:	4770      	bx	lr
 8005024:	7fc00000 	.word	0x7fc00000

08005028 <quorem>:
 8005028:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800502c:	6903      	ldr	r3, [r0, #16]
 800502e:	690c      	ldr	r4, [r1, #16]
 8005030:	4607      	mov	r7, r0
 8005032:	42a3      	cmp	r3, r4
 8005034:	db7e      	blt.n	8005134 <quorem+0x10c>
 8005036:	3c01      	subs	r4, #1
 8005038:	00a3      	lsls	r3, r4, #2
 800503a:	f100 0514 	add.w	r5, r0, #20
 800503e:	f101 0814 	add.w	r8, r1, #20
 8005042:	9300      	str	r3, [sp, #0]
 8005044:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8005048:	9301      	str	r3, [sp, #4]
 800504a:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 800504e:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8005052:	3301      	adds	r3, #1
 8005054:	429a      	cmp	r2, r3
 8005056:	fbb2 f6f3 	udiv	r6, r2, r3
 800505a:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 800505e:	d32e      	bcc.n	80050be <quorem+0x96>
 8005060:	f04f 0a00 	mov.w	sl, #0
 8005064:	46c4      	mov	ip, r8
 8005066:	46ae      	mov	lr, r5
 8005068:	46d3      	mov	fp, sl
 800506a:	f85c 3b04 	ldr.w	r3, [ip], #4
 800506e:	b298      	uxth	r0, r3
 8005070:	fb06 a000 	mla	r0, r6, r0, sl
 8005074:	0c1b      	lsrs	r3, r3, #16
 8005076:	0c02      	lsrs	r2, r0, #16
 8005078:	fb06 2303 	mla	r3, r6, r3, r2
 800507c:	f8de 2000 	ldr.w	r2, [lr]
 8005080:	b280      	uxth	r0, r0
 8005082:	b292      	uxth	r2, r2
 8005084:	1a12      	subs	r2, r2, r0
 8005086:	445a      	add	r2, fp
 8005088:	f8de 0000 	ldr.w	r0, [lr]
 800508c:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8005090:	b29b      	uxth	r3, r3
 8005092:	ebc3 4322 	rsb	r3, r3, r2, asr #16
 8005096:	eb03 4310 	add.w	r3, r3, r0, lsr #16
 800509a:	b292      	uxth	r2, r2
 800509c:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 80050a0:	45e1      	cmp	r9, ip
 80050a2:	ea4f 4b23 	mov.w	fp, r3, asr #16
 80050a6:	f84e 2b04 	str.w	r2, [lr], #4
 80050aa:	d2de      	bcs.n	800506a <quorem+0x42>
 80050ac:	9b00      	ldr	r3, [sp, #0]
 80050ae:	58eb      	ldr	r3, [r5, r3]
 80050b0:	b92b      	cbnz	r3, 80050be <quorem+0x96>
 80050b2:	9b01      	ldr	r3, [sp, #4]
 80050b4:	3b04      	subs	r3, #4
 80050b6:	429d      	cmp	r5, r3
 80050b8:	461a      	mov	r2, r3
 80050ba:	d32f      	bcc.n	800511c <quorem+0xf4>
 80050bc:	613c      	str	r4, [r7, #16]
 80050be:	4638      	mov	r0, r7
 80050c0:	f002 f804 	bl	80070cc <__mcmp>
 80050c4:	2800      	cmp	r0, #0
 80050c6:	db25      	blt.n	8005114 <quorem+0xec>
 80050c8:	4629      	mov	r1, r5
 80050ca:	2000      	movs	r0, #0
 80050cc:	f858 2b04 	ldr.w	r2, [r8], #4
 80050d0:	f8d1 c000 	ldr.w	ip, [r1]
 80050d4:	fa1f fe82 	uxth.w	lr, r2
 80050d8:	fa1f f38c 	uxth.w	r3, ip
 80050dc:	eba3 030e 	sub.w	r3, r3, lr
 80050e0:	4403      	add	r3, r0
 80050e2:	0c12      	lsrs	r2, r2, #16
 80050e4:	ebc2 4223 	rsb	r2, r2, r3, asr #16
 80050e8:	eb02 421c 	add.w	r2, r2, ip, lsr #16
 80050ec:	b29b      	uxth	r3, r3
 80050ee:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80050f2:	45c1      	cmp	r9, r8
 80050f4:	ea4f 4022 	mov.w	r0, r2, asr #16
 80050f8:	f841 3b04 	str.w	r3, [r1], #4
 80050fc:	d2e6      	bcs.n	80050cc <quorem+0xa4>
 80050fe:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8005102:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8005106:	b922      	cbnz	r2, 8005112 <quorem+0xea>
 8005108:	3b04      	subs	r3, #4
 800510a:	429d      	cmp	r5, r3
 800510c:	461a      	mov	r2, r3
 800510e:	d30b      	bcc.n	8005128 <quorem+0x100>
 8005110:	613c      	str	r4, [r7, #16]
 8005112:	3601      	adds	r6, #1
 8005114:	4630      	mov	r0, r6
 8005116:	b003      	add	sp, #12
 8005118:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800511c:	6812      	ldr	r2, [r2, #0]
 800511e:	3b04      	subs	r3, #4
 8005120:	2a00      	cmp	r2, #0
 8005122:	d1cb      	bne.n	80050bc <quorem+0x94>
 8005124:	3c01      	subs	r4, #1
 8005126:	e7c6      	b.n	80050b6 <quorem+0x8e>
 8005128:	6812      	ldr	r2, [r2, #0]
 800512a:	3b04      	subs	r3, #4
 800512c:	2a00      	cmp	r2, #0
 800512e:	d1ef      	bne.n	8005110 <quorem+0xe8>
 8005130:	3c01      	subs	r4, #1
 8005132:	e7ea      	b.n	800510a <quorem+0xe2>
 8005134:	2000      	movs	r0, #0
 8005136:	e7ee      	b.n	8005116 <quorem+0xee>

08005138 <_dtoa_r>:
 8005138:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800513c:	4614      	mov	r4, r2
 800513e:	461d      	mov	r5, r3
 8005140:	69c7      	ldr	r7, [r0, #28]
 8005142:	b097      	sub	sp, #92	@ 0x5c
 8005144:	4683      	mov	fp, r0
 8005146:	e9cd 4502 	strd	r4, r5, [sp, #8]
 800514a:	9e23      	ldr	r6, [sp, #140]	@ 0x8c
 800514c:	b97f      	cbnz	r7, 800516e <_dtoa_r+0x36>
 800514e:	2010      	movs	r0, #16
 8005150:	f001 fb8a 	bl	8006868 <malloc>
 8005154:	4602      	mov	r2, r0
 8005156:	f8cb 001c 	str.w	r0, [fp, #28]
 800515a:	b920      	cbnz	r0, 8005166 <_dtoa_r+0x2e>
 800515c:	21ef      	movs	r1, #239	@ 0xef
 800515e:	4ba8      	ldr	r3, [pc, #672]	@ (8005400 <_dtoa_r+0x2c8>)
 8005160:	48a8      	ldr	r0, [pc, #672]	@ (8005404 <_dtoa_r+0x2cc>)
 8005162:	f002 fb9d 	bl	80078a0 <__assert_func>
 8005166:	e9c0 7701 	strd	r7, r7, [r0, #4]
 800516a:	6007      	str	r7, [r0, #0]
 800516c:	60c7      	str	r7, [r0, #12]
 800516e:	f8db 301c 	ldr.w	r3, [fp, #28]
 8005172:	6819      	ldr	r1, [r3, #0]
 8005174:	b159      	cbz	r1, 800518e <_dtoa_r+0x56>
 8005176:	685a      	ldr	r2, [r3, #4]
 8005178:	2301      	movs	r3, #1
 800517a:	4093      	lsls	r3, r2
 800517c:	604a      	str	r2, [r1, #4]
 800517e:	608b      	str	r3, [r1, #8]
 8005180:	4658      	mov	r0, fp
 8005182:	f001 fd21 	bl	8006bc8 <_Bfree>
 8005186:	2200      	movs	r2, #0
 8005188:	f8db 301c 	ldr.w	r3, [fp, #28]
 800518c:	601a      	str	r2, [r3, #0]
 800518e:	1e2b      	subs	r3, r5, #0
 8005190:	bfaf      	iteee	ge
 8005192:	2300      	movge	r3, #0
 8005194:	2201      	movlt	r2, #1
 8005196:	f023 4300 	biclt.w	r3, r3, #2147483648	@ 0x80000000
 800519a:	9303      	strlt	r3, [sp, #12]
 800519c:	bfa8      	it	ge
 800519e:	6033      	strge	r3, [r6, #0]
 80051a0:	f8dd 800c 	ldr.w	r8, [sp, #12]
 80051a4:	4b98      	ldr	r3, [pc, #608]	@ (8005408 <_dtoa_r+0x2d0>)
 80051a6:	bfb8      	it	lt
 80051a8:	6032      	strlt	r2, [r6, #0]
 80051aa:	ea33 0308 	bics.w	r3, r3, r8
 80051ae:	d112      	bne.n	80051d6 <_dtoa_r+0x9e>
 80051b0:	f242 730f 	movw	r3, #9999	@ 0x270f
 80051b4:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 80051b6:	6013      	str	r3, [r2, #0]
 80051b8:	f3c8 0313 	ubfx	r3, r8, #0, #20
 80051bc:	4323      	orrs	r3, r4
 80051be:	f000 8550 	beq.w	8005c62 <_dtoa_r+0xb2a>
 80051c2:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80051c4:	f8df a244 	ldr.w	sl, [pc, #580]	@ 800540c <_dtoa_r+0x2d4>
 80051c8:	2b00      	cmp	r3, #0
 80051ca:	f000 8552 	beq.w	8005c72 <_dtoa_r+0xb3a>
 80051ce:	f10a 0303 	add.w	r3, sl, #3
 80051d2:	f000 bd4c 	b.w	8005c6e <_dtoa_r+0xb36>
 80051d6:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80051da:	e9cd 230c 	strd	r2, r3, [sp, #48]	@ 0x30
 80051de:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 80051e2:	2200      	movs	r2, #0
 80051e4:	2300      	movs	r3, #0
 80051e6:	f7fb fbef 	bl	80009c8 <__aeabi_dcmpeq>
 80051ea:	4607      	mov	r7, r0
 80051ec:	b158      	cbz	r0, 8005206 <_dtoa_r+0xce>
 80051ee:	2301      	movs	r3, #1
 80051f0:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 80051f2:	6013      	str	r3, [r2, #0]
 80051f4:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80051f6:	b113      	cbz	r3, 80051fe <_dtoa_r+0xc6>
 80051f8:	4b85      	ldr	r3, [pc, #532]	@ (8005410 <_dtoa_r+0x2d8>)
 80051fa:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 80051fc:	6013      	str	r3, [r2, #0]
 80051fe:	f8df a214 	ldr.w	sl, [pc, #532]	@ 8005414 <_dtoa_r+0x2dc>
 8005202:	f000 bd36 	b.w	8005c72 <_dtoa_r+0xb3a>
 8005206:	ab14      	add	r3, sp, #80	@ 0x50
 8005208:	9301      	str	r3, [sp, #4]
 800520a:	ab15      	add	r3, sp, #84	@ 0x54
 800520c:	9300      	str	r3, [sp, #0]
 800520e:	4658      	mov	r0, fp
 8005210:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	@ 0x30
 8005214:	f002 f872 	bl	80072fc <__d2b>
 8005218:	f3c8 560a 	ubfx	r6, r8, #20, #11
 800521c:	4681      	mov	r9, r0
 800521e:	2e00      	cmp	r6, #0
 8005220:	d077      	beq.n	8005312 <_dtoa_r+0x1da>
 8005222:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8005226:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8005228:	f2a6 36ff 	subw	r6, r6, #1023	@ 0x3ff
 800522c:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8005230:	f043 537f 	orr.w	r3, r3, #1069547520	@ 0x3fc00000
 8005234:	f443 1340 	orr.w	r3, r3, #3145728	@ 0x300000
 8005238:	9712      	str	r7, [sp, #72]	@ 0x48
 800523a:	4619      	mov	r1, r3
 800523c:	2200      	movs	r2, #0
 800523e:	4b76      	ldr	r3, [pc, #472]	@ (8005418 <_dtoa_r+0x2e0>)
 8005240:	f7fa ffa2 	bl	8000188 <__aeabi_dsub>
 8005244:	a368      	add	r3, pc, #416	@ (adr r3, 80053e8 <_dtoa_r+0x2b0>)
 8005246:	e9d3 2300 	ldrd	r2, r3, [r3]
 800524a:	f7fb f955 	bl	80004f8 <__aeabi_dmul>
 800524e:	a368      	add	r3, pc, #416	@ (adr r3, 80053f0 <_dtoa_r+0x2b8>)
 8005250:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005254:	f7fa ff9a 	bl	800018c <__adddf3>
 8005258:	4604      	mov	r4, r0
 800525a:	4630      	mov	r0, r6
 800525c:	460d      	mov	r5, r1
 800525e:	f7fb f8e1 	bl	8000424 <__aeabi_i2d>
 8005262:	a365      	add	r3, pc, #404	@ (adr r3, 80053f8 <_dtoa_r+0x2c0>)
 8005264:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005268:	f7fb f946 	bl	80004f8 <__aeabi_dmul>
 800526c:	4602      	mov	r2, r0
 800526e:	460b      	mov	r3, r1
 8005270:	4620      	mov	r0, r4
 8005272:	4629      	mov	r1, r5
 8005274:	f7fa ff8a 	bl	800018c <__adddf3>
 8005278:	4604      	mov	r4, r0
 800527a:	460d      	mov	r5, r1
 800527c:	f7fb fbec 	bl	8000a58 <__aeabi_d2iz>
 8005280:	2200      	movs	r2, #0
 8005282:	4607      	mov	r7, r0
 8005284:	2300      	movs	r3, #0
 8005286:	4620      	mov	r0, r4
 8005288:	4629      	mov	r1, r5
 800528a:	f7fb fba7 	bl	80009dc <__aeabi_dcmplt>
 800528e:	b140      	cbz	r0, 80052a2 <_dtoa_r+0x16a>
 8005290:	4638      	mov	r0, r7
 8005292:	f7fb f8c7 	bl	8000424 <__aeabi_i2d>
 8005296:	4622      	mov	r2, r4
 8005298:	462b      	mov	r3, r5
 800529a:	f7fb fb95 	bl	80009c8 <__aeabi_dcmpeq>
 800529e:	b900      	cbnz	r0, 80052a2 <_dtoa_r+0x16a>
 80052a0:	3f01      	subs	r7, #1
 80052a2:	2f16      	cmp	r7, #22
 80052a4:	d853      	bhi.n	800534e <_dtoa_r+0x216>
 80052a6:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 80052aa:	4b5c      	ldr	r3, [pc, #368]	@ (800541c <_dtoa_r+0x2e4>)
 80052ac:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 80052b0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80052b4:	f7fb fb92 	bl	80009dc <__aeabi_dcmplt>
 80052b8:	2800      	cmp	r0, #0
 80052ba:	d04a      	beq.n	8005352 <_dtoa_r+0x21a>
 80052bc:	2300      	movs	r3, #0
 80052be:	3f01      	subs	r7, #1
 80052c0:	930f      	str	r3, [sp, #60]	@ 0x3c
 80052c2:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 80052c4:	1b9b      	subs	r3, r3, r6
 80052c6:	1e5a      	subs	r2, r3, #1
 80052c8:	bf46      	itte	mi
 80052ca:	f1c3 0801 	rsbmi	r8, r3, #1
 80052ce:	2300      	movmi	r3, #0
 80052d0:	f04f 0800 	movpl.w	r8, #0
 80052d4:	9209      	str	r2, [sp, #36]	@ 0x24
 80052d6:	bf48      	it	mi
 80052d8:	9309      	strmi	r3, [sp, #36]	@ 0x24
 80052da:	2f00      	cmp	r7, #0
 80052dc:	db3b      	blt.n	8005356 <_dtoa_r+0x21e>
 80052de:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80052e0:	970e      	str	r7, [sp, #56]	@ 0x38
 80052e2:	443b      	add	r3, r7
 80052e4:	9309      	str	r3, [sp, #36]	@ 0x24
 80052e6:	2300      	movs	r3, #0
 80052e8:	930a      	str	r3, [sp, #40]	@ 0x28
 80052ea:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80052ec:	2b09      	cmp	r3, #9
 80052ee:	d866      	bhi.n	80053be <_dtoa_r+0x286>
 80052f0:	2b05      	cmp	r3, #5
 80052f2:	bfc4      	itt	gt
 80052f4:	3b04      	subgt	r3, #4
 80052f6:	9320      	strgt	r3, [sp, #128]	@ 0x80
 80052f8:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80052fa:	bfc8      	it	gt
 80052fc:	2400      	movgt	r4, #0
 80052fe:	f1a3 0302 	sub.w	r3, r3, #2
 8005302:	bfd8      	it	le
 8005304:	2401      	movle	r4, #1
 8005306:	2b03      	cmp	r3, #3
 8005308:	d864      	bhi.n	80053d4 <_dtoa_r+0x29c>
 800530a:	e8df f003 	tbb	[pc, r3]
 800530e:	382b      	.short	0x382b
 8005310:	5636      	.short	0x5636
 8005312:	e9dd 6314 	ldrd	r6, r3, [sp, #80]	@ 0x50
 8005316:	441e      	add	r6, r3
 8005318:	f206 4332 	addw	r3, r6, #1074	@ 0x432
 800531c:	2b20      	cmp	r3, #32
 800531e:	bfc1      	itttt	gt
 8005320:	f1c3 0340 	rsbgt	r3, r3, #64	@ 0x40
 8005324:	fa08 f803 	lslgt.w	r8, r8, r3
 8005328:	f206 4312 	addwgt	r3, r6, #1042	@ 0x412
 800532c:	fa24 f303 	lsrgt.w	r3, r4, r3
 8005330:	bfd6      	itet	le
 8005332:	f1c3 0320 	rsble	r3, r3, #32
 8005336:	ea48 0003 	orrgt.w	r0, r8, r3
 800533a:	fa04 f003 	lslle.w	r0, r4, r3
 800533e:	f7fb f861 	bl	8000404 <__aeabi_ui2d>
 8005342:	2201      	movs	r2, #1
 8005344:	f1a1 73f8 	sub.w	r3, r1, #32505856	@ 0x1f00000
 8005348:	3e01      	subs	r6, #1
 800534a:	9212      	str	r2, [sp, #72]	@ 0x48
 800534c:	e775      	b.n	800523a <_dtoa_r+0x102>
 800534e:	2301      	movs	r3, #1
 8005350:	e7b6      	b.n	80052c0 <_dtoa_r+0x188>
 8005352:	900f      	str	r0, [sp, #60]	@ 0x3c
 8005354:	e7b5      	b.n	80052c2 <_dtoa_r+0x18a>
 8005356:	427b      	negs	r3, r7
 8005358:	930a      	str	r3, [sp, #40]	@ 0x28
 800535a:	2300      	movs	r3, #0
 800535c:	eba8 0807 	sub.w	r8, r8, r7
 8005360:	930e      	str	r3, [sp, #56]	@ 0x38
 8005362:	e7c2      	b.n	80052ea <_dtoa_r+0x1b2>
 8005364:	2300      	movs	r3, #0
 8005366:	930b      	str	r3, [sp, #44]	@ 0x2c
 8005368:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 800536a:	2b00      	cmp	r3, #0
 800536c:	dc35      	bgt.n	80053da <_dtoa_r+0x2a2>
 800536e:	2301      	movs	r3, #1
 8005370:	461a      	mov	r2, r3
 8005372:	e9cd 3307 	strd	r3, r3, [sp, #28]
 8005376:	9221      	str	r2, [sp, #132]	@ 0x84
 8005378:	e00b      	b.n	8005392 <_dtoa_r+0x25a>
 800537a:	2301      	movs	r3, #1
 800537c:	e7f3      	b.n	8005366 <_dtoa_r+0x22e>
 800537e:	2300      	movs	r3, #0
 8005380:	930b      	str	r3, [sp, #44]	@ 0x2c
 8005382:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8005384:	18fb      	adds	r3, r7, r3
 8005386:	9308      	str	r3, [sp, #32]
 8005388:	3301      	adds	r3, #1
 800538a:	2b01      	cmp	r3, #1
 800538c:	9307      	str	r3, [sp, #28]
 800538e:	bfb8      	it	lt
 8005390:	2301      	movlt	r3, #1
 8005392:	2100      	movs	r1, #0
 8005394:	2204      	movs	r2, #4
 8005396:	f8db 001c 	ldr.w	r0, [fp, #28]
 800539a:	f102 0514 	add.w	r5, r2, #20
 800539e:	429d      	cmp	r5, r3
 80053a0:	d91f      	bls.n	80053e2 <_dtoa_r+0x2aa>
 80053a2:	6041      	str	r1, [r0, #4]
 80053a4:	4658      	mov	r0, fp
 80053a6:	f001 fbcf 	bl	8006b48 <_Balloc>
 80053aa:	4682      	mov	sl, r0
 80053ac:	2800      	cmp	r0, #0
 80053ae:	d139      	bne.n	8005424 <_dtoa_r+0x2ec>
 80053b0:	4602      	mov	r2, r0
 80053b2:	f240 11af 	movw	r1, #431	@ 0x1af
 80053b6:	4b1a      	ldr	r3, [pc, #104]	@ (8005420 <_dtoa_r+0x2e8>)
 80053b8:	e6d2      	b.n	8005160 <_dtoa_r+0x28>
 80053ba:	2301      	movs	r3, #1
 80053bc:	e7e0      	b.n	8005380 <_dtoa_r+0x248>
 80053be:	2401      	movs	r4, #1
 80053c0:	2300      	movs	r3, #0
 80053c2:	940b      	str	r4, [sp, #44]	@ 0x2c
 80053c4:	9320      	str	r3, [sp, #128]	@ 0x80
 80053c6:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 80053ca:	2200      	movs	r2, #0
 80053cc:	e9cd 3307 	strd	r3, r3, [sp, #28]
 80053d0:	2312      	movs	r3, #18
 80053d2:	e7d0      	b.n	8005376 <_dtoa_r+0x23e>
 80053d4:	2301      	movs	r3, #1
 80053d6:	930b      	str	r3, [sp, #44]	@ 0x2c
 80053d8:	e7f5      	b.n	80053c6 <_dtoa_r+0x28e>
 80053da:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 80053dc:	e9cd 3307 	strd	r3, r3, [sp, #28]
 80053e0:	e7d7      	b.n	8005392 <_dtoa_r+0x25a>
 80053e2:	3101      	adds	r1, #1
 80053e4:	0052      	lsls	r2, r2, #1
 80053e6:	e7d8      	b.n	800539a <_dtoa_r+0x262>
 80053e8:	636f4361 	.word	0x636f4361
 80053ec:	3fd287a7 	.word	0x3fd287a7
 80053f0:	8b60c8b3 	.word	0x8b60c8b3
 80053f4:	3fc68a28 	.word	0x3fc68a28
 80053f8:	509f79fb 	.word	0x509f79fb
 80053fc:	3fd34413 	.word	0x3fd34413
 8005400:	080095d6 	.word	0x080095d6
 8005404:	080095ed 	.word	0x080095ed
 8005408:	7ff00000 	.word	0x7ff00000
 800540c:	080095d2 	.word	0x080095d2
 8005410:	08009441 	.word	0x08009441
 8005414:	08009440 	.word	0x08009440
 8005418:	3ff80000 	.word	0x3ff80000
 800541c:	08009758 	.word	0x08009758
 8005420:	08009645 	.word	0x08009645
 8005424:	f8db 301c 	ldr.w	r3, [fp, #28]
 8005428:	6018      	str	r0, [r3, #0]
 800542a:	9b07      	ldr	r3, [sp, #28]
 800542c:	2b0e      	cmp	r3, #14
 800542e:	f200 80a4 	bhi.w	800557a <_dtoa_r+0x442>
 8005432:	2c00      	cmp	r4, #0
 8005434:	f000 80a1 	beq.w	800557a <_dtoa_r+0x442>
 8005438:	2f00      	cmp	r7, #0
 800543a:	dd33      	ble.n	80054a4 <_dtoa_r+0x36c>
 800543c:	4b86      	ldr	r3, [pc, #536]	@ (8005658 <_dtoa_r+0x520>)
 800543e:	f007 020f 	and.w	r2, r7, #15
 8005442:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8005446:	05f8      	lsls	r0, r7, #23
 8005448:	e9d3 3400 	ldrd	r3, r4, [r3]
 800544c:	e9cd 3404 	strd	r3, r4, [sp, #16]
 8005450:	ea4f 1427 	mov.w	r4, r7, asr #4
 8005454:	d516      	bpl.n	8005484 <_dtoa_r+0x34c>
 8005456:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 800545a:	4b80      	ldr	r3, [pc, #512]	@ (800565c <_dtoa_r+0x524>)
 800545c:	2603      	movs	r6, #3
 800545e:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8005462:	f7fb f973 	bl	800074c <__aeabi_ddiv>
 8005466:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800546a:	f004 040f 	and.w	r4, r4, #15
 800546e:	4d7b      	ldr	r5, [pc, #492]	@ (800565c <_dtoa_r+0x524>)
 8005470:	b954      	cbnz	r4, 8005488 <_dtoa_r+0x350>
 8005472:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8005476:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800547a:	f7fb f967 	bl	800074c <__aeabi_ddiv>
 800547e:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8005482:	e028      	b.n	80054d6 <_dtoa_r+0x39e>
 8005484:	2602      	movs	r6, #2
 8005486:	e7f2      	b.n	800546e <_dtoa_r+0x336>
 8005488:	07e1      	lsls	r1, r4, #31
 800548a:	d508      	bpl.n	800549e <_dtoa_r+0x366>
 800548c:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8005490:	e9d5 2300 	ldrd	r2, r3, [r5]
 8005494:	f7fb f830 	bl	80004f8 <__aeabi_dmul>
 8005498:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800549c:	3601      	adds	r6, #1
 800549e:	1064      	asrs	r4, r4, #1
 80054a0:	3508      	adds	r5, #8
 80054a2:	e7e5      	b.n	8005470 <_dtoa_r+0x338>
 80054a4:	f000 80d2 	beq.w	800564c <_dtoa_r+0x514>
 80054a8:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 80054ac:	427c      	negs	r4, r7
 80054ae:	4b6a      	ldr	r3, [pc, #424]	@ (8005658 <_dtoa_r+0x520>)
 80054b0:	f004 020f 	and.w	r2, r4, #15
 80054b4:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80054b8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80054bc:	f7fb f81c 	bl	80004f8 <__aeabi_dmul>
 80054c0:	2602      	movs	r6, #2
 80054c2:	2300      	movs	r3, #0
 80054c4:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80054c8:	4d64      	ldr	r5, [pc, #400]	@ (800565c <_dtoa_r+0x524>)
 80054ca:	1124      	asrs	r4, r4, #4
 80054cc:	2c00      	cmp	r4, #0
 80054ce:	f040 80b2 	bne.w	8005636 <_dtoa_r+0x4fe>
 80054d2:	2b00      	cmp	r3, #0
 80054d4:	d1d3      	bne.n	800547e <_dtoa_r+0x346>
 80054d6:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
 80054da:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80054dc:	2b00      	cmp	r3, #0
 80054de:	f000 80b7 	beq.w	8005650 <_dtoa_r+0x518>
 80054e2:	2200      	movs	r2, #0
 80054e4:	4620      	mov	r0, r4
 80054e6:	4629      	mov	r1, r5
 80054e8:	4b5d      	ldr	r3, [pc, #372]	@ (8005660 <_dtoa_r+0x528>)
 80054ea:	f7fb fa77 	bl	80009dc <__aeabi_dcmplt>
 80054ee:	2800      	cmp	r0, #0
 80054f0:	f000 80ae 	beq.w	8005650 <_dtoa_r+0x518>
 80054f4:	9b07      	ldr	r3, [sp, #28]
 80054f6:	2b00      	cmp	r3, #0
 80054f8:	f000 80aa 	beq.w	8005650 <_dtoa_r+0x518>
 80054fc:	9b08      	ldr	r3, [sp, #32]
 80054fe:	2b00      	cmp	r3, #0
 8005500:	dd37      	ble.n	8005572 <_dtoa_r+0x43a>
 8005502:	1e7b      	subs	r3, r7, #1
 8005504:	4620      	mov	r0, r4
 8005506:	9304      	str	r3, [sp, #16]
 8005508:	2200      	movs	r2, #0
 800550a:	4629      	mov	r1, r5
 800550c:	4b55      	ldr	r3, [pc, #340]	@ (8005664 <_dtoa_r+0x52c>)
 800550e:	f7fa fff3 	bl	80004f8 <__aeabi_dmul>
 8005512:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8005516:	9c08      	ldr	r4, [sp, #32]
 8005518:	3601      	adds	r6, #1
 800551a:	4630      	mov	r0, r6
 800551c:	f7fa ff82 	bl	8000424 <__aeabi_i2d>
 8005520:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8005524:	f7fa ffe8 	bl	80004f8 <__aeabi_dmul>
 8005528:	2200      	movs	r2, #0
 800552a:	4b4f      	ldr	r3, [pc, #316]	@ (8005668 <_dtoa_r+0x530>)
 800552c:	f7fa fe2e 	bl	800018c <__adddf3>
 8005530:	4605      	mov	r5, r0
 8005532:	f1a1 7650 	sub.w	r6, r1, #54525952	@ 0x3400000
 8005536:	2c00      	cmp	r4, #0
 8005538:	f040 809a 	bne.w	8005670 <_dtoa_r+0x538>
 800553c:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8005540:	2200      	movs	r2, #0
 8005542:	4b4a      	ldr	r3, [pc, #296]	@ (800566c <_dtoa_r+0x534>)
 8005544:	f7fa fe20 	bl	8000188 <__aeabi_dsub>
 8005548:	4602      	mov	r2, r0
 800554a:	460b      	mov	r3, r1
 800554c:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8005550:	462a      	mov	r2, r5
 8005552:	4633      	mov	r3, r6
 8005554:	f7fb fa60 	bl	8000a18 <__aeabi_dcmpgt>
 8005558:	2800      	cmp	r0, #0
 800555a:	f040 828e 	bne.w	8005a7a <_dtoa_r+0x942>
 800555e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8005562:	462a      	mov	r2, r5
 8005564:	f106 4300 	add.w	r3, r6, #2147483648	@ 0x80000000
 8005568:	f7fb fa38 	bl	80009dc <__aeabi_dcmplt>
 800556c:	2800      	cmp	r0, #0
 800556e:	f040 8127 	bne.w	80057c0 <_dtoa_r+0x688>
 8005572:	e9dd 340c 	ldrd	r3, r4, [sp, #48]	@ 0x30
 8005576:	e9cd 3402 	strd	r3, r4, [sp, #8]
 800557a:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 800557c:	2b00      	cmp	r3, #0
 800557e:	f2c0 8163 	blt.w	8005848 <_dtoa_r+0x710>
 8005582:	2f0e      	cmp	r7, #14
 8005584:	f300 8160 	bgt.w	8005848 <_dtoa_r+0x710>
 8005588:	4b33      	ldr	r3, [pc, #204]	@ (8005658 <_dtoa_r+0x520>)
 800558a:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 800558e:	e9d3 3400 	ldrd	r3, r4, [r3]
 8005592:	e9cd 3404 	strd	r3, r4, [sp, #16]
 8005596:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8005598:	2b00      	cmp	r3, #0
 800559a:	da03      	bge.n	80055a4 <_dtoa_r+0x46c>
 800559c:	9b07      	ldr	r3, [sp, #28]
 800559e:	2b00      	cmp	r3, #0
 80055a0:	f340 8100 	ble.w	80057a4 <_dtoa_r+0x66c>
 80055a4:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
 80055a8:	4656      	mov	r6, sl
 80055aa:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80055ae:	4620      	mov	r0, r4
 80055b0:	4629      	mov	r1, r5
 80055b2:	f7fb f8cb 	bl	800074c <__aeabi_ddiv>
 80055b6:	f7fb fa4f 	bl	8000a58 <__aeabi_d2iz>
 80055ba:	4680      	mov	r8, r0
 80055bc:	f7fa ff32 	bl	8000424 <__aeabi_i2d>
 80055c0:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80055c4:	f7fa ff98 	bl	80004f8 <__aeabi_dmul>
 80055c8:	4602      	mov	r2, r0
 80055ca:	460b      	mov	r3, r1
 80055cc:	4620      	mov	r0, r4
 80055ce:	4629      	mov	r1, r5
 80055d0:	f7fa fdda 	bl	8000188 <__aeabi_dsub>
 80055d4:	f108 0430 	add.w	r4, r8, #48	@ 0x30
 80055d8:	9d07      	ldr	r5, [sp, #28]
 80055da:	f806 4b01 	strb.w	r4, [r6], #1
 80055de:	eba6 040a 	sub.w	r4, r6, sl
 80055e2:	42a5      	cmp	r5, r4
 80055e4:	4602      	mov	r2, r0
 80055e6:	460b      	mov	r3, r1
 80055e8:	f040 8116 	bne.w	8005818 <_dtoa_r+0x6e0>
 80055ec:	f7fa fdce 	bl	800018c <__adddf3>
 80055f0:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80055f4:	4604      	mov	r4, r0
 80055f6:	460d      	mov	r5, r1
 80055f8:	f7fb fa0e 	bl	8000a18 <__aeabi_dcmpgt>
 80055fc:	2800      	cmp	r0, #0
 80055fe:	f040 80f8 	bne.w	80057f2 <_dtoa_r+0x6ba>
 8005602:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8005606:	4620      	mov	r0, r4
 8005608:	4629      	mov	r1, r5
 800560a:	f7fb f9dd 	bl	80009c8 <__aeabi_dcmpeq>
 800560e:	b118      	cbz	r0, 8005618 <_dtoa_r+0x4e0>
 8005610:	f018 0f01 	tst.w	r8, #1
 8005614:	f040 80ed 	bne.w	80057f2 <_dtoa_r+0x6ba>
 8005618:	4649      	mov	r1, r9
 800561a:	4658      	mov	r0, fp
 800561c:	f001 fad4 	bl	8006bc8 <_Bfree>
 8005620:	2300      	movs	r3, #0
 8005622:	7033      	strb	r3, [r6, #0]
 8005624:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8005626:	3701      	adds	r7, #1
 8005628:	601f      	str	r7, [r3, #0]
 800562a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 800562c:	2b00      	cmp	r3, #0
 800562e:	f000 8320 	beq.w	8005c72 <_dtoa_r+0xb3a>
 8005632:	601e      	str	r6, [r3, #0]
 8005634:	e31d      	b.n	8005c72 <_dtoa_r+0xb3a>
 8005636:	07e2      	lsls	r2, r4, #31
 8005638:	d505      	bpl.n	8005646 <_dtoa_r+0x50e>
 800563a:	e9d5 2300 	ldrd	r2, r3, [r5]
 800563e:	f7fa ff5b 	bl	80004f8 <__aeabi_dmul>
 8005642:	2301      	movs	r3, #1
 8005644:	3601      	adds	r6, #1
 8005646:	1064      	asrs	r4, r4, #1
 8005648:	3508      	adds	r5, #8
 800564a:	e73f      	b.n	80054cc <_dtoa_r+0x394>
 800564c:	2602      	movs	r6, #2
 800564e:	e742      	b.n	80054d6 <_dtoa_r+0x39e>
 8005650:	9c07      	ldr	r4, [sp, #28]
 8005652:	9704      	str	r7, [sp, #16]
 8005654:	e761      	b.n	800551a <_dtoa_r+0x3e2>
 8005656:	bf00      	nop
 8005658:	08009758 	.word	0x08009758
 800565c:	08009730 	.word	0x08009730
 8005660:	3ff00000 	.word	0x3ff00000
 8005664:	40240000 	.word	0x40240000
 8005668:	401c0000 	.word	0x401c0000
 800566c:	40140000 	.word	0x40140000
 8005670:	4b70      	ldr	r3, [pc, #448]	@ (8005834 <_dtoa_r+0x6fc>)
 8005672:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8005674:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8005678:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 800567c:	4454      	add	r4, sl
 800567e:	2900      	cmp	r1, #0
 8005680:	d045      	beq.n	800570e <_dtoa_r+0x5d6>
 8005682:	2000      	movs	r0, #0
 8005684:	496c      	ldr	r1, [pc, #432]	@ (8005838 <_dtoa_r+0x700>)
 8005686:	f7fb f861 	bl	800074c <__aeabi_ddiv>
 800568a:	4633      	mov	r3, r6
 800568c:	462a      	mov	r2, r5
 800568e:	f7fa fd7b 	bl	8000188 <__aeabi_dsub>
 8005692:	4656      	mov	r6, sl
 8005694:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8005698:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800569c:	f7fb f9dc 	bl	8000a58 <__aeabi_d2iz>
 80056a0:	4605      	mov	r5, r0
 80056a2:	f7fa febf 	bl	8000424 <__aeabi_i2d>
 80056a6:	4602      	mov	r2, r0
 80056a8:	460b      	mov	r3, r1
 80056aa:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80056ae:	f7fa fd6b 	bl	8000188 <__aeabi_dsub>
 80056b2:	4602      	mov	r2, r0
 80056b4:	460b      	mov	r3, r1
 80056b6:	3530      	adds	r5, #48	@ 0x30
 80056b8:	e9cd 2302 	strd	r2, r3, [sp, #8]
 80056bc:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 80056c0:	f806 5b01 	strb.w	r5, [r6], #1
 80056c4:	f7fb f98a 	bl	80009dc <__aeabi_dcmplt>
 80056c8:	2800      	cmp	r0, #0
 80056ca:	d163      	bne.n	8005794 <_dtoa_r+0x65c>
 80056cc:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80056d0:	2000      	movs	r0, #0
 80056d2:	495a      	ldr	r1, [pc, #360]	@ (800583c <_dtoa_r+0x704>)
 80056d4:	f7fa fd58 	bl	8000188 <__aeabi_dsub>
 80056d8:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 80056dc:	f7fb f97e 	bl	80009dc <__aeabi_dcmplt>
 80056e0:	2800      	cmp	r0, #0
 80056e2:	f040 8087 	bne.w	80057f4 <_dtoa_r+0x6bc>
 80056e6:	42a6      	cmp	r6, r4
 80056e8:	f43f af43 	beq.w	8005572 <_dtoa_r+0x43a>
 80056ec:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 80056f0:	2200      	movs	r2, #0
 80056f2:	4b53      	ldr	r3, [pc, #332]	@ (8005840 <_dtoa_r+0x708>)
 80056f4:	f7fa ff00 	bl	80004f8 <__aeabi_dmul>
 80056f8:	2200      	movs	r2, #0
 80056fa:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 80056fe:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8005702:	4b4f      	ldr	r3, [pc, #316]	@ (8005840 <_dtoa_r+0x708>)
 8005704:	f7fa fef8 	bl	80004f8 <__aeabi_dmul>
 8005708:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800570c:	e7c4      	b.n	8005698 <_dtoa_r+0x560>
 800570e:	4631      	mov	r1, r6
 8005710:	4628      	mov	r0, r5
 8005712:	f7fa fef1 	bl	80004f8 <__aeabi_dmul>
 8005716:	4656      	mov	r6, sl
 8005718:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 800571c:	9413      	str	r4, [sp, #76]	@ 0x4c
 800571e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8005722:	f7fb f999 	bl	8000a58 <__aeabi_d2iz>
 8005726:	4605      	mov	r5, r0
 8005728:	f7fa fe7c 	bl	8000424 <__aeabi_i2d>
 800572c:	4602      	mov	r2, r0
 800572e:	460b      	mov	r3, r1
 8005730:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8005734:	f7fa fd28 	bl	8000188 <__aeabi_dsub>
 8005738:	4602      	mov	r2, r0
 800573a:	460b      	mov	r3, r1
 800573c:	3530      	adds	r5, #48	@ 0x30
 800573e:	f806 5b01 	strb.w	r5, [r6], #1
 8005742:	42a6      	cmp	r6, r4
 8005744:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8005748:	f04f 0200 	mov.w	r2, #0
 800574c:	d124      	bne.n	8005798 <_dtoa_r+0x660>
 800574e:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 8005752:	4b39      	ldr	r3, [pc, #228]	@ (8005838 <_dtoa_r+0x700>)
 8005754:	f7fa fd1a 	bl	800018c <__adddf3>
 8005758:	4602      	mov	r2, r0
 800575a:	460b      	mov	r3, r1
 800575c:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8005760:	f7fb f95a 	bl	8000a18 <__aeabi_dcmpgt>
 8005764:	2800      	cmp	r0, #0
 8005766:	d145      	bne.n	80057f4 <_dtoa_r+0x6bc>
 8005768:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 800576c:	2000      	movs	r0, #0
 800576e:	4932      	ldr	r1, [pc, #200]	@ (8005838 <_dtoa_r+0x700>)
 8005770:	f7fa fd0a 	bl	8000188 <__aeabi_dsub>
 8005774:	4602      	mov	r2, r0
 8005776:	460b      	mov	r3, r1
 8005778:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800577c:	f7fb f92e 	bl	80009dc <__aeabi_dcmplt>
 8005780:	2800      	cmp	r0, #0
 8005782:	f43f aef6 	beq.w	8005572 <_dtoa_r+0x43a>
 8005786:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8005788:	1e73      	subs	r3, r6, #1
 800578a:	9313      	str	r3, [sp, #76]	@ 0x4c
 800578c:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 8005790:	2b30      	cmp	r3, #48	@ 0x30
 8005792:	d0f8      	beq.n	8005786 <_dtoa_r+0x64e>
 8005794:	9f04      	ldr	r7, [sp, #16]
 8005796:	e73f      	b.n	8005618 <_dtoa_r+0x4e0>
 8005798:	4b29      	ldr	r3, [pc, #164]	@ (8005840 <_dtoa_r+0x708>)
 800579a:	f7fa fead 	bl	80004f8 <__aeabi_dmul>
 800579e:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80057a2:	e7bc      	b.n	800571e <_dtoa_r+0x5e6>
 80057a4:	d10c      	bne.n	80057c0 <_dtoa_r+0x688>
 80057a6:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80057aa:	2200      	movs	r2, #0
 80057ac:	4b25      	ldr	r3, [pc, #148]	@ (8005844 <_dtoa_r+0x70c>)
 80057ae:	f7fa fea3 	bl	80004f8 <__aeabi_dmul>
 80057b2:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80057b6:	f7fb f925 	bl	8000a04 <__aeabi_dcmpge>
 80057ba:	2800      	cmp	r0, #0
 80057bc:	f000 815b 	beq.w	8005a76 <_dtoa_r+0x93e>
 80057c0:	2400      	movs	r4, #0
 80057c2:	4625      	mov	r5, r4
 80057c4:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 80057c6:	4656      	mov	r6, sl
 80057c8:	43db      	mvns	r3, r3
 80057ca:	9304      	str	r3, [sp, #16]
 80057cc:	2700      	movs	r7, #0
 80057ce:	4621      	mov	r1, r4
 80057d0:	4658      	mov	r0, fp
 80057d2:	f001 f9f9 	bl	8006bc8 <_Bfree>
 80057d6:	2d00      	cmp	r5, #0
 80057d8:	d0dc      	beq.n	8005794 <_dtoa_r+0x65c>
 80057da:	b12f      	cbz	r7, 80057e8 <_dtoa_r+0x6b0>
 80057dc:	42af      	cmp	r7, r5
 80057de:	d003      	beq.n	80057e8 <_dtoa_r+0x6b0>
 80057e0:	4639      	mov	r1, r7
 80057e2:	4658      	mov	r0, fp
 80057e4:	f001 f9f0 	bl	8006bc8 <_Bfree>
 80057e8:	4629      	mov	r1, r5
 80057ea:	4658      	mov	r0, fp
 80057ec:	f001 f9ec 	bl	8006bc8 <_Bfree>
 80057f0:	e7d0      	b.n	8005794 <_dtoa_r+0x65c>
 80057f2:	9704      	str	r7, [sp, #16]
 80057f4:	4633      	mov	r3, r6
 80057f6:	461e      	mov	r6, r3
 80057f8:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 80057fc:	2a39      	cmp	r2, #57	@ 0x39
 80057fe:	d107      	bne.n	8005810 <_dtoa_r+0x6d8>
 8005800:	459a      	cmp	sl, r3
 8005802:	d1f8      	bne.n	80057f6 <_dtoa_r+0x6be>
 8005804:	9a04      	ldr	r2, [sp, #16]
 8005806:	3201      	adds	r2, #1
 8005808:	9204      	str	r2, [sp, #16]
 800580a:	2230      	movs	r2, #48	@ 0x30
 800580c:	f88a 2000 	strb.w	r2, [sl]
 8005810:	781a      	ldrb	r2, [r3, #0]
 8005812:	3201      	adds	r2, #1
 8005814:	701a      	strb	r2, [r3, #0]
 8005816:	e7bd      	b.n	8005794 <_dtoa_r+0x65c>
 8005818:	2200      	movs	r2, #0
 800581a:	4b09      	ldr	r3, [pc, #36]	@ (8005840 <_dtoa_r+0x708>)
 800581c:	f7fa fe6c 	bl	80004f8 <__aeabi_dmul>
 8005820:	2200      	movs	r2, #0
 8005822:	2300      	movs	r3, #0
 8005824:	4604      	mov	r4, r0
 8005826:	460d      	mov	r5, r1
 8005828:	f7fb f8ce 	bl	80009c8 <__aeabi_dcmpeq>
 800582c:	2800      	cmp	r0, #0
 800582e:	f43f aebc 	beq.w	80055aa <_dtoa_r+0x472>
 8005832:	e6f1      	b.n	8005618 <_dtoa_r+0x4e0>
 8005834:	08009758 	.word	0x08009758
 8005838:	3fe00000 	.word	0x3fe00000
 800583c:	3ff00000 	.word	0x3ff00000
 8005840:	40240000 	.word	0x40240000
 8005844:	40140000 	.word	0x40140000
 8005848:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800584a:	2a00      	cmp	r2, #0
 800584c:	f000 80db 	beq.w	8005a06 <_dtoa_r+0x8ce>
 8005850:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 8005852:	2a01      	cmp	r2, #1
 8005854:	f300 80bf 	bgt.w	80059d6 <_dtoa_r+0x89e>
 8005858:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 800585a:	2a00      	cmp	r2, #0
 800585c:	f000 80b7 	beq.w	80059ce <_dtoa_r+0x896>
 8005860:	f203 4333 	addw	r3, r3, #1075	@ 0x433
 8005864:	4646      	mov	r6, r8
 8005866:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8005868:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800586a:	2101      	movs	r1, #1
 800586c:	441a      	add	r2, r3
 800586e:	4658      	mov	r0, fp
 8005870:	4498      	add	r8, r3
 8005872:	9209      	str	r2, [sp, #36]	@ 0x24
 8005874:	f001 faa6 	bl	8006dc4 <__i2b>
 8005878:	4605      	mov	r5, r0
 800587a:	b15e      	cbz	r6, 8005894 <_dtoa_r+0x75c>
 800587c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800587e:	2b00      	cmp	r3, #0
 8005880:	dd08      	ble.n	8005894 <_dtoa_r+0x75c>
 8005882:	42b3      	cmp	r3, r6
 8005884:	bfa8      	it	ge
 8005886:	4633      	movge	r3, r6
 8005888:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800588a:	eba8 0803 	sub.w	r8, r8, r3
 800588e:	1af6      	subs	r6, r6, r3
 8005890:	1ad3      	subs	r3, r2, r3
 8005892:	9309      	str	r3, [sp, #36]	@ 0x24
 8005894:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8005896:	b1f3      	cbz	r3, 80058d6 <_dtoa_r+0x79e>
 8005898:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800589a:	2b00      	cmp	r3, #0
 800589c:	f000 80b7 	beq.w	8005a0e <_dtoa_r+0x8d6>
 80058a0:	b18c      	cbz	r4, 80058c6 <_dtoa_r+0x78e>
 80058a2:	4629      	mov	r1, r5
 80058a4:	4622      	mov	r2, r4
 80058a6:	4658      	mov	r0, fp
 80058a8:	f001 fb4a 	bl	8006f40 <__pow5mult>
 80058ac:	464a      	mov	r2, r9
 80058ae:	4601      	mov	r1, r0
 80058b0:	4605      	mov	r5, r0
 80058b2:	4658      	mov	r0, fp
 80058b4:	f001 fa9c 	bl	8006df0 <__multiply>
 80058b8:	4649      	mov	r1, r9
 80058ba:	9004      	str	r0, [sp, #16]
 80058bc:	4658      	mov	r0, fp
 80058be:	f001 f983 	bl	8006bc8 <_Bfree>
 80058c2:	9b04      	ldr	r3, [sp, #16]
 80058c4:	4699      	mov	r9, r3
 80058c6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80058c8:	1b1a      	subs	r2, r3, r4
 80058ca:	d004      	beq.n	80058d6 <_dtoa_r+0x79e>
 80058cc:	4649      	mov	r1, r9
 80058ce:	4658      	mov	r0, fp
 80058d0:	f001 fb36 	bl	8006f40 <__pow5mult>
 80058d4:	4681      	mov	r9, r0
 80058d6:	2101      	movs	r1, #1
 80058d8:	4658      	mov	r0, fp
 80058da:	f001 fa73 	bl	8006dc4 <__i2b>
 80058de:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80058e0:	4604      	mov	r4, r0
 80058e2:	2b00      	cmp	r3, #0
 80058e4:	f000 81c9 	beq.w	8005c7a <_dtoa_r+0xb42>
 80058e8:	461a      	mov	r2, r3
 80058ea:	4601      	mov	r1, r0
 80058ec:	4658      	mov	r0, fp
 80058ee:	f001 fb27 	bl	8006f40 <__pow5mult>
 80058f2:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80058f4:	4604      	mov	r4, r0
 80058f6:	2b01      	cmp	r3, #1
 80058f8:	f300 808f 	bgt.w	8005a1a <_dtoa_r+0x8e2>
 80058fc:	9b02      	ldr	r3, [sp, #8]
 80058fe:	2b00      	cmp	r3, #0
 8005900:	f040 8087 	bne.w	8005a12 <_dtoa_r+0x8da>
 8005904:	9b03      	ldr	r3, [sp, #12]
 8005906:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800590a:	2b00      	cmp	r3, #0
 800590c:	f040 8083 	bne.w	8005a16 <_dtoa_r+0x8de>
 8005910:	9b03      	ldr	r3, [sp, #12]
 8005912:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8005916:	0d1b      	lsrs	r3, r3, #20
 8005918:	051b      	lsls	r3, r3, #20
 800591a:	b12b      	cbz	r3, 8005928 <_dtoa_r+0x7f0>
 800591c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800591e:	f108 0801 	add.w	r8, r8, #1
 8005922:	3301      	adds	r3, #1
 8005924:	9309      	str	r3, [sp, #36]	@ 0x24
 8005926:	2301      	movs	r3, #1
 8005928:	930a      	str	r3, [sp, #40]	@ 0x28
 800592a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800592c:	2b00      	cmp	r3, #0
 800592e:	f000 81aa 	beq.w	8005c86 <_dtoa_r+0xb4e>
 8005932:	6923      	ldr	r3, [r4, #16]
 8005934:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8005938:	6918      	ldr	r0, [r3, #16]
 800593a:	f001 f9f7 	bl	8006d2c <__hi0bits>
 800593e:	f1c0 0020 	rsb	r0, r0, #32
 8005942:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8005944:	4418      	add	r0, r3
 8005946:	f010 001f 	ands.w	r0, r0, #31
 800594a:	d071      	beq.n	8005a30 <_dtoa_r+0x8f8>
 800594c:	f1c0 0320 	rsb	r3, r0, #32
 8005950:	2b04      	cmp	r3, #4
 8005952:	dd65      	ble.n	8005a20 <_dtoa_r+0x8e8>
 8005954:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8005956:	f1c0 001c 	rsb	r0, r0, #28
 800595a:	4403      	add	r3, r0
 800595c:	4480      	add	r8, r0
 800595e:	4406      	add	r6, r0
 8005960:	9309      	str	r3, [sp, #36]	@ 0x24
 8005962:	f1b8 0f00 	cmp.w	r8, #0
 8005966:	dd05      	ble.n	8005974 <_dtoa_r+0x83c>
 8005968:	4649      	mov	r1, r9
 800596a:	4642      	mov	r2, r8
 800596c:	4658      	mov	r0, fp
 800596e:	f001 fb41 	bl	8006ff4 <__lshift>
 8005972:	4681      	mov	r9, r0
 8005974:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8005976:	2b00      	cmp	r3, #0
 8005978:	dd05      	ble.n	8005986 <_dtoa_r+0x84e>
 800597a:	4621      	mov	r1, r4
 800597c:	461a      	mov	r2, r3
 800597e:	4658      	mov	r0, fp
 8005980:	f001 fb38 	bl	8006ff4 <__lshift>
 8005984:	4604      	mov	r4, r0
 8005986:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8005988:	2b00      	cmp	r3, #0
 800598a:	d053      	beq.n	8005a34 <_dtoa_r+0x8fc>
 800598c:	4621      	mov	r1, r4
 800598e:	4648      	mov	r0, r9
 8005990:	f001 fb9c 	bl	80070cc <__mcmp>
 8005994:	2800      	cmp	r0, #0
 8005996:	da4d      	bge.n	8005a34 <_dtoa_r+0x8fc>
 8005998:	1e7b      	subs	r3, r7, #1
 800599a:	4649      	mov	r1, r9
 800599c:	9304      	str	r3, [sp, #16]
 800599e:	220a      	movs	r2, #10
 80059a0:	2300      	movs	r3, #0
 80059a2:	4658      	mov	r0, fp
 80059a4:	f001 f932 	bl	8006c0c <__multadd>
 80059a8:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80059aa:	4681      	mov	r9, r0
 80059ac:	2b00      	cmp	r3, #0
 80059ae:	f000 816c 	beq.w	8005c8a <_dtoa_r+0xb52>
 80059b2:	2300      	movs	r3, #0
 80059b4:	4629      	mov	r1, r5
 80059b6:	220a      	movs	r2, #10
 80059b8:	4658      	mov	r0, fp
 80059ba:	f001 f927 	bl	8006c0c <__multadd>
 80059be:	9b08      	ldr	r3, [sp, #32]
 80059c0:	4605      	mov	r5, r0
 80059c2:	2b00      	cmp	r3, #0
 80059c4:	dc61      	bgt.n	8005a8a <_dtoa_r+0x952>
 80059c6:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80059c8:	2b02      	cmp	r3, #2
 80059ca:	dc3b      	bgt.n	8005a44 <_dtoa_r+0x90c>
 80059cc:	e05d      	b.n	8005a8a <_dtoa_r+0x952>
 80059ce:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 80059d0:	f1c3 0336 	rsb	r3, r3, #54	@ 0x36
 80059d4:	e746      	b.n	8005864 <_dtoa_r+0x72c>
 80059d6:	9b07      	ldr	r3, [sp, #28]
 80059d8:	1e5c      	subs	r4, r3, #1
 80059da:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80059dc:	42a3      	cmp	r3, r4
 80059de:	bfbf      	itttt	lt
 80059e0:	9b0a      	ldrlt	r3, [sp, #40]	@ 0x28
 80059e2:	9a0e      	ldrlt	r2, [sp, #56]	@ 0x38
 80059e4:	1ae3      	sublt	r3, r4, r3
 80059e6:	18d2      	addlt	r2, r2, r3
 80059e8:	bfa8      	it	ge
 80059ea:	1b1c      	subge	r4, r3, r4
 80059ec:	9b07      	ldr	r3, [sp, #28]
 80059ee:	bfbe      	ittt	lt
 80059f0:	940a      	strlt	r4, [sp, #40]	@ 0x28
 80059f2:	920e      	strlt	r2, [sp, #56]	@ 0x38
 80059f4:	2400      	movlt	r4, #0
 80059f6:	2b00      	cmp	r3, #0
 80059f8:	bfb5      	itete	lt
 80059fa:	eba8 0603 	sublt.w	r6, r8, r3
 80059fe:	4646      	movge	r6, r8
 8005a00:	2300      	movlt	r3, #0
 8005a02:	9b07      	ldrge	r3, [sp, #28]
 8005a04:	e730      	b.n	8005868 <_dtoa_r+0x730>
 8005a06:	4646      	mov	r6, r8
 8005a08:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8005a0a:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8005a0c:	e735      	b.n	800587a <_dtoa_r+0x742>
 8005a0e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8005a10:	e75c      	b.n	80058cc <_dtoa_r+0x794>
 8005a12:	2300      	movs	r3, #0
 8005a14:	e788      	b.n	8005928 <_dtoa_r+0x7f0>
 8005a16:	9b02      	ldr	r3, [sp, #8]
 8005a18:	e786      	b.n	8005928 <_dtoa_r+0x7f0>
 8005a1a:	2300      	movs	r3, #0
 8005a1c:	930a      	str	r3, [sp, #40]	@ 0x28
 8005a1e:	e788      	b.n	8005932 <_dtoa_r+0x7fa>
 8005a20:	d09f      	beq.n	8005962 <_dtoa_r+0x82a>
 8005a22:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8005a24:	331c      	adds	r3, #28
 8005a26:	441a      	add	r2, r3
 8005a28:	4498      	add	r8, r3
 8005a2a:	441e      	add	r6, r3
 8005a2c:	9209      	str	r2, [sp, #36]	@ 0x24
 8005a2e:	e798      	b.n	8005962 <_dtoa_r+0x82a>
 8005a30:	4603      	mov	r3, r0
 8005a32:	e7f6      	b.n	8005a22 <_dtoa_r+0x8ea>
 8005a34:	9b07      	ldr	r3, [sp, #28]
 8005a36:	9704      	str	r7, [sp, #16]
 8005a38:	2b00      	cmp	r3, #0
 8005a3a:	dc20      	bgt.n	8005a7e <_dtoa_r+0x946>
 8005a3c:	9308      	str	r3, [sp, #32]
 8005a3e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8005a40:	2b02      	cmp	r3, #2
 8005a42:	dd1e      	ble.n	8005a82 <_dtoa_r+0x94a>
 8005a44:	9b08      	ldr	r3, [sp, #32]
 8005a46:	2b00      	cmp	r3, #0
 8005a48:	f47f aebc 	bne.w	80057c4 <_dtoa_r+0x68c>
 8005a4c:	4621      	mov	r1, r4
 8005a4e:	2205      	movs	r2, #5
 8005a50:	4658      	mov	r0, fp
 8005a52:	f001 f8db 	bl	8006c0c <__multadd>
 8005a56:	4601      	mov	r1, r0
 8005a58:	4604      	mov	r4, r0
 8005a5a:	4648      	mov	r0, r9
 8005a5c:	f001 fb36 	bl	80070cc <__mcmp>
 8005a60:	2800      	cmp	r0, #0
 8005a62:	f77f aeaf 	ble.w	80057c4 <_dtoa_r+0x68c>
 8005a66:	2331      	movs	r3, #49	@ 0x31
 8005a68:	4656      	mov	r6, sl
 8005a6a:	f806 3b01 	strb.w	r3, [r6], #1
 8005a6e:	9b04      	ldr	r3, [sp, #16]
 8005a70:	3301      	adds	r3, #1
 8005a72:	9304      	str	r3, [sp, #16]
 8005a74:	e6aa      	b.n	80057cc <_dtoa_r+0x694>
 8005a76:	9c07      	ldr	r4, [sp, #28]
 8005a78:	9704      	str	r7, [sp, #16]
 8005a7a:	4625      	mov	r5, r4
 8005a7c:	e7f3      	b.n	8005a66 <_dtoa_r+0x92e>
 8005a7e:	9b07      	ldr	r3, [sp, #28]
 8005a80:	9308      	str	r3, [sp, #32]
 8005a82:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8005a84:	2b00      	cmp	r3, #0
 8005a86:	f000 8104 	beq.w	8005c92 <_dtoa_r+0xb5a>
 8005a8a:	2e00      	cmp	r6, #0
 8005a8c:	dd05      	ble.n	8005a9a <_dtoa_r+0x962>
 8005a8e:	4629      	mov	r1, r5
 8005a90:	4632      	mov	r2, r6
 8005a92:	4658      	mov	r0, fp
 8005a94:	f001 faae 	bl	8006ff4 <__lshift>
 8005a98:	4605      	mov	r5, r0
 8005a9a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8005a9c:	2b00      	cmp	r3, #0
 8005a9e:	d05a      	beq.n	8005b56 <_dtoa_r+0xa1e>
 8005aa0:	4658      	mov	r0, fp
 8005aa2:	6869      	ldr	r1, [r5, #4]
 8005aa4:	f001 f850 	bl	8006b48 <_Balloc>
 8005aa8:	4606      	mov	r6, r0
 8005aaa:	b928      	cbnz	r0, 8005ab8 <_dtoa_r+0x980>
 8005aac:	4602      	mov	r2, r0
 8005aae:	f240 21ef 	movw	r1, #751	@ 0x2ef
 8005ab2:	4b83      	ldr	r3, [pc, #524]	@ (8005cc0 <_dtoa_r+0xb88>)
 8005ab4:	f7ff bb54 	b.w	8005160 <_dtoa_r+0x28>
 8005ab8:	692a      	ldr	r2, [r5, #16]
 8005aba:	f105 010c 	add.w	r1, r5, #12
 8005abe:	3202      	adds	r2, #2
 8005ac0:	0092      	lsls	r2, r2, #2
 8005ac2:	300c      	adds	r0, #12
 8005ac4:	f7ff fa97 	bl	8004ff6 <memcpy>
 8005ac8:	2201      	movs	r2, #1
 8005aca:	4631      	mov	r1, r6
 8005acc:	4658      	mov	r0, fp
 8005ace:	f001 fa91 	bl	8006ff4 <__lshift>
 8005ad2:	462f      	mov	r7, r5
 8005ad4:	4605      	mov	r5, r0
 8005ad6:	f10a 0301 	add.w	r3, sl, #1
 8005ada:	9307      	str	r3, [sp, #28]
 8005adc:	9b08      	ldr	r3, [sp, #32]
 8005ade:	4453      	add	r3, sl
 8005ae0:	930b      	str	r3, [sp, #44]	@ 0x2c
 8005ae2:	9b02      	ldr	r3, [sp, #8]
 8005ae4:	f003 0301 	and.w	r3, r3, #1
 8005ae8:	930a      	str	r3, [sp, #40]	@ 0x28
 8005aea:	9b07      	ldr	r3, [sp, #28]
 8005aec:	4621      	mov	r1, r4
 8005aee:	3b01      	subs	r3, #1
 8005af0:	4648      	mov	r0, r9
 8005af2:	9302      	str	r3, [sp, #8]
 8005af4:	f7ff fa98 	bl	8005028 <quorem>
 8005af8:	4639      	mov	r1, r7
 8005afa:	9008      	str	r0, [sp, #32]
 8005afc:	f100 0830 	add.w	r8, r0, #48	@ 0x30
 8005b00:	4648      	mov	r0, r9
 8005b02:	f001 fae3 	bl	80070cc <__mcmp>
 8005b06:	462a      	mov	r2, r5
 8005b08:	9009      	str	r0, [sp, #36]	@ 0x24
 8005b0a:	4621      	mov	r1, r4
 8005b0c:	4658      	mov	r0, fp
 8005b0e:	f001 faf9 	bl	8007104 <__mdiff>
 8005b12:	68c2      	ldr	r2, [r0, #12]
 8005b14:	4606      	mov	r6, r0
 8005b16:	bb02      	cbnz	r2, 8005b5a <_dtoa_r+0xa22>
 8005b18:	4601      	mov	r1, r0
 8005b1a:	4648      	mov	r0, r9
 8005b1c:	f001 fad6 	bl	80070cc <__mcmp>
 8005b20:	4602      	mov	r2, r0
 8005b22:	4631      	mov	r1, r6
 8005b24:	4658      	mov	r0, fp
 8005b26:	920c      	str	r2, [sp, #48]	@ 0x30
 8005b28:	f001 f84e 	bl	8006bc8 <_Bfree>
 8005b2c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8005b2e:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8005b30:	9e07      	ldr	r6, [sp, #28]
 8005b32:	ea43 0102 	orr.w	r1, r3, r2
 8005b36:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8005b38:	4319      	orrs	r1, r3
 8005b3a:	d110      	bne.n	8005b5e <_dtoa_r+0xa26>
 8005b3c:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 8005b40:	d029      	beq.n	8005b96 <_dtoa_r+0xa5e>
 8005b42:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8005b44:	2b00      	cmp	r3, #0
 8005b46:	dd02      	ble.n	8005b4e <_dtoa_r+0xa16>
 8005b48:	9b08      	ldr	r3, [sp, #32]
 8005b4a:	f103 0831 	add.w	r8, r3, #49	@ 0x31
 8005b4e:	9b02      	ldr	r3, [sp, #8]
 8005b50:	f883 8000 	strb.w	r8, [r3]
 8005b54:	e63b      	b.n	80057ce <_dtoa_r+0x696>
 8005b56:	4628      	mov	r0, r5
 8005b58:	e7bb      	b.n	8005ad2 <_dtoa_r+0x99a>
 8005b5a:	2201      	movs	r2, #1
 8005b5c:	e7e1      	b.n	8005b22 <_dtoa_r+0x9ea>
 8005b5e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8005b60:	2b00      	cmp	r3, #0
 8005b62:	db04      	blt.n	8005b6e <_dtoa_r+0xa36>
 8005b64:	9920      	ldr	r1, [sp, #128]	@ 0x80
 8005b66:	430b      	orrs	r3, r1
 8005b68:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8005b6a:	430b      	orrs	r3, r1
 8005b6c:	d120      	bne.n	8005bb0 <_dtoa_r+0xa78>
 8005b6e:	2a00      	cmp	r2, #0
 8005b70:	dded      	ble.n	8005b4e <_dtoa_r+0xa16>
 8005b72:	4649      	mov	r1, r9
 8005b74:	2201      	movs	r2, #1
 8005b76:	4658      	mov	r0, fp
 8005b78:	f001 fa3c 	bl	8006ff4 <__lshift>
 8005b7c:	4621      	mov	r1, r4
 8005b7e:	4681      	mov	r9, r0
 8005b80:	f001 faa4 	bl	80070cc <__mcmp>
 8005b84:	2800      	cmp	r0, #0
 8005b86:	dc03      	bgt.n	8005b90 <_dtoa_r+0xa58>
 8005b88:	d1e1      	bne.n	8005b4e <_dtoa_r+0xa16>
 8005b8a:	f018 0f01 	tst.w	r8, #1
 8005b8e:	d0de      	beq.n	8005b4e <_dtoa_r+0xa16>
 8005b90:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 8005b94:	d1d8      	bne.n	8005b48 <_dtoa_r+0xa10>
 8005b96:	2339      	movs	r3, #57	@ 0x39
 8005b98:	9a02      	ldr	r2, [sp, #8]
 8005b9a:	7013      	strb	r3, [r2, #0]
 8005b9c:	4633      	mov	r3, r6
 8005b9e:	461e      	mov	r6, r3
 8005ba0:	f816 2c01 	ldrb.w	r2, [r6, #-1]
 8005ba4:	3b01      	subs	r3, #1
 8005ba6:	2a39      	cmp	r2, #57	@ 0x39
 8005ba8:	d052      	beq.n	8005c50 <_dtoa_r+0xb18>
 8005baa:	3201      	adds	r2, #1
 8005bac:	701a      	strb	r2, [r3, #0]
 8005bae:	e60e      	b.n	80057ce <_dtoa_r+0x696>
 8005bb0:	2a00      	cmp	r2, #0
 8005bb2:	dd07      	ble.n	8005bc4 <_dtoa_r+0xa8c>
 8005bb4:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 8005bb8:	d0ed      	beq.n	8005b96 <_dtoa_r+0xa5e>
 8005bba:	9a02      	ldr	r2, [sp, #8]
 8005bbc:	f108 0301 	add.w	r3, r8, #1
 8005bc0:	7013      	strb	r3, [r2, #0]
 8005bc2:	e604      	b.n	80057ce <_dtoa_r+0x696>
 8005bc4:	9b07      	ldr	r3, [sp, #28]
 8005bc6:	9a07      	ldr	r2, [sp, #28]
 8005bc8:	f803 8c01 	strb.w	r8, [r3, #-1]
 8005bcc:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8005bce:	4293      	cmp	r3, r2
 8005bd0:	d028      	beq.n	8005c24 <_dtoa_r+0xaec>
 8005bd2:	4649      	mov	r1, r9
 8005bd4:	2300      	movs	r3, #0
 8005bd6:	220a      	movs	r2, #10
 8005bd8:	4658      	mov	r0, fp
 8005bda:	f001 f817 	bl	8006c0c <__multadd>
 8005bde:	42af      	cmp	r7, r5
 8005be0:	4681      	mov	r9, r0
 8005be2:	f04f 0300 	mov.w	r3, #0
 8005be6:	f04f 020a 	mov.w	r2, #10
 8005bea:	4639      	mov	r1, r7
 8005bec:	4658      	mov	r0, fp
 8005bee:	d107      	bne.n	8005c00 <_dtoa_r+0xac8>
 8005bf0:	f001 f80c 	bl	8006c0c <__multadd>
 8005bf4:	4607      	mov	r7, r0
 8005bf6:	4605      	mov	r5, r0
 8005bf8:	9b07      	ldr	r3, [sp, #28]
 8005bfa:	3301      	adds	r3, #1
 8005bfc:	9307      	str	r3, [sp, #28]
 8005bfe:	e774      	b.n	8005aea <_dtoa_r+0x9b2>
 8005c00:	f001 f804 	bl	8006c0c <__multadd>
 8005c04:	4629      	mov	r1, r5
 8005c06:	4607      	mov	r7, r0
 8005c08:	2300      	movs	r3, #0
 8005c0a:	220a      	movs	r2, #10
 8005c0c:	4658      	mov	r0, fp
 8005c0e:	f000 fffd 	bl	8006c0c <__multadd>
 8005c12:	4605      	mov	r5, r0
 8005c14:	e7f0      	b.n	8005bf8 <_dtoa_r+0xac0>
 8005c16:	9b08      	ldr	r3, [sp, #32]
 8005c18:	2700      	movs	r7, #0
 8005c1a:	2b00      	cmp	r3, #0
 8005c1c:	bfcc      	ite	gt
 8005c1e:	461e      	movgt	r6, r3
 8005c20:	2601      	movle	r6, #1
 8005c22:	4456      	add	r6, sl
 8005c24:	4649      	mov	r1, r9
 8005c26:	2201      	movs	r2, #1
 8005c28:	4658      	mov	r0, fp
 8005c2a:	f001 f9e3 	bl	8006ff4 <__lshift>
 8005c2e:	4621      	mov	r1, r4
 8005c30:	4681      	mov	r9, r0
 8005c32:	f001 fa4b 	bl	80070cc <__mcmp>
 8005c36:	2800      	cmp	r0, #0
 8005c38:	dcb0      	bgt.n	8005b9c <_dtoa_r+0xa64>
 8005c3a:	d102      	bne.n	8005c42 <_dtoa_r+0xb0a>
 8005c3c:	f018 0f01 	tst.w	r8, #1
 8005c40:	d1ac      	bne.n	8005b9c <_dtoa_r+0xa64>
 8005c42:	4633      	mov	r3, r6
 8005c44:	461e      	mov	r6, r3
 8005c46:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8005c4a:	2a30      	cmp	r2, #48	@ 0x30
 8005c4c:	d0fa      	beq.n	8005c44 <_dtoa_r+0xb0c>
 8005c4e:	e5be      	b.n	80057ce <_dtoa_r+0x696>
 8005c50:	459a      	cmp	sl, r3
 8005c52:	d1a4      	bne.n	8005b9e <_dtoa_r+0xa66>
 8005c54:	9b04      	ldr	r3, [sp, #16]
 8005c56:	3301      	adds	r3, #1
 8005c58:	9304      	str	r3, [sp, #16]
 8005c5a:	2331      	movs	r3, #49	@ 0x31
 8005c5c:	f88a 3000 	strb.w	r3, [sl]
 8005c60:	e5b5      	b.n	80057ce <_dtoa_r+0x696>
 8005c62:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8005c64:	f8df a05c 	ldr.w	sl, [pc, #92]	@ 8005cc4 <_dtoa_r+0xb8c>
 8005c68:	b11b      	cbz	r3, 8005c72 <_dtoa_r+0xb3a>
 8005c6a:	f10a 0308 	add.w	r3, sl, #8
 8005c6e:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 8005c70:	6013      	str	r3, [r2, #0]
 8005c72:	4650      	mov	r0, sl
 8005c74:	b017      	add	sp, #92	@ 0x5c
 8005c76:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005c7a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8005c7c:	2b01      	cmp	r3, #1
 8005c7e:	f77f ae3d 	ble.w	80058fc <_dtoa_r+0x7c4>
 8005c82:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8005c84:	930a      	str	r3, [sp, #40]	@ 0x28
 8005c86:	2001      	movs	r0, #1
 8005c88:	e65b      	b.n	8005942 <_dtoa_r+0x80a>
 8005c8a:	9b08      	ldr	r3, [sp, #32]
 8005c8c:	2b00      	cmp	r3, #0
 8005c8e:	f77f aed6 	ble.w	8005a3e <_dtoa_r+0x906>
 8005c92:	4656      	mov	r6, sl
 8005c94:	4621      	mov	r1, r4
 8005c96:	4648      	mov	r0, r9
 8005c98:	f7ff f9c6 	bl	8005028 <quorem>
 8005c9c:	f100 0830 	add.w	r8, r0, #48	@ 0x30
 8005ca0:	9b08      	ldr	r3, [sp, #32]
 8005ca2:	f806 8b01 	strb.w	r8, [r6], #1
 8005ca6:	eba6 020a 	sub.w	r2, r6, sl
 8005caa:	4293      	cmp	r3, r2
 8005cac:	ddb3      	ble.n	8005c16 <_dtoa_r+0xade>
 8005cae:	4649      	mov	r1, r9
 8005cb0:	2300      	movs	r3, #0
 8005cb2:	220a      	movs	r2, #10
 8005cb4:	4658      	mov	r0, fp
 8005cb6:	f000 ffa9 	bl	8006c0c <__multadd>
 8005cba:	4681      	mov	r9, r0
 8005cbc:	e7ea      	b.n	8005c94 <_dtoa_r+0xb5c>
 8005cbe:	bf00      	nop
 8005cc0:	08009645 	.word	0x08009645
 8005cc4:	080095c9 	.word	0x080095c9

08005cc8 <rshift>:
 8005cc8:	6903      	ldr	r3, [r0, #16]
 8005cca:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8005cce:	ebb3 1f61 	cmp.w	r3, r1, asr #5
 8005cd2:	f100 0414 	add.w	r4, r0, #20
 8005cd6:	ea4f 1261 	mov.w	r2, r1, asr #5
 8005cda:	dd46      	ble.n	8005d6a <rshift+0xa2>
 8005cdc:	f011 011f 	ands.w	r1, r1, #31
 8005ce0:	eb04 0683 	add.w	r6, r4, r3, lsl #2
 8005ce4:	eb04 0582 	add.w	r5, r4, r2, lsl #2
 8005ce8:	d10c      	bne.n	8005d04 <rshift+0x3c>
 8005cea:	4629      	mov	r1, r5
 8005cec:	f100 0710 	add.w	r7, r0, #16
 8005cf0:	42b1      	cmp	r1, r6
 8005cf2:	d335      	bcc.n	8005d60 <rshift+0x98>
 8005cf4:	1a9b      	subs	r3, r3, r2
 8005cf6:	009b      	lsls	r3, r3, #2
 8005cf8:	1eea      	subs	r2, r5, #3
 8005cfa:	4296      	cmp	r6, r2
 8005cfc:	bf38      	it	cc
 8005cfe:	2300      	movcc	r3, #0
 8005d00:	4423      	add	r3, r4
 8005d02:	e015      	b.n	8005d30 <rshift+0x68>
 8005d04:	46a1      	mov	r9, r4
 8005d06:	f854 7022 	ldr.w	r7, [r4, r2, lsl #2]
 8005d0a:	f1c1 0820 	rsb	r8, r1, #32
 8005d0e:	40cf      	lsrs	r7, r1
 8005d10:	f105 0e04 	add.w	lr, r5, #4
 8005d14:	4576      	cmp	r6, lr
 8005d16:	46f4      	mov	ip, lr
 8005d18:	d816      	bhi.n	8005d48 <rshift+0x80>
 8005d1a:	1a9a      	subs	r2, r3, r2
 8005d1c:	0092      	lsls	r2, r2, #2
 8005d1e:	3a04      	subs	r2, #4
 8005d20:	3501      	adds	r5, #1
 8005d22:	42ae      	cmp	r6, r5
 8005d24:	bf38      	it	cc
 8005d26:	2200      	movcc	r2, #0
 8005d28:	18a3      	adds	r3, r4, r2
 8005d2a:	50a7      	str	r7, [r4, r2]
 8005d2c:	b107      	cbz	r7, 8005d30 <rshift+0x68>
 8005d2e:	3304      	adds	r3, #4
 8005d30:	42a3      	cmp	r3, r4
 8005d32:	eba3 0204 	sub.w	r2, r3, r4
 8005d36:	bf08      	it	eq
 8005d38:	2300      	moveq	r3, #0
 8005d3a:	ea4f 02a2 	mov.w	r2, r2, asr #2
 8005d3e:	6102      	str	r2, [r0, #16]
 8005d40:	bf08      	it	eq
 8005d42:	6143      	streq	r3, [r0, #20]
 8005d44:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8005d48:	f8dc c000 	ldr.w	ip, [ip]
 8005d4c:	fa0c fc08 	lsl.w	ip, ip, r8
 8005d50:	ea4c 0707 	orr.w	r7, ip, r7
 8005d54:	f849 7b04 	str.w	r7, [r9], #4
 8005d58:	f85e 7b04 	ldr.w	r7, [lr], #4
 8005d5c:	40cf      	lsrs	r7, r1
 8005d5e:	e7d9      	b.n	8005d14 <rshift+0x4c>
 8005d60:	f851 cb04 	ldr.w	ip, [r1], #4
 8005d64:	f847 cf04 	str.w	ip, [r7, #4]!
 8005d68:	e7c2      	b.n	8005cf0 <rshift+0x28>
 8005d6a:	4623      	mov	r3, r4
 8005d6c:	e7e0      	b.n	8005d30 <rshift+0x68>

08005d6e <__hexdig_fun>:
 8005d6e:	f1a0 0330 	sub.w	r3, r0, #48	@ 0x30
 8005d72:	2b09      	cmp	r3, #9
 8005d74:	d802      	bhi.n	8005d7c <__hexdig_fun+0xe>
 8005d76:	3820      	subs	r0, #32
 8005d78:	b2c0      	uxtb	r0, r0
 8005d7a:	4770      	bx	lr
 8005d7c:	f1a0 0361 	sub.w	r3, r0, #97	@ 0x61
 8005d80:	2b05      	cmp	r3, #5
 8005d82:	d801      	bhi.n	8005d88 <__hexdig_fun+0x1a>
 8005d84:	3847      	subs	r0, #71	@ 0x47
 8005d86:	e7f7      	b.n	8005d78 <__hexdig_fun+0xa>
 8005d88:	f1a0 0341 	sub.w	r3, r0, #65	@ 0x41
 8005d8c:	2b05      	cmp	r3, #5
 8005d8e:	d801      	bhi.n	8005d94 <__hexdig_fun+0x26>
 8005d90:	3827      	subs	r0, #39	@ 0x27
 8005d92:	e7f1      	b.n	8005d78 <__hexdig_fun+0xa>
 8005d94:	2000      	movs	r0, #0
 8005d96:	4770      	bx	lr

08005d98 <__gethex>:
 8005d98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005d9c:	468a      	mov	sl, r1
 8005d9e:	4690      	mov	r8, r2
 8005da0:	b085      	sub	sp, #20
 8005da2:	9302      	str	r3, [sp, #8]
 8005da4:	680b      	ldr	r3, [r1, #0]
 8005da6:	9001      	str	r0, [sp, #4]
 8005da8:	1c9c      	adds	r4, r3, #2
 8005daa:	46a1      	mov	r9, r4
 8005dac:	f814 0b01 	ldrb.w	r0, [r4], #1
 8005db0:	2830      	cmp	r0, #48	@ 0x30
 8005db2:	d0fa      	beq.n	8005daa <__gethex+0x12>
 8005db4:	eba9 0303 	sub.w	r3, r9, r3
 8005db8:	f1a3 0b02 	sub.w	fp, r3, #2
 8005dbc:	f7ff ffd7 	bl	8005d6e <__hexdig_fun>
 8005dc0:	4605      	mov	r5, r0
 8005dc2:	2800      	cmp	r0, #0
 8005dc4:	d168      	bne.n	8005e98 <__gethex+0x100>
 8005dc6:	2201      	movs	r2, #1
 8005dc8:	4648      	mov	r0, r9
 8005dca:	499f      	ldr	r1, [pc, #636]	@ (8006048 <__gethex+0x2b0>)
 8005dcc:	f7ff f8ba 	bl	8004f44 <strncmp>
 8005dd0:	4607      	mov	r7, r0
 8005dd2:	2800      	cmp	r0, #0
 8005dd4:	d167      	bne.n	8005ea6 <__gethex+0x10e>
 8005dd6:	f899 0001 	ldrb.w	r0, [r9, #1]
 8005dda:	4626      	mov	r6, r4
 8005ddc:	f7ff ffc7 	bl	8005d6e <__hexdig_fun>
 8005de0:	2800      	cmp	r0, #0
 8005de2:	d062      	beq.n	8005eaa <__gethex+0x112>
 8005de4:	4623      	mov	r3, r4
 8005de6:	7818      	ldrb	r0, [r3, #0]
 8005de8:	4699      	mov	r9, r3
 8005dea:	2830      	cmp	r0, #48	@ 0x30
 8005dec:	f103 0301 	add.w	r3, r3, #1
 8005df0:	d0f9      	beq.n	8005de6 <__gethex+0x4e>
 8005df2:	f7ff ffbc 	bl	8005d6e <__hexdig_fun>
 8005df6:	fab0 f580 	clz	r5, r0
 8005dfa:	f04f 0b01 	mov.w	fp, #1
 8005dfe:	096d      	lsrs	r5, r5, #5
 8005e00:	464a      	mov	r2, r9
 8005e02:	4616      	mov	r6, r2
 8005e04:	7830      	ldrb	r0, [r6, #0]
 8005e06:	3201      	adds	r2, #1
 8005e08:	f7ff ffb1 	bl	8005d6e <__hexdig_fun>
 8005e0c:	2800      	cmp	r0, #0
 8005e0e:	d1f8      	bne.n	8005e02 <__gethex+0x6a>
 8005e10:	2201      	movs	r2, #1
 8005e12:	4630      	mov	r0, r6
 8005e14:	498c      	ldr	r1, [pc, #560]	@ (8006048 <__gethex+0x2b0>)
 8005e16:	f7ff f895 	bl	8004f44 <strncmp>
 8005e1a:	2800      	cmp	r0, #0
 8005e1c:	d13f      	bne.n	8005e9e <__gethex+0x106>
 8005e1e:	b944      	cbnz	r4, 8005e32 <__gethex+0x9a>
 8005e20:	1c74      	adds	r4, r6, #1
 8005e22:	4622      	mov	r2, r4
 8005e24:	4616      	mov	r6, r2
 8005e26:	7830      	ldrb	r0, [r6, #0]
 8005e28:	3201      	adds	r2, #1
 8005e2a:	f7ff ffa0 	bl	8005d6e <__hexdig_fun>
 8005e2e:	2800      	cmp	r0, #0
 8005e30:	d1f8      	bne.n	8005e24 <__gethex+0x8c>
 8005e32:	1ba4      	subs	r4, r4, r6
 8005e34:	00a7      	lsls	r7, r4, #2
 8005e36:	7833      	ldrb	r3, [r6, #0]
 8005e38:	f003 03df 	and.w	r3, r3, #223	@ 0xdf
 8005e3c:	2b50      	cmp	r3, #80	@ 0x50
 8005e3e:	d13e      	bne.n	8005ebe <__gethex+0x126>
 8005e40:	7873      	ldrb	r3, [r6, #1]
 8005e42:	2b2b      	cmp	r3, #43	@ 0x2b
 8005e44:	d033      	beq.n	8005eae <__gethex+0x116>
 8005e46:	2b2d      	cmp	r3, #45	@ 0x2d
 8005e48:	d034      	beq.n	8005eb4 <__gethex+0x11c>
 8005e4a:	2400      	movs	r4, #0
 8005e4c:	1c71      	adds	r1, r6, #1
 8005e4e:	7808      	ldrb	r0, [r1, #0]
 8005e50:	f7ff ff8d 	bl	8005d6e <__hexdig_fun>
 8005e54:	1e43      	subs	r3, r0, #1
 8005e56:	b2db      	uxtb	r3, r3
 8005e58:	2b18      	cmp	r3, #24
 8005e5a:	d830      	bhi.n	8005ebe <__gethex+0x126>
 8005e5c:	f1a0 0210 	sub.w	r2, r0, #16
 8005e60:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 8005e64:	f7ff ff83 	bl	8005d6e <__hexdig_fun>
 8005e68:	f100 3cff 	add.w	ip, r0, #4294967295	@ 0xffffffff
 8005e6c:	fa5f fc8c 	uxtb.w	ip, ip
 8005e70:	f1bc 0f18 	cmp.w	ip, #24
 8005e74:	f04f 030a 	mov.w	r3, #10
 8005e78:	d91e      	bls.n	8005eb8 <__gethex+0x120>
 8005e7a:	b104      	cbz	r4, 8005e7e <__gethex+0xe6>
 8005e7c:	4252      	negs	r2, r2
 8005e7e:	4417      	add	r7, r2
 8005e80:	f8ca 1000 	str.w	r1, [sl]
 8005e84:	b1ed      	cbz	r5, 8005ec2 <__gethex+0x12a>
 8005e86:	f1bb 0f00 	cmp.w	fp, #0
 8005e8a:	bf0c      	ite	eq
 8005e8c:	2506      	moveq	r5, #6
 8005e8e:	2500      	movne	r5, #0
 8005e90:	4628      	mov	r0, r5
 8005e92:	b005      	add	sp, #20
 8005e94:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005e98:	2500      	movs	r5, #0
 8005e9a:	462c      	mov	r4, r5
 8005e9c:	e7b0      	b.n	8005e00 <__gethex+0x68>
 8005e9e:	2c00      	cmp	r4, #0
 8005ea0:	d1c7      	bne.n	8005e32 <__gethex+0x9a>
 8005ea2:	4627      	mov	r7, r4
 8005ea4:	e7c7      	b.n	8005e36 <__gethex+0x9e>
 8005ea6:	464e      	mov	r6, r9
 8005ea8:	462f      	mov	r7, r5
 8005eaa:	2501      	movs	r5, #1
 8005eac:	e7c3      	b.n	8005e36 <__gethex+0x9e>
 8005eae:	2400      	movs	r4, #0
 8005eb0:	1cb1      	adds	r1, r6, #2
 8005eb2:	e7cc      	b.n	8005e4e <__gethex+0xb6>
 8005eb4:	2401      	movs	r4, #1
 8005eb6:	e7fb      	b.n	8005eb0 <__gethex+0x118>
 8005eb8:	fb03 0002 	mla	r0, r3, r2, r0
 8005ebc:	e7ce      	b.n	8005e5c <__gethex+0xc4>
 8005ebe:	4631      	mov	r1, r6
 8005ec0:	e7de      	b.n	8005e80 <__gethex+0xe8>
 8005ec2:	4629      	mov	r1, r5
 8005ec4:	eba6 0309 	sub.w	r3, r6, r9
 8005ec8:	3b01      	subs	r3, #1
 8005eca:	2b07      	cmp	r3, #7
 8005ecc:	dc0a      	bgt.n	8005ee4 <__gethex+0x14c>
 8005ece:	9801      	ldr	r0, [sp, #4]
 8005ed0:	f000 fe3a 	bl	8006b48 <_Balloc>
 8005ed4:	4604      	mov	r4, r0
 8005ed6:	b940      	cbnz	r0, 8005eea <__gethex+0x152>
 8005ed8:	4602      	mov	r2, r0
 8005eda:	21e4      	movs	r1, #228	@ 0xe4
 8005edc:	4b5b      	ldr	r3, [pc, #364]	@ (800604c <__gethex+0x2b4>)
 8005ede:	485c      	ldr	r0, [pc, #368]	@ (8006050 <__gethex+0x2b8>)
 8005ee0:	f001 fcde 	bl	80078a0 <__assert_func>
 8005ee4:	3101      	adds	r1, #1
 8005ee6:	105b      	asrs	r3, r3, #1
 8005ee8:	e7ef      	b.n	8005eca <__gethex+0x132>
 8005eea:	2300      	movs	r3, #0
 8005eec:	f100 0a14 	add.w	sl, r0, #20
 8005ef0:	4655      	mov	r5, sl
 8005ef2:	469b      	mov	fp, r3
 8005ef4:	45b1      	cmp	r9, r6
 8005ef6:	d337      	bcc.n	8005f68 <__gethex+0x1d0>
 8005ef8:	f845 bb04 	str.w	fp, [r5], #4
 8005efc:	eba5 050a 	sub.w	r5, r5, sl
 8005f00:	10ad      	asrs	r5, r5, #2
 8005f02:	6125      	str	r5, [r4, #16]
 8005f04:	4658      	mov	r0, fp
 8005f06:	f000 ff11 	bl	8006d2c <__hi0bits>
 8005f0a:	016d      	lsls	r5, r5, #5
 8005f0c:	f8d8 6000 	ldr.w	r6, [r8]
 8005f10:	1a2d      	subs	r5, r5, r0
 8005f12:	42b5      	cmp	r5, r6
 8005f14:	dd54      	ble.n	8005fc0 <__gethex+0x228>
 8005f16:	1bad      	subs	r5, r5, r6
 8005f18:	4629      	mov	r1, r5
 8005f1a:	4620      	mov	r0, r4
 8005f1c:	f001 fa99 	bl	8007452 <__any_on>
 8005f20:	4681      	mov	r9, r0
 8005f22:	b178      	cbz	r0, 8005f44 <__gethex+0x1ac>
 8005f24:	f04f 0901 	mov.w	r9, #1
 8005f28:	1e6b      	subs	r3, r5, #1
 8005f2a:	1159      	asrs	r1, r3, #5
 8005f2c:	f85a 1021 	ldr.w	r1, [sl, r1, lsl #2]
 8005f30:	f003 021f 	and.w	r2, r3, #31
 8005f34:	fa09 f202 	lsl.w	r2, r9, r2
 8005f38:	420a      	tst	r2, r1
 8005f3a:	d003      	beq.n	8005f44 <__gethex+0x1ac>
 8005f3c:	454b      	cmp	r3, r9
 8005f3e:	dc36      	bgt.n	8005fae <__gethex+0x216>
 8005f40:	f04f 0902 	mov.w	r9, #2
 8005f44:	4629      	mov	r1, r5
 8005f46:	4620      	mov	r0, r4
 8005f48:	f7ff febe 	bl	8005cc8 <rshift>
 8005f4c:	442f      	add	r7, r5
 8005f4e:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8005f52:	42bb      	cmp	r3, r7
 8005f54:	da42      	bge.n	8005fdc <__gethex+0x244>
 8005f56:	4621      	mov	r1, r4
 8005f58:	9801      	ldr	r0, [sp, #4]
 8005f5a:	f000 fe35 	bl	8006bc8 <_Bfree>
 8005f5e:	2300      	movs	r3, #0
 8005f60:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8005f62:	25a3      	movs	r5, #163	@ 0xa3
 8005f64:	6013      	str	r3, [r2, #0]
 8005f66:	e793      	b.n	8005e90 <__gethex+0xf8>
 8005f68:	f816 2d01 	ldrb.w	r2, [r6, #-1]!
 8005f6c:	2a2e      	cmp	r2, #46	@ 0x2e
 8005f6e:	d012      	beq.n	8005f96 <__gethex+0x1fe>
 8005f70:	2b20      	cmp	r3, #32
 8005f72:	d104      	bne.n	8005f7e <__gethex+0x1e6>
 8005f74:	f845 bb04 	str.w	fp, [r5], #4
 8005f78:	f04f 0b00 	mov.w	fp, #0
 8005f7c:	465b      	mov	r3, fp
 8005f7e:	7830      	ldrb	r0, [r6, #0]
 8005f80:	9303      	str	r3, [sp, #12]
 8005f82:	f7ff fef4 	bl	8005d6e <__hexdig_fun>
 8005f86:	9b03      	ldr	r3, [sp, #12]
 8005f88:	f000 000f 	and.w	r0, r0, #15
 8005f8c:	4098      	lsls	r0, r3
 8005f8e:	ea4b 0b00 	orr.w	fp, fp, r0
 8005f92:	3304      	adds	r3, #4
 8005f94:	e7ae      	b.n	8005ef4 <__gethex+0x15c>
 8005f96:	45b1      	cmp	r9, r6
 8005f98:	d8ea      	bhi.n	8005f70 <__gethex+0x1d8>
 8005f9a:	2201      	movs	r2, #1
 8005f9c:	4630      	mov	r0, r6
 8005f9e:	492a      	ldr	r1, [pc, #168]	@ (8006048 <__gethex+0x2b0>)
 8005fa0:	9303      	str	r3, [sp, #12]
 8005fa2:	f7fe ffcf 	bl	8004f44 <strncmp>
 8005fa6:	9b03      	ldr	r3, [sp, #12]
 8005fa8:	2800      	cmp	r0, #0
 8005faa:	d1e1      	bne.n	8005f70 <__gethex+0x1d8>
 8005fac:	e7a2      	b.n	8005ef4 <__gethex+0x15c>
 8005fae:	4620      	mov	r0, r4
 8005fb0:	1ea9      	subs	r1, r5, #2
 8005fb2:	f001 fa4e 	bl	8007452 <__any_on>
 8005fb6:	2800      	cmp	r0, #0
 8005fb8:	d0c2      	beq.n	8005f40 <__gethex+0x1a8>
 8005fba:	f04f 0903 	mov.w	r9, #3
 8005fbe:	e7c1      	b.n	8005f44 <__gethex+0x1ac>
 8005fc0:	da09      	bge.n	8005fd6 <__gethex+0x23e>
 8005fc2:	1b75      	subs	r5, r6, r5
 8005fc4:	4621      	mov	r1, r4
 8005fc6:	462a      	mov	r2, r5
 8005fc8:	9801      	ldr	r0, [sp, #4]
 8005fca:	f001 f813 	bl	8006ff4 <__lshift>
 8005fce:	4604      	mov	r4, r0
 8005fd0:	1b7f      	subs	r7, r7, r5
 8005fd2:	f100 0a14 	add.w	sl, r0, #20
 8005fd6:	f04f 0900 	mov.w	r9, #0
 8005fda:	e7b8      	b.n	8005f4e <__gethex+0x1b6>
 8005fdc:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8005fe0:	42bd      	cmp	r5, r7
 8005fe2:	dd6f      	ble.n	80060c4 <__gethex+0x32c>
 8005fe4:	1bed      	subs	r5, r5, r7
 8005fe6:	42ae      	cmp	r6, r5
 8005fe8:	dc34      	bgt.n	8006054 <__gethex+0x2bc>
 8005fea:	f8d8 300c 	ldr.w	r3, [r8, #12]
 8005fee:	2b02      	cmp	r3, #2
 8005ff0:	d022      	beq.n	8006038 <__gethex+0x2a0>
 8005ff2:	2b03      	cmp	r3, #3
 8005ff4:	d024      	beq.n	8006040 <__gethex+0x2a8>
 8005ff6:	2b01      	cmp	r3, #1
 8005ff8:	d115      	bne.n	8006026 <__gethex+0x28e>
 8005ffa:	42ae      	cmp	r6, r5
 8005ffc:	d113      	bne.n	8006026 <__gethex+0x28e>
 8005ffe:	2e01      	cmp	r6, #1
 8006000:	d10b      	bne.n	800601a <__gethex+0x282>
 8006002:	f8d8 3004 	ldr.w	r3, [r8, #4]
 8006006:	9a02      	ldr	r2, [sp, #8]
 8006008:	2562      	movs	r5, #98	@ 0x62
 800600a:	6013      	str	r3, [r2, #0]
 800600c:	2301      	movs	r3, #1
 800600e:	6123      	str	r3, [r4, #16]
 8006010:	f8ca 3000 	str.w	r3, [sl]
 8006014:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8006016:	601c      	str	r4, [r3, #0]
 8006018:	e73a      	b.n	8005e90 <__gethex+0xf8>
 800601a:	4620      	mov	r0, r4
 800601c:	1e71      	subs	r1, r6, #1
 800601e:	f001 fa18 	bl	8007452 <__any_on>
 8006022:	2800      	cmp	r0, #0
 8006024:	d1ed      	bne.n	8006002 <__gethex+0x26a>
 8006026:	4621      	mov	r1, r4
 8006028:	9801      	ldr	r0, [sp, #4]
 800602a:	f000 fdcd 	bl	8006bc8 <_Bfree>
 800602e:	2300      	movs	r3, #0
 8006030:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8006032:	2550      	movs	r5, #80	@ 0x50
 8006034:	6013      	str	r3, [r2, #0]
 8006036:	e72b      	b.n	8005e90 <__gethex+0xf8>
 8006038:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800603a:	2b00      	cmp	r3, #0
 800603c:	d1f3      	bne.n	8006026 <__gethex+0x28e>
 800603e:	e7e0      	b.n	8006002 <__gethex+0x26a>
 8006040:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8006042:	2b00      	cmp	r3, #0
 8006044:	d1dd      	bne.n	8006002 <__gethex+0x26a>
 8006046:	e7ee      	b.n	8006026 <__gethex+0x28e>
 8006048:	08009469 	.word	0x08009469
 800604c:	08009645 	.word	0x08009645
 8006050:	08009656 	.word	0x08009656
 8006054:	1e6f      	subs	r7, r5, #1
 8006056:	f1b9 0f00 	cmp.w	r9, #0
 800605a:	d130      	bne.n	80060be <__gethex+0x326>
 800605c:	b127      	cbz	r7, 8006068 <__gethex+0x2d0>
 800605e:	4639      	mov	r1, r7
 8006060:	4620      	mov	r0, r4
 8006062:	f001 f9f6 	bl	8007452 <__any_on>
 8006066:	4681      	mov	r9, r0
 8006068:	2301      	movs	r3, #1
 800606a:	4629      	mov	r1, r5
 800606c:	1b76      	subs	r6, r6, r5
 800606e:	2502      	movs	r5, #2
 8006070:	117a      	asrs	r2, r7, #5
 8006072:	f85a 2022 	ldr.w	r2, [sl, r2, lsl #2]
 8006076:	f007 071f 	and.w	r7, r7, #31
 800607a:	40bb      	lsls	r3, r7
 800607c:	4213      	tst	r3, r2
 800607e:	4620      	mov	r0, r4
 8006080:	bf18      	it	ne
 8006082:	f049 0902 	orrne.w	r9, r9, #2
 8006086:	f7ff fe1f 	bl	8005cc8 <rshift>
 800608a:	f8d8 7004 	ldr.w	r7, [r8, #4]
 800608e:	f1b9 0f00 	cmp.w	r9, #0
 8006092:	d047      	beq.n	8006124 <__gethex+0x38c>
 8006094:	f8d8 300c 	ldr.w	r3, [r8, #12]
 8006098:	2b02      	cmp	r3, #2
 800609a:	d015      	beq.n	80060c8 <__gethex+0x330>
 800609c:	2b03      	cmp	r3, #3
 800609e:	d017      	beq.n	80060d0 <__gethex+0x338>
 80060a0:	2b01      	cmp	r3, #1
 80060a2:	d109      	bne.n	80060b8 <__gethex+0x320>
 80060a4:	f019 0f02 	tst.w	r9, #2
 80060a8:	d006      	beq.n	80060b8 <__gethex+0x320>
 80060aa:	f8da 3000 	ldr.w	r3, [sl]
 80060ae:	ea49 0903 	orr.w	r9, r9, r3
 80060b2:	f019 0f01 	tst.w	r9, #1
 80060b6:	d10e      	bne.n	80060d6 <__gethex+0x33e>
 80060b8:	f045 0510 	orr.w	r5, r5, #16
 80060bc:	e032      	b.n	8006124 <__gethex+0x38c>
 80060be:	f04f 0901 	mov.w	r9, #1
 80060c2:	e7d1      	b.n	8006068 <__gethex+0x2d0>
 80060c4:	2501      	movs	r5, #1
 80060c6:	e7e2      	b.n	800608e <__gethex+0x2f6>
 80060c8:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80060ca:	f1c3 0301 	rsb	r3, r3, #1
 80060ce:	930f      	str	r3, [sp, #60]	@ 0x3c
 80060d0:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80060d2:	2b00      	cmp	r3, #0
 80060d4:	d0f0      	beq.n	80060b8 <__gethex+0x320>
 80060d6:	f04f 0c00 	mov.w	ip, #0
 80060da:	f8d4 b010 	ldr.w	fp, [r4, #16]
 80060de:	f104 0314 	add.w	r3, r4, #20
 80060e2:	ea4f 0a8b 	mov.w	sl, fp, lsl #2
 80060e6:	eb03 018b 	add.w	r1, r3, fp, lsl #2
 80060ea:	4618      	mov	r0, r3
 80060ec:	f853 2b04 	ldr.w	r2, [r3], #4
 80060f0:	f1b2 3fff 	cmp.w	r2, #4294967295	@ 0xffffffff
 80060f4:	d01b      	beq.n	800612e <__gethex+0x396>
 80060f6:	3201      	adds	r2, #1
 80060f8:	6002      	str	r2, [r0, #0]
 80060fa:	2d02      	cmp	r5, #2
 80060fc:	f104 0314 	add.w	r3, r4, #20
 8006100:	d13c      	bne.n	800617c <__gethex+0x3e4>
 8006102:	f8d8 2000 	ldr.w	r2, [r8]
 8006106:	3a01      	subs	r2, #1
 8006108:	42b2      	cmp	r2, r6
 800610a:	d109      	bne.n	8006120 <__gethex+0x388>
 800610c:	2201      	movs	r2, #1
 800610e:	1171      	asrs	r1, r6, #5
 8006110:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 8006114:	f006 061f 	and.w	r6, r6, #31
 8006118:	fa02 f606 	lsl.w	r6, r2, r6
 800611c:	421e      	tst	r6, r3
 800611e:	d13a      	bne.n	8006196 <__gethex+0x3fe>
 8006120:	f045 0520 	orr.w	r5, r5, #32
 8006124:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8006126:	601c      	str	r4, [r3, #0]
 8006128:	9b02      	ldr	r3, [sp, #8]
 800612a:	601f      	str	r7, [r3, #0]
 800612c:	e6b0      	b.n	8005e90 <__gethex+0xf8>
 800612e:	4299      	cmp	r1, r3
 8006130:	f843 cc04 	str.w	ip, [r3, #-4]
 8006134:	d8d9      	bhi.n	80060ea <__gethex+0x352>
 8006136:	68a3      	ldr	r3, [r4, #8]
 8006138:	459b      	cmp	fp, r3
 800613a:	db17      	blt.n	800616c <__gethex+0x3d4>
 800613c:	6861      	ldr	r1, [r4, #4]
 800613e:	9801      	ldr	r0, [sp, #4]
 8006140:	3101      	adds	r1, #1
 8006142:	f000 fd01 	bl	8006b48 <_Balloc>
 8006146:	4681      	mov	r9, r0
 8006148:	b918      	cbnz	r0, 8006152 <__gethex+0x3ba>
 800614a:	4602      	mov	r2, r0
 800614c:	2184      	movs	r1, #132	@ 0x84
 800614e:	4b19      	ldr	r3, [pc, #100]	@ (80061b4 <__gethex+0x41c>)
 8006150:	e6c5      	b.n	8005ede <__gethex+0x146>
 8006152:	6922      	ldr	r2, [r4, #16]
 8006154:	f104 010c 	add.w	r1, r4, #12
 8006158:	3202      	adds	r2, #2
 800615a:	0092      	lsls	r2, r2, #2
 800615c:	300c      	adds	r0, #12
 800615e:	f7fe ff4a 	bl	8004ff6 <memcpy>
 8006162:	4621      	mov	r1, r4
 8006164:	9801      	ldr	r0, [sp, #4]
 8006166:	f000 fd2f 	bl	8006bc8 <_Bfree>
 800616a:	464c      	mov	r4, r9
 800616c:	6923      	ldr	r3, [r4, #16]
 800616e:	1c5a      	adds	r2, r3, #1
 8006170:	6122      	str	r2, [r4, #16]
 8006172:	2201      	movs	r2, #1
 8006174:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8006178:	615a      	str	r2, [r3, #20]
 800617a:	e7be      	b.n	80060fa <__gethex+0x362>
 800617c:	6922      	ldr	r2, [r4, #16]
 800617e:	455a      	cmp	r2, fp
 8006180:	dd0b      	ble.n	800619a <__gethex+0x402>
 8006182:	2101      	movs	r1, #1
 8006184:	4620      	mov	r0, r4
 8006186:	f7ff fd9f 	bl	8005cc8 <rshift>
 800618a:	f8d8 3008 	ldr.w	r3, [r8, #8]
 800618e:	3701      	adds	r7, #1
 8006190:	42bb      	cmp	r3, r7
 8006192:	f6ff aee0 	blt.w	8005f56 <__gethex+0x1be>
 8006196:	2501      	movs	r5, #1
 8006198:	e7c2      	b.n	8006120 <__gethex+0x388>
 800619a:	f016 061f 	ands.w	r6, r6, #31
 800619e:	d0fa      	beq.n	8006196 <__gethex+0x3fe>
 80061a0:	4453      	add	r3, sl
 80061a2:	f853 0c04 	ldr.w	r0, [r3, #-4]
 80061a6:	f000 fdc1 	bl	8006d2c <__hi0bits>
 80061aa:	f1c6 0620 	rsb	r6, r6, #32
 80061ae:	42b0      	cmp	r0, r6
 80061b0:	dbe7      	blt.n	8006182 <__gethex+0x3ea>
 80061b2:	e7f0      	b.n	8006196 <__gethex+0x3fe>
 80061b4:	08009645 	.word	0x08009645

080061b8 <L_shift>:
 80061b8:	f1c2 0208 	rsb	r2, r2, #8
 80061bc:	0092      	lsls	r2, r2, #2
 80061be:	b570      	push	{r4, r5, r6, lr}
 80061c0:	f1c2 0620 	rsb	r6, r2, #32
 80061c4:	6843      	ldr	r3, [r0, #4]
 80061c6:	6804      	ldr	r4, [r0, #0]
 80061c8:	fa03 f506 	lsl.w	r5, r3, r6
 80061cc:	432c      	orrs	r4, r5
 80061ce:	40d3      	lsrs	r3, r2
 80061d0:	6004      	str	r4, [r0, #0]
 80061d2:	f840 3f04 	str.w	r3, [r0, #4]!
 80061d6:	4288      	cmp	r0, r1
 80061d8:	d3f4      	bcc.n	80061c4 <L_shift+0xc>
 80061da:	bd70      	pop	{r4, r5, r6, pc}

080061dc <__match>:
 80061dc:	b530      	push	{r4, r5, lr}
 80061de:	6803      	ldr	r3, [r0, #0]
 80061e0:	3301      	adds	r3, #1
 80061e2:	f811 4b01 	ldrb.w	r4, [r1], #1
 80061e6:	b914      	cbnz	r4, 80061ee <__match+0x12>
 80061e8:	6003      	str	r3, [r0, #0]
 80061ea:	2001      	movs	r0, #1
 80061ec:	bd30      	pop	{r4, r5, pc}
 80061ee:	f813 2b01 	ldrb.w	r2, [r3], #1
 80061f2:	f1a2 0541 	sub.w	r5, r2, #65	@ 0x41
 80061f6:	2d19      	cmp	r5, #25
 80061f8:	bf98      	it	ls
 80061fa:	3220      	addls	r2, #32
 80061fc:	42a2      	cmp	r2, r4
 80061fe:	d0f0      	beq.n	80061e2 <__match+0x6>
 8006200:	2000      	movs	r0, #0
 8006202:	e7f3      	b.n	80061ec <__match+0x10>

08006204 <__hexnan>:
 8006204:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006208:	2500      	movs	r5, #0
 800620a:	680b      	ldr	r3, [r1, #0]
 800620c:	4682      	mov	sl, r0
 800620e:	115e      	asrs	r6, r3, #5
 8006210:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 8006214:	f013 031f 	ands.w	r3, r3, #31
 8006218:	bf18      	it	ne
 800621a:	3604      	addne	r6, #4
 800621c:	1f37      	subs	r7, r6, #4
 800621e:	4690      	mov	r8, r2
 8006220:	46b9      	mov	r9, r7
 8006222:	463c      	mov	r4, r7
 8006224:	46ab      	mov	fp, r5
 8006226:	b087      	sub	sp, #28
 8006228:	6801      	ldr	r1, [r0, #0]
 800622a:	9301      	str	r3, [sp, #4]
 800622c:	f846 5c04 	str.w	r5, [r6, #-4]
 8006230:	9502      	str	r5, [sp, #8]
 8006232:	784a      	ldrb	r2, [r1, #1]
 8006234:	1c4b      	adds	r3, r1, #1
 8006236:	9303      	str	r3, [sp, #12]
 8006238:	b342      	cbz	r2, 800628c <__hexnan+0x88>
 800623a:	4610      	mov	r0, r2
 800623c:	9105      	str	r1, [sp, #20]
 800623e:	9204      	str	r2, [sp, #16]
 8006240:	f7ff fd95 	bl	8005d6e <__hexdig_fun>
 8006244:	2800      	cmp	r0, #0
 8006246:	d151      	bne.n	80062ec <__hexnan+0xe8>
 8006248:	9a04      	ldr	r2, [sp, #16]
 800624a:	9905      	ldr	r1, [sp, #20]
 800624c:	2a20      	cmp	r2, #32
 800624e:	d818      	bhi.n	8006282 <__hexnan+0x7e>
 8006250:	9b02      	ldr	r3, [sp, #8]
 8006252:	459b      	cmp	fp, r3
 8006254:	dd13      	ble.n	800627e <__hexnan+0x7a>
 8006256:	454c      	cmp	r4, r9
 8006258:	d206      	bcs.n	8006268 <__hexnan+0x64>
 800625a:	2d07      	cmp	r5, #7
 800625c:	dc04      	bgt.n	8006268 <__hexnan+0x64>
 800625e:	462a      	mov	r2, r5
 8006260:	4649      	mov	r1, r9
 8006262:	4620      	mov	r0, r4
 8006264:	f7ff ffa8 	bl	80061b8 <L_shift>
 8006268:	4544      	cmp	r4, r8
 800626a:	d952      	bls.n	8006312 <__hexnan+0x10e>
 800626c:	2300      	movs	r3, #0
 800626e:	f1a4 0904 	sub.w	r9, r4, #4
 8006272:	f844 3c04 	str.w	r3, [r4, #-4]
 8006276:	461d      	mov	r5, r3
 8006278:	464c      	mov	r4, r9
 800627a:	f8cd b008 	str.w	fp, [sp, #8]
 800627e:	9903      	ldr	r1, [sp, #12]
 8006280:	e7d7      	b.n	8006232 <__hexnan+0x2e>
 8006282:	2a29      	cmp	r2, #41	@ 0x29
 8006284:	d157      	bne.n	8006336 <__hexnan+0x132>
 8006286:	3102      	adds	r1, #2
 8006288:	f8ca 1000 	str.w	r1, [sl]
 800628c:	f1bb 0f00 	cmp.w	fp, #0
 8006290:	d051      	beq.n	8006336 <__hexnan+0x132>
 8006292:	454c      	cmp	r4, r9
 8006294:	d206      	bcs.n	80062a4 <__hexnan+0xa0>
 8006296:	2d07      	cmp	r5, #7
 8006298:	dc04      	bgt.n	80062a4 <__hexnan+0xa0>
 800629a:	462a      	mov	r2, r5
 800629c:	4649      	mov	r1, r9
 800629e:	4620      	mov	r0, r4
 80062a0:	f7ff ff8a 	bl	80061b8 <L_shift>
 80062a4:	4544      	cmp	r4, r8
 80062a6:	d936      	bls.n	8006316 <__hexnan+0x112>
 80062a8:	4623      	mov	r3, r4
 80062aa:	f1a8 0204 	sub.w	r2, r8, #4
 80062ae:	f853 1b04 	ldr.w	r1, [r3], #4
 80062b2:	429f      	cmp	r7, r3
 80062b4:	f842 1f04 	str.w	r1, [r2, #4]!
 80062b8:	d2f9      	bcs.n	80062ae <__hexnan+0xaa>
 80062ba:	1b3b      	subs	r3, r7, r4
 80062bc:	f023 0303 	bic.w	r3, r3, #3
 80062c0:	3304      	adds	r3, #4
 80062c2:	3401      	adds	r4, #1
 80062c4:	3e03      	subs	r6, #3
 80062c6:	42b4      	cmp	r4, r6
 80062c8:	bf88      	it	hi
 80062ca:	2304      	movhi	r3, #4
 80062cc:	2200      	movs	r2, #0
 80062ce:	4443      	add	r3, r8
 80062d0:	f843 2b04 	str.w	r2, [r3], #4
 80062d4:	429f      	cmp	r7, r3
 80062d6:	d2fb      	bcs.n	80062d0 <__hexnan+0xcc>
 80062d8:	683b      	ldr	r3, [r7, #0]
 80062da:	b91b      	cbnz	r3, 80062e4 <__hexnan+0xe0>
 80062dc:	4547      	cmp	r7, r8
 80062de:	d128      	bne.n	8006332 <__hexnan+0x12e>
 80062e0:	2301      	movs	r3, #1
 80062e2:	603b      	str	r3, [r7, #0]
 80062e4:	2005      	movs	r0, #5
 80062e6:	b007      	add	sp, #28
 80062e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80062ec:	3501      	adds	r5, #1
 80062ee:	2d08      	cmp	r5, #8
 80062f0:	f10b 0b01 	add.w	fp, fp, #1
 80062f4:	dd06      	ble.n	8006304 <__hexnan+0x100>
 80062f6:	4544      	cmp	r4, r8
 80062f8:	d9c1      	bls.n	800627e <__hexnan+0x7a>
 80062fa:	2300      	movs	r3, #0
 80062fc:	2501      	movs	r5, #1
 80062fe:	f844 3c04 	str.w	r3, [r4, #-4]
 8006302:	3c04      	subs	r4, #4
 8006304:	6822      	ldr	r2, [r4, #0]
 8006306:	f000 000f 	and.w	r0, r0, #15
 800630a:	ea40 1002 	orr.w	r0, r0, r2, lsl #4
 800630e:	6020      	str	r0, [r4, #0]
 8006310:	e7b5      	b.n	800627e <__hexnan+0x7a>
 8006312:	2508      	movs	r5, #8
 8006314:	e7b3      	b.n	800627e <__hexnan+0x7a>
 8006316:	9b01      	ldr	r3, [sp, #4]
 8006318:	2b00      	cmp	r3, #0
 800631a:	d0dd      	beq.n	80062d8 <__hexnan+0xd4>
 800631c:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8006320:	f1c3 0320 	rsb	r3, r3, #32
 8006324:	40da      	lsrs	r2, r3
 8006326:	f856 3c04 	ldr.w	r3, [r6, #-4]
 800632a:	4013      	ands	r3, r2
 800632c:	f846 3c04 	str.w	r3, [r6, #-4]
 8006330:	e7d2      	b.n	80062d8 <__hexnan+0xd4>
 8006332:	3f04      	subs	r7, #4
 8006334:	e7d0      	b.n	80062d8 <__hexnan+0xd4>
 8006336:	2004      	movs	r0, #4
 8006338:	e7d5      	b.n	80062e6 <__hexnan+0xe2>

0800633a <__ssputs_r>:
 800633a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800633e:	461f      	mov	r7, r3
 8006340:	688e      	ldr	r6, [r1, #8]
 8006342:	4682      	mov	sl, r0
 8006344:	42be      	cmp	r6, r7
 8006346:	460c      	mov	r4, r1
 8006348:	4690      	mov	r8, r2
 800634a:	680b      	ldr	r3, [r1, #0]
 800634c:	d82d      	bhi.n	80063aa <__ssputs_r+0x70>
 800634e:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8006352:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 8006356:	d026      	beq.n	80063a6 <__ssputs_r+0x6c>
 8006358:	6965      	ldr	r5, [r4, #20]
 800635a:	6909      	ldr	r1, [r1, #16]
 800635c:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8006360:	eba3 0901 	sub.w	r9, r3, r1
 8006364:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8006368:	1c7b      	adds	r3, r7, #1
 800636a:	444b      	add	r3, r9
 800636c:	106d      	asrs	r5, r5, #1
 800636e:	429d      	cmp	r5, r3
 8006370:	bf38      	it	cc
 8006372:	461d      	movcc	r5, r3
 8006374:	0553      	lsls	r3, r2, #21
 8006376:	d527      	bpl.n	80063c8 <__ssputs_r+0x8e>
 8006378:	4629      	mov	r1, r5
 800637a:	f000 fa9f 	bl	80068bc <_malloc_r>
 800637e:	4606      	mov	r6, r0
 8006380:	b360      	cbz	r0, 80063dc <__ssputs_r+0xa2>
 8006382:	464a      	mov	r2, r9
 8006384:	6921      	ldr	r1, [r4, #16]
 8006386:	f7fe fe36 	bl	8004ff6 <memcpy>
 800638a:	89a3      	ldrh	r3, [r4, #12]
 800638c:	f423 6390 	bic.w	r3, r3, #1152	@ 0x480
 8006390:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8006394:	81a3      	strh	r3, [r4, #12]
 8006396:	6126      	str	r6, [r4, #16]
 8006398:	444e      	add	r6, r9
 800639a:	6026      	str	r6, [r4, #0]
 800639c:	463e      	mov	r6, r7
 800639e:	6165      	str	r5, [r4, #20]
 80063a0:	eba5 0509 	sub.w	r5, r5, r9
 80063a4:	60a5      	str	r5, [r4, #8]
 80063a6:	42be      	cmp	r6, r7
 80063a8:	d900      	bls.n	80063ac <__ssputs_r+0x72>
 80063aa:	463e      	mov	r6, r7
 80063ac:	4632      	mov	r2, r6
 80063ae:	4641      	mov	r1, r8
 80063b0:	6820      	ldr	r0, [r4, #0]
 80063b2:	f001 f9e3 	bl	800777c <memmove>
 80063b6:	2000      	movs	r0, #0
 80063b8:	68a3      	ldr	r3, [r4, #8]
 80063ba:	1b9b      	subs	r3, r3, r6
 80063bc:	60a3      	str	r3, [r4, #8]
 80063be:	6823      	ldr	r3, [r4, #0]
 80063c0:	4433      	add	r3, r6
 80063c2:	6023      	str	r3, [r4, #0]
 80063c4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80063c8:	462a      	mov	r2, r5
 80063ca:	f001 f8a6 	bl	800751a <_realloc_r>
 80063ce:	4606      	mov	r6, r0
 80063d0:	2800      	cmp	r0, #0
 80063d2:	d1e0      	bne.n	8006396 <__ssputs_r+0x5c>
 80063d4:	4650      	mov	r0, sl
 80063d6:	6921      	ldr	r1, [r4, #16]
 80063d8:	f001 fa94 	bl	8007904 <_free_r>
 80063dc:	230c      	movs	r3, #12
 80063de:	f8ca 3000 	str.w	r3, [sl]
 80063e2:	89a3      	ldrh	r3, [r4, #12]
 80063e4:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 80063e8:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80063ec:	81a3      	strh	r3, [r4, #12]
 80063ee:	e7e9      	b.n	80063c4 <__ssputs_r+0x8a>

080063f0 <_svfiprintf_r>:
 80063f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80063f4:	4698      	mov	r8, r3
 80063f6:	898b      	ldrh	r3, [r1, #12]
 80063f8:	4607      	mov	r7, r0
 80063fa:	061b      	lsls	r3, r3, #24
 80063fc:	460d      	mov	r5, r1
 80063fe:	4614      	mov	r4, r2
 8006400:	b09d      	sub	sp, #116	@ 0x74
 8006402:	d510      	bpl.n	8006426 <_svfiprintf_r+0x36>
 8006404:	690b      	ldr	r3, [r1, #16]
 8006406:	b973      	cbnz	r3, 8006426 <_svfiprintf_r+0x36>
 8006408:	2140      	movs	r1, #64	@ 0x40
 800640a:	f000 fa57 	bl	80068bc <_malloc_r>
 800640e:	6028      	str	r0, [r5, #0]
 8006410:	6128      	str	r0, [r5, #16]
 8006412:	b930      	cbnz	r0, 8006422 <_svfiprintf_r+0x32>
 8006414:	230c      	movs	r3, #12
 8006416:	603b      	str	r3, [r7, #0]
 8006418:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 800641c:	b01d      	add	sp, #116	@ 0x74
 800641e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006422:	2340      	movs	r3, #64	@ 0x40
 8006424:	616b      	str	r3, [r5, #20]
 8006426:	2300      	movs	r3, #0
 8006428:	9309      	str	r3, [sp, #36]	@ 0x24
 800642a:	2320      	movs	r3, #32
 800642c:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8006430:	2330      	movs	r3, #48	@ 0x30
 8006432:	f04f 0901 	mov.w	r9, #1
 8006436:	f8cd 800c 	str.w	r8, [sp, #12]
 800643a:	f8df 8198 	ldr.w	r8, [pc, #408]	@ 80065d4 <_svfiprintf_r+0x1e4>
 800643e:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8006442:	4623      	mov	r3, r4
 8006444:	469a      	mov	sl, r3
 8006446:	f813 2b01 	ldrb.w	r2, [r3], #1
 800644a:	b10a      	cbz	r2, 8006450 <_svfiprintf_r+0x60>
 800644c:	2a25      	cmp	r2, #37	@ 0x25
 800644e:	d1f9      	bne.n	8006444 <_svfiprintf_r+0x54>
 8006450:	ebba 0b04 	subs.w	fp, sl, r4
 8006454:	d00b      	beq.n	800646e <_svfiprintf_r+0x7e>
 8006456:	465b      	mov	r3, fp
 8006458:	4622      	mov	r2, r4
 800645a:	4629      	mov	r1, r5
 800645c:	4638      	mov	r0, r7
 800645e:	f7ff ff6c 	bl	800633a <__ssputs_r>
 8006462:	3001      	adds	r0, #1
 8006464:	f000 80a7 	beq.w	80065b6 <_svfiprintf_r+0x1c6>
 8006468:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800646a:	445a      	add	r2, fp
 800646c:	9209      	str	r2, [sp, #36]	@ 0x24
 800646e:	f89a 3000 	ldrb.w	r3, [sl]
 8006472:	2b00      	cmp	r3, #0
 8006474:	f000 809f 	beq.w	80065b6 <_svfiprintf_r+0x1c6>
 8006478:	2300      	movs	r3, #0
 800647a:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 800647e:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8006482:	f10a 0a01 	add.w	sl, sl, #1
 8006486:	9304      	str	r3, [sp, #16]
 8006488:	9307      	str	r3, [sp, #28]
 800648a:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 800648e:	931a      	str	r3, [sp, #104]	@ 0x68
 8006490:	4654      	mov	r4, sl
 8006492:	2205      	movs	r2, #5
 8006494:	f814 1b01 	ldrb.w	r1, [r4], #1
 8006498:	484e      	ldr	r0, [pc, #312]	@ (80065d4 <_svfiprintf_r+0x1e4>)
 800649a:	f7fe fd9e 	bl	8004fda <memchr>
 800649e:	9a04      	ldr	r2, [sp, #16]
 80064a0:	b9d8      	cbnz	r0, 80064da <_svfiprintf_r+0xea>
 80064a2:	06d0      	lsls	r0, r2, #27
 80064a4:	bf44      	itt	mi
 80064a6:	2320      	movmi	r3, #32
 80064a8:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 80064ac:	0711      	lsls	r1, r2, #28
 80064ae:	bf44      	itt	mi
 80064b0:	232b      	movmi	r3, #43	@ 0x2b
 80064b2:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 80064b6:	f89a 3000 	ldrb.w	r3, [sl]
 80064ba:	2b2a      	cmp	r3, #42	@ 0x2a
 80064bc:	d015      	beq.n	80064ea <_svfiprintf_r+0xfa>
 80064be:	4654      	mov	r4, sl
 80064c0:	2000      	movs	r0, #0
 80064c2:	f04f 0c0a 	mov.w	ip, #10
 80064c6:	9a07      	ldr	r2, [sp, #28]
 80064c8:	4621      	mov	r1, r4
 80064ca:	f811 3b01 	ldrb.w	r3, [r1], #1
 80064ce:	3b30      	subs	r3, #48	@ 0x30
 80064d0:	2b09      	cmp	r3, #9
 80064d2:	d94b      	bls.n	800656c <_svfiprintf_r+0x17c>
 80064d4:	b1b0      	cbz	r0, 8006504 <_svfiprintf_r+0x114>
 80064d6:	9207      	str	r2, [sp, #28]
 80064d8:	e014      	b.n	8006504 <_svfiprintf_r+0x114>
 80064da:	eba0 0308 	sub.w	r3, r0, r8
 80064de:	fa09 f303 	lsl.w	r3, r9, r3
 80064e2:	4313      	orrs	r3, r2
 80064e4:	46a2      	mov	sl, r4
 80064e6:	9304      	str	r3, [sp, #16]
 80064e8:	e7d2      	b.n	8006490 <_svfiprintf_r+0xa0>
 80064ea:	9b03      	ldr	r3, [sp, #12]
 80064ec:	1d19      	adds	r1, r3, #4
 80064ee:	681b      	ldr	r3, [r3, #0]
 80064f0:	9103      	str	r1, [sp, #12]
 80064f2:	2b00      	cmp	r3, #0
 80064f4:	bfbb      	ittet	lt
 80064f6:	425b      	neglt	r3, r3
 80064f8:	f042 0202 	orrlt.w	r2, r2, #2
 80064fc:	9307      	strge	r3, [sp, #28]
 80064fe:	9307      	strlt	r3, [sp, #28]
 8006500:	bfb8      	it	lt
 8006502:	9204      	strlt	r2, [sp, #16]
 8006504:	7823      	ldrb	r3, [r4, #0]
 8006506:	2b2e      	cmp	r3, #46	@ 0x2e
 8006508:	d10a      	bne.n	8006520 <_svfiprintf_r+0x130>
 800650a:	7863      	ldrb	r3, [r4, #1]
 800650c:	2b2a      	cmp	r3, #42	@ 0x2a
 800650e:	d132      	bne.n	8006576 <_svfiprintf_r+0x186>
 8006510:	9b03      	ldr	r3, [sp, #12]
 8006512:	3402      	adds	r4, #2
 8006514:	1d1a      	adds	r2, r3, #4
 8006516:	681b      	ldr	r3, [r3, #0]
 8006518:	9203      	str	r2, [sp, #12]
 800651a:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 800651e:	9305      	str	r3, [sp, #20]
 8006520:	f8df a0b4 	ldr.w	sl, [pc, #180]	@ 80065d8 <_svfiprintf_r+0x1e8>
 8006524:	2203      	movs	r2, #3
 8006526:	4650      	mov	r0, sl
 8006528:	7821      	ldrb	r1, [r4, #0]
 800652a:	f7fe fd56 	bl	8004fda <memchr>
 800652e:	b138      	cbz	r0, 8006540 <_svfiprintf_r+0x150>
 8006530:	2240      	movs	r2, #64	@ 0x40
 8006532:	9b04      	ldr	r3, [sp, #16]
 8006534:	eba0 000a 	sub.w	r0, r0, sl
 8006538:	4082      	lsls	r2, r0
 800653a:	4313      	orrs	r3, r2
 800653c:	3401      	adds	r4, #1
 800653e:	9304      	str	r3, [sp, #16]
 8006540:	f814 1b01 	ldrb.w	r1, [r4], #1
 8006544:	2206      	movs	r2, #6
 8006546:	4825      	ldr	r0, [pc, #148]	@ (80065dc <_svfiprintf_r+0x1ec>)
 8006548:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 800654c:	f7fe fd45 	bl	8004fda <memchr>
 8006550:	2800      	cmp	r0, #0
 8006552:	d036      	beq.n	80065c2 <_svfiprintf_r+0x1d2>
 8006554:	4b22      	ldr	r3, [pc, #136]	@ (80065e0 <_svfiprintf_r+0x1f0>)
 8006556:	bb1b      	cbnz	r3, 80065a0 <_svfiprintf_r+0x1b0>
 8006558:	9b03      	ldr	r3, [sp, #12]
 800655a:	3307      	adds	r3, #7
 800655c:	f023 0307 	bic.w	r3, r3, #7
 8006560:	3308      	adds	r3, #8
 8006562:	9303      	str	r3, [sp, #12]
 8006564:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8006566:	4433      	add	r3, r6
 8006568:	9309      	str	r3, [sp, #36]	@ 0x24
 800656a:	e76a      	b.n	8006442 <_svfiprintf_r+0x52>
 800656c:	460c      	mov	r4, r1
 800656e:	2001      	movs	r0, #1
 8006570:	fb0c 3202 	mla	r2, ip, r2, r3
 8006574:	e7a8      	b.n	80064c8 <_svfiprintf_r+0xd8>
 8006576:	2300      	movs	r3, #0
 8006578:	f04f 0c0a 	mov.w	ip, #10
 800657c:	4619      	mov	r1, r3
 800657e:	3401      	adds	r4, #1
 8006580:	9305      	str	r3, [sp, #20]
 8006582:	4620      	mov	r0, r4
 8006584:	f810 2b01 	ldrb.w	r2, [r0], #1
 8006588:	3a30      	subs	r2, #48	@ 0x30
 800658a:	2a09      	cmp	r2, #9
 800658c:	d903      	bls.n	8006596 <_svfiprintf_r+0x1a6>
 800658e:	2b00      	cmp	r3, #0
 8006590:	d0c6      	beq.n	8006520 <_svfiprintf_r+0x130>
 8006592:	9105      	str	r1, [sp, #20]
 8006594:	e7c4      	b.n	8006520 <_svfiprintf_r+0x130>
 8006596:	4604      	mov	r4, r0
 8006598:	2301      	movs	r3, #1
 800659a:	fb0c 2101 	mla	r1, ip, r1, r2
 800659e:	e7f0      	b.n	8006582 <_svfiprintf_r+0x192>
 80065a0:	ab03      	add	r3, sp, #12
 80065a2:	9300      	str	r3, [sp, #0]
 80065a4:	462a      	mov	r2, r5
 80065a6:	4638      	mov	r0, r7
 80065a8:	4b0e      	ldr	r3, [pc, #56]	@ (80065e4 <_svfiprintf_r+0x1f4>)
 80065aa:	a904      	add	r1, sp, #16
 80065ac:	f7fc ff8a 	bl	80034c4 <_printf_float>
 80065b0:	1c42      	adds	r2, r0, #1
 80065b2:	4606      	mov	r6, r0
 80065b4:	d1d6      	bne.n	8006564 <_svfiprintf_r+0x174>
 80065b6:	89ab      	ldrh	r3, [r5, #12]
 80065b8:	065b      	lsls	r3, r3, #25
 80065ba:	f53f af2d 	bmi.w	8006418 <_svfiprintf_r+0x28>
 80065be:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80065c0:	e72c      	b.n	800641c <_svfiprintf_r+0x2c>
 80065c2:	ab03      	add	r3, sp, #12
 80065c4:	9300      	str	r3, [sp, #0]
 80065c6:	462a      	mov	r2, r5
 80065c8:	4638      	mov	r0, r7
 80065ca:	4b06      	ldr	r3, [pc, #24]	@ (80065e4 <_svfiprintf_r+0x1f4>)
 80065cc:	a904      	add	r1, sp, #16
 80065ce:	f7fd fa17 	bl	8003a00 <_printf_i>
 80065d2:	e7ed      	b.n	80065b0 <_svfiprintf_r+0x1c0>
 80065d4:	080096b6 	.word	0x080096b6
 80065d8:	080096bc 	.word	0x080096bc
 80065dc:	080096c0 	.word	0x080096c0
 80065e0:	080034c5 	.word	0x080034c5
 80065e4:	0800633b 	.word	0x0800633b

080065e8 <__sfputc_r>:
 80065e8:	6893      	ldr	r3, [r2, #8]
 80065ea:	b410      	push	{r4}
 80065ec:	3b01      	subs	r3, #1
 80065ee:	2b00      	cmp	r3, #0
 80065f0:	6093      	str	r3, [r2, #8]
 80065f2:	da07      	bge.n	8006604 <__sfputc_r+0x1c>
 80065f4:	6994      	ldr	r4, [r2, #24]
 80065f6:	42a3      	cmp	r3, r4
 80065f8:	db01      	blt.n	80065fe <__sfputc_r+0x16>
 80065fa:	290a      	cmp	r1, #10
 80065fc:	d102      	bne.n	8006604 <__sfputc_r+0x1c>
 80065fe:	bc10      	pop	{r4}
 8006600:	f000 bfb9 	b.w	8007576 <__swbuf_r>
 8006604:	6813      	ldr	r3, [r2, #0]
 8006606:	1c58      	adds	r0, r3, #1
 8006608:	6010      	str	r0, [r2, #0]
 800660a:	7019      	strb	r1, [r3, #0]
 800660c:	4608      	mov	r0, r1
 800660e:	bc10      	pop	{r4}
 8006610:	4770      	bx	lr

08006612 <__sfputs_r>:
 8006612:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006614:	4606      	mov	r6, r0
 8006616:	460f      	mov	r7, r1
 8006618:	4614      	mov	r4, r2
 800661a:	18d5      	adds	r5, r2, r3
 800661c:	42ac      	cmp	r4, r5
 800661e:	d101      	bne.n	8006624 <__sfputs_r+0x12>
 8006620:	2000      	movs	r0, #0
 8006622:	e007      	b.n	8006634 <__sfputs_r+0x22>
 8006624:	463a      	mov	r2, r7
 8006626:	4630      	mov	r0, r6
 8006628:	f814 1b01 	ldrb.w	r1, [r4], #1
 800662c:	f7ff ffdc 	bl	80065e8 <__sfputc_r>
 8006630:	1c43      	adds	r3, r0, #1
 8006632:	d1f3      	bne.n	800661c <__sfputs_r+0xa>
 8006634:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08006638 <_vfiprintf_r>:
 8006638:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800663c:	460d      	mov	r5, r1
 800663e:	4614      	mov	r4, r2
 8006640:	4698      	mov	r8, r3
 8006642:	4606      	mov	r6, r0
 8006644:	b09d      	sub	sp, #116	@ 0x74
 8006646:	b118      	cbz	r0, 8006650 <_vfiprintf_r+0x18>
 8006648:	6a03      	ldr	r3, [r0, #32]
 800664a:	b90b      	cbnz	r3, 8006650 <_vfiprintf_r+0x18>
 800664c:	f7fd fdb4 	bl	80041b8 <__sinit>
 8006650:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8006652:	07d9      	lsls	r1, r3, #31
 8006654:	d405      	bmi.n	8006662 <_vfiprintf_r+0x2a>
 8006656:	89ab      	ldrh	r3, [r5, #12]
 8006658:	059a      	lsls	r2, r3, #22
 800665a:	d402      	bmi.n	8006662 <_vfiprintf_r+0x2a>
 800665c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800665e:	f7fe fcba 	bl	8004fd6 <__retarget_lock_acquire_recursive>
 8006662:	89ab      	ldrh	r3, [r5, #12]
 8006664:	071b      	lsls	r3, r3, #28
 8006666:	d501      	bpl.n	800666c <_vfiprintf_r+0x34>
 8006668:	692b      	ldr	r3, [r5, #16]
 800666a:	b99b      	cbnz	r3, 8006694 <_vfiprintf_r+0x5c>
 800666c:	4629      	mov	r1, r5
 800666e:	4630      	mov	r0, r6
 8006670:	f000 ffc0 	bl	80075f4 <__swsetup_r>
 8006674:	b170      	cbz	r0, 8006694 <_vfiprintf_r+0x5c>
 8006676:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8006678:	07dc      	lsls	r4, r3, #31
 800667a:	d504      	bpl.n	8006686 <_vfiprintf_r+0x4e>
 800667c:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8006680:	b01d      	add	sp, #116	@ 0x74
 8006682:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006686:	89ab      	ldrh	r3, [r5, #12]
 8006688:	0598      	lsls	r0, r3, #22
 800668a:	d4f7      	bmi.n	800667c <_vfiprintf_r+0x44>
 800668c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800668e:	f7fe fca3 	bl	8004fd8 <__retarget_lock_release_recursive>
 8006692:	e7f3      	b.n	800667c <_vfiprintf_r+0x44>
 8006694:	2300      	movs	r3, #0
 8006696:	9309      	str	r3, [sp, #36]	@ 0x24
 8006698:	2320      	movs	r3, #32
 800669a:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 800669e:	2330      	movs	r3, #48	@ 0x30
 80066a0:	f04f 0901 	mov.w	r9, #1
 80066a4:	f8cd 800c 	str.w	r8, [sp, #12]
 80066a8:	f8df 81a8 	ldr.w	r8, [pc, #424]	@ 8006854 <_vfiprintf_r+0x21c>
 80066ac:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 80066b0:	4623      	mov	r3, r4
 80066b2:	469a      	mov	sl, r3
 80066b4:	f813 2b01 	ldrb.w	r2, [r3], #1
 80066b8:	b10a      	cbz	r2, 80066be <_vfiprintf_r+0x86>
 80066ba:	2a25      	cmp	r2, #37	@ 0x25
 80066bc:	d1f9      	bne.n	80066b2 <_vfiprintf_r+0x7a>
 80066be:	ebba 0b04 	subs.w	fp, sl, r4
 80066c2:	d00b      	beq.n	80066dc <_vfiprintf_r+0xa4>
 80066c4:	465b      	mov	r3, fp
 80066c6:	4622      	mov	r2, r4
 80066c8:	4629      	mov	r1, r5
 80066ca:	4630      	mov	r0, r6
 80066cc:	f7ff ffa1 	bl	8006612 <__sfputs_r>
 80066d0:	3001      	adds	r0, #1
 80066d2:	f000 80a7 	beq.w	8006824 <_vfiprintf_r+0x1ec>
 80066d6:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80066d8:	445a      	add	r2, fp
 80066da:	9209      	str	r2, [sp, #36]	@ 0x24
 80066dc:	f89a 3000 	ldrb.w	r3, [sl]
 80066e0:	2b00      	cmp	r3, #0
 80066e2:	f000 809f 	beq.w	8006824 <_vfiprintf_r+0x1ec>
 80066e6:	2300      	movs	r3, #0
 80066e8:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 80066ec:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80066f0:	f10a 0a01 	add.w	sl, sl, #1
 80066f4:	9304      	str	r3, [sp, #16]
 80066f6:	9307      	str	r3, [sp, #28]
 80066f8:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 80066fc:	931a      	str	r3, [sp, #104]	@ 0x68
 80066fe:	4654      	mov	r4, sl
 8006700:	2205      	movs	r2, #5
 8006702:	f814 1b01 	ldrb.w	r1, [r4], #1
 8006706:	4853      	ldr	r0, [pc, #332]	@ (8006854 <_vfiprintf_r+0x21c>)
 8006708:	f7fe fc67 	bl	8004fda <memchr>
 800670c:	9a04      	ldr	r2, [sp, #16]
 800670e:	b9d8      	cbnz	r0, 8006748 <_vfiprintf_r+0x110>
 8006710:	06d1      	lsls	r1, r2, #27
 8006712:	bf44      	itt	mi
 8006714:	2320      	movmi	r3, #32
 8006716:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 800671a:	0713      	lsls	r3, r2, #28
 800671c:	bf44      	itt	mi
 800671e:	232b      	movmi	r3, #43	@ 0x2b
 8006720:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8006724:	f89a 3000 	ldrb.w	r3, [sl]
 8006728:	2b2a      	cmp	r3, #42	@ 0x2a
 800672a:	d015      	beq.n	8006758 <_vfiprintf_r+0x120>
 800672c:	4654      	mov	r4, sl
 800672e:	2000      	movs	r0, #0
 8006730:	f04f 0c0a 	mov.w	ip, #10
 8006734:	9a07      	ldr	r2, [sp, #28]
 8006736:	4621      	mov	r1, r4
 8006738:	f811 3b01 	ldrb.w	r3, [r1], #1
 800673c:	3b30      	subs	r3, #48	@ 0x30
 800673e:	2b09      	cmp	r3, #9
 8006740:	d94b      	bls.n	80067da <_vfiprintf_r+0x1a2>
 8006742:	b1b0      	cbz	r0, 8006772 <_vfiprintf_r+0x13a>
 8006744:	9207      	str	r2, [sp, #28]
 8006746:	e014      	b.n	8006772 <_vfiprintf_r+0x13a>
 8006748:	eba0 0308 	sub.w	r3, r0, r8
 800674c:	fa09 f303 	lsl.w	r3, r9, r3
 8006750:	4313      	orrs	r3, r2
 8006752:	46a2      	mov	sl, r4
 8006754:	9304      	str	r3, [sp, #16]
 8006756:	e7d2      	b.n	80066fe <_vfiprintf_r+0xc6>
 8006758:	9b03      	ldr	r3, [sp, #12]
 800675a:	1d19      	adds	r1, r3, #4
 800675c:	681b      	ldr	r3, [r3, #0]
 800675e:	9103      	str	r1, [sp, #12]
 8006760:	2b00      	cmp	r3, #0
 8006762:	bfbb      	ittet	lt
 8006764:	425b      	neglt	r3, r3
 8006766:	f042 0202 	orrlt.w	r2, r2, #2
 800676a:	9307      	strge	r3, [sp, #28]
 800676c:	9307      	strlt	r3, [sp, #28]
 800676e:	bfb8      	it	lt
 8006770:	9204      	strlt	r2, [sp, #16]
 8006772:	7823      	ldrb	r3, [r4, #0]
 8006774:	2b2e      	cmp	r3, #46	@ 0x2e
 8006776:	d10a      	bne.n	800678e <_vfiprintf_r+0x156>
 8006778:	7863      	ldrb	r3, [r4, #1]
 800677a:	2b2a      	cmp	r3, #42	@ 0x2a
 800677c:	d132      	bne.n	80067e4 <_vfiprintf_r+0x1ac>
 800677e:	9b03      	ldr	r3, [sp, #12]
 8006780:	3402      	adds	r4, #2
 8006782:	1d1a      	adds	r2, r3, #4
 8006784:	681b      	ldr	r3, [r3, #0]
 8006786:	9203      	str	r2, [sp, #12]
 8006788:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 800678c:	9305      	str	r3, [sp, #20]
 800678e:	f8df a0c8 	ldr.w	sl, [pc, #200]	@ 8006858 <_vfiprintf_r+0x220>
 8006792:	2203      	movs	r2, #3
 8006794:	4650      	mov	r0, sl
 8006796:	7821      	ldrb	r1, [r4, #0]
 8006798:	f7fe fc1f 	bl	8004fda <memchr>
 800679c:	b138      	cbz	r0, 80067ae <_vfiprintf_r+0x176>
 800679e:	2240      	movs	r2, #64	@ 0x40
 80067a0:	9b04      	ldr	r3, [sp, #16]
 80067a2:	eba0 000a 	sub.w	r0, r0, sl
 80067a6:	4082      	lsls	r2, r0
 80067a8:	4313      	orrs	r3, r2
 80067aa:	3401      	adds	r4, #1
 80067ac:	9304      	str	r3, [sp, #16]
 80067ae:	f814 1b01 	ldrb.w	r1, [r4], #1
 80067b2:	2206      	movs	r2, #6
 80067b4:	4829      	ldr	r0, [pc, #164]	@ (800685c <_vfiprintf_r+0x224>)
 80067b6:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 80067ba:	f7fe fc0e 	bl	8004fda <memchr>
 80067be:	2800      	cmp	r0, #0
 80067c0:	d03f      	beq.n	8006842 <_vfiprintf_r+0x20a>
 80067c2:	4b27      	ldr	r3, [pc, #156]	@ (8006860 <_vfiprintf_r+0x228>)
 80067c4:	bb1b      	cbnz	r3, 800680e <_vfiprintf_r+0x1d6>
 80067c6:	9b03      	ldr	r3, [sp, #12]
 80067c8:	3307      	adds	r3, #7
 80067ca:	f023 0307 	bic.w	r3, r3, #7
 80067ce:	3308      	adds	r3, #8
 80067d0:	9303      	str	r3, [sp, #12]
 80067d2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80067d4:	443b      	add	r3, r7
 80067d6:	9309      	str	r3, [sp, #36]	@ 0x24
 80067d8:	e76a      	b.n	80066b0 <_vfiprintf_r+0x78>
 80067da:	460c      	mov	r4, r1
 80067dc:	2001      	movs	r0, #1
 80067de:	fb0c 3202 	mla	r2, ip, r2, r3
 80067e2:	e7a8      	b.n	8006736 <_vfiprintf_r+0xfe>
 80067e4:	2300      	movs	r3, #0
 80067e6:	f04f 0c0a 	mov.w	ip, #10
 80067ea:	4619      	mov	r1, r3
 80067ec:	3401      	adds	r4, #1
 80067ee:	9305      	str	r3, [sp, #20]
 80067f0:	4620      	mov	r0, r4
 80067f2:	f810 2b01 	ldrb.w	r2, [r0], #1
 80067f6:	3a30      	subs	r2, #48	@ 0x30
 80067f8:	2a09      	cmp	r2, #9
 80067fa:	d903      	bls.n	8006804 <_vfiprintf_r+0x1cc>
 80067fc:	2b00      	cmp	r3, #0
 80067fe:	d0c6      	beq.n	800678e <_vfiprintf_r+0x156>
 8006800:	9105      	str	r1, [sp, #20]
 8006802:	e7c4      	b.n	800678e <_vfiprintf_r+0x156>
 8006804:	4604      	mov	r4, r0
 8006806:	2301      	movs	r3, #1
 8006808:	fb0c 2101 	mla	r1, ip, r1, r2
 800680c:	e7f0      	b.n	80067f0 <_vfiprintf_r+0x1b8>
 800680e:	ab03      	add	r3, sp, #12
 8006810:	9300      	str	r3, [sp, #0]
 8006812:	462a      	mov	r2, r5
 8006814:	4630      	mov	r0, r6
 8006816:	4b13      	ldr	r3, [pc, #76]	@ (8006864 <_vfiprintf_r+0x22c>)
 8006818:	a904      	add	r1, sp, #16
 800681a:	f7fc fe53 	bl	80034c4 <_printf_float>
 800681e:	4607      	mov	r7, r0
 8006820:	1c78      	adds	r0, r7, #1
 8006822:	d1d6      	bne.n	80067d2 <_vfiprintf_r+0x19a>
 8006824:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8006826:	07d9      	lsls	r1, r3, #31
 8006828:	d405      	bmi.n	8006836 <_vfiprintf_r+0x1fe>
 800682a:	89ab      	ldrh	r3, [r5, #12]
 800682c:	059a      	lsls	r2, r3, #22
 800682e:	d402      	bmi.n	8006836 <_vfiprintf_r+0x1fe>
 8006830:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8006832:	f7fe fbd1 	bl	8004fd8 <__retarget_lock_release_recursive>
 8006836:	89ab      	ldrh	r3, [r5, #12]
 8006838:	065b      	lsls	r3, r3, #25
 800683a:	f53f af1f 	bmi.w	800667c <_vfiprintf_r+0x44>
 800683e:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8006840:	e71e      	b.n	8006680 <_vfiprintf_r+0x48>
 8006842:	ab03      	add	r3, sp, #12
 8006844:	9300      	str	r3, [sp, #0]
 8006846:	462a      	mov	r2, r5
 8006848:	4630      	mov	r0, r6
 800684a:	4b06      	ldr	r3, [pc, #24]	@ (8006864 <_vfiprintf_r+0x22c>)
 800684c:	a904      	add	r1, sp, #16
 800684e:	f7fd f8d7 	bl	8003a00 <_printf_i>
 8006852:	e7e4      	b.n	800681e <_vfiprintf_r+0x1e6>
 8006854:	080096b6 	.word	0x080096b6
 8006858:	080096bc 	.word	0x080096bc
 800685c:	080096c0 	.word	0x080096c0
 8006860:	080034c5 	.word	0x080034c5
 8006864:	08006613 	.word	0x08006613

08006868 <malloc>:
 8006868:	4b02      	ldr	r3, [pc, #8]	@ (8006874 <malloc+0xc>)
 800686a:	4601      	mov	r1, r0
 800686c:	6818      	ldr	r0, [r3, #0]
 800686e:	f000 b825 	b.w	80068bc <_malloc_r>
 8006872:	bf00      	nop
 8006874:	20000178 	.word	0x20000178

08006878 <sbrk_aligned>:
 8006878:	b570      	push	{r4, r5, r6, lr}
 800687a:	4e0f      	ldr	r6, [pc, #60]	@ (80068b8 <sbrk_aligned+0x40>)
 800687c:	460c      	mov	r4, r1
 800687e:	6831      	ldr	r1, [r6, #0]
 8006880:	4605      	mov	r5, r0
 8006882:	b911      	cbnz	r1, 800688a <sbrk_aligned+0x12>
 8006884:	f000 ffea 	bl	800785c <_sbrk_r>
 8006888:	6030      	str	r0, [r6, #0]
 800688a:	4621      	mov	r1, r4
 800688c:	4628      	mov	r0, r5
 800688e:	f000 ffe5 	bl	800785c <_sbrk_r>
 8006892:	1c43      	adds	r3, r0, #1
 8006894:	d103      	bne.n	800689e <sbrk_aligned+0x26>
 8006896:	f04f 34ff 	mov.w	r4, #4294967295	@ 0xffffffff
 800689a:	4620      	mov	r0, r4
 800689c:	bd70      	pop	{r4, r5, r6, pc}
 800689e:	1cc4      	adds	r4, r0, #3
 80068a0:	f024 0403 	bic.w	r4, r4, #3
 80068a4:	42a0      	cmp	r0, r4
 80068a6:	d0f8      	beq.n	800689a <sbrk_aligned+0x22>
 80068a8:	1a21      	subs	r1, r4, r0
 80068aa:	4628      	mov	r0, r5
 80068ac:	f000 ffd6 	bl	800785c <_sbrk_r>
 80068b0:	3001      	adds	r0, #1
 80068b2:	d1f2      	bne.n	800689a <sbrk_aligned+0x22>
 80068b4:	e7ef      	b.n	8006896 <sbrk_aligned+0x1e>
 80068b6:	bf00      	nop
 80068b8:	200003e8 	.word	0x200003e8

080068bc <_malloc_r>:
 80068bc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80068c0:	1ccd      	adds	r5, r1, #3
 80068c2:	f025 0503 	bic.w	r5, r5, #3
 80068c6:	3508      	adds	r5, #8
 80068c8:	2d0c      	cmp	r5, #12
 80068ca:	bf38      	it	cc
 80068cc:	250c      	movcc	r5, #12
 80068ce:	2d00      	cmp	r5, #0
 80068d0:	4606      	mov	r6, r0
 80068d2:	db01      	blt.n	80068d8 <_malloc_r+0x1c>
 80068d4:	42a9      	cmp	r1, r5
 80068d6:	d904      	bls.n	80068e2 <_malloc_r+0x26>
 80068d8:	230c      	movs	r3, #12
 80068da:	6033      	str	r3, [r6, #0]
 80068dc:	2000      	movs	r0, #0
 80068de:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80068e2:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 80069b8 <_malloc_r+0xfc>
 80068e6:	f000 f923 	bl	8006b30 <__malloc_lock>
 80068ea:	f8d8 3000 	ldr.w	r3, [r8]
 80068ee:	461c      	mov	r4, r3
 80068f0:	bb44      	cbnz	r4, 8006944 <_malloc_r+0x88>
 80068f2:	4629      	mov	r1, r5
 80068f4:	4630      	mov	r0, r6
 80068f6:	f7ff ffbf 	bl	8006878 <sbrk_aligned>
 80068fa:	1c43      	adds	r3, r0, #1
 80068fc:	4604      	mov	r4, r0
 80068fe:	d158      	bne.n	80069b2 <_malloc_r+0xf6>
 8006900:	f8d8 4000 	ldr.w	r4, [r8]
 8006904:	4627      	mov	r7, r4
 8006906:	2f00      	cmp	r7, #0
 8006908:	d143      	bne.n	8006992 <_malloc_r+0xd6>
 800690a:	2c00      	cmp	r4, #0
 800690c:	d04b      	beq.n	80069a6 <_malloc_r+0xea>
 800690e:	6823      	ldr	r3, [r4, #0]
 8006910:	4639      	mov	r1, r7
 8006912:	4630      	mov	r0, r6
 8006914:	eb04 0903 	add.w	r9, r4, r3
 8006918:	f000 ffa0 	bl	800785c <_sbrk_r>
 800691c:	4581      	cmp	r9, r0
 800691e:	d142      	bne.n	80069a6 <_malloc_r+0xea>
 8006920:	6821      	ldr	r1, [r4, #0]
 8006922:	4630      	mov	r0, r6
 8006924:	1a6d      	subs	r5, r5, r1
 8006926:	4629      	mov	r1, r5
 8006928:	f7ff ffa6 	bl	8006878 <sbrk_aligned>
 800692c:	3001      	adds	r0, #1
 800692e:	d03a      	beq.n	80069a6 <_malloc_r+0xea>
 8006930:	6823      	ldr	r3, [r4, #0]
 8006932:	442b      	add	r3, r5
 8006934:	6023      	str	r3, [r4, #0]
 8006936:	f8d8 3000 	ldr.w	r3, [r8]
 800693a:	685a      	ldr	r2, [r3, #4]
 800693c:	bb62      	cbnz	r2, 8006998 <_malloc_r+0xdc>
 800693e:	f8c8 7000 	str.w	r7, [r8]
 8006942:	e00f      	b.n	8006964 <_malloc_r+0xa8>
 8006944:	6822      	ldr	r2, [r4, #0]
 8006946:	1b52      	subs	r2, r2, r5
 8006948:	d420      	bmi.n	800698c <_malloc_r+0xd0>
 800694a:	2a0b      	cmp	r2, #11
 800694c:	d917      	bls.n	800697e <_malloc_r+0xc2>
 800694e:	1961      	adds	r1, r4, r5
 8006950:	42a3      	cmp	r3, r4
 8006952:	6025      	str	r5, [r4, #0]
 8006954:	bf18      	it	ne
 8006956:	6059      	strne	r1, [r3, #4]
 8006958:	6863      	ldr	r3, [r4, #4]
 800695a:	bf08      	it	eq
 800695c:	f8c8 1000 	streq.w	r1, [r8]
 8006960:	5162      	str	r2, [r4, r5]
 8006962:	604b      	str	r3, [r1, #4]
 8006964:	4630      	mov	r0, r6
 8006966:	f000 f8e9 	bl	8006b3c <__malloc_unlock>
 800696a:	f104 000b 	add.w	r0, r4, #11
 800696e:	1d23      	adds	r3, r4, #4
 8006970:	f020 0007 	bic.w	r0, r0, #7
 8006974:	1ac2      	subs	r2, r0, r3
 8006976:	bf1c      	itt	ne
 8006978:	1a1b      	subne	r3, r3, r0
 800697a:	50a3      	strne	r3, [r4, r2]
 800697c:	e7af      	b.n	80068de <_malloc_r+0x22>
 800697e:	6862      	ldr	r2, [r4, #4]
 8006980:	42a3      	cmp	r3, r4
 8006982:	bf0c      	ite	eq
 8006984:	f8c8 2000 	streq.w	r2, [r8]
 8006988:	605a      	strne	r2, [r3, #4]
 800698a:	e7eb      	b.n	8006964 <_malloc_r+0xa8>
 800698c:	4623      	mov	r3, r4
 800698e:	6864      	ldr	r4, [r4, #4]
 8006990:	e7ae      	b.n	80068f0 <_malloc_r+0x34>
 8006992:	463c      	mov	r4, r7
 8006994:	687f      	ldr	r7, [r7, #4]
 8006996:	e7b6      	b.n	8006906 <_malloc_r+0x4a>
 8006998:	461a      	mov	r2, r3
 800699a:	685b      	ldr	r3, [r3, #4]
 800699c:	42a3      	cmp	r3, r4
 800699e:	d1fb      	bne.n	8006998 <_malloc_r+0xdc>
 80069a0:	2300      	movs	r3, #0
 80069a2:	6053      	str	r3, [r2, #4]
 80069a4:	e7de      	b.n	8006964 <_malloc_r+0xa8>
 80069a6:	230c      	movs	r3, #12
 80069a8:	4630      	mov	r0, r6
 80069aa:	6033      	str	r3, [r6, #0]
 80069ac:	f000 f8c6 	bl	8006b3c <__malloc_unlock>
 80069b0:	e794      	b.n	80068dc <_malloc_r+0x20>
 80069b2:	6005      	str	r5, [r0, #0]
 80069b4:	e7d6      	b.n	8006964 <_malloc_r+0xa8>
 80069b6:	bf00      	nop
 80069b8:	200003ec 	.word	0x200003ec

080069bc <__ascii_mbtowc>:
 80069bc:	b082      	sub	sp, #8
 80069be:	b901      	cbnz	r1, 80069c2 <__ascii_mbtowc+0x6>
 80069c0:	a901      	add	r1, sp, #4
 80069c2:	b142      	cbz	r2, 80069d6 <__ascii_mbtowc+0x1a>
 80069c4:	b14b      	cbz	r3, 80069da <__ascii_mbtowc+0x1e>
 80069c6:	7813      	ldrb	r3, [r2, #0]
 80069c8:	600b      	str	r3, [r1, #0]
 80069ca:	7812      	ldrb	r2, [r2, #0]
 80069cc:	1e10      	subs	r0, r2, #0
 80069ce:	bf18      	it	ne
 80069d0:	2001      	movne	r0, #1
 80069d2:	b002      	add	sp, #8
 80069d4:	4770      	bx	lr
 80069d6:	4610      	mov	r0, r2
 80069d8:	e7fb      	b.n	80069d2 <__ascii_mbtowc+0x16>
 80069da:	f06f 0001 	mvn.w	r0, #1
 80069de:	e7f8      	b.n	80069d2 <__ascii_mbtowc+0x16>

080069e0 <__sflush_r>:
 80069e0:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 80069e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80069e6:	0716      	lsls	r6, r2, #28
 80069e8:	4605      	mov	r5, r0
 80069ea:	460c      	mov	r4, r1
 80069ec:	d454      	bmi.n	8006a98 <__sflush_r+0xb8>
 80069ee:	684b      	ldr	r3, [r1, #4]
 80069f0:	2b00      	cmp	r3, #0
 80069f2:	dc02      	bgt.n	80069fa <__sflush_r+0x1a>
 80069f4:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 80069f6:	2b00      	cmp	r3, #0
 80069f8:	dd48      	ble.n	8006a8c <__sflush_r+0xac>
 80069fa:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 80069fc:	2e00      	cmp	r6, #0
 80069fe:	d045      	beq.n	8006a8c <__sflush_r+0xac>
 8006a00:	2300      	movs	r3, #0
 8006a02:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8006a06:	682f      	ldr	r7, [r5, #0]
 8006a08:	6a21      	ldr	r1, [r4, #32]
 8006a0a:	602b      	str	r3, [r5, #0]
 8006a0c:	d030      	beq.n	8006a70 <__sflush_r+0x90>
 8006a0e:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8006a10:	89a3      	ldrh	r3, [r4, #12]
 8006a12:	0759      	lsls	r1, r3, #29
 8006a14:	d505      	bpl.n	8006a22 <__sflush_r+0x42>
 8006a16:	6863      	ldr	r3, [r4, #4]
 8006a18:	1ad2      	subs	r2, r2, r3
 8006a1a:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8006a1c:	b10b      	cbz	r3, 8006a22 <__sflush_r+0x42>
 8006a1e:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8006a20:	1ad2      	subs	r2, r2, r3
 8006a22:	2300      	movs	r3, #0
 8006a24:	4628      	mov	r0, r5
 8006a26:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8006a28:	6a21      	ldr	r1, [r4, #32]
 8006a2a:	47b0      	blx	r6
 8006a2c:	1c43      	adds	r3, r0, #1
 8006a2e:	89a3      	ldrh	r3, [r4, #12]
 8006a30:	d106      	bne.n	8006a40 <__sflush_r+0x60>
 8006a32:	6829      	ldr	r1, [r5, #0]
 8006a34:	291d      	cmp	r1, #29
 8006a36:	d82b      	bhi.n	8006a90 <__sflush_r+0xb0>
 8006a38:	4a28      	ldr	r2, [pc, #160]	@ (8006adc <__sflush_r+0xfc>)
 8006a3a:	410a      	asrs	r2, r1
 8006a3c:	07d6      	lsls	r6, r2, #31
 8006a3e:	d427      	bmi.n	8006a90 <__sflush_r+0xb0>
 8006a40:	2200      	movs	r2, #0
 8006a42:	6062      	str	r2, [r4, #4]
 8006a44:	6922      	ldr	r2, [r4, #16]
 8006a46:	04d9      	lsls	r1, r3, #19
 8006a48:	6022      	str	r2, [r4, #0]
 8006a4a:	d504      	bpl.n	8006a56 <__sflush_r+0x76>
 8006a4c:	1c42      	adds	r2, r0, #1
 8006a4e:	d101      	bne.n	8006a54 <__sflush_r+0x74>
 8006a50:	682b      	ldr	r3, [r5, #0]
 8006a52:	b903      	cbnz	r3, 8006a56 <__sflush_r+0x76>
 8006a54:	6560      	str	r0, [r4, #84]	@ 0x54
 8006a56:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8006a58:	602f      	str	r7, [r5, #0]
 8006a5a:	b1b9      	cbz	r1, 8006a8c <__sflush_r+0xac>
 8006a5c:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8006a60:	4299      	cmp	r1, r3
 8006a62:	d002      	beq.n	8006a6a <__sflush_r+0x8a>
 8006a64:	4628      	mov	r0, r5
 8006a66:	f000 ff4d 	bl	8007904 <_free_r>
 8006a6a:	2300      	movs	r3, #0
 8006a6c:	6363      	str	r3, [r4, #52]	@ 0x34
 8006a6e:	e00d      	b.n	8006a8c <__sflush_r+0xac>
 8006a70:	2301      	movs	r3, #1
 8006a72:	4628      	mov	r0, r5
 8006a74:	47b0      	blx	r6
 8006a76:	4602      	mov	r2, r0
 8006a78:	1c50      	adds	r0, r2, #1
 8006a7a:	d1c9      	bne.n	8006a10 <__sflush_r+0x30>
 8006a7c:	682b      	ldr	r3, [r5, #0]
 8006a7e:	2b00      	cmp	r3, #0
 8006a80:	d0c6      	beq.n	8006a10 <__sflush_r+0x30>
 8006a82:	2b1d      	cmp	r3, #29
 8006a84:	d001      	beq.n	8006a8a <__sflush_r+0xaa>
 8006a86:	2b16      	cmp	r3, #22
 8006a88:	d11d      	bne.n	8006ac6 <__sflush_r+0xe6>
 8006a8a:	602f      	str	r7, [r5, #0]
 8006a8c:	2000      	movs	r0, #0
 8006a8e:	e021      	b.n	8006ad4 <__sflush_r+0xf4>
 8006a90:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8006a94:	b21b      	sxth	r3, r3
 8006a96:	e01a      	b.n	8006ace <__sflush_r+0xee>
 8006a98:	690f      	ldr	r7, [r1, #16]
 8006a9a:	2f00      	cmp	r7, #0
 8006a9c:	d0f6      	beq.n	8006a8c <__sflush_r+0xac>
 8006a9e:	0793      	lsls	r3, r2, #30
 8006aa0:	bf18      	it	ne
 8006aa2:	2300      	movne	r3, #0
 8006aa4:	680e      	ldr	r6, [r1, #0]
 8006aa6:	bf08      	it	eq
 8006aa8:	694b      	ldreq	r3, [r1, #20]
 8006aaa:	1bf6      	subs	r6, r6, r7
 8006aac:	600f      	str	r7, [r1, #0]
 8006aae:	608b      	str	r3, [r1, #8]
 8006ab0:	2e00      	cmp	r6, #0
 8006ab2:	ddeb      	ble.n	8006a8c <__sflush_r+0xac>
 8006ab4:	4633      	mov	r3, r6
 8006ab6:	463a      	mov	r2, r7
 8006ab8:	4628      	mov	r0, r5
 8006aba:	6a21      	ldr	r1, [r4, #32]
 8006abc:	f8d4 c028 	ldr.w	ip, [r4, #40]	@ 0x28
 8006ac0:	47e0      	blx	ip
 8006ac2:	2800      	cmp	r0, #0
 8006ac4:	dc07      	bgt.n	8006ad6 <__sflush_r+0xf6>
 8006ac6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8006aca:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8006ace:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8006ad2:	81a3      	strh	r3, [r4, #12]
 8006ad4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8006ad6:	4407      	add	r7, r0
 8006ad8:	1a36      	subs	r6, r6, r0
 8006ada:	e7e9      	b.n	8006ab0 <__sflush_r+0xd0>
 8006adc:	dfbffffe 	.word	0xdfbffffe

08006ae0 <_fflush_r>:
 8006ae0:	b538      	push	{r3, r4, r5, lr}
 8006ae2:	690b      	ldr	r3, [r1, #16]
 8006ae4:	4605      	mov	r5, r0
 8006ae6:	460c      	mov	r4, r1
 8006ae8:	b913      	cbnz	r3, 8006af0 <_fflush_r+0x10>
 8006aea:	2500      	movs	r5, #0
 8006aec:	4628      	mov	r0, r5
 8006aee:	bd38      	pop	{r3, r4, r5, pc}
 8006af0:	b118      	cbz	r0, 8006afa <_fflush_r+0x1a>
 8006af2:	6a03      	ldr	r3, [r0, #32]
 8006af4:	b90b      	cbnz	r3, 8006afa <_fflush_r+0x1a>
 8006af6:	f7fd fb5f 	bl	80041b8 <__sinit>
 8006afa:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8006afe:	2b00      	cmp	r3, #0
 8006b00:	d0f3      	beq.n	8006aea <_fflush_r+0xa>
 8006b02:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8006b04:	07d0      	lsls	r0, r2, #31
 8006b06:	d404      	bmi.n	8006b12 <_fflush_r+0x32>
 8006b08:	0599      	lsls	r1, r3, #22
 8006b0a:	d402      	bmi.n	8006b12 <_fflush_r+0x32>
 8006b0c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8006b0e:	f7fe fa62 	bl	8004fd6 <__retarget_lock_acquire_recursive>
 8006b12:	4628      	mov	r0, r5
 8006b14:	4621      	mov	r1, r4
 8006b16:	f7ff ff63 	bl	80069e0 <__sflush_r>
 8006b1a:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8006b1c:	4605      	mov	r5, r0
 8006b1e:	07da      	lsls	r2, r3, #31
 8006b20:	d4e4      	bmi.n	8006aec <_fflush_r+0xc>
 8006b22:	89a3      	ldrh	r3, [r4, #12]
 8006b24:	059b      	lsls	r3, r3, #22
 8006b26:	d4e1      	bmi.n	8006aec <_fflush_r+0xc>
 8006b28:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8006b2a:	f7fe fa55 	bl	8004fd8 <__retarget_lock_release_recursive>
 8006b2e:	e7dd      	b.n	8006aec <_fflush_r+0xc>

08006b30 <__malloc_lock>:
 8006b30:	4801      	ldr	r0, [pc, #4]	@ (8006b38 <__malloc_lock+0x8>)
 8006b32:	f7fe ba50 	b.w	8004fd6 <__retarget_lock_acquire_recursive>
 8006b36:	bf00      	nop
 8006b38:	200003e4 	.word	0x200003e4

08006b3c <__malloc_unlock>:
 8006b3c:	4801      	ldr	r0, [pc, #4]	@ (8006b44 <__malloc_unlock+0x8>)
 8006b3e:	f7fe ba4b 	b.w	8004fd8 <__retarget_lock_release_recursive>
 8006b42:	bf00      	nop
 8006b44:	200003e4 	.word	0x200003e4

08006b48 <_Balloc>:
 8006b48:	b570      	push	{r4, r5, r6, lr}
 8006b4a:	69c6      	ldr	r6, [r0, #28]
 8006b4c:	4604      	mov	r4, r0
 8006b4e:	460d      	mov	r5, r1
 8006b50:	b976      	cbnz	r6, 8006b70 <_Balloc+0x28>
 8006b52:	2010      	movs	r0, #16
 8006b54:	f7ff fe88 	bl	8006868 <malloc>
 8006b58:	4602      	mov	r2, r0
 8006b5a:	61e0      	str	r0, [r4, #28]
 8006b5c:	b920      	cbnz	r0, 8006b68 <_Balloc+0x20>
 8006b5e:	216b      	movs	r1, #107	@ 0x6b
 8006b60:	4b17      	ldr	r3, [pc, #92]	@ (8006bc0 <_Balloc+0x78>)
 8006b62:	4818      	ldr	r0, [pc, #96]	@ (8006bc4 <_Balloc+0x7c>)
 8006b64:	f000 fe9c 	bl	80078a0 <__assert_func>
 8006b68:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8006b6c:	6006      	str	r6, [r0, #0]
 8006b6e:	60c6      	str	r6, [r0, #12]
 8006b70:	69e6      	ldr	r6, [r4, #28]
 8006b72:	68f3      	ldr	r3, [r6, #12]
 8006b74:	b183      	cbz	r3, 8006b98 <_Balloc+0x50>
 8006b76:	69e3      	ldr	r3, [r4, #28]
 8006b78:	68db      	ldr	r3, [r3, #12]
 8006b7a:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8006b7e:	b9b8      	cbnz	r0, 8006bb0 <_Balloc+0x68>
 8006b80:	2101      	movs	r1, #1
 8006b82:	fa01 f605 	lsl.w	r6, r1, r5
 8006b86:	1d72      	adds	r2, r6, #5
 8006b88:	4620      	mov	r0, r4
 8006b8a:	0092      	lsls	r2, r2, #2
 8006b8c:	f000 fea6 	bl	80078dc <_calloc_r>
 8006b90:	b160      	cbz	r0, 8006bac <_Balloc+0x64>
 8006b92:	e9c0 5601 	strd	r5, r6, [r0, #4]
 8006b96:	e00e      	b.n	8006bb6 <_Balloc+0x6e>
 8006b98:	2221      	movs	r2, #33	@ 0x21
 8006b9a:	2104      	movs	r1, #4
 8006b9c:	4620      	mov	r0, r4
 8006b9e:	f000 fe9d 	bl	80078dc <_calloc_r>
 8006ba2:	69e3      	ldr	r3, [r4, #28]
 8006ba4:	60f0      	str	r0, [r6, #12]
 8006ba6:	68db      	ldr	r3, [r3, #12]
 8006ba8:	2b00      	cmp	r3, #0
 8006baa:	d1e4      	bne.n	8006b76 <_Balloc+0x2e>
 8006bac:	2000      	movs	r0, #0
 8006bae:	bd70      	pop	{r4, r5, r6, pc}
 8006bb0:	6802      	ldr	r2, [r0, #0]
 8006bb2:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 8006bb6:	2300      	movs	r3, #0
 8006bb8:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8006bbc:	e7f7      	b.n	8006bae <_Balloc+0x66>
 8006bbe:	bf00      	nop
 8006bc0:	080095d6 	.word	0x080095d6
 8006bc4:	080096c7 	.word	0x080096c7

08006bc8 <_Bfree>:
 8006bc8:	b570      	push	{r4, r5, r6, lr}
 8006bca:	69c6      	ldr	r6, [r0, #28]
 8006bcc:	4605      	mov	r5, r0
 8006bce:	460c      	mov	r4, r1
 8006bd0:	b976      	cbnz	r6, 8006bf0 <_Bfree+0x28>
 8006bd2:	2010      	movs	r0, #16
 8006bd4:	f7ff fe48 	bl	8006868 <malloc>
 8006bd8:	4602      	mov	r2, r0
 8006bda:	61e8      	str	r0, [r5, #28]
 8006bdc:	b920      	cbnz	r0, 8006be8 <_Bfree+0x20>
 8006bde:	218f      	movs	r1, #143	@ 0x8f
 8006be0:	4b08      	ldr	r3, [pc, #32]	@ (8006c04 <_Bfree+0x3c>)
 8006be2:	4809      	ldr	r0, [pc, #36]	@ (8006c08 <_Bfree+0x40>)
 8006be4:	f000 fe5c 	bl	80078a0 <__assert_func>
 8006be8:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8006bec:	6006      	str	r6, [r0, #0]
 8006bee:	60c6      	str	r6, [r0, #12]
 8006bf0:	b13c      	cbz	r4, 8006c02 <_Bfree+0x3a>
 8006bf2:	69eb      	ldr	r3, [r5, #28]
 8006bf4:	6862      	ldr	r2, [r4, #4]
 8006bf6:	68db      	ldr	r3, [r3, #12]
 8006bf8:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8006bfc:	6021      	str	r1, [r4, #0]
 8006bfe:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 8006c02:	bd70      	pop	{r4, r5, r6, pc}
 8006c04:	080095d6 	.word	0x080095d6
 8006c08:	080096c7 	.word	0x080096c7

08006c0c <__multadd>:
 8006c0c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006c10:	4607      	mov	r7, r0
 8006c12:	460c      	mov	r4, r1
 8006c14:	461e      	mov	r6, r3
 8006c16:	2000      	movs	r0, #0
 8006c18:	690d      	ldr	r5, [r1, #16]
 8006c1a:	f101 0c14 	add.w	ip, r1, #20
 8006c1e:	f8dc 3000 	ldr.w	r3, [ip]
 8006c22:	3001      	adds	r0, #1
 8006c24:	b299      	uxth	r1, r3
 8006c26:	fb02 6101 	mla	r1, r2, r1, r6
 8006c2a:	0c1e      	lsrs	r6, r3, #16
 8006c2c:	0c0b      	lsrs	r3, r1, #16
 8006c2e:	fb02 3306 	mla	r3, r2, r6, r3
 8006c32:	b289      	uxth	r1, r1
 8006c34:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 8006c38:	4285      	cmp	r5, r0
 8006c3a:	ea4f 4613 	mov.w	r6, r3, lsr #16
 8006c3e:	f84c 1b04 	str.w	r1, [ip], #4
 8006c42:	dcec      	bgt.n	8006c1e <__multadd+0x12>
 8006c44:	b30e      	cbz	r6, 8006c8a <__multadd+0x7e>
 8006c46:	68a3      	ldr	r3, [r4, #8]
 8006c48:	42ab      	cmp	r3, r5
 8006c4a:	dc19      	bgt.n	8006c80 <__multadd+0x74>
 8006c4c:	6861      	ldr	r1, [r4, #4]
 8006c4e:	4638      	mov	r0, r7
 8006c50:	3101      	adds	r1, #1
 8006c52:	f7ff ff79 	bl	8006b48 <_Balloc>
 8006c56:	4680      	mov	r8, r0
 8006c58:	b928      	cbnz	r0, 8006c66 <__multadd+0x5a>
 8006c5a:	4602      	mov	r2, r0
 8006c5c:	21ba      	movs	r1, #186	@ 0xba
 8006c5e:	4b0c      	ldr	r3, [pc, #48]	@ (8006c90 <__multadd+0x84>)
 8006c60:	480c      	ldr	r0, [pc, #48]	@ (8006c94 <__multadd+0x88>)
 8006c62:	f000 fe1d 	bl	80078a0 <__assert_func>
 8006c66:	6922      	ldr	r2, [r4, #16]
 8006c68:	f104 010c 	add.w	r1, r4, #12
 8006c6c:	3202      	adds	r2, #2
 8006c6e:	0092      	lsls	r2, r2, #2
 8006c70:	300c      	adds	r0, #12
 8006c72:	f7fe f9c0 	bl	8004ff6 <memcpy>
 8006c76:	4621      	mov	r1, r4
 8006c78:	4638      	mov	r0, r7
 8006c7a:	f7ff ffa5 	bl	8006bc8 <_Bfree>
 8006c7e:	4644      	mov	r4, r8
 8006c80:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 8006c84:	3501      	adds	r5, #1
 8006c86:	615e      	str	r6, [r3, #20]
 8006c88:	6125      	str	r5, [r4, #16]
 8006c8a:	4620      	mov	r0, r4
 8006c8c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006c90:	08009645 	.word	0x08009645
 8006c94:	080096c7 	.word	0x080096c7

08006c98 <__s2b>:
 8006c98:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8006c9c:	4615      	mov	r5, r2
 8006c9e:	2209      	movs	r2, #9
 8006ca0:	461f      	mov	r7, r3
 8006ca2:	3308      	adds	r3, #8
 8006ca4:	460c      	mov	r4, r1
 8006ca6:	fb93 f3f2 	sdiv	r3, r3, r2
 8006caa:	4606      	mov	r6, r0
 8006cac:	2201      	movs	r2, #1
 8006cae:	2100      	movs	r1, #0
 8006cb0:	429a      	cmp	r2, r3
 8006cb2:	db09      	blt.n	8006cc8 <__s2b+0x30>
 8006cb4:	4630      	mov	r0, r6
 8006cb6:	f7ff ff47 	bl	8006b48 <_Balloc>
 8006cba:	b940      	cbnz	r0, 8006cce <__s2b+0x36>
 8006cbc:	4602      	mov	r2, r0
 8006cbe:	21d3      	movs	r1, #211	@ 0xd3
 8006cc0:	4b18      	ldr	r3, [pc, #96]	@ (8006d24 <__s2b+0x8c>)
 8006cc2:	4819      	ldr	r0, [pc, #100]	@ (8006d28 <__s2b+0x90>)
 8006cc4:	f000 fdec 	bl	80078a0 <__assert_func>
 8006cc8:	0052      	lsls	r2, r2, #1
 8006cca:	3101      	adds	r1, #1
 8006ccc:	e7f0      	b.n	8006cb0 <__s2b+0x18>
 8006cce:	9b08      	ldr	r3, [sp, #32]
 8006cd0:	2d09      	cmp	r5, #9
 8006cd2:	6143      	str	r3, [r0, #20]
 8006cd4:	f04f 0301 	mov.w	r3, #1
 8006cd8:	6103      	str	r3, [r0, #16]
 8006cda:	dd16      	ble.n	8006d0a <__s2b+0x72>
 8006cdc:	f104 0909 	add.w	r9, r4, #9
 8006ce0:	46c8      	mov	r8, r9
 8006ce2:	442c      	add	r4, r5
 8006ce4:	f818 3b01 	ldrb.w	r3, [r8], #1
 8006ce8:	4601      	mov	r1, r0
 8006cea:	220a      	movs	r2, #10
 8006cec:	4630      	mov	r0, r6
 8006cee:	3b30      	subs	r3, #48	@ 0x30
 8006cf0:	f7ff ff8c 	bl	8006c0c <__multadd>
 8006cf4:	45a0      	cmp	r8, r4
 8006cf6:	d1f5      	bne.n	8006ce4 <__s2b+0x4c>
 8006cf8:	f1a5 0408 	sub.w	r4, r5, #8
 8006cfc:	444c      	add	r4, r9
 8006cfe:	1b2d      	subs	r5, r5, r4
 8006d00:	1963      	adds	r3, r4, r5
 8006d02:	42bb      	cmp	r3, r7
 8006d04:	db04      	blt.n	8006d10 <__s2b+0x78>
 8006d06:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8006d0a:	2509      	movs	r5, #9
 8006d0c:	340a      	adds	r4, #10
 8006d0e:	e7f6      	b.n	8006cfe <__s2b+0x66>
 8006d10:	f814 3b01 	ldrb.w	r3, [r4], #1
 8006d14:	4601      	mov	r1, r0
 8006d16:	220a      	movs	r2, #10
 8006d18:	4630      	mov	r0, r6
 8006d1a:	3b30      	subs	r3, #48	@ 0x30
 8006d1c:	f7ff ff76 	bl	8006c0c <__multadd>
 8006d20:	e7ee      	b.n	8006d00 <__s2b+0x68>
 8006d22:	bf00      	nop
 8006d24:	08009645 	.word	0x08009645
 8006d28:	080096c7 	.word	0x080096c7

08006d2c <__hi0bits>:
 8006d2c:	4603      	mov	r3, r0
 8006d2e:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
 8006d32:	bf3a      	itte	cc
 8006d34:	0403      	lslcc	r3, r0, #16
 8006d36:	2010      	movcc	r0, #16
 8006d38:	2000      	movcs	r0, #0
 8006d3a:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8006d3e:	bf3c      	itt	cc
 8006d40:	021b      	lslcc	r3, r3, #8
 8006d42:	3008      	addcc	r0, #8
 8006d44:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8006d48:	bf3c      	itt	cc
 8006d4a:	011b      	lslcc	r3, r3, #4
 8006d4c:	3004      	addcc	r0, #4
 8006d4e:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8006d52:	bf3c      	itt	cc
 8006d54:	009b      	lslcc	r3, r3, #2
 8006d56:	3002      	addcc	r0, #2
 8006d58:	2b00      	cmp	r3, #0
 8006d5a:	db05      	blt.n	8006d68 <__hi0bits+0x3c>
 8006d5c:	f013 4f80 	tst.w	r3, #1073741824	@ 0x40000000
 8006d60:	f100 0001 	add.w	r0, r0, #1
 8006d64:	bf08      	it	eq
 8006d66:	2020      	moveq	r0, #32
 8006d68:	4770      	bx	lr

08006d6a <__lo0bits>:
 8006d6a:	6803      	ldr	r3, [r0, #0]
 8006d6c:	4602      	mov	r2, r0
 8006d6e:	f013 0007 	ands.w	r0, r3, #7
 8006d72:	d00b      	beq.n	8006d8c <__lo0bits+0x22>
 8006d74:	07d9      	lsls	r1, r3, #31
 8006d76:	d421      	bmi.n	8006dbc <__lo0bits+0x52>
 8006d78:	0798      	lsls	r0, r3, #30
 8006d7a:	bf49      	itett	mi
 8006d7c:	085b      	lsrmi	r3, r3, #1
 8006d7e:	089b      	lsrpl	r3, r3, #2
 8006d80:	2001      	movmi	r0, #1
 8006d82:	6013      	strmi	r3, [r2, #0]
 8006d84:	bf5c      	itt	pl
 8006d86:	2002      	movpl	r0, #2
 8006d88:	6013      	strpl	r3, [r2, #0]
 8006d8a:	4770      	bx	lr
 8006d8c:	b299      	uxth	r1, r3
 8006d8e:	b909      	cbnz	r1, 8006d94 <__lo0bits+0x2a>
 8006d90:	2010      	movs	r0, #16
 8006d92:	0c1b      	lsrs	r3, r3, #16
 8006d94:	b2d9      	uxtb	r1, r3
 8006d96:	b909      	cbnz	r1, 8006d9c <__lo0bits+0x32>
 8006d98:	3008      	adds	r0, #8
 8006d9a:	0a1b      	lsrs	r3, r3, #8
 8006d9c:	0719      	lsls	r1, r3, #28
 8006d9e:	bf04      	itt	eq
 8006da0:	091b      	lsreq	r3, r3, #4
 8006da2:	3004      	addeq	r0, #4
 8006da4:	0799      	lsls	r1, r3, #30
 8006da6:	bf04      	itt	eq
 8006da8:	089b      	lsreq	r3, r3, #2
 8006daa:	3002      	addeq	r0, #2
 8006dac:	07d9      	lsls	r1, r3, #31
 8006dae:	d403      	bmi.n	8006db8 <__lo0bits+0x4e>
 8006db0:	085b      	lsrs	r3, r3, #1
 8006db2:	f100 0001 	add.w	r0, r0, #1
 8006db6:	d003      	beq.n	8006dc0 <__lo0bits+0x56>
 8006db8:	6013      	str	r3, [r2, #0]
 8006dba:	4770      	bx	lr
 8006dbc:	2000      	movs	r0, #0
 8006dbe:	4770      	bx	lr
 8006dc0:	2020      	movs	r0, #32
 8006dc2:	4770      	bx	lr

08006dc4 <__i2b>:
 8006dc4:	b510      	push	{r4, lr}
 8006dc6:	460c      	mov	r4, r1
 8006dc8:	2101      	movs	r1, #1
 8006dca:	f7ff febd 	bl	8006b48 <_Balloc>
 8006dce:	4602      	mov	r2, r0
 8006dd0:	b928      	cbnz	r0, 8006dde <__i2b+0x1a>
 8006dd2:	f240 1145 	movw	r1, #325	@ 0x145
 8006dd6:	4b04      	ldr	r3, [pc, #16]	@ (8006de8 <__i2b+0x24>)
 8006dd8:	4804      	ldr	r0, [pc, #16]	@ (8006dec <__i2b+0x28>)
 8006dda:	f000 fd61 	bl	80078a0 <__assert_func>
 8006dde:	2301      	movs	r3, #1
 8006de0:	6144      	str	r4, [r0, #20]
 8006de2:	6103      	str	r3, [r0, #16]
 8006de4:	bd10      	pop	{r4, pc}
 8006de6:	bf00      	nop
 8006de8:	08009645 	.word	0x08009645
 8006dec:	080096c7 	.word	0x080096c7

08006df0 <__multiply>:
 8006df0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006df4:	4614      	mov	r4, r2
 8006df6:	690a      	ldr	r2, [r1, #16]
 8006df8:	6923      	ldr	r3, [r4, #16]
 8006dfa:	460f      	mov	r7, r1
 8006dfc:	429a      	cmp	r2, r3
 8006dfe:	bfa2      	ittt	ge
 8006e00:	4623      	movge	r3, r4
 8006e02:	460c      	movge	r4, r1
 8006e04:	461f      	movge	r7, r3
 8006e06:	f8d4 a010 	ldr.w	sl, [r4, #16]
 8006e0a:	f8d7 9010 	ldr.w	r9, [r7, #16]
 8006e0e:	68a3      	ldr	r3, [r4, #8]
 8006e10:	6861      	ldr	r1, [r4, #4]
 8006e12:	eb0a 0609 	add.w	r6, sl, r9
 8006e16:	42b3      	cmp	r3, r6
 8006e18:	b085      	sub	sp, #20
 8006e1a:	bfb8      	it	lt
 8006e1c:	3101      	addlt	r1, #1
 8006e1e:	f7ff fe93 	bl	8006b48 <_Balloc>
 8006e22:	b930      	cbnz	r0, 8006e32 <__multiply+0x42>
 8006e24:	4602      	mov	r2, r0
 8006e26:	f44f 71b1 	mov.w	r1, #354	@ 0x162
 8006e2a:	4b43      	ldr	r3, [pc, #268]	@ (8006f38 <__multiply+0x148>)
 8006e2c:	4843      	ldr	r0, [pc, #268]	@ (8006f3c <__multiply+0x14c>)
 8006e2e:	f000 fd37 	bl	80078a0 <__assert_func>
 8006e32:	f100 0514 	add.w	r5, r0, #20
 8006e36:	462b      	mov	r3, r5
 8006e38:	2200      	movs	r2, #0
 8006e3a:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 8006e3e:	4543      	cmp	r3, r8
 8006e40:	d321      	bcc.n	8006e86 <__multiply+0x96>
 8006e42:	f107 0114 	add.w	r1, r7, #20
 8006e46:	f104 0214 	add.w	r2, r4, #20
 8006e4a:	eb02 028a 	add.w	r2, r2, sl, lsl #2
 8006e4e:	eb01 0389 	add.w	r3, r1, r9, lsl #2
 8006e52:	9302      	str	r3, [sp, #8]
 8006e54:	1b13      	subs	r3, r2, r4
 8006e56:	3b15      	subs	r3, #21
 8006e58:	f023 0303 	bic.w	r3, r3, #3
 8006e5c:	3304      	adds	r3, #4
 8006e5e:	f104 0715 	add.w	r7, r4, #21
 8006e62:	42ba      	cmp	r2, r7
 8006e64:	bf38      	it	cc
 8006e66:	2304      	movcc	r3, #4
 8006e68:	9301      	str	r3, [sp, #4]
 8006e6a:	9b02      	ldr	r3, [sp, #8]
 8006e6c:	9103      	str	r1, [sp, #12]
 8006e6e:	428b      	cmp	r3, r1
 8006e70:	d80c      	bhi.n	8006e8c <__multiply+0x9c>
 8006e72:	2e00      	cmp	r6, #0
 8006e74:	dd03      	ble.n	8006e7e <__multiply+0x8e>
 8006e76:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 8006e7a:	2b00      	cmp	r3, #0
 8006e7c:	d05a      	beq.n	8006f34 <__multiply+0x144>
 8006e7e:	6106      	str	r6, [r0, #16]
 8006e80:	b005      	add	sp, #20
 8006e82:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006e86:	f843 2b04 	str.w	r2, [r3], #4
 8006e8a:	e7d8      	b.n	8006e3e <__multiply+0x4e>
 8006e8c:	f8b1 a000 	ldrh.w	sl, [r1]
 8006e90:	f1ba 0f00 	cmp.w	sl, #0
 8006e94:	d023      	beq.n	8006ede <__multiply+0xee>
 8006e96:	46a9      	mov	r9, r5
 8006e98:	f04f 0c00 	mov.w	ip, #0
 8006e9c:	f104 0e14 	add.w	lr, r4, #20
 8006ea0:	f85e 7b04 	ldr.w	r7, [lr], #4
 8006ea4:	f8d9 3000 	ldr.w	r3, [r9]
 8006ea8:	fa1f fb87 	uxth.w	fp, r7
 8006eac:	b29b      	uxth	r3, r3
 8006eae:	fb0a 330b 	mla	r3, sl, fp, r3
 8006eb2:	4463      	add	r3, ip
 8006eb4:	f8d9 c000 	ldr.w	ip, [r9]
 8006eb8:	0c3f      	lsrs	r7, r7, #16
 8006eba:	ea4f 4c1c 	mov.w	ip, ip, lsr #16
 8006ebe:	fb0a c707 	mla	r7, sl, r7, ip
 8006ec2:	eb07 4713 	add.w	r7, r7, r3, lsr #16
 8006ec6:	b29b      	uxth	r3, r3
 8006ec8:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 8006ecc:	4572      	cmp	r2, lr
 8006ece:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 8006ed2:	f849 3b04 	str.w	r3, [r9], #4
 8006ed6:	d8e3      	bhi.n	8006ea0 <__multiply+0xb0>
 8006ed8:	9b01      	ldr	r3, [sp, #4]
 8006eda:	f845 c003 	str.w	ip, [r5, r3]
 8006ede:	9b03      	ldr	r3, [sp, #12]
 8006ee0:	3104      	adds	r1, #4
 8006ee2:	f8b3 9002 	ldrh.w	r9, [r3, #2]
 8006ee6:	f1b9 0f00 	cmp.w	r9, #0
 8006eea:	d021      	beq.n	8006f30 <__multiply+0x140>
 8006eec:	46ae      	mov	lr, r5
 8006eee:	f04f 0a00 	mov.w	sl, #0
 8006ef2:	682b      	ldr	r3, [r5, #0]
 8006ef4:	f104 0c14 	add.w	ip, r4, #20
 8006ef8:	f8bc b000 	ldrh.w	fp, [ip]
 8006efc:	f8be 7002 	ldrh.w	r7, [lr, #2]
 8006f00:	b29b      	uxth	r3, r3
 8006f02:	fb09 770b 	mla	r7, r9, fp, r7
 8006f06:	4457      	add	r7, sl
 8006f08:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 8006f0c:	f84e 3b04 	str.w	r3, [lr], #4
 8006f10:	f85c 3b04 	ldr.w	r3, [ip], #4
 8006f14:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8006f18:	f8be 3000 	ldrh.w	r3, [lr]
 8006f1c:	4562      	cmp	r2, ip
 8006f1e:	fb09 330a 	mla	r3, r9, sl, r3
 8006f22:	eb03 4317 	add.w	r3, r3, r7, lsr #16
 8006f26:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8006f2a:	d8e5      	bhi.n	8006ef8 <__multiply+0x108>
 8006f2c:	9f01      	ldr	r7, [sp, #4]
 8006f2e:	51eb      	str	r3, [r5, r7]
 8006f30:	3504      	adds	r5, #4
 8006f32:	e79a      	b.n	8006e6a <__multiply+0x7a>
 8006f34:	3e01      	subs	r6, #1
 8006f36:	e79c      	b.n	8006e72 <__multiply+0x82>
 8006f38:	08009645 	.word	0x08009645
 8006f3c:	080096c7 	.word	0x080096c7

08006f40 <__pow5mult>:
 8006f40:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8006f44:	4615      	mov	r5, r2
 8006f46:	f012 0203 	ands.w	r2, r2, #3
 8006f4a:	4607      	mov	r7, r0
 8006f4c:	460e      	mov	r6, r1
 8006f4e:	d007      	beq.n	8006f60 <__pow5mult+0x20>
 8006f50:	4c25      	ldr	r4, [pc, #148]	@ (8006fe8 <__pow5mult+0xa8>)
 8006f52:	3a01      	subs	r2, #1
 8006f54:	2300      	movs	r3, #0
 8006f56:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8006f5a:	f7ff fe57 	bl	8006c0c <__multadd>
 8006f5e:	4606      	mov	r6, r0
 8006f60:	10ad      	asrs	r5, r5, #2
 8006f62:	d03d      	beq.n	8006fe0 <__pow5mult+0xa0>
 8006f64:	69fc      	ldr	r4, [r7, #28]
 8006f66:	b97c      	cbnz	r4, 8006f88 <__pow5mult+0x48>
 8006f68:	2010      	movs	r0, #16
 8006f6a:	f7ff fc7d 	bl	8006868 <malloc>
 8006f6e:	4602      	mov	r2, r0
 8006f70:	61f8      	str	r0, [r7, #28]
 8006f72:	b928      	cbnz	r0, 8006f80 <__pow5mult+0x40>
 8006f74:	f240 11b3 	movw	r1, #435	@ 0x1b3
 8006f78:	4b1c      	ldr	r3, [pc, #112]	@ (8006fec <__pow5mult+0xac>)
 8006f7a:	481d      	ldr	r0, [pc, #116]	@ (8006ff0 <__pow5mult+0xb0>)
 8006f7c:	f000 fc90 	bl	80078a0 <__assert_func>
 8006f80:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8006f84:	6004      	str	r4, [r0, #0]
 8006f86:	60c4      	str	r4, [r0, #12]
 8006f88:	f8d7 801c 	ldr.w	r8, [r7, #28]
 8006f8c:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8006f90:	b94c      	cbnz	r4, 8006fa6 <__pow5mult+0x66>
 8006f92:	f240 2171 	movw	r1, #625	@ 0x271
 8006f96:	4638      	mov	r0, r7
 8006f98:	f7ff ff14 	bl	8006dc4 <__i2b>
 8006f9c:	2300      	movs	r3, #0
 8006f9e:	4604      	mov	r4, r0
 8006fa0:	f8c8 0008 	str.w	r0, [r8, #8]
 8006fa4:	6003      	str	r3, [r0, #0]
 8006fa6:	f04f 0900 	mov.w	r9, #0
 8006faa:	07eb      	lsls	r3, r5, #31
 8006fac:	d50a      	bpl.n	8006fc4 <__pow5mult+0x84>
 8006fae:	4631      	mov	r1, r6
 8006fb0:	4622      	mov	r2, r4
 8006fb2:	4638      	mov	r0, r7
 8006fb4:	f7ff ff1c 	bl	8006df0 <__multiply>
 8006fb8:	4680      	mov	r8, r0
 8006fba:	4631      	mov	r1, r6
 8006fbc:	4638      	mov	r0, r7
 8006fbe:	f7ff fe03 	bl	8006bc8 <_Bfree>
 8006fc2:	4646      	mov	r6, r8
 8006fc4:	106d      	asrs	r5, r5, #1
 8006fc6:	d00b      	beq.n	8006fe0 <__pow5mult+0xa0>
 8006fc8:	6820      	ldr	r0, [r4, #0]
 8006fca:	b938      	cbnz	r0, 8006fdc <__pow5mult+0x9c>
 8006fcc:	4622      	mov	r2, r4
 8006fce:	4621      	mov	r1, r4
 8006fd0:	4638      	mov	r0, r7
 8006fd2:	f7ff ff0d 	bl	8006df0 <__multiply>
 8006fd6:	6020      	str	r0, [r4, #0]
 8006fd8:	f8c0 9000 	str.w	r9, [r0]
 8006fdc:	4604      	mov	r4, r0
 8006fde:	e7e4      	b.n	8006faa <__pow5mult+0x6a>
 8006fe0:	4630      	mov	r0, r6
 8006fe2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8006fe6:	bf00      	nop
 8006fe8:	08009720 	.word	0x08009720
 8006fec:	080095d6 	.word	0x080095d6
 8006ff0:	080096c7 	.word	0x080096c7

08006ff4 <__lshift>:
 8006ff4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8006ff8:	460c      	mov	r4, r1
 8006ffa:	4607      	mov	r7, r0
 8006ffc:	4691      	mov	r9, r2
 8006ffe:	6923      	ldr	r3, [r4, #16]
 8007000:	6849      	ldr	r1, [r1, #4]
 8007002:	eb03 1862 	add.w	r8, r3, r2, asr #5
 8007006:	68a3      	ldr	r3, [r4, #8]
 8007008:	ea4f 1a62 	mov.w	sl, r2, asr #5
 800700c:	f108 0601 	add.w	r6, r8, #1
 8007010:	42b3      	cmp	r3, r6
 8007012:	db0b      	blt.n	800702c <__lshift+0x38>
 8007014:	4638      	mov	r0, r7
 8007016:	f7ff fd97 	bl	8006b48 <_Balloc>
 800701a:	4605      	mov	r5, r0
 800701c:	b948      	cbnz	r0, 8007032 <__lshift+0x3e>
 800701e:	4602      	mov	r2, r0
 8007020:	f44f 71ef 	mov.w	r1, #478	@ 0x1de
 8007024:	4b27      	ldr	r3, [pc, #156]	@ (80070c4 <__lshift+0xd0>)
 8007026:	4828      	ldr	r0, [pc, #160]	@ (80070c8 <__lshift+0xd4>)
 8007028:	f000 fc3a 	bl	80078a0 <__assert_func>
 800702c:	3101      	adds	r1, #1
 800702e:	005b      	lsls	r3, r3, #1
 8007030:	e7ee      	b.n	8007010 <__lshift+0x1c>
 8007032:	2300      	movs	r3, #0
 8007034:	f100 0114 	add.w	r1, r0, #20
 8007038:	f100 0210 	add.w	r2, r0, #16
 800703c:	4618      	mov	r0, r3
 800703e:	4553      	cmp	r3, sl
 8007040:	db33      	blt.n	80070aa <__lshift+0xb6>
 8007042:	6920      	ldr	r0, [r4, #16]
 8007044:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8007048:	f104 0314 	add.w	r3, r4, #20
 800704c:	f019 091f 	ands.w	r9, r9, #31
 8007050:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8007054:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 8007058:	d02b      	beq.n	80070b2 <__lshift+0xbe>
 800705a:	468a      	mov	sl, r1
 800705c:	2200      	movs	r2, #0
 800705e:	f1c9 0e20 	rsb	lr, r9, #32
 8007062:	6818      	ldr	r0, [r3, #0]
 8007064:	fa00 f009 	lsl.w	r0, r0, r9
 8007068:	4310      	orrs	r0, r2
 800706a:	f84a 0b04 	str.w	r0, [sl], #4
 800706e:	f853 2b04 	ldr.w	r2, [r3], #4
 8007072:	459c      	cmp	ip, r3
 8007074:	fa22 f20e 	lsr.w	r2, r2, lr
 8007078:	d8f3      	bhi.n	8007062 <__lshift+0x6e>
 800707a:	ebac 0304 	sub.w	r3, ip, r4
 800707e:	3b15      	subs	r3, #21
 8007080:	f023 0303 	bic.w	r3, r3, #3
 8007084:	3304      	adds	r3, #4
 8007086:	f104 0015 	add.w	r0, r4, #21
 800708a:	4584      	cmp	ip, r0
 800708c:	bf38      	it	cc
 800708e:	2304      	movcc	r3, #4
 8007090:	50ca      	str	r2, [r1, r3]
 8007092:	b10a      	cbz	r2, 8007098 <__lshift+0xa4>
 8007094:	f108 0602 	add.w	r6, r8, #2
 8007098:	3e01      	subs	r6, #1
 800709a:	4638      	mov	r0, r7
 800709c:	4621      	mov	r1, r4
 800709e:	612e      	str	r6, [r5, #16]
 80070a0:	f7ff fd92 	bl	8006bc8 <_Bfree>
 80070a4:	4628      	mov	r0, r5
 80070a6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80070aa:	f842 0f04 	str.w	r0, [r2, #4]!
 80070ae:	3301      	adds	r3, #1
 80070b0:	e7c5      	b.n	800703e <__lshift+0x4a>
 80070b2:	3904      	subs	r1, #4
 80070b4:	f853 2b04 	ldr.w	r2, [r3], #4
 80070b8:	459c      	cmp	ip, r3
 80070ba:	f841 2f04 	str.w	r2, [r1, #4]!
 80070be:	d8f9      	bhi.n	80070b4 <__lshift+0xc0>
 80070c0:	e7ea      	b.n	8007098 <__lshift+0xa4>
 80070c2:	bf00      	nop
 80070c4:	08009645 	.word	0x08009645
 80070c8:	080096c7 	.word	0x080096c7

080070cc <__mcmp>:
 80070cc:	4603      	mov	r3, r0
 80070ce:	690a      	ldr	r2, [r1, #16]
 80070d0:	6900      	ldr	r0, [r0, #16]
 80070d2:	b530      	push	{r4, r5, lr}
 80070d4:	1a80      	subs	r0, r0, r2
 80070d6:	d10e      	bne.n	80070f6 <__mcmp+0x2a>
 80070d8:	3314      	adds	r3, #20
 80070da:	3114      	adds	r1, #20
 80070dc:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 80070e0:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 80070e4:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 80070e8:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 80070ec:	4295      	cmp	r5, r2
 80070ee:	d003      	beq.n	80070f8 <__mcmp+0x2c>
 80070f0:	d205      	bcs.n	80070fe <__mcmp+0x32>
 80070f2:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 80070f6:	bd30      	pop	{r4, r5, pc}
 80070f8:	42a3      	cmp	r3, r4
 80070fa:	d3f3      	bcc.n	80070e4 <__mcmp+0x18>
 80070fc:	e7fb      	b.n	80070f6 <__mcmp+0x2a>
 80070fe:	2001      	movs	r0, #1
 8007100:	e7f9      	b.n	80070f6 <__mcmp+0x2a>
	...

08007104 <__mdiff>:
 8007104:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007108:	4689      	mov	r9, r1
 800710a:	4606      	mov	r6, r0
 800710c:	4611      	mov	r1, r2
 800710e:	4648      	mov	r0, r9
 8007110:	4614      	mov	r4, r2
 8007112:	f7ff ffdb 	bl	80070cc <__mcmp>
 8007116:	1e05      	subs	r5, r0, #0
 8007118:	d112      	bne.n	8007140 <__mdiff+0x3c>
 800711a:	4629      	mov	r1, r5
 800711c:	4630      	mov	r0, r6
 800711e:	f7ff fd13 	bl	8006b48 <_Balloc>
 8007122:	4602      	mov	r2, r0
 8007124:	b928      	cbnz	r0, 8007132 <__mdiff+0x2e>
 8007126:	f240 2137 	movw	r1, #567	@ 0x237
 800712a:	4b3e      	ldr	r3, [pc, #248]	@ (8007224 <__mdiff+0x120>)
 800712c:	483e      	ldr	r0, [pc, #248]	@ (8007228 <__mdiff+0x124>)
 800712e:	f000 fbb7 	bl	80078a0 <__assert_func>
 8007132:	2301      	movs	r3, #1
 8007134:	e9c0 3504 	strd	r3, r5, [r0, #16]
 8007138:	4610      	mov	r0, r2
 800713a:	b003      	add	sp, #12
 800713c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007140:	bfbc      	itt	lt
 8007142:	464b      	movlt	r3, r9
 8007144:	46a1      	movlt	r9, r4
 8007146:	4630      	mov	r0, r6
 8007148:	f8d9 1004 	ldr.w	r1, [r9, #4]
 800714c:	bfba      	itte	lt
 800714e:	461c      	movlt	r4, r3
 8007150:	2501      	movlt	r5, #1
 8007152:	2500      	movge	r5, #0
 8007154:	f7ff fcf8 	bl	8006b48 <_Balloc>
 8007158:	4602      	mov	r2, r0
 800715a:	b918      	cbnz	r0, 8007164 <__mdiff+0x60>
 800715c:	f240 2145 	movw	r1, #581	@ 0x245
 8007160:	4b30      	ldr	r3, [pc, #192]	@ (8007224 <__mdiff+0x120>)
 8007162:	e7e3      	b.n	800712c <__mdiff+0x28>
 8007164:	f100 0b14 	add.w	fp, r0, #20
 8007168:	f8d9 7010 	ldr.w	r7, [r9, #16]
 800716c:	f109 0310 	add.w	r3, r9, #16
 8007170:	60c5      	str	r5, [r0, #12]
 8007172:	f04f 0c00 	mov.w	ip, #0
 8007176:	f109 0514 	add.w	r5, r9, #20
 800717a:	46d9      	mov	r9, fp
 800717c:	6926      	ldr	r6, [r4, #16]
 800717e:	f104 0e14 	add.w	lr, r4, #20
 8007182:	eb05 0887 	add.w	r8, r5, r7, lsl #2
 8007186:	eb0e 0686 	add.w	r6, lr, r6, lsl #2
 800718a:	9301      	str	r3, [sp, #4]
 800718c:	9b01      	ldr	r3, [sp, #4]
 800718e:	f85e 0b04 	ldr.w	r0, [lr], #4
 8007192:	f853 af04 	ldr.w	sl, [r3, #4]!
 8007196:	b281      	uxth	r1, r0
 8007198:	9301      	str	r3, [sp, #4]
 800719a:	fa1f f38a 	uxth.w	r3, sl
 800719e:	1a5b      	subs	r3, r3, r1
 80071a0:	0c00      	lsrs	r0, r0, #16
 80071a2:	4463      	add	r3, ip
 80071a4:	ebc0 401a 	rsb	r0, r0, sl, lsr #16
 80071a8:	eb00 4023 	add.w	r0, r0, r3, asr #16
 80071ac:	b29b      	uxth	r3, r3
 80071ae:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 80071b2:	4576      	cmp	r6, lr
 80071b4:	ea4f 4c20 	mov.w	ip, r0, asr #16
 80071b8:	f849 3b04 	str.w	r3, [r9], #4
 80071bc:	d8e6      	bhi.n	800718c <__mdiff+0x88>
 80071be:	1b33      	subs	r3, r6, r4
 80071c0:	3b15      	subs	r3, #21
 80071c2:	f023 0303 	bic.w	r3, r3, #3
 80071c6:	3415      	adds	r4, #21
 80071c8:	3304      	adds	r3, #4
 80071ca:	42a6      	cmp	r6, r4
 80071cc:	bf38      	it	cc
 80071ce:	2304      	movcc	r3, #4
 80071d0:	441d      	add	r5, r3
 80071d2:	445b      	add	r3, fp
 80071d4:	461e      	mov	r6, r3
 80071d6:	462c      	mov	r4, r5
 80071d8:	4544      	cmp	r4, r8
 80071da:	d30e      	bcc.n	80071fa <__mdiff+0xf6>
 80071dc:	f108 0103 	add.w	r1, r8, #3
 80071e0:	1b49      	subs	r1, r1, r5
 80071e2:	f021 0103 	bic.w	r1, r1, #3
 80071e6:	3d03      	subs	r5, #3
 80071e8:	45a8      	cmp	r8, r5
 80071ea:	bf38      	it	cc
 80071ec:	2100      	movcc	r1, #0
 80071ee:	440b      	add	r3, r1
 80071f0:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 80071f4:	b199      	cbz	r1, 800721e <__mdiff+0x11a>
 80071f6:	6117      	str	r7, [r2, #16]
 80071f8:	e79e      	b.n	8007138 <__mdiff+0x34>
 80071fa:	46e6      	mov	lr, ip
 80071fc:	f854 1b04 	ldr.w	r1, [r4], #4
 8007200:	fa1f fc81 	uxth.w	ip, r1
 8007204:	44f4      	add	ip, lr
 8007206:	0c08      	lsrs	r0, r1, #16
 8007208:	4471      	add	r1, lr
 800720a:	eb00 402c 	add.w	r0, r0, ip, asr #16
 800720e:	b289      	uxth	r1, r1
 8007210:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 8007214:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8007218:	f846 1b04 	str.w	r1, [r6], #4
 800721c:	e7dc      	b.n	80071d8 <__mdiff+0xd4>
 800721e:	3f01      	subs	r7, #1
 8007220:	e7e6      	b.n	80071f0 <__mdiff+0xec>
 8007222:	bf00      	nop
 8007224:	08009645 	.word	0x08009645
 8007228:	080096c7 	.word	0x080096c7

0800722c <__ulp>:
 800722c:	4b0e      	ldr	r3, [pc, #56]	@ (8007268 <__ulp+0x3c>)
 800722e:	400b      	ands	r3, r1
 8007230:	f1a3 7350 	sub.w	r3, r3, #54525952	@ 0x3400000
 8007234:	2b00      	cmp	r3, #0
 8007236:	dc08      	bgt.n	800724a <__ulp+0x1e>
 8007238:	425b      	negs	r3, r3
 800723a:	f1b3 7fa0 	cmp.w	r3, #20971520	@ 0x1400000
 800723e:	ea4f 5223 	mov.w	r2, r3, asr #20
 8007242:	da04      	bge.n	800724e <__ulp+0x22>
 8007244:	f44f 2300 	mov.w	r3, #524288	@ 0x80000
 8007248:	4113      	asrs	r3, r2
 800724a:	2200      	movs	r2, #0
 800724c:	e008      	b.n	8007260 <__ulp+0x34>
 800724e:	f1a2 0314 	sub.w	r3, r2, #20
 8007252:	2b1e      	cmp	r3, #30
 8007254:	bfd6      	itet	le
 8007256:	f04f 4200 	movle.w	r2, #2147483648	@ 0x80000000
 800725a:	2201      	movgt	r2, #1
 800725c:	40da      	lsrle	r2, r3
 800725e:	2300      	movs	r3, #0
 8007260:	4619      	mov	r1, r3
 8007262:	4610      	mov	r0, r2
 8007264:	4770      	bx	lr
 8007266:	bf00      	nop
 8007268:	7ff00000 	.word	0x7ff00000

0800726c <__b2d>:
 800726c:	6902      	ldr	r2, [r0, #16]
 800726e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007270:	f100 0614 	add.w	r6, r0, #20
 8007274:	eb06 0282 	add.w	r2, r6, r2, lsl #2
 8007278:	f852 4c04 	ldr.w	r4, [r2, #-4]
 800727c:	4f1e      	ldr	r7, [pc, #120]	@ (80072f8 <__b2d+0x8c>)
 800727e:	4620      	mov	r0, r4
 8007280:	f7ff fd54 	bl	8006d2c <__hi0bits>
 8007284:	4603      	mov	r3, r0
 8007286:	f1c0 0020 	rsb	r0, r0, #32
 800728a:	2b0a      	cmp	r3, #10
 800728c:	f1a2 0504 	sub.w	r5, r2, #4
 8007290:	6008      	str	r0, [r1, #0]
 8007292:	dc12      	bgt.n	80072ba <__b2d+0x4e>
 8007294:	42ae      	cmp	r6, r5
 8007296:	bf2c      	ite	cs
 8007298:	2200      	movcs	r2, #0
 800729a:	f852 2c08 	ldrcc.w	r2, [r2, #-8]
 800729e:	f1c3 0c0b 	rsb	ip, r3, #11
 80072a2:	3315      	adds	r3, #21
 80072a4:	fa24 fe0c 	lsr.w	lr, r4, ip
 80072a8:	fa04 f303 	lsl.w	r3, r4, r3
 80072ac:	fa22 f20c 	lsr.w	r2, r2, ip
 80072b0:	ea4e 0107 	orr.w	r1, lr, r7
 80072b4:	431a      	orrs	r2, r3
 80072b6:	4610      	mov	r0, r2
 80072b8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80072ba:	42ae      	cmp	r6, r5
 80072bc:	bf36      	itet	cc
 80072be:	f1a2 0508 	subcc.w	r5, r2, #8
 80072c2:	2200      	movcs	r2, #0
 80072c4:	f852 2c08 	ldrcc.w	r2, [r2, #-8]
 80072c8:	3b0b      	subs	r3, #11
 80072ca:	d012      	beq.n	80072f2 <__b2d+0x86>
 80072cc:	f1c3 0720 	rsb	r7, r3, #32
 80072d0:	fa22 f107 	lsr.w	r1, r2, r7
 80072d4:	409c      	lsls	r4, r3
 80072d6:	430c      	orrs	r4, r1
 80072d8:	42b5      	cmp	r5, r6
 80072da:	f044 517f 	orr.w	r1, r4, #1069547520	@ 0x3fc00000
 80072de:	bf94      	ite	ls
 80072e0:	2400      	movls	r4, #0
 80072e2:	f855 4c04 	ldrhi.w	r4, [r5, #-4]
 80072e6:	409a      	lsls	r2, r3
 80072e8:	40fc      	lsrs	r4, r7
 80072ea:	f441 1140 	orr.w	r1, r1, #3145728	@ 0x300000
 80072ee:	4322      	orrs	r2, r4
 80072f0:	e7e1      	b.n	80072b6 <__b2d+0x4a>
 80072f2:	ea44 0107 	orr.w	r1, r4, r7
 80072f6:	e7de      	b.n	80072b6 <__b2d+0x4a>
 80072f8:	3ff00000 	.word	0x3ff00000

080072fc <__d2b>:
 80072fc:	e92d 4373 	stmdb	sp!, {r0, r1, r4, r5, r6, r8, r9, lr}
 8007300:	2101      	movs	r1, #1
 8007302:	4690      	mov	r8, r2
 8007304:	4699      	mov	r9, r3
 8007306:	9e08      	ldr	r6, [sp, #32]
 8007308:	f7ff fc1e 	bl	8006b48 <_Balloc>
 800730c:	4604      	mov	r4, r0
 800730e:	b930      	cbnz	r0, 800731e <__d2b+0x22>
 8007310:	4602      	mov	r2, r0
 8007312:	f240 310f 	movw	r1, #783	@ 0x30f
 8007316:	4b23      	ldr	r3, [pc, #140]	@ (80073a4 <__d2b+0xa8>)
 8007318:	4823      	ldr	r0, [pc, #140]	@ (80073a8 <__d2b+0xac>)
 800731a:	f000 fac1 	bl	80078a0 <__assert_func>
 800731e:	f3c9 550a 	ubfx	r5, r9, #20, #11
 8007322:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8007326:	b10d      	cbz	r5, 800732c <__d2b+0x30>
 8007328:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 800732c:	9301      	str	r3, [sp, #4]
 800732e:	f1b8 0300 	subs.w	r3, r8, #0
 8007332:	d024      	beq.n	800737e <__d2b+0x82>
 8007334:	4668      	mov	r0, sp
 8007336:	9300      	str	r3, [sp, #0]
 8007338:	f7ff fd17 	bl	8006d6a <__lo0bits>
 800733c:	e9dd 1200 	ldrd	r1, r2, [sp]
 8007340:	b1d8      	cbz	r0, 800737a <__d2b+0x7e>
 8007342:	f1c0 0320 	rsb	r3, r0, #32
 8007346:	fa02 f303 	lsl.w	r3, r2, r3
 800734a:	430b      	orrs	r3, r1
 800734c:	40c2      	lsrs	r2, r0
 800734e:	6163      	str	r3, [r4, #20]
 8007350:	9201      	str	r2, [sp, #4]
 8007352:	9b01      	ldr	r3, [sp, #4]
 8007354:	2b00      	cmp	r3, #0
 8007356:	bf0c      	ite	eq
 8007358:	2201      	moveq	r2, #1
 800735a:	2202      	movne	r2, #2
 800735c:	61a3      	str	r3, [r4, #24]
 800735e:	6122      	str	r2, [r4, #16]
 8007360:	b1ad      	cbz	r5, 800738e <__d2b+0x92>
 8007362:	f2a5 4533 	subw	r5, r5, #1075	@ 0x433
 8007366:	4405      	add	r5, r0
 8007368:	6035      	str	r5, [r6, #0]
 800736a:	f1c0 0035 	rsb	r0, r0, #53	@ 0x35
 800736e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8007370:	6018      	str	r0, [r3, #0]
 8007372:	4620      	mov	r0, r4
 8007374:	b002      	add	sp, #8
 8007376:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
 800737a:	6161      	str	r1, [r4, #20]
 800737c:	e7e9      	b.n	8007352 <__d2b+0x56>
 800737e:	a801      	add	r0, sp, #4
 8007380:	f7ff fcf3 	bl	8006d6a <__lo0bits>
 8007384:	9b01      	ldr	r3, [sp, #4]
 8007386:	2201      	movs	r2, #1
 8007388:	6163      	str	r3, [r4, #20]
 800738a:	3020      	adds	r0, #32
 800738c:	e7e7      	b.n	800735e <__d2b+0x62>
 800738e:	f2a0 4032 	subw	r0, r0, #1074	@ 0x432
 8007392:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8007396:	6030      	str	r0, [r6, #0]
 8007398:	6918      	ldr	r0, [r3, #16]
 800739a:	f7ff fcc7 	bl	8006d2c <__hi0bits>
 800739e:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 80073a2:	e7e4      	b.n	800736e <__d2b+0x72>
 80073a4:	08009645 	.word	0x08009645
 80073a8:	080096c7 	.word	0x080096c7

080073ac <__ratio>:
 80073ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80073b0:	b085      	sub	sp, #20
 80073b2:	e9cd 1000 	strd	r1, r0, [sp]
 80073b6:	a902      	add	r1, sp, #8
 80073b8:	f7ff ff58 	bl	800726c <__b2d>
 80073bc:	468b      	mov	fp, r1
 80073be:	4606      	mov	r6, r0
 80073c0:	460f      	mov	r7, r1
 80073c2:	9800      	ldr	r0, [sp, #0]
 80073c4:	a903      	add	r1, sp, #12
 80073c6:	f7ff ff51 	bl	800726c <__b2d>
 80073ca:	460d      	mov	r5, r1
 80073cc:	9b01      	ldr	r3, [sp, #4]
 80073ce:	4689      	mov	r9, r1
 80073d0:	6919      	ldr	r1, [r3, #16]
 80073d2:	9b00      	ldr	r3, [sp, #0]
 80073d4:	4604      	mov	r4, r0
 80073d6:	691b      	ldr	r3, [r3, #16]
 80073d8:	4630      	mov	r0, r6
 80073da:	1ac9      	subs	r1, r1, r3
 80073dc:	e9dd 3202 	ldrd	r3, r2, [sp, #8]
 80073e0:	1a9b      	subs	r3, r3, r2
 80073e2:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 80073e6:	2b00      	cmp	r3, #0
 80073e8:	bfcd      	iteet	gt
 80073ea:	463a      	movgt	r2, r7
 80073ec:	462a      	movle	r2, r5
 80073ee:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
 80073f2:	eb02 5b03 	addgt.w	fp, r2, r3, lsl #20
 80073f6:	bfd8      	it	le
 80073f8:	eb02 5903 	addle.w	r9, r2, r3, lsl #20
 80073fc:	464b      	mov	r3, r9
 80073fe:	4622      	mov	r2, r4
 8007400:	4659      	mov	r1, fp
 8007402:	f7f9 f9a3 	bl	800074c <__aeabi_ddiv>
 8007406:	b005      	add	sp, #20
 8007408:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800740c <__copybits>:
 800740c:	3901      	subs	r1, #1
 800740e:	b570      	push	{r4, r5, r6, lr}
 8007410:	1149      	asrs	r1, r1, #5
 8007412:	6914      	ldr	r4, [r2, #16]
 8007414:	3101      	adds	r1, #1
 8007416:	f102 0314 	add.w	r3, r2, #20
 800741a:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 800741e:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 8007422:	1f05      	subs	r5, r0, #4
 8007424:	42a3      	cmp	r3, r4
 8007426:	d30c      	bcc.n	8007442 <__copybits+0x36>
 8007428:	1aa3      	subs	r3, r4, r2
 800742a:	3b11      	subs	r3, #17
 800742c:	f023 0303 	bic.w	r3, r3, #3
 8007430:	3211      	adds	r2, #17
 8007432:	42a2      	cmp	r2, r4
 8007434:	bf88      	it	hi
 8007436:	2300      	movhi	r3, #0
 8007438:	4418      	add	r0, r3
 800743a:	2300      	movs	r3, #0
 800743c:	4288      	cmp	r0, r1
 800743e:	d305      	bcc.n	800744c <__copybits+0x40>
 8007440:	bd70      	pop	{r4, r5, r6, pc}
 8007442:	f853 6b04 	ldr.w	r6, [r3], #4
 8007446:	f845 6f04 	str.w	r6, [r5, #4]!
 800744a:	e7eb      	b.n	8007424 <__copybits+0x18>
 800744c:	f840 3b04 	str.w	r3, [r0], #4
 8007450:	e7f4      	b.n	800743c <__copybits+0x30>

08007452 <__any_on>:
 8007452:	f100 0214 	add.w	r2, r0, #20
 8007456:	6900      	ldr	r0, [r0, #16]
 8007458:	114b      	asrs	r3, r1, #5
 800745a:	4298      	cmp	r0, r3
 800745c:	b510      	push	{r4, lr}
 800745e:	db11      	blt.n	8007484 <__any_on+0x32>
 8007460:	dd0a      	ble.n	8007478 <__any_on+0x26>
 8007462:	f011 011f 	ands.w	r1, r1, #31
 8007466:	d007      	beq.n	8007478 <__any_on+0x26>
 8007468:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 800746c:	fa24 f001 	lsr.w	r0, r4, r1
 8007470:	fa00 f101 	lsl.w	r1, r0, r1
 8007474:	428c      	cmp	r4, r1
 8007476:	d10b      	bne.n	8007490 <__any_on+0x3e>
 8007478:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 800747c:	4293      	cmp	r3, r2
 800747e:	d803      	bhi.n	8007488 <__any_on+0x36>
 8007480:	2000      	movs	r0, #0
 8007482:	bd10      	pop	{r4, pc}
 8007484:	4603      	mov	r3, r0
 8007486:	e7f7      	b.n	8007478 <__any_on+0x26>
 8007488:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 800748c:	2900      	cmp	r1, #0
 800748e:	d0f5      	beq.n	800747c <__any_on+0x2a>
 8007490:	2001      	movs	r0, #1
 8007492:	e7f6      	b.n	8007482 <__any_on+0x30>

08007494 <__sread>:
 8007494:	b510      	push	{r4, lr}
 8007496:	460c      	mov	r4, r1
 8007498:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800749c:	f000 f9cc 	bl	8007838 <_read_r>
 80074a0:	2800      	cmp	r0, #0
 80074a2:	bfab      	itete	ge
 80074a4:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 80074a6:	89a3      	ldrhlt	r3, [r4, #12]
 80074a8:	181b      	addge	r3, r3, r0
 80074aa:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 80074ae:	bfac      	ite	ge
 80074b0:	6563      	strge	r3, [r4, #84]	@ 0x54
 80074b2:	81a3      	strhlt	r3, [r4, #12]
 80074b4:	bd10      	pop	{r4, pc}

080074b6 <__swrite>:
 80074b6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80074ba:	461f      	mov	r7, r3
 80074bc:	898b      	ldrh	r3, [r1, #12]
 80074be:	4605      	mov	r5, r0
 80074c0:	05db      	lsls	r3, r3, #23
 80074c2:	460c      	mov	r4, r1
 80074c4:	4616      	mov	r6, r2
 80074c6:	d505      	bpl.n	80074d4 <__swrite+0x1e>
 80074c8:	2302      	movs	r3, #2
 80074ca:	2200      	movs	r2, #0
 80074cc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80074d0:	f000 f9a0 	bl	8007814 <_lseek_r>
 80074d4:	89a3      	ldrh	r3, [r4, #12]
 80074d6:	4632      	mov	r2, r6
 80074d8:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 80074dc:	81a3      	strh	r3, [r4, #12]
 80074de:	4628      	mov	r0, r5
 80074e0:	463b      	mov	r3, r7
 80074e2:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80074e6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80074ea:	f000 b9c7 	b.w	800787c <_write_r>

080074ee <__sseek>:
 80074ee:	b510      	push	{r4, lr}
 80074f0:	460c      	mov	r4, r1
 80074f2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80074f6:	f000 f98d 	bl	8007814 <_lseek_r>
 80074fa:	1c43      	adds	r3, r0, #1
 80074fc:	89a3      	ldrh	r3, [r4, #12]
 80074fe:	bf15      	itete	ne
 8007500:	6560      	strne	r0, [r4, #84]	@ 0x54
 8007502:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 8007506:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 800750a:	81a3      	strheq	r3, [r4, #12]
 800750c:	bf18      	it	ne
 800750e:	81a3      	strhne	r3, [r4, #12]
 8007510:	bd10      	pop	{r4, pc}

08007512 <__sclose>:
 8007512:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8007516:	f000 b94b 	b.w	80077b0 <_close_r>

0800751a <_realloc_r>:
 800751a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800751e:	4680      	mov	r8, r0
 8007520:	4615      	mov	r5, r2
 8007522:	460c      	mov	r4, r1
 8007524:	b921      	cbnz	r1, 8007530 <_realloc_r+0x16>
 8007526:	4611      	mov	r1, r2
 8007528:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800752c:	f7ff b9c6 	b.w	80068bc <_malloc_r>
 8007530:	b92a      	cbnz	r2, 800753e <_realloc_r+0x24>
 8007532:	f000 f9e7 	bl	8007904 <_free_r>
 8007536:	2400      	movs	r4, #0
 8007538:	4620      	mov	r0, r4
 800753a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800753e:	f000 fa29 	bl	8007994 <_malloc_usable_size_r>
 8007542:	4285      	cmp	r5, r0
 8007544:	4606      	mov	r6, r0
 8007546:	d802      	bhi.n	800754e <_realloc_r+0x34>
 8007548:	ebb5 0f50 	cmp.w	r5, r0, lsr #1
 800754c:	d8f4      	bhi.n	8007538 <_realloc_r+0x1e>
 800754e:	4629      	mov	r1, r5
 8007550:	4640      	mov	r0, r8
 8007552:	f7ff f9b3 	bl	80068bc <_malloc_r>
 8007556:	4607      	mov	r7, r0
 8007558:	2800      	cmp	r0, #0
 800755a:	d0ec      	beq.n	8007536 <_realloc_r+0x1c>
 800755c:	42b5      	cmp	r5, r6
 800755e:	462a      	mov	r2, r5
 8007560:	4621      	mov	r1, r4
 8007562:	bf28      	it	cs
 8007564:	4632      	movcs	r2, r6
 8007566:	f7fd fd46 	bl	8004ff6 <memcpy>
 800756a:	4621      	mov	r1, r4
 800756c:	4640      	mov	r0, r8
 800756e:	f000 f9c9 	bl	8007904 <_free_r>
 8007572:	463c      	mov	r4, r7
 8007574:	e7e0      	b.n	8007538 <_realloc_r+0x1e>

08007576 <__swbuf_r>:
 8007576:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007578:	460e      	mov	r6, r1
 800757a:	4614      	mov	r4, r2
 800757c:	4605      	mov	r5, r0
 800757e:	b118      	cbz	r0, 8007588 <__swbuf_r+0x12>
 8007580:	6a03      	ldr	r3, [r0, #32]
 8007582:	b90b      	cbnz	r3, 8007588 <__swbuf_r+0x12>
 8007584:	f7fc fe18 	bl	80041b8 <__sinit>
 8007588:	69a3      	ldr	r3, [r4, #24]
 800758a:	60a3      	str	r3, [r4, #8]
 800758c:	89a3      	ldrh	r3, [r4, #12]
 800758e:	071a      	lsls	r2, r3, #28
 8007590:	d501      	bpl.n	8007596 <__swbuf_r+0x20>
 8007592:	6923      	ldr	r3, [r4, #16]
 8007594:	b943      	cbnz	r3, 80075a8 <__swbuf_r+0x32>
 8007596:	4621      	mov	r1, r4
 8007598:	4628      	mov	r0, r5
 800759a:	f000 f82b 	bl	80075f4 <__swsetup_r>
 800759e:	b118      	cbz	r0, 80075a8 <__swbuf_r+0x32>
 80075a0:	f04f 37ff 	mov.w	r7, #4294967295	@ 0xffffffff
 80075a4:	4638      	mov	r0, r7
 80075a6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80075a8:	6823      	ldr	r3, [r4, #0]
 80075aa:	6922      	ldr	r2, [r4, #16]
 80075ac:	b2f6      	uxtb	r6, r6
 80075ae:	1a98      	subs	r0, r3, r2
 80075b0:	6963      	ldr	r3, [r4, #20]
 80075b2:	4637      	mov	r7, r6
 80075b4:	4283      	cmp	r3, r0
 80075b6:	dc05      	bgt.n	80075c4 <__swbuf_r+0x4e>
 80075b8:	4621      	mov	r1, r4
 80075ba:	4628      	mov	r0, r5
 80075bc:	f7ff fa90 	bl	8006ae0 <_fflush_r>
 80075c0:	2800      	cmp	r0, #0
 80075c2:	d1ed      	bne.n	80075a0 <__swbuf_r+0x2a>
 80075c4:	68a3      	ldr	r3, [r4, #8]
 80075c6:	3b01      	subs	r3, #1
 80075c8:	60a3      	str	r3, [r4, #8]
 80075ca:	6823      	ldr	r3, [r4, #0]
 80075cc:	1c5a      	adds	r2, r3, #1
 80075ce:	6022      	str	r2, [r4, #0]
 80075d0:	701e      	strb	r6, [r3, #0]
 80075d2:	6962      	ldr	r2, [r4, #20]
 80075d4:	1c43      	adds	r3, r0, #1
 80075d6:	429a      	cmp	r2, r3
 80075d8:	d004      	beq.n	80075e4 <__swbuf_r+0x6e>
 80075da:	89a3      	ldrh	r3, [r4, #12]
 80075dc:	07db      	lsls	r3, r3, #31
 80075de:	d5e1      	bpl.n	80075a4 <__swbuf_r+0x2e>
 80075e0:	2e0a      	cmp	r6, #10
 80075e2:	d1df      	bne.n	80075a4 <__swbuf_r+0x2e>
 80075e4:	4621      	mov	r1, r4
 80075e6:	4628      	mov	r0, r5
 80075e8:	f7ff fa7a 	bl	8006ae0 <_fflush_r>
 80075ec:	2800      	cmp	r0, #0
 80075ee:	d0d9      	beq.n	80075a4 <__swbuf_r+0x2e>
 80075f0:	e7d6      	b.n	80075a0 <__swbuf_r+0x2a>
	...

080075f4 <__swsetup_r>:
 80075f4:	b538      	push	{r3, r4, r5, lr}
 80075f6:	4b29      	ldr	r3, [pc, #164]	@ (800769c <__swsetup_r+0xa8>)
 80075f8:	4605      	mov	r5, r0
 80075fa:	6818      	ldr	r0, [r3, #0]
 80075fc:	460c      	mov	r4, r1
 80075fe:	b118      	cbz	r0, 8007608 <__swsetup_r+0x14>
 8007600:	6a03      	ldr	r3, [r0, #32]
 8007602:	b90b      	cbnz	r3, 8007608 <__swsetup_r+0x14>
 8007604:	f7fc fdd8 	bl	80041b8 <__sinit>
 8007608:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800760c:	0719      	lsls	r1, r3, #28
 800760e:	d422      	bmi.n	8007656 <__swsetup_r+0x62>
 8007610:	06da      	lsls	r2, r3, #27
 8007612:	d407      	bmi.n	8007624 <__swsetup_r+0x30>
 8007614:	2209      	movs	r2, #9
 8007616:	602a      	str	r2, [r5, #0]
 8007618:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800761c:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8007620:	81a3      	strh	r3, [r4, #12]
 8007622:	e033      	b.n	800768c <__swsetup_r+0x98>
 8007624:	0758      	lsls	r0, r3, #29
 8007626:	d512      	bpl.n	800764e <__swsetup_r+0x5a>
 8007628:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 800762a:	b141      	cbz	r1, 800763e <__swsetup_r+0x4a>
 800762c:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8007630:	4299      	cmp	r1, r3
 8007632:	d002      	beq.n	800763a <__swsetup_r+0x46>
 8007634:	4628      	mov	r0, r5
 8007636:	f000 f965 	bl	8007904 <_free_r>
 800763a:	2300      	movs	r3, #0
 800763c:	6363      	str	r3, [r4, #52]	@ 0x34
 800763e:	89a3      	ldrh	r3, [r4, #12]
 8007640:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8007644:	81a3      	strh	r3, [r4, #12]
 8007646:	2300      	movs	r3, #0
 8007648:	6063      	str	r3, [r4, #4]
 800764a:	6923      	ldr	r3, [r4, #16]
 800764c:	6023      	str	r3, [r4, #0]
 800764e:	89a3      	ldrh	r3, [r4, #12]
 8007650:	f043 0308 	orr.w	r3, r3, #8
 8007654:	81a3      	strh	r3, [r4, #12]
 8007656:	6923      	ldr	r3, [r4, #16]
 8007658:	b94b      	cbnz	r3, 800766e <__swsetup_r+0x7a>
 800765a:	89a3      	ldrh	r3, [r4, #12]
 800765c:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8007660:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8007664:	d003      	beq.n	800766e <__swsetup_r+0x7a>
 8007666:	4621      	mov	r1, r4
 8007668:	4628      	mov	r0, r5
 800766a:	f000 f84b 	bl	8007704 <__smakebuf_r>
 800766e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8007672:	f013 0201 	ands.w	r2, r3, #1
 8007676:	d00a      	beq.n	800768e <__swsetup_r+0x9a>
 8007678:	2200      	movs	r2, #0
 800767a:	60a2      	str	r2, [r4, #8]
 800767c:	6962      	ldr	r2, [r4, #20]
 800767e:	4252      	negs	r2, r2
 8007680:	61a2      	str	r2, [r4, #24]
 8007682:	6922      	ldr	r2, [r4, #16]
 8007684:	b942      	cbnz	r2, 8007698 <__swsetup_r+0xa4>
 8007686:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 800768a:	d1c5      	bne.n	8007618 <__swsetup_r+0x24>
 800768c:	bd38      	pop	{r3, r4, r5, pc}
 800768e:	0799      	lsls	r1, r3, #30
 8007690:	bf58      	it	pl
 8007692:	6962      	ldrpl	r2, [r4, #20]
 8007694:	60a2      	str	r2, [r4, #8]
 8007696:	e7f4      	b.n	8007682 <__swsetup_r+0x8e>
 8007698:	2000      	movs	r0, #0
 800769a:	e7f7      	b.n	800768c <__swsetup_r+0x98>
 800769c:	20000178 	.word	0x20000178

080076a0 <__ascii_wctomb>:
 80076a0:	4603      	mov	r3, r0
 80076a2:	4608      	mov	r0, r1
 80076a4:	b141      	cbz	r1, 80076b8 <__ascii_wctomb+0x18>
 80076a6:	2aff      	cmp	r2, #255	@ 0xff
 80076a8:	d904      	bls.n	80076b4 <__ascii_wctomb+0x14>
 80076aa:	228a      	movs	r2, #138	@ 0x8a
 80076ac:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 80076b0:	601a      	str	r2, [r3, #0]
 80076b2:	4770      	bx	lr
 80076b4:	2001      	movs	r0, #1
 80076b6:	700a      	strb	r2, [r1, #0]
 80076b8:	4770      	bx	lr

080076ba <__swhatbuf_r>:
 80076ba:	b570      	push	{r4, r5, r6, lr}
 80076bc:	460c      	mov	r4, r1
 80076be:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80076c2:	4615      	mov	r5, r2
 80076c4:	2900      	cmp	r1, #0
 80076c6:	461e      	mov	r6, r3
 80076c8:	b096      	sub	sp, #88	@ 0x58
 80076ca:	da0c      	bge.n	80076e6 <__swhatbuf_r+0x2c>
 80076cc:	89a3      	ldrh	r3, [r4, #12]
 80076ce:	2100      	movs	r1, #0
 80076d0:	f013 0f80 	tst.w	r3, #128	@ 0x80
 80076d4:	bf14      	ite	ne
 80076d6:	2340      	movne	r3, #64	@ 0x40
 80076d8:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 80076dc:	2000      	movs	r0, #0
 80076de:	6031      	str	r1, [r6, #0]
 80076e0:	602b      	str	r3, [r5, #0]
 80076e2:	b016      	add	sp, #88	@ 0x58
 80076e4:	bd70      	pop	{r4, r5, r6, pc}
 80076e6:	466a      	mov	r2, sp
 80076e8:	f000 f872 	bl	80077d0 <_fstat_r>
 80076ec:	2800      	cmp	r0, #0
 80076ee:	dbed      	blt.n	80076cc <__swhatbuf_r+0x12>
 80076f0:	9901      	ldr	r1, [sp, #4]
 80076f2:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 80076f6:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 80076fa:	4259      	negs	r1, r3
 80076fc:	4159      	adcs	r1, r3
 80076fe:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8007702:	e7eb      	b.n	80076dc <__swhatbuf_r+0x22>

08007704 <__smakebuf_r>:
 8007704:	898b      	ldrh	r3, [r1, #12]
 8007706:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8007708:	079d      	lsls	r5, r3, #30
 800770a:	4606      	mov	r6, r0
 800770c:	460c      	mov	r4, r1
 800770e:	d507      	bpl.n	8007720 <__smakebuf_r+0x1c>
 8007710:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8007714:	6023      	str	r3, [r4, #0]
 8007716:	6123      	str	r3, [r4, #16]
 8007718:	2301      	movs	r3, #1
 800771a:	6163      	str	r3, [r4, #20]
 800771c:	b003      	add	sp, #12
 800771e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8007720:	466a      	mov	r2, sp
 8007722:	ab01      	add	r3, sp, #4
 8007724:	f7ff ffc9 	bl	80076ba <__swhatbuf_r>
 8007728:	9f00      	ldr	r7, [sp, #0]
 800772a:	4605      	mov	r5, r0
 800772c:	4639      	mov	r1, r7
 800772e:	4630      	mov	r0, r6
 8007730:	f7ff f8c4 	bl	80068bc <_malloc_r>
 8007734:	b948      	cbnz	r0, 800774a <__smakebuf_r+0x46>
 8007736:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800773a:	059a      	lsls	r2, r3, #22
 800773c:	d4ee      	bmi.n	800771c <__smakebuf_r+0x18>
 800773e:	f023 0303 	bic.w	r3, r3, #3
 8007742:	f043 0302 	orr.w	r3, r3, #2
 8007746:	81a3      	strh	r3, [r4, #12]
 8007748:	e7e2      	b.n	8007710 <__smakebuf_r+0xc>
 800774a:	89a3      	ldrh	r3, [r4, #12]
 800774c:	e9c4 0704 	strd	r0, r7, [r4, #16]
 8007750:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8007754:	81a3      	strh	r3, [r4, #12]
 8007756:	9b01      	ldr	r3, [sp, #4]
 8007758:	6020      	str	r0, [r4, #0]
 800775a:	b15b      	cbz	r3, 8007774 <__smakebuf_r+0x70>
 800775c:	4630      	mov	r0, r6
 800775e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8007762:	f000 f847 	bl	80077f4 <_isatty_r>
 8007766:	b128      	cbz	r0, 8007774 <__smakebuf_r+0x70>
 8007768:	89a3      	ldrh	r3, [r4, #12]
 800776a:	f023 0303 	bic.w	r3, r3, #3
 800776e:	f043 0301 	orr.w	r3, r3, #1
 8007772:	81a3      	strh	r3, [r4, #12]
 8007774:	89a3      	ldrh	r3, [r4, #12]
 8007776:	431d      	orrs	r5, r3
 8007778:	81a5      	strh	r5, [r4, #12]
 800777a:	e7cf      	b.n	800771c <__smakebuf_r+0x18>

0800777c <memmove>:
 800777c:	4288      	cmp	r0, r1
 800777e:	b510      	push	{r4, lr}
 8007780:	eb01 0402 	add.w	r4, r1, r2
 8007784:	d902      	bls.n	800778c <memmove+0x10>
 8007786:	4284      	cmp	r4, r0
 8007788:	4623      	mov	r3, r4
 800778a:	d807      	bhi.n	800779c <memmove+0x20>
 800778c:	1e43      	subs	r3, r0, #1
 800778e:	42a1      	cmp	r1, r4
 8007790:	d008      	beq.n	80077a4 <memmove+0x28>
 8007792:	f811 2b01 	ldrb.w	r2, [r1], #1
 8007796:	f803 2f01 	strb.w	r2, [r3, #1]!
 800779a:	e7f8      	b.n	800778e <memmove+0x12>
 800779c:	4601      	mov	r1, r0
 800779e:	4402      	add	r2, r0
 80077a0:	428a      	cmp	r2, r1
 80077a2:	d100      	bne.n	80077a6 <memmove+0x2a>
 80077a4:	bd10      	pop	{r4, pc}
 80077a6:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 80077aa:	f802 4d01 	strb.w	r4, [r2, #-1]!
 80077ae:	e7f7      	b.n	80077a0 <memmove+0x24>

080077b0 <_close_r>:
 80077b0:	b538      	push	{r3, r4, r5, lr}
 80077b2:	2300      	movs	r3, #0
 80077b4:	4d05      	ldr	r5, [pc, #20]	@ (80077cc <_close_r+0x1c>)
 80077b6:	4604      	mov	r4, r0
 80077b8:	4608      	mov	r0, r1
 80077ba:	602b      	str	r3, [r5, #0]
 80077bc:	f7fb fc57 	bl	800306e <_close>
 80077c0:	1c43      	adds	r3, r0, #1
 80077c2:	d102      	bne.n	80077ca <_close_r+0x1a>
 80077c4:	682b      	ldr	r3, [r5, #0]
 80077c6:	b103      	cbz	r3, 80077ca <_close_r+0x1a>
 80077c8:	6023      	str	r3, [r4, #0]
 80077ca:	bd38      	pop	{r3, r4, r5, pc}
 80077cc:	200003f0 	.word	0x200003f0

080077d0 <_fstat_r>:
 80077d0:	b538      	push	{r3, r4, r5, lr}
 80077d2:	2300      	movs	r3, #0
 80077d4:	4d06      	ldr	r5, [pc, #24]	@ (80077f0 <_fstat_r+0x20>)
 80077d6:	4604      	mov	r4, r0
 80077d8:	4608      	mov	r0, r1
 80077da:	4611      	mov	r1, r2
 80077dc:	602b      	str	r3, [r5, #0]
 80077de:	f7fb fc51 	bl	8003084 <_fstat>
 80077e2:	1c43      	adds	r3, r0, #1
 80077e4:	d102      	bne.n	80077ec <_fstat_r+0x1c>
 80077e6:	682b      	ldr	r3, [r5, #0]
 80077e8:	b103      	cbz	r3, 80077ec <_fstat_r+0x1c>
 80077ea:	6023      	str	r3, [r4, #0]
 80077ec:	bd38      	pop	{r3, r4, r5, pc}
 80077ee:	bf00      	nop
 80077f0:	200003f0 	.word	0x200003f0

080077f4 <_isatty_r>:
 80077f4:	b538      	push	{r3, r4, r5, lr}
 80077f6:	2300      	movs	r3, #0
 80077f8:	4d05      	ldr	r5, [pc, #20]	@ (8007810 <_isatty_r+0x1c>)
 80077fa:	4604      	mov	r4, r0
 80077fc:	4608      	mov	r0, r1
 80077fe:	602b      	str	r3, [r5, #0]
 8007800:	f7fb fc4f 	bl	80030a2 <_isatty>
 8007804:	1c43      	adds	r3, r0, #1
 8007806:	d102      	bne.n	800780e <_isatty_r+0x1a>
 8007808:	682b      	ldr	r3, [r5, #0]
 800780a:	b103      	cbz	r3, 800780e <_isatty_r+0x1a>
 800780c:	6023      	str	r3, [r4, #0]
 800780e:	bd38      	pop	{r3, r4, r5, pc}
 8007810:	200003f0 	.word	0x200003f0

08007814 <_lseek_r>:
 8007814:	b538      	push	{r3, r4, r5, lr}
 8007816:	4604      	mov	r4, r0
 8007818:	4608      	mov	r0, r1
 800781a:	4611      	mov	r1, r2
 800781c:	2200      	movs	r2, #0
 800781e:	4d05      	ldr	r5, [pc, #20]	@ (8007834 <_lseek_r+0x20>)
 8007820:	602a      	str	r2, [r5, #0]
 8007822:	461a      	mov	r2, r3
 8007824:	f7fb fc47 	bl	80030b6 <_lseek>
 8007828:	1c43      	adds	r3, r0, #1
 800782a:	d102      	bne.n	8007832 <_lseek_r+0x1e>
 800782c:	682b      	ldr	r3, [r5, #0]
 800782e:	b103      	cbz	r3, 8007832 <_lseek_r+0x1e>
 8007830:	6023      	str	r3, [r4, #0]
 8007832:	bd38      	pop	{r3, r4, r5, pc}
 8007834:	200003f0 	.word	0x200003f0

08007838 <_read_r>:
 8007838:	b538      	push	{r3, r4, r5, lr}
 800783a:	4604      	mov	r4, r0
 800783c:	4608      	mov	r0, r1
 800783e:	4611      	mov	r1, r2
 8007840:	2200      	movs	r2, #0
 8007842:	4d05      	ldr	r5, [pc, #20]	@ (8007858 <_read_r+0x20>)
 8007844:	602a      	str	r2, [r5, #0]
 8007846:	461a      	mov	r2, r3
 8007848:	f7fb fbf4 	bl	8003034 <_read>
 800784c:	1c43      	adds	r3, r0, #1
 800784e:	d102      	bne.n	8007856 <_read_r+0x1e>
 8007850:	682b      	ldr	r3, [r5, #0]
 8007852:	b103      	cbz	r3, 8007856 <_read_r+0x1e>
 8007854:	6023      	str	r3, [r4, #0]
 8007856:	bd38      	pop	{r3, r4, r5, pc}
 8007858:	200003f0 	.word	0x200003f0

0800785c <_sbrk_r>:
 800785c:	b538      	push	{r3, r4, r5, lr}
 800785e:	2300      	movs	r3, #0
 8007860:	4d05      	ldr	r5, [pc, #20]	@ (8007878 <_sbrk_r+0x1c>)
 8007862:	4604      	mov	r4, r0
 8007864:	4608      	mov	r0, r1
 8007866:	602b      	str	r3, [r5, #0]
 8007868:	f7fb fc32 	bl	80030d0 <_sbrk>
 800786c:	1c43      	adds	r3, r0, #1
 800786e:	d102      	bne.n	8007876 <_sbrk_r+0x1a>
 8007870:	682b      	ldr	r3, [r5, #0]
 8007872:	b103      	cbz	r3, 8007876 <_sbrk_r+0x1a>
 8007874:	6023      	str	r3, [r4, #0]
 8007876:	bd38      	pop	{r3, r4, r5, pc}
 8007878:	200003f0 	.word	0x200003f0

0800787c <_write_r>:
 800787c:	b538      	push	{r3, r4, r5, lr}
 800787e:	4604      	mov	r4, r0
 8007880:	4608      	mov	r0, r1
 8007882:	4611      	mov	r1, r2
 8007884:	2200      	movs	r2, #0
 8007886:	4d05      	ldr	r5, [pc, #20]	@ (800789c <_write_r+0x20>)
 8007888:	602a      	str	r2, [r5, #0]
 800788a:	461a      	mov	r2, r3
 800788c:	f7fb fd02 	bl	8003294 <_write>
 8007890:	1c43      	adds	r3, r0, #1
 8007892:	d102      	bne.n	800789a <_write_r+0x1e>
 8007894:	682b      	ldr	r3, [r5, #0]
 8007896:	b103      	cbz	r3, 800789a <_write_r+0x1e>
 8007898:	6023      	str	r3, [r4, #0]
 800789a:	bd38      	pop	{r3, r4, r5, pc}
 800789c:	200003f0 	.word	0x200003f0

080078a0 <__assert_func>:
 80078a0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80078a2:	4614      	mov	r4, r2
 80078a4:	461a      	mov	r2, r3
 80078a6:	4b09      	ldr	r3, [pc, #36]	@ (80078cc <__assert_func+0x2c>)
 80078a8:	4605      	mov	r5, r0
 80078aa:	681b      	ldr	r3, [r3, #0]
 80078ac:	68d8      	ldr	r0, [r3, #12]
 80078ae:	b954      	cbnz	r4, 80078c6 <__assert_func+0x26>
 80078b0:	4b07      	ldr	r3, [pc, #28]	@ (80078d0 <__assert_func+0x30>)
 80078b2:	461c      	mov	r4, r3
 80078b4:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80078b8:	9100      	str	r1, [sp, #0]
 80078ba:	462b      	mov	r3, r5
 80078bc:	4905      	ldr	r1, [pc, #20]	@ (80078d4 <__assert_func+0x34>)
 80078be:	f000 f871 	bl	80079a4 <fiprintf>
 80078c2:	f000 f881 	bl	80079c8 <abort>
 80078c6:	4b04      	ldr	r3, [pc, #16]	@ (80078d8 <__assert_func+0x38>)
 80078c8:	e7f4      	b.n	80078b4 <__assert_func+0x14>
 80078ca:	bf00      	nop
 80078cc:	20000178 	.word	0x20000178
 80078d0:	0800985b 	.word	0x0800985b
 80078d4:	0800982d 	.word	0x0800982d
 80078d8:	08009820 	.word	0x08009820

080078dc <_calloc_r>:
 80078dc:	b570      	push	{r4, r5, r6, lr}
 80078de:	fba1 5402 	umull	r5, r4, r1, r2
 80078e2:	b93c      	cbnz	r4, 80078f4 <_calloc_r+0x18>
 80078e4:	4629      	mov	r1, r5
 80078e6:	f7fe ffe9 	bl	80068bc <_malloc_r>
 80078ea:	4606      	mov	r6, r0
 80078ec:	b928      	cbnz	r0, 80078fa <_calloc_r+0x1e>
 80078ee:	2600      	movs	r6, #0
 80078f0:	4630      	mov	r0, r6
 80078f2:	bd70      	pop	{r4, r5, r6, pc}
 80078f4:	220c      	movs	r2, #12
 80078f6:	6002      	str	r2, [r0, #0]
 80078f8:	e7f9      	b.n	80078ee <_calloc_r+0x12>
 80078fa:	462a      	mov	r2, r5
 80078fc:	4621      	mov	r1, r4
 80078fe:	f7fd fb33 	bl	8004f68 <memset>
 8007902:	e7f5      	b.n	80078f0 <_calloc_r+0x14>

08007904 <_free_r>:
 8007904:	b538      	push	{r3, r4, r5, lr}
 8007906:	4605      	mov	r5, r0
 8007908:	2900      	cmp	r1, #0
 800790a:	d040      	beq.n	800798e <_free_r+0x8a>
 800790c:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8007910:	1f0c      	subs	r4, r1, #4
 8007912:	2b00      	cmp	r3, #0
 8007914:	bfb8      	it	lt
 8007916:	18e4      	addlt	r4, r4, r3
 8007918:	f7ff f90a 	bl	8006b30 <__malloc_lock>
 800791c:	4a1c      	ldr	r2, [pc, #112]	@ (8007990 <_free_r+0x8c>)
 800791e:	6813      	ldr	r3, [r2, #0]
 8007920:	b933      	cbnz	r3, 8007930 <_free_r+0x2c>
 8007922:	6063      	str	r3, [r4, #4]
 8007924:	6014      	str	r4, [r2, #0]
 8007926:	4628      	mov	r0, r5
 8007928:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800792c:	f7ff b906 	b.w	8006b3c <__malloc_unlock>
 8007930:	42a3      	cmp	r3, r4
 8007932:	d908      	bls.n	8007946 <_free_r+0x42>
 8007934:	6820      	ldr	r0, [r4, #0]
 8007936:	1821      	adds	r1, r4, r0
 8007938:	428b      	cmp	r3, r1
 800793a:	bf01      	itttt	eq
 800793c:	6819      	ldreq	r1, [r3, #0]
 800793e:	685b      	ldreq	r3, [r3, #4]
 8007940:	1809      	addeq	r1, r1, r0
 8007942:	6021      	streq	r1, [r4, #0]
 8007944:	e7ed      	b.n	8007922 <_free_r+0x1e>
 8007946:	461a      	mov	r2, r3
 8007948:	685b      	ldr	r3, [r3, #4]
 800794a:	b10b      	cbz	r3, 8007950 <_free_r+0x4c>
 800794c:	42a3      	cmp	r3, r4
 800794e:	d9fa      	bls.n	8007946 <_free_r+0x42>
 8007950:	6811      	ldr	r1, [r2, #0]
 8007952:	1850      	adds	r0, r2, r1
 8007954:	42a0      	cmp	r0, r4
 8007956:	d10b      	bne.n	8007970 <_free_r+0x6c>
 8007958:	6820      	ldr	r0, [r4, #0]
 800795a:	4401      	add	r1, r0
 800795c:	1850      	adds	r0, r2, r1
 800795e:	4283      	cmp	r3, r0
 8007960:	6011      	str	r1, [r2, #0]
 8007962:	d1e0      	bne.n	8007926 <_free_r+0x22>
 8007964:	6818      	ldr	r0, [r3, #0]
 8007966:	685b      	ldr	r3, [r3, #4]
 8007968:	4408      	add	r0, r1
 800796a:	6010      	str	r0, [r2, #0]
 800796c:	6053      	str	r3, [r2, #4]
 800796e:	e7da      	b.n	8007926 <_free_r+0x22>
 8007970:	d902      	bls.n	8007978 <_free_r+0x74>
 8007972:	230c      	movs	r3, #12
 8007974:	602b      	str	r3, [r5, #0]
 8007976:	e7d6      	b.n	8007926 <_free_r+0x22>
 8007978:	6820      	ldr	r0, [r4, #0]
 800797a:	1821      	adds	r1, r4, r0
 800797c:	428b      	cmp	r3, r1
 800797e:	bf01      	itttt	eq
 8007980:	6819      	ldreq	r1, [r3, #0]
 8007982:	685b      	ldreq	r3, [r3, #4]
 8007984:	1809      	addeq	r1, r1, r0
 8007986:	6021      	streq	r1, [r4, #0]
 8007988:	6063      	str	r3, [r4, #4]
 800798a:	6054      	str	r4, [r2, #4]
 800798c:	e7cb      	b.n	8007926 <_free_r+0x22>
 800798e:	bd38      	pop	{r3, r4, r5, pc}
 8007990:	200003ec 	.word	0x200003ec

08007994 <_malloc_usable_size_r>:
 8007994:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8007998:	1f18      	subs	r0, r3, #4
 800799a:	2b00      	cmp	r3, #0
 800799c:	bfbc      	itt	lt
 800799e:	580b      	ldrlt	r3, [r1, r0]
 80079a0:	18c0      	addlt	r0, r0, r3
 80079a2:	4770      	bx	lr

080079a4 <fiprintf>:
 80079a4:	b40e      	push	{r1, r2, r3}
 80079a6:	b503      	push	{r0, r1, lr}
 80079a8:	4601      	mov	r1, r0
 80079aa:	ab03      	add	r3, sp, #12
 80079ac:	4805      	ldr	r0, [pc, #20]	@ (80079c4 <fiprintf+0x20>)
 80079ae:	f853 2b04 	ldr.w	r2, [r3], #4
 80079b2:	6800      	ldr	r0, [r0, #0]
 80079b4:	9301      	str	r3, [sp, #4]
 80079b6:	f7fe fe3f 	bl	8006638 <_vfiprintf_r>
 80079ba:	b002      	add	sp, #8
 80079bc:	f85d eb04 	ldr.w	lr, [sp], #4
 80079c0:	b003      	add	sp, #12
 80079c2:	4770      	bx	lr
 80079c4:	20000178 	.word	0x20000178

080079c8 <abort>:
 80079c8:	2006      	movs	r0, #6
 80079ca:	b508      	push	{r3, lr}
 80079cc:	f000 f82c 	bl	8007a28 <raise>
 80079d0:	2001      	movs	r0, #1
 80079d2:	f7fb fb24 	bl	800301e <_exit>

080079d6 <_raise_r>:
 80079d6:	291f      	cmp	r1, #31
 80079d8:	b538      	push	{r3, r4, r5, lr}
 80079da:	4605      	mov	r5, r0
 80079dc:	460c      	mov	r4, r1
 80079de:	d904      	bls.n	80079ea <_raise_r+0x14>
 80079e0:	2316      	movs	r3, #22
 80079e2:	6003      	str	r3, [r0, #0]
 80079e4:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 80079e8:	bd38      	pop	{r3, r4, r5, pc}
 80079ea:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 80079ec:	b112      	cbz	r2, 80079f4 <_raise_r+0x1e>
 80079ee:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 80079f2:	b94b      	cbnz	r3, 8007a08 <_raise_r+0x32>
 80079f4:	4628      	mov	r0, r5
 80079f6:	f000 f831 	bl	8007a5c <_getpid_r>
 80079fa:	4622      	mov	r2, r4
 80079fc:	4601      	mov	r1, r0
 80079fe:	4628      	mov	r0, r5
 8007a00:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8007a04:	f000 b818 	b.w	8007a38 <_kill_r>
 8007a08:	2b01      	cmp	r3, #1
 8007a0a:	d00a      	beq.n	8007a22 <_raise_r+0x4c>
 8007a0c:	1c59      	adds	r1, r3, #1
 8007a0e:	d103      	bne.n	8007a18 <_raise_r+0x42>
 8007a10:	2316      	movs	r3, #22
 8007a12:	6003      	str	r3, [r0, #0]
 8007a14:	2001      	movs	r0, #1
 8007a16:	e7e7      	b.n	80079e8 <_raise_r+0x12>
 8007a18:	2100      	movs	r1, #0
 8007a1a:	4620      	mov	r0, r4
 8007a1c:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 8007a20:	4798      	blx	r3
 8007a22:	2000      	movs	r0, #0
 8007a24:	e7e0      	b.n	80079e8 <_raise_r+0x12>
	...

08007a28 <raise>:
 8007a28:	4b02      	ldr	r3, [pc, #8]	@ (8007a34 <raise+0xc>)
 8007a2a:	4601      	mov	r1, r0
 8007a2c:	6818      	ldr	r0, [r3, #0]
 8007a2e:	f7ff bfd2 	b.w	80079d6 <_raise_r>
 8007a32:	bf00      	nop
 8007a34:	20000178 	.word	0x20000178

08007a38 <_kill_r>:
 8007a38:	b538      	push	{r3, r4, r5, lr}
 8007a3a:	2300      	movs	r3, #0
 8007a3c:	4d06      	ldr	r5, [pc, #24]	@ (8007a58 <_kill_r+0x20>)
 8007a3e:	4604      	mov	r4, r0
 8007a40:	4608      	mov	r0, r1
 8007a42:	4611      	mov	r1, r2
 8007a44:	602b      	str	r3, [r5, #0]
 8007a46:	f7fb fada 	bl	8002ffe <_kill>
 8007a4a:	1c43      	adds	r3, r0, #1
 8007a4c:	d102      	bne.n	8007a54 <_kill_r+0x1c>
 8007a4e:	682b      	ldr	r3, [r5, #0]
 8007a50:	b103      	cbz	r3, 8007a54 <_kill_r+0x1c>
 8007a52:	6023      	str	r3, [r4, #0]
 8007a54:	bd38      	pop	{r3, r4, r5, pc}
 8007a56:	bf00      	nop
 8007a58:	200003f0 	.word	0x200003f0

08007a5c <_getpid_r>:
 8007a5c:	f7fb bac8 	b.w	8002ff0 <_getpid>

08007a60 <pow>:
 8007a60:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8007a64:	4614      	mov	r4, r2
 8007a66:	461d      	mov	r5, r3
 8007a68:	4680      	mov	r8, r0
 8007a6a:	4689      	mov	r9, r1
 8007a6c:	f000 faa4 	bl	8007fb8 <__ieee754_pow>
 8007a70:	4622      	mov	r2, r4
 8007a72:	4606      	mov	r6, r0
 8007a74:	460f      	mov	r7, r1
 8007a76:	462b      	mov	r3, r5
 8007a78:	4620      	mov	r0, r4
 8007a7a:	4629      	mov	r1, r5
 8007a7c:	f7f8 ffd6 	bl	8000a2c <__aeabi_dcmpun>
 8007a80:	bbc8      	cbnz	r0, 8007af6 <pow+0x96>
 8007a82:	2200      	movs	r2, #0
 8007a84:	2300      	movs	r3, #0
 8007a86:	4640      	mov	r0, r8
 8007a88:	4649      	mov	r1, r9
 8007a8a:	f7f8 ff9d 	bl	80009c8 <__aeabi_dcmpeq>
 8007a8e:	b1b8      	cbz	r0, 8007ac0 <pow+0x60>
 8007a90:	2200      	movs	r2, #0
 8007a92:	2300      	movs	r3, #0
 8007a94:	4620      	mov	r0, r4
 8007a96:	4629      	mov	r1, r5
 8007a98:	f7f8 ff96 	bl	80009c8 <__aeabi_dcmpeq>
 8007a9c:	2800      	cmp	r0, #0
 8007a9e:	d141      	bne.n	8007b24 <pow+0xc4>
 8007aa0:	4620      	mov	r0, r4
 8007aa2:	4629      	mov	r1, r5
 8007aa4:	f000 f868 	bl	8007b78 <finite>
 8007aa8:	b328      	cbz	r0, 8007af6 <pow+0x96>
 8007aaa:	2200      	movs	r2, #0
 8007aac:	2300      	movs	r3, #0
 8007aae:	4620      	mov	r0, r4
 8007ab0:	4629      	mov	r1, r5
 8007ab2:	f7f8 ff93 	bl	80009dc <__aeabi_dcmplt>
 8007ab6:	b1f0      	cbz	r0, 8007af6 <pow+0x96>
 8007ab8:	f7fd fa62 	bl	8004f80 <__errno>
 8007abc:	2322      	movs	r3, #34	@ 0x22
 8007abe:	e019      	b.n	8007af4 <pow+0x94>
 8007ac0:	4630      	mov	r0, r6
 8007ac2:	4639      	mov	r1, r7
 8007ac4:	f000 f858 	bl	8007b78 <finite>
 8007ac8:	b9c8      	cbnz	r0, 8007afe <pow+0x9e>
 8007aca:	4640      	mov	r0, r8
 8007acc:	4649      	mov	r1, r9
 8007ace:	f000 f853 	bl	8007b78 <finite>
 8007ad2:	b1a0      	cbz	r0, 8007afe <pow+0x9e>
 8007ad4:	4620      	mov	r0, r4
 8007ad6:	4629      	mov	r1, r5
 8007ad8:	f000 f84e 	bl	8007b78 <finite>
 8007adc:	b178      	cbz	r0, 8007afe <pow+0x9e>
 8007ade:	4632      	mov	r2, r6
 8007ae0:	463b      	mov	r3, r7
 8007ae2:	4630      	mov	r0, r6
 8007ae4:	4639      	mov	r1, r7
 8007ae6:	f7f8 ffa1 	bl	8000a2c <__aeabi_dcmpun>
 8007aea:	2800      	cmp	r0, #0
 8007aec:	d0e4      	beq.n	8007ab8 <pow+0x58>
 8007aee:	f7fd fa47 	bl	8004f80 <__errno>
 8007af2:	2321      	movs	r3, #33	@ 0x21
 8007af4:	6003      	str	r3, [r0, #0]
 8007af6:	4630      	mov	r0, r6
 8007af8:	4639      	mov	r1, r7
 8007afa:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8007afe:	2200      	movs	r2, #0
 8007b00:	2300      	movs	r3, #0
 8007b02:	4630      	mov	r0, r6
 8007b04:	4639      	mov	r1, r7
 8007b06:	f7f8 ff5f 	bl	80009c8 <__aeabi_dcmpeq>
 8007b0a:	2800      	cmp	r0, #0
 8007b0c:	d0f3      	beq.n	8007af6 <pow+0x96>
 8007b0e:	4640      	mov	r0, r8
 8007b10:	4649      	mov	r1, r9
 8007b12:	f000 f831 	bl	8007b78 <finite>
 8007b16:	2800      	cmp	r0, #0
 8007b18:	d0ed      	beq.n	8007af6 <pow+0x96>
 8007b1a:	4620      	mov	r0, r4
 8007b1c:	4629      	mov	r1, r5
 8007b1e:	f000 f82b 	bl	8007b78 <finite>
 8007b22:	e7c8      	b.n	8007ab6 <pow+0x56>
 8007b24:	2600      	movs	r6, #0
 8007b26:	4f01      	ldr	r7, [pc, #4]	@ (8007b2c <pow+0xcc>)
 8007b28:	e7e5      	b.n	8007af6 <pow+0x96>
 8007b2a:	bf00      	nop
 8007b2c:	3ff00000 	.word	0x3ff00000

08007b30 <sqrt>:
 8007b30:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007b32:	4606      	mov	r6, r0
 8007b34:	460f      	mov	r7, r1
 8007b36:	f000 f825 	bl	8007b84 <__ieee754_sqrt>
 8007b3a:	4632      	mov	r2, r6
 8007b3c:	4604      	mov	r4, r0
 8007b3e:	460d      	mov	r5, r1
 8007b40:	463b      	mov	r3, r7
 8007b42:	4630      	mov	r0, r6
 8007b44:	4639      	mov	r1, r7
 8007b46:	f7f8 ff71 	bl	8000a2c <__aeabi_dcmpun>
 8007b4a:	b990      	cbnz	r0, 8007b72 <sqrt+0x42>
 8007b4c:	2200      	movs	r2, #0
 8007b4e:	2300      	movs	r3, #0
 8007b50:	4630      	mov	r0, r6
 8007b52:	4639      	mov	r1, r7
 8007b54:	f7f8 ff42 	bl	80009dc <__aeabi_dcmplt>
 8007b58:	b158      	cbz	r0, 8007b72 <sqrt+0x42>
 8007b5a:	f7fd fa11 	bl	8004f80 <__errno>
 8007b5e:	2321      	movs	r3, #33	@ 0x21
 8007b60:	2200      	movs	r2, #0
 8007b62:	6003      	str	r3, [r0, #0]
 8007b64:	2300      	movs	r3, #0
 8007b66:	4610      	mov	r0, r2
 8007b68:	4619      	mov	r1, r3
 8007b6a:	f7f8 fdef 	bl	800074c <__aeabi_ddiv>
 8007b6e:	4604      	mov	r4, r0
 8007b70:	460d      	mov	r5, r1
 8007b72:	4620      	mov	r0, r4
 8007b74:	4629      	mov	r1, r5
 8007b76:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08007b78 <finite>:
 8007b78:	f041 4000 	orr.w	r0, r1, #2147483648	@ 0x80000000
 8007b7c:	f500 1080 	add.w	r0, r0, #1048576	@ 0x100000
 8007b80:	0fc0      	lsrs	r0, r0, #31
 8007b82:	4770      	bx	lr

08007b84 <__ieee754_sqrt>:
 8007b84:	4a67      	ldr	r2, [pc, #412]	@ (8007d24 <__ieee754_sqrt+0x1a0>)
 8007b86:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007b8a:	438a      	bics	r2, r1
 8007b8c:	4606      	mov	r6, r0
 8007b8e:	460f      	mov	r7, r1
 8007b90:	460b      	mov	r3, r1
 8007b92:	4604      	mov	r4, r0
 8007b94:	d10e      	bne.n	8007bb4 <__ieee754_sqrt+0x30>
 8007b96:	4602      	mov	r2, r0
 8007b98:	f7f8 fcae 	bl	80004f8 <__aeabi_dmul>
 8007b9c:	4602      	mov	r2, r0
 8007b9e:	460b      	mov	r3, r1
 8007ba0:	4630      	mov	r0, r6
 8007ba2:	4639      	mov	r1, r7
 8007ba4:	f7f8 faf2 	bl	800018c <__adddf3>
 8007ba8:	4606      	mov	r6, r0
 8007baa:	460f      	mov	r7, r1
 8007bac:	4630      	mov	r0, r6
 8007bae:	4639      	mov	r1, r7
 8007bb0:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007bb4:	2900      	cmp	r1, #0
 8007bb6:	dc0c      	bgt.n	8007bd2 <__ieee754_sqrt+0x4e>
 8007bb8:	f021 4200 	bic.w	r2, r1, #2147483648	@ 0x80000000
 8007bbc:	4302      	orrs	r2, r0
 8007bbe:	d0f5      	beq.n	8007bac <__ieee754_sqrt+0x28>
 8007bc0:	b189      	cbz	r1, 8007be6 <__ieee754_sqrt+0x62>
 8007bc2:	4602      	mov	r2, r0
 8007bc4:	f7f8 fae0 	bl	8000188 <__aeabi_dsub>
 8007bc8:	4602      	mov	r2, r0
 8007bca:	460b      	mov	r3, r1
 8007bcc:	f7f8 fdbe 	bl	800074c <__aeabi_ddiv>
 8007bd0:	e7ea      	b.n	8007ba8 <__ieee754_sqrt+0x24>
 8007bd2:	150a      	asrs	r2, r1, #20
 8007bd4:	d115      	bne.n	8007c02 <__ieee754_sqrt+0x7e>
 8007bd6:	2100      	movs	r1, #0
 8007bd8:	e009      	b.n	8007bee <__ieee754_sqrt+0x6a>
 8007bda:	0ae3      	lsrs	r3, r4, #11
 8007bdc:	3a15      	subs	r2, #21
 8007bde:	0564      	lsls	r4, r4, #21
 8007be0:	2b00      	cmp	r3, #0
 8007be2:	d0fa      	beq.n	8007bda <__ieee754_sqrt+0x56>
 8007be4:	e7f7      	b.n	8007bd6 <__ieee754_sqrt+0x52>
 8007be6:	460a      	mov	r2, r1
 8007be8:	e7fa      	b.n	8007be0 <__ieee754_sqrt+0x5c>
 8007bea:	005b      	lsls	r3, r3, #1
 8007bec:	3101      	adds	r1, #1
 8007bee:	02d8      	lsls	r0, r3, #11
 8007bf0:	d5fb      	bpl.n	8007bea <__ieee754_sqrt+0x66>
 8007bf2:	1e48      	subs	r0, r1, #1
 8007bf4:	1a12      	subs	r2, r2, r0
 8007bf6:	f1c1 0020 	rsb	r0, r1, #32
 8007bfa:	fa24 f000 	lsr.w	r0, r4, r0
 8007bfe:	4303      	orrs	r3, r0
 8007c00:	408c      	lsls	r4, r1
 8007c02:	2600      	movs	r6, #0
 8007c04:	f2a2 37ff 	subw	r7, r2, #1023	@ 0x3ff
 8007c08:	2116      	movs	r1, #22
 8007c0a:	07d2      	lsls	r2, r2, #31
 8007c0c:	f44f 1000 	mov.w	r0, #2097152	@ 0x200000
 8007c10:	4632      	mov	r2, r6
 8007c12:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8007c16:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8007c1a:	bf5c      	itt	pl
 8007c1c:	005b      	lslpl	r3, r3, #1
 8007c1e:	eb03 73d4 	addpl.w	r3, r3, r4, lsr #31
 8007c22:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8007c26:	bf58      	it	pl
 8007c28:	0064      	lslpl	r4, r4, #1
 8007c2a:	eb03 73d4 	add.w	r3, r3, r4, lsr #31
 8007c2e:	107f      	asrs	r7, r7, #1
 8007c30:	0064      	lsls	r4, r4, #1
 8007c32:	1815      	adds	r5, r2, r0
 8007c34:	429d      	cmp	r5, r3
 8007c36:	bfde      	ittt	le
 8007c38:	182a      	addle	r2, r5, r0
 8007c3a:	1b5b      	suble	r3, r3, r5
 8007c3c:	1836      	addle	r6, r6, r0
 8007c3e:	0fe5      	lsrs	r5, r4, #31
 8007c40:	3901      	subs	r1, #1
 8007c42:	eb05 0343 	add.w	r3, r5, r3, lsl #1
 8007c46:	ea4f 0444 	mov.w	r4, r4, lsl #1
 8007c4a:	ea4f 0050 	mov.w	r0, r0, lsr #1
 8007c4e:	d1f0      	bne.n	8007c32 <__ieee754_sqrt+0xae>
 8007c50:	460d      	mov	r5, r1
 8007c52:	f04f 0a20 	mov.w	sl, #32
 8007c56:	f04f 4000 	mov.w	r0, #2147483648	@ 0x80000000
 8007c5a:	429a      	cmp	r2, r3
 8007c5c:	eb01 0c00 	add.w	ip, r1, r0
 8007c60:	db02      	blt.n	8007c68 <__ieee754_sqrt+0xe4>
 8007c62:	d113      	bne.n	8007c8c <__ieee754_sqrt+0x108>
 8007c64:	45a4      	cmp	ip, r4
 8007c66:	d811      	bhi.n	8007c8c <__ieee754_sqrt+0x108>
 8007c68:	f1bc 0f00 	cmp.w	ip, #0
 8007c6c:	eb0c 0100 	add.w	r1, ip, r0
 8007c70:	da42      	bge.n	8007cf8 <__ieee754_sqrt+0x174>
 8007c72:	2900      	cmp	r1, #0
 8007c74:	db40      	blt.n	8007cf8 <__ieee754_sqrt+0x174>
 8007c76:	f102 0e01 	add.w	lr, r2, #1
 8007c7a:	1a9b      	subs	r3, r3, r2
 8007c7c:	4672      	mov	r2, lr
 8007c7e:	45a4      	cmp	ip, r4
 8007c80:	bf88      	it	hi
 8007c82:	f103 33ff 	addhi.w	r3, r3, #4294967295	@ 0xffffffff
 8007c86:	eba4 040c 	sub.w	r4, r4, ip
 8007c8a:	4405      	add	r5, r0
 8007c8c:	ea4f 7cd4 	mov.w	ip, r4, lsr #31
 8007c90:	f1ba 0a01 	subs.w	sl, sl, #1
 8007c94:	eb0c 0343 	add.w	r3, ip, r3, lsl #1
 8007c98:	ea4f 0444 	mov.w	r4, r4, lsl #1
 8007c9c:	ea4f 0050 	mov.w	r0, r0, lsr #1
 8007ca0:	d1db      	bne.n	8007c5a <__ieee754_sqrt+0xd6>
 8007ca2:	431c      	orrs	r4, r3
 8007ca4:	d01a      	beq.n	8007cdc <__ieee754_sqrt+0x158>
 8007ca6:	4c20      	ldr	r4, [pc, #128]	@ (8007d28 <__ieee754_sqrt+0x1a4>)
 8007ca8:	f8df b080 	ldr.w	fp, [pc, #128]	@ 8007d2c <__ieee754_sqrt+0x1a8>
 8007cac:	e9d4 0100 	ldrd	r0, r1, [r4]
 8007cb0:	e9db 2300 	ldrd	r2, r3, [fp]
 8007cb4:	f7f8 fa68 	bl	8000188 <__aeabi_dsub>
 8007cb8:	e9d4 8900 	ldrd	r8, r9, [r4]
 8007cbc:	4602      	mov	r2, r0
 8007cbe:	460b      	mov	r3, r1
 8007cc0:	4640      	mov	r0, r8
 8007cc2:	4649      	mov	r1, r9
 8007cc4:	f7f8 fe94 	bl	80009f0 <__aeabi_dcmple>
 8007cc8:	b140      	cbz	r0, 8007cdc <__ieee754_sqrt+0x158>
 8007cca:	e9d4 0100 	ldrd	r0, r1, [r4]
 8007cce:	e9db 2300 	ldrd	r2, r3, [fp]
 8007cd2:	f1b5 3fff 	cmp.w	r5, #4294967295	@ 0xffffffff
 8007cd6:	d111      	bne.n	8007cfc <__ieee754_sqrt+0x178>
 8007cd8:	4655      	mov	r5, sl
 8007cda:	3601      	adds	r6, #1
 8007cdc:	1072      	asrs	r2, r6, #1
 8007cde:	086b      	lsrs	r3, r5, #1
 8007ce0:	07f1      	lsls	r1, r6, #31
 8007ce2:	f102 527f 	add.w	r2, r2, #1069547520	@ 0x3fc00000
 8007ce6:	f502 1200 	add.w	r2, r2, #2097152	@ 0x200000
 8007cea:	bf48      	it	mi
 8007cec:	f043 4300 	orrmi.w	r3, r3, #2147483648	@ 0x80000000
 8007cf0:	4618      	mov	r0, r3
 8007cf2:	eb02 5107 	add.w	r1, r2, r7, lsl #20
 8007cf6:	e757      	b.n	8007ba8 <__ieee754_sqrt+0x24>
 8007cf8:	4696      	mov	lr, r2
 8007cfa:	e7be      	b.n	8007c7a <__ieee754_sqrt+0xf6>
 8007cfc:	f7f8 fa46 	bl	800018c <__adddf3>
 8007d00:	e9d4 8900 	ldrd	r8, r9, [r4]
 8007d04:	4602      	mov	r2, r0
 8007d06:	460b      	mov	r3, r1
 8007d08:	4640      	mov	r0, r8
 8007d0a:	4649      	mov	r1, r9
 8007d0c:	f7f8 fe66 	bl	80009dc <__aeabi_dcmplt>
 8007d10:	b120      	cbz	r0, 8007d1c <__ieee754_sqrt+0x198>
 8007d12:	1ca8      	adds	r0, r5, #2
 8007d14:	bf08      	it	eq
 8007d16:	3601      	addeq	r6, #1
 8007d18:	3502      	adds	r5, #2
 8007d1a:	e7df      	b.n	8007cdc <__ieee754_sqrt+0x158>
 8007d1c:	1c6b      	adds	r3, r5, #1
 8007d1e:	f023 0501 	bic.w	r5, r3, #1
 8007d22:	e7db      	b.n	8007cdc <__ieee754_sqrt+0x158>
 8007d24:	7ff00000 	.word	0x7ff00000
 8007d28:	200001d0 	.word	0x200001d0
 8007d2c:	200001c8 	.word	0x200001c8

08007d30 <ceil>:
 8007d30:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007d34:	f3c1 570a 	ubfx	r7, r1, #20, #11
 8007d38:	f2a7 36ff 	subw	r6, r7, #1023	@ 0x3ff
 8007d3c:	2e13      	cmp	r6, #19
 8007d3e:	4602      	mov	r2, r0
 8007d40:	460b      	mov	r3, r1
 8007d42:	460c      	mov	r4, r1
 8007d44:	4605      	mov	r5, r0
 8007d46:	4680      	mov	r8, r0
 8007d48:	dc2f      	bgt.n	8007daa <ceil+0x7a>
 8007d4a:	2e00      	cmp	r6, #0
 8007d4c:	da11      	bge.n	8007d72 <ceil+0x42>
 8007d4e:	a332      	add	r3, pc, #200	@ (adr r3, 8007e18 <ceil+0xe8>)
 8007d50:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007d54:	f7f8 fa1a 	bl	800018c <__adddf3>
 8007d58:	2200      	movs	r2, #0
 8007d5a:	2300      	movs	r3, #0
 8007d5c:	f7f8 fe5c 	bl	8000a18 <__aeabi_dcmpgt>
 8007d60:	b120      	cbz	r0, 8007d6c <ceil+0x3c>
 8007d62:	2c00      	cmp	r4, #0
 8007d64:	db51      	blt.n	8007e0a <ceil+0xda>
 8007d66:	4325      	orrs	r5, r4
 8007d68:	d153      	bne.n	8007e12 <ceil+0xe2>
 8007d6a:	462c      	mov	r4, r5
 8007d6c:	4623      	mov	r3, r4
 8007d6e:	462a      	mov	r2, r5
 8007d70:	e024      	b.n	8007dbc <ceil+0x8c>
 8007d72:	4f2b      	ldr	r7, [pc, #172]	@ (8007e20 <ceil+0xf0>)
 8007d74:	4137      	asrs	r7, r6
 8007d76:	ea01 0c07 	and.w	ip, r1, r7
 8007d7a:	ea5c 0c00 	orrs.w	ip, ip, r0
 8007d7e:	d01d      	beq.n	8007dbc <ceil+0x8c>
 8007d80:	a325      	add	r3, pc, #148	@ (adr r3, 8007e18 <ceil+0xe8>)
 8007d82:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007d86:	f7f8 fa01 	bl	800018c <__adddf3>
 8007d8a:	2200      	movs	r2, #0
 8007d8c:	2300      	movs	r3, #0
 8007d8e:	f7f8 fe43 	bl	8000a18 <__aeabi_dcmpgt>
 8007d92:	2800      	cmp	r0, #0
 8007d94:	d0ea      	beq.n	8007d6c <ceil+0x3c>
 8007d96:	2c00      	cmp	r4, #0
 8007d98:	bfc2      	ittt	gt
 8007d9a:	f44f 1380 	movgt.w	r3, #1048576	@ 0x100000
 8007d9e:	4133      	asrgt	r3, r6
 8007da0:	18e4      	addgt	r4, r4, r3
 8007da2:	2500      	movs	r5, #0
 8007da4:	ea24 0407 	bic.w	r4, r4, r7
 8007da8:	e7e0      	b.n	8007d6c <ceil+0x3c>
 8007daa:	2e33      	cmp	r6, #51	@ 0x33
 8007dac:	dd0a      	ble.n	8007dc4 <ceil+0x94>
 8007dae:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 8007db2:	d103      	bne.n	8007dbc <ceil+0x8c>
 8007db4:	f7f8 f9ea 	bl	800018c <__adddf3>
 8007db8:	4602      	mov	r2, r0
 8007dba:	460b      	mov	r3, r1
 8007dbc:	4610      	mov	r0, r2
 8007dbe:	4619      	mov	r1, r3
 8007dc0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007dc4:	f04f 3cff 	mov.w	ip, #4294967295	@ 0xffffffff
 8007dc8:	f2a7 4713 	subw	r7, r7, #1043	@ 0x413
 8007dcc:	fa2c f707 	lsr.w	r7, ip, r7
 8007dd0:	4238      	tst	r0, r7
 8007dd2:	d0f3      	beq.n	8007dbc <ceil+0x8c>
 8007dd4:	a310      	add	r3, pc, #64	@ (adr r3, 8007e18 <ceil+0xe8>)
 8007dd6:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007dda:	f7f8 f9d7 	bl	800018c <__adddf3>
 8007dde:	2200      	movs	r2, #0
 8007de0:	2300      	movs	r3, #0
 8007de2:	f7f8 fe19 	bl	8000a18 <__aeabi_dcmpgt>
 8007de6:	2800      	cmp	r0, #0
 8007de8:	d0c0      	beq.n	8007d6c <ceil+0x3c>
 8007dea:	2c00      	cmp	r4, #0
 8007dec:	dd0a      	ble.n	8007e04 <ceil+0xd4>
 8007dee:	2e14      	cmp	r6, #20
 8007df0:	d101      	bne.n	8007df6 <ceil+0xc6>
 8007df2:	3401      	adds	r4, #1
 8007df4:	e006      	b.n	8007e04 <ceil+0xd4>
 8007df6:	2301      	movs	r3, #1
 8007df8:	f1c6 0634 	rsb	r6, r6, #52	@ 0x34
 8007dfc:	40b3      	lsls	r3, r6
 8007dfe:	441d      	add	r5, r3
 8007e00:	45a8      	cmp	r8, r5
 8007e02:	d8f6      	bhi.n	8007df2 <ceil+0xc2>
 8007e04:	ea25 0507 	bic.w	r5, r5, r7
 8007e08:	e7b0      	b.n	8007d6c <ceil+0x3c>
 8007e0a:	2500      	movs	r5, #0
 8007e0c:	f04f 4400 	mov.w	r4, #2147483648	@ 0x80000000
 8007e10:	e7ac      	b.n	8007d6c <ceil+0x3c>
 8007e12:	2500      	movs	r5, #0
 8007e14:	4c03      	ldr	r4, [pc, #12]	@ (8007e24 <ceil+0xf4>)
 8007e16:	e7a9      	b.n	8007d6c <ceil+0x3c>
 8007e18:	8800759c 	.word	0x8800759c
 8007e1c:	7e37e43c 	.word	0x7e37e43c
 8007e20:	000fffff 	.word	0x000fffff
 8007e24:	3ff00000 	.word	0x3ff00000

08007e28 <floor>:
 8007e28:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007e2c:	f3c1 570a 	ubfx	r7, r1, #20, #11
 8007e30:	f2a7 36ff 	subw	r6, r7, #1023	@ 0x3ff
 8007e34:	2e13      	cmp	r6, #19
 8007e36:	4602      	mov	r2, r0
 8007e38:	460b      	mov	r3, r1
 8007e3a:	460c      	mov	r4, r1
 8007e3c:	4605      	mov	r5, r0
 8007e3e:	4680      	mov	r8, r0
 8007e40:	dc35      	bgt.n	8007eae <floor+0x86>
 8007e42:	2e00      	cmp	r6, #0
 8007e44:	da17      	bge.n	8007e76 <floor+0x4e>
 8007e46:	a334      	add	r3, pc, #208	@ (adr r3, 8007f18 <floor+0xf0>)
 8007e48:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007e4c:	f7f8 f99e 	bl	800018c <__adddf3>
 8007e50:	2200      	movs	r2, #0
 8007e52:	2300      	movs	r3, #0
 8007e54:	f7f8 fde0 	bl	8000a18 <__aeabi_dcmpgt>
 8007e58:	b150      	cbz	r0, 8007e70 <floor+0x48>
 8007e5a:	2c00      	cmp	r4, #0
 8007e5c:	da57      	bge.n	8007f0e <floor+0xe6>
 8007e5e:	f024 4400 	bic.w	r4, r4, #2147483648	@ 0x80000000
 8007e62:	432c      	orrs	r4, r5
 8007e64:	2500      	movs	r5, #0
 8007e66:	42ac      	cmp	r4, r5
 8007e68:	4c2d      	ldr	r4, [pc, #180]	@ (8007f20 <floor+0xf8>)
 8007e6a:	bf08      	it	eq
 8007e6c:	f04f 4400 	moveq.w	r4, #2147483648	@ 0x80000000
 8007e70:	4623      	mov	r3, r4
 8007e72:	462a      	mov	r2, r5
 8007e74:	e024      	b.n	8007ec0 <floor+0x98>
 8007e76:	4f2b      	ldr	r7, [pc, #172]	@ (8007f24 <floor+0xfc>)
 8007e78:	4137      	asrs	r7, r6
 8007e7a:	ea01 0c07 	and.w	ip, r1, r7
 8007e7e:	ea5c 0c00 	orrs.w	ip, ip, r0
 8007e82:	d01d      	beq.n	8007ec0 <floor+0x98>
 8007e84:	a324      	add	r3, pc, #144	@ (adr r3, 8007f18 <floor+0xf0>)
 8007e86:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007e8a:	f7f8 f97f 	bl	800018c <__adddf3>
 8007e8e:	2200      	movs	r2, #0
 8007e90:	2300      	movs	r3, #0
 8007e92:	f7f8 fdc1 	bl	8000a18 <__aeabi_dcmpgt>
 8007e96:	2800      	cmp	r0, #0
 8007e98:	d0ea      	beq.n	8007e70 <floor+0x48>
 8007e9a:	2c00      	cmp	r4, #0
 8007e9c:	bfbe      	ittt	lt
 8007e9e:	f44f 1380 	movlt.w	r3, #1048576	@ 0x100000
 8007ea2:	4133      	asrlt	r3, r6
 8007ea4:	18e4      	addlt	r4, r4, r3
 8007ea6:	2500      	movs	r5, #0
 8007ea8:	ea24 0407 	bic.w	r4, r4, r7
 8007eac:	e7e0      	b.n	8007e70 <floor+0x48>
 8007eae:	2e33      	cmp	r6, #51	@ 0x33
 8007eb0:	dd0a      	ble.n	8007ec8 <floor+0xa0>
 8007eb2:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 8007eb6:	d103      	bne.n	8007ec0 <floor+0x98>
 8007eb8:	f7f8 f968 	bl	800018c <__adddf3>
 8007ebc:	4602      	mov	r2, r0
 8007ebe:	460b      	mov	r3, r1
 8007ec0:	4610      	mov	r0, r2
 8007ec2:	4619      	mov	r1, r3
 8007ec4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007ec8:	f04f 3cff 	mov.w	ip, #4294967295	@ 0xffffffff
 8007ecc:	f2a7 4713 	subw	r7, r7, #1043	@ 0x413
 8007ed0:	fa2c f707 	lsr.w	r7, ip, r7
 8007ed4:	4207      	tst	r7, r0
 8007ed6:	d0f3      	beq.n	8007ec0 <floor+0x98>
 8007ed8:	a30f      	add	r3, pc, #60	@ (adr r3, 8007f18 <floor+0xf0>)
 8007eda:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007ede:	f7f8 f955 	bl	800018c <__adddf3>
 8007ee2:	2200      	movs	r2, #0
 8007ee4:	2300      	movs	r3, #0
 8007ee6:	f7f8 fd97 	bl	8000a18 <__aeabi_dcmpgt>
 8007eea:	2800      	cmp	r0, #0
 8007eec:	d0c0      	beq.n	8007e70 <floor+0x48>
 8007eee:	2c00      	cmp	r4, #0
 8007ef0:	da0a      	bge.n	8007f08 <floor+0xe0>
 8007ef2:	2e14      	cmp	r6, #20
 8007ef4:	d101      	bne.n	8007efa <floor+0xd2>
 8007ef6:	3401      	adds	r4, #1
 8007ef8:	e006      	b.n	8007f08 <floor+0xe0>
 8007efa:	2301      	movs	r3, #1
 8007efc:	f1c6 0634 	rsb	r6, r6, #52	@ 0x34
 8007f00:	40b3      	lsls	r3, r6
 8007f02:	441d      	add	r5, r3
 8007f04:	4545      	cmp	r5, r8
 8007f06:	d3f6      	bcc.n	8007ef6 <floor+0xce>
 8007f08:	ea25 0507 	bic.w	r5, r5, r7
 8007f0c:	e7b0      	b.n	8007e70 <floor+0x48>
 8007f0e:	2500      	movs	r5, #0
 8007f10:	462c      	mov	r4, r5
 8007f12:	e7ad      	b.n	8007e70 <floor+0x48>
 8007f14:	f3af 8000 	nop.w
 8007f18:	8800759c 	.word	0x8800759c
 8007f1c:	7e37e43c 	.word	0x7e37e43c
 8007f20:	bff00000 	.word	0xbff00000
 8007f24:	000fffff 	.word	0x000fffff

08007f28 <round>:
 8007f28:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007f2a:	f3c1 570a 	ubfx	r7, r1, #20, #11
 8007f2e:	f2a7 32ff 	subw	r2, r7, #1023	@ 0x3ff
 8007f32:	2a13      	cmp	r2, #19
 8007f34:	4604      	mov	r4, r0
 8007f36:	460d      	mov	r5, r1
 8007f38:	460b      	mov	r3, r1
 8007f3a:	dc1a      	bgt.n	8007f72 <round+0x4a>
 8007f3c:	2a00      	cmp	r2, #0
 8007f3e:	da0b      	bge.n	8007f58 <round+0x30>
 8007f40:	f001 4300 	and.w	r3, r1, #2147483648	@ 0x80000000
 8007f44:	3201      	adds	r2, #1
 8007f46:	bf04      	itt	eq
 8007f48:	f043 537f 	orreq.w	r3, r3, #1069547520	@ 0x3fc00000
 8007f4c:	f443 1340 	orreq.w	r3, r3, #3145728	@ 0x300000
 8007f50:	2200      	movs	r2, #0
 8007f52:	461d      	mov	r5, r3
 8007f54:	4614      	mov	r4, r2
 8007f56:	e016      	b.n	8007f86 <round+0x5e>
 8007f58:	4815      	ldr	r0, [pc, #84]	@ (8007fb0 <round+0x88>)
 8007f5a:	4110      	asrs	r0, r2
 8007f5c:	4001      	ands	r1, r0
 8007f5e:	4321      	orrs	r1, r4
 8007f60:	d011      	beq.n	8007f86 <round+0x5e>
 8007f62:	f44f 2100 	mov.w	r1, #524288	@ 0x80000
 8007f66:	fa41 f202 	asr.w	r2, r1, r2
 8007f6a:	4413      	add	r3, r2
 8007f6c:	ea23 0300 	bic.w	r3, r3, r0
 8007f70:	e7ee      	b.n	8007f50 <round+0x28>
 8007f72:	2a33      	cmp	r2, #51	@ 0x33
 8007f74:	dd0a      	ble.n	8007f8c <round+0x64>
 8007f76:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 8007f7a:	d104      	bne.n	8007f86 <round+0x5e>
 8007f7c:	4602      	mov	r2, r0
 8007f7e:	f7f8 f905 	bl	800018c <__adddf3>
 8007f82:	4604      	mov	r4, r0
 8007f84:	460d      	mov	r5, r1
 8007f86:	4620      	mov	r0, r4
 8007f88:	4629      	mov	r1, r5
 8007f8a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8007f8c:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8007f90:	f2a7 4713 	subw	r7, r7, #1043	@ 0x413
 8007f94:	40f8      	lsrs	r0, r7
 8007f96:	4220      	tst	r0, r4
 8007f98:	d0f5      	beq.n	8007f86 <round+0x5e>
 8007f9a:	f1c2 0133 	rsb	r1, r2, #51	@ 0x33
 8007f9e:	2201      	movs	r2, #1
 8007fa0:	408a      	lsls	r2, r1
 8007fa2:	1912      	adds	r2, r2, r4
 8007fa4:	bf28      	it	cs
 8007fa6:	3301      	addcs	r3, #1
 8007fa8:	ea22 0200 	bic.w	r2, r2, r0
 8007fac:	e7d1      	b.n	8007f52 <round+0x2a>
 8007fae:	bf00      	nop
 8007fb0:	000fffff 	.word	0x000fffff
 8007fb4:	00000000 	.word	0x00000000

08007fb8 <__ieee754_pow>:
 8007fb8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007fbc:	b091      	sub	sp, #68	@ 0x44
 8007fbe:	e9cd 2300 	strd	r2, r3, [sp]
 8007fc2:	468b      	mov	fp, r1
 8007fc4:	e9dd 1800 	ldrd	r1, r8, [sp]
 8007fc8:	f028 4700 	bic.w	r7, r8, #2147483648	@ 0x80000000
 8007fcc:	4682      	mov	sl, r0
 8007fce:	ea57 0001 	orrs.w	r0, r7, r1
 8007fd2:	d112      	bne.n	8007ffa <__ieee754_pow+0x42>
 8007fd4:	4653      	mov	r3, sl
 8007fd6:	f48b 2200 	eor.w	r2, fp, #524288	@ 0x80000
 8007fda:	18db      	adds	r3, r3, r3
 8007fdc:	4152      	adcs	r2, r2
 8007fde:	4298      	cmp	r0, r3
 8007fe0:	4b91      	ldr	r3, [pc, #580]	@ (8008228 <__ieee754_pow+0x270>)
 8007fe2:	4193      	sbcs	r3, r2
 8007fe4:	f080 84ce 	bcs.w	8008984 <__ieee754_pow+0x9cc>
 8007fe8:	e9dd 2300 	ldrd	r2, r3, [sp]
 8007fec:	4650      	mov	r0, sl
 8007fee:	4659      	mov	r1, fp
 8007ff0:	f7f8 f8cc 	bl	800018c <__adddf3>
 8007ff4:	b011      	add	sp, #68	@ 0x44
 8007ff6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007ffa:	4b8c      	ldr	r3, [pc, #560]	@ (800822c <__ieee754_pow+0x274>)
 8007ffc:	f02b 4600 	bic.w	r6, fp, #2147483648	@ 0x80000000
 8008000:	429e      	cmp	r6, r3
 8008002:	465d      	mov	r5, fp
 8008004:	46d1      	mov	r9, sl
 8008006:	d807      	bhi.n	8008018 <__ieee754_pow+0x60>
 8008008:	d102      	bne.n	8008010 <__ieee754_pow+0x58>
 800800a:	f1ba 0f00 	cmp.w	sl, #0
 800800e:	d1eb      	bne.n	8007fe8 <__ieee754_pow+0x30>
 8008010:	429f      	cmp	r7, r3
 8008012:	d801      	bhi.n	8008018 <__ieee754_pow+0x60>
 8008014:	d10f      	bne.n	8008036 <__ieee754_pow+0x7e>
 8008016:	b171      	cbz	r1, 8008036 <__ieee754_pow+0x7e>
 8008018:	f105 4540 	add.w	r5, r5, #3221225472	@ 0xc0000000
 800801c:	f505 1580 	add.w	r5, r5, #1048576	@ 0x100000
 8008020:	ea55 0509 	orrs.w	r5, r5, r9
 8008024:	d1e0      	bne.n	8007fe8 <__ieee754_pow+0x30>
 8008026:	e9dd 3200 	ldrd	r3, r2, [sp]
 800802a:	18db      	adds	r3, r3, r3
 800802c:	f482 2200 	eor.w	r2, r2, #524288	@ 0x80000
 8008030:	4152      	adcs	r2, r2
 8008032:	429d      	cmp	r5, r3
 8008034:	e7d4      	b.n	8007fe0 <__ieee754_pow+0x28>
 8008036:	2d00      	cmp	r5, #0
 8008038:	4633      	mov	r3, r6
 800803a:	da39      	bge.n	80080b0 <__ieee754_pow+0xf8>
 800803c:	4a7c      	ldr	r2, [pc, #496]	@ (8008230 <__ieee754_pow+0x278>)
 800803e:	4297      	cmp	r7, r2
 8008040:	d84e      	bhi.n	80080e0 <__ieee754_pow+0x128>
 8008042:	f1a2 7254 	sub.w	r2, r2, #55574528	@ 0x3500000
 8008046:	4297      	cmp	r7, r2
 8008048:	f240 84ab 	bls.w	80089a2 <__ieee754_pow+0x9ea>
 800804c:	153a      	asrs	r2, r7, #20
 800804e:	f2a2 32ff 	subw	r2, r2, #1023	@ 0x3ff
 8008052:	2a14      	cmp	r2, #20
 8008054:	dd0f      	ble.n	8008076 <__ieee754_pow+0xbe>
 8008056:	f1c2 0234 	rsb	r2, r2, #52	@ 0x34
 800805a:	fa21 f402 	lsr.w	r4, r1, r2
 800805e:	fa04 f202 	lsl.w	r2, r4, r2
 8008062:	428a      	cmp	r2, r1
 8008064:	f040 849d 	bne.w	80089a2 <__ieee754_pow+0x9ea>
 8008068:	f004 0401 	and.w	r4, r4, #1
 800806c:	f1c4 0402 	rsb	r4, r4, #2
 8008070:	2900      	cmp	r1, #0
 8008072:	d15a      	bne.n	800812a <__ieee754_pow+0x172>
 8008074:	e00e      	b.n	8008094 <__ieee754_pow+0xdc>
 8008076:	2900      	cmp	r1, #0
 8008078:	d156      	bne.n	8008128 <__ieee754_pow+0x170>
 800807a:	f1c2 0214 	rsb	r2, r2, #20
 800807e:	fa47 f402 	asr.w	r4, r7, r2
 8008082:	fa04 f202 	lsl.w	r2, r4, r2
 8008086:	42ba      	cmp	r2, r7
 8008088:	f040 8488 	bne.w	800899c <__ieee754_pow+0x9e4>
 800808c:	f004 0401 	and.w	r4, r4, #1
 8008090:	f1c4 0402 	rsb	r4, r4, #2
 8008094:	4a67      	ldr	r2, [pc, #412]	@ (8008234 <__ieee754_pow+0x27c>)
 8008096:	4297      	cmp	r7, r2
 8008098:	d130      	bne.n	80080fc <__ieee754_pow+0x144>
 800809a:	f1b8 0f00 	cmp.w	r8, #0
 800809e:	f280 8479 	bge.w	8008994 <__ieee754_pow+0x9dc>
 80080a2:	4652      	mov	r2, sl
 80080a4:	465b      	mov	r3, fp
 80080a6:	2000      	movs	r0, #0
 80080a8:	4962      	ldr	r1, [pc, #392]	@ (8008234 <__ieee754_pow+0x27c>)
 80080aa:	f7f8 fb4f 	bl	800074c <__aeabi_ddiv>
 80080ae:	e7a1      	b.n	8007ff4 <__ieee754_pow+0x3c>
 80080b0:	2400      	movs	r4, #0
 80080b2:	2900      	cmp	r1, #0
 80080b4:	d139      	bne.n	800812a <__ieee754_pow+0x172>
 80080b6:	4a5d      	ldr	r2, [pc, #372]	@ (800822c <__ieee754_pow+0x274>)
 80080b8:	4297      	cmp	r7, r2
 80080ba:	d1eb      	bne.n	8008094 <__ieee754_pow+0xdc>
 80080bc:	f106 4340 	add.w	r3, r6, #3221225472	@ 0xc0000000
 80080c0:	f503 1380 	add.w	r3, r3, #1048576	@ 0x100000
 80080c4:	ea53 0309 	orrs.w	r3, r3, r9
 80080c8:	f000 845c 	beq.w	8008984 <__ieee754_pow+0x9cc>
 80080cc:	4b5a      	ldr	r3, [pc, #360]	@ (8008238 <__ieee754_pow+0x280>)
 80080ce:	429e      	cmp	r6, r3
 80080d0:	d908      	bls.n	80080e4 <__ieee754_pow+0x12c>
 80080d2:	f1b8 0f00 	cmp.w	r8, #0
 80080d6:	f2c0 8459 	blt.w	800898c <__ieee754_pow+0x9d4>
 80080da:	e9dd 0100 	ldrd	r0, r1, [sp]
 80080de:	e789      	b.n	8007ff4 <__ieee754_pow+0x3c>
 80080e0:	2402      	movs	r4, #2
 80080e2:	e7e6      	b.n	80080b2 <__ieee754_pow+0xfa>
 80080e4:	f1b8 0f00 	cmp.w	r8, #0
 80080e8:	f04f 0000 	mov.w	r0, #0
 80080ec:	f04f 0100 	mov.w	r1, #0
 80080f0:	da80      	bge.n	8007ff4 <__ieee754_pow+0x3c>
 80080f2:	e9dd 0300 	ldrd	r0, r3, [sp]
 80080f6:	f103 4100 	add.w	r1, r3, #2147483648	@ 0x80000000
 80080fa:	e77b      	b.n	8007ff4 <__ieee754_pow+0x3c>
 80080fc:	f1b8 4f80 	cmp.w	r8, #1073741824	@ 0x40000000
 8008100:	d106      	bne.n	8008110 <__ieee754_pow+0x158>
 8008102:	4652      	mov	r2, sl
 8008104:	465b      	mov	r3, fp
 8008106:	4650      	mov	r0, sl
 8008108:	4659      	mov	r1, fp
 800810a:	f7f8 f9f5 	bl	80004f8 <__aeabi_dmul>
 800810e:	e771      	b.n	8007ff4 <__ieee754_pow+0x3c>
 8008110:	4a4a      	ldr	r2, [pc, #296]	@ (800823c <__ieee754_pow+0x284>)
 8008112:	4590      	cmp	r8, r2
 8008114:	d109      	bne.n	800812a <__ieee754_pow+0x172>
 8008116:	2d00      	cmp	r5, #0
 8008118:	db07      	blt.n	800812a <__ieee754_pow+0x172>
 800811a:	4650      	mov	r0, sl
 800811c:	4659      	mov	r1, fp
 800811e:	b011      	add	sp, #68	@ 0x44
 8008120:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008124:	f7ff bd2e 	b.w	8007b84 <__ieee754_sqrt>
 8008128:	2400      	movs	r4, #0
 800812a:	4650      	mov	r0, sl
 800812c:	4659      	mov	r1, fp
 800812e:	9302      	str	r3, [sp, #8]
 8008130:	f000 fc91 	bl	8008a56 <fabs>
 8008134:	9b02      	ldr	r3, [sp, #8]
 8008136:	f1b9 0f00 	cmp.w	r9, #0
 800813a:	d127      	bne.n	800818c <__ieee754_pow+0x1d4>
 800813c:	4a3d      	ldr	r2, [pc, #244]	@ (8008234 <__ieee754_pow+0x27c>)
 800813e:	f025 4c40 	bic.w	ip, r5, #3221225472	@ 0xc0000000
 8008142:	4594      	cmp	ip, r2
 8008144:	d000      	beq.n	8008148 <__ieee754_pow+0x190>
 8008146:	bb0e      	cbnz	r6, 800818c <__ieee754_pow+0x1d4>
 8008148:	f1b8 0f00 	cmp.w	r8, #0
 800814c:	da05      	bge.n	800815a <__ieee754_pow+0x1a2>
 800814e:	4602      	mov	r2, r0
 8008150:	460b      	mov	r3, r1
 8008152:	2000      	movs	r0, #0
 8008154:	4937      	ldr	r1, [pc, #220]	@ (8008234 <__ieee754_pow+0x27c>)
 8008156:	f7f8 faf9 	bl	800074c <__aeabi_ddiv>
 800815a:	2d00      	cmp	r5, #0
 800815c:	f6bf af4a 	bge.w	8007ff4 <__ieee754_pow+0x3c>
 8008160:	f106 4640 	add.w	r6, r6, #3221225472	@ 0xc0000000
 8008164:	f506 1680 	add.w	r6, r6, #1048576	@ 0x100000
 8008168:	4326      	orrs	r6, r4
 800816a:	d108      	bne.n	800817e <__ieee754_pow+0x1c6>
 800816c:	4602      	mov	r2, r0
 800816e:	460b      	mov	r3, r1
 8008170:	4610      	mov	r0, r2
 8008172:	4619      	mov	r1, r3
 8008174:	f7f8 f808 	bl	8000188 <__aeabi_dsub>
 8008178:	4602      	mov	r2, r0
 800817a:	460b      	mov	r3, r1
 800817c:	e795      	b.n	80080aa <__ieee754_pow+0xf2>
 800817e:	2c01      	cmp	r4, #1
 8008180:	f47f af38 	bne.w	8007ff4 <__ieee754_pow+0x3c>
 8008184:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 8008188:	4619      	mov	r1, r3
 800818a:	e733      	b.n	8007ff4 <__ieee754_pow+0x3c>
 800818c:	0fea      	lsrs	r2, r5, #31
 800818e:	3a01      	subs	r2, #1
 8008190:	ea52 0c04 	orrs.w	ip, r2, r4
 8008194:	d102      	bne.n	800819c <__ieee754_pow+0x1e4>
 8008196:	4652      	mov	r2, sl
 8008198:	465b      	mov	r3, fp
 800819a:	e7e9      	b.n	8008170 <__ieee754_pow+0x1b8>
 800819c:	f04f 0900 	mov.w	r9, #0
 80081a0:	3c01      	subs	r4, #1
 80081a2:	4314      	orrs	r4, r2
 80081a4:	bf14      	ite	ne
 80081a6:	f8df a08c 	ldrne.w	sl, [pc, #140]	@ 8008234 <__ieee754_pow+0x27c>
 80081aa:	f8df a094 	ldreq.w	sl, [pc, #148]	@ 8008240 <__ieee754_pow+0x288>
 80081ae:	f1b7 4f84 	cmp.w	r7, #1107296256	@ 0x42000000
 80081b2:	e9cd 9a02 	strd	r9, sl, [sp, #8]
 80081b6:	f240 8107 	bls.w	80083c8 <__ieee754_pow+0x410>
 80081ba:	4b22      	ldr	r3, [pc, #136]	@ (8008244 <__ieee754_pow+0x28c>)
 80081bc:	429f      	cmp	r7, r3
 80081be:	4b1e      	ldr	r3, [pc, #120]	@ (8008238 <__ieee754_pow+0x280>)
 80081c0:	d913      	bls.n	80081ea <__ieee754_pow+0x232>
 80081c2:	429e      	cmp	r6, r3
 80081c4:	d808      	bhi.n	80081d8 <__ieee754_pow+0x220>
 80081c6:	f1b8 0f00 	cmp.w	r8, #0
 80081ca:	da08      	bge.n	80081de <__ieee754_pow+0x226>
 80081cc:	2000      	movs	r0, #0
 80081ce:	b011      	add	sp, #68	@ 0x44
 80081d0:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80081d4:	f000 bc3a 	b.w	8008a4c <__math_oflow>
 80081d8:	f1b8 0f00 	cmp.w	r8, #0
 80081dc:	dcf6      	bgt.n	80081cc <__ieee754_pow+0x214>
 80081de:	2000      	movs	r0, #0
 80081e0:	b011      	add	sp, #68	@ 0x44
 80081e2:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80081e6:	f000 bc2c 	b.w	8008a42 <__math_uflow>
 80081ea:	429e      	cmp	r6, r3
 80081ec:	d20c      	bcs.n	8008208 <__ieee754_pow+0x250>
 80081ee:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80081f2:	2200      	movs	r2, #0
 80081f4:	2300      	movs	r3, #0
 80081f6:	f7f8 fbf1 	bl	80009dc <__aeabi_dcmplt>
 80081fa:	3800      	subs	r0, #0
 80081fc:	bf18      	it	ne
 80081fe:	2001      	movne	r0, #1
 8008200:	f1b8 0f00 	cmp.w	r8, #0
 8008204:	daec      	bge.n	80081e0 <__ieee754_pow+0x228>
 8008206:	e7e2      	b.n	80081ce <__ieee754_pow+0x216>
 8008208:	4b0a      	ldr	r3, [pc, #40]	@ (8008234 <__ieee754_pow+0x27c>)
 800820a:	2200      	movs	r2, #0
 800820c:	429e      	cmp	r6, r3
 800820e:	d91b      	bls.n	8008248 <__ieee754_pow+0x290>
 8008210:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8008214:	2300      	movs	r3, #0
 8008216:	f7f8 fbe1 	bl	80009dc <__aeabi_dcmplt>
 800821a:	3800      	subs	r0, #0
 800821c:	bf18      	it	ne
 800821e:	2001      	movne	r0, #1
 8008220:	f1b8 0f00 	cmp.w	r8, #0
 8008224:	dcd3      	bgt.n	80081ce <__ieee754_pow+0x216>
 8008226:	e7db      	b.n	80081e0 <__ieee754_pow+0x228>
 8008228:	fff00000 	.word	0xfff00000
 800822c:	7ff00000 	.word	0x7ff00000
 8008230:	433fffff 	.word	0x433fffff
 8008234:	3ff00000 	.word	0x3ff00000
 8008238:	3fefffff 	.word	0x3fefffff
 800823c:	3fe00000 	.word	0x3fe00000
 8008240:	bff00000 	.word	0xbff00000
 8008244:	43f00000 	.word	0x43f00000
 8008248:	4b5b      	ldr	r3, [pc, #364]	@ (80083b8 <__ieee754_pow+0x400>)
 800824a:	f7f7 ff9d 	bl	8000188 <__aeabi_dsub>
 800824e:	a352      	add	r3, pc, #328	@ (adr r3, 8008398 <__ieee754_pow+0x3e0>)
 8008250:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008254:	4604      	mov	r4, r0
 8008256:	460d      	mov	r5, r1
 8008258:	f7f8 f94e 	bl	80004f8 <__aeabi_dmul>
 800825c:	a350      	add	r3, pc, #320	@ (adr r3, 80083a0 <__ieee754_pow+0x3e8>)
 800825e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008262:	4606      	mov	r6, r0
 8008264:	460f      	mov	r7, r1
 8008266:	4620      	mov	r0, r4
 8008268:	4629      	mov	r1, r5
 800826a:	f7f8 f945 	bl	80004f8 <__aeabi_dmul>
 800826e:	2200      	movs	r2, #0
 8008270:	4682      	mov	sl, r0
 8008272:	468b      	mov	fp, r1
 8008274:	4620      	mov	r0, r4
 8008276:	4629      	mov	r1, r5
 8008278:	4b50      	ldr	r3, [pc, #320]	@ (80083bc <__ieee754_pow+0x404>)
 800827a:	f7f8 f93d 	bl	80004f8 <__aeabi_dmul>
 800827e:	4602      	mov	r2, r0
 8008280:	460b      	mov	r3, r1
 8008282:	a149      	add	r1, pc, #292	@ (adr r1, 80083a8 <__ieee754_pow+0x3f0>)
 8008284:	e9d1 0100 	ldrd	r0, r1, [r1]
 8008288:	f7f7 ff7e 	bl	8000188 <__aeabi_dsub>
 800828c:	4622      	mov	r2, r4
 800828e:	462b      	mov	r3, r5
 8008290:	f7f8 f932 	bl	80004f8 <__aeabi_dmul>
 8008294:	4602      	mov	r2, r0
 8008296:	460b      	mov	r3, r1
 8008298:	2000      	movs	r0, #0
 800829a:	4949      	ldr	r1, [pc, #292]	@ (80083c0 <__ieee754_pow+0x408>)
 800829c:	f7f7 ff74 	bl	8000188 <__aeabi_dsub>
 80082a0:	4622      	mov	r2, r4
 80082a2:	4680      	mov	r8, r0
 80082a4:	4689      	mov	r9, r1
 80082a6:	462b      	mov	r3, r5
 80082a8:	4620      	mov	r0, r4
 80082aa:	4629      	mov	r1, r5
 80082ac:	f7f8 f924 	bl	80004f8 <__aeabi_dmul>
 80082b0:	4602      	mov	r2, r0
 80082b2:	460b      	mov	r3, r1
 80082b4:	4640      	mov	r0, r8
 80082b6:	4649      	mov	r1, r9
 80082b8:	f7f8 f91e 	bl	80004f8 <__aeabi_dmul>
 80082bc:	a33c      	add	r3, pc, #240	@ (adr r3, 80083b0 <__ieee754_pow+0x3f8>)
 80082be:	e9d3 2300 	ldrd	r2, r3, [r3]
 80082c2:	f7f8 f919 	bl	80004f8 <__aeabi_dmul>
 80082c6:	4602      	mov	r2, r0
 80082c8:	460b      	mov	r3, r1
 80082ca:	4650      	mov	r0, sl
 80082cc:	4659      	mov	r1, fp
 80082ce:	f7f7 ff5b 	bl	8000188 <__aeabi_dsub>
 80082d2:	2400      	movs	r4, #0
 80082d4:	4602      	mov	r2, r0
 80082d6:	460b      	mov	r3, r1
 80082d8:	4680      	mov	r8, r0
 80082da:	4689      	mov	r9, r1
 80082dc:	4630      	mov	r0, r6
 80082de:	4639      	mov	r1, r7
 80082e0:	f7f7 ff54 	bl	800018c <__adddf3>
 80082e4:	4632      	mov	r2, r6
 80082e6:	463b      	mov	r3, r7
 80082e8:	4620      	mov	r0, r4
 80082ea:	460d      	mov	r5, r1
 80082ec:	f7f7 ff4c 	bl	8000188 <__aeabi_dsub>
 80082f0:	4602      	mov	r2, r0
 80082f2:	460b      	mov	r3, r1
 80082f4:	4640      	mov	r0, r8
 80082f6:	4649      	mov	r1, r9
 80082f8:	f7f7 ff46 	bl	8000188 <__aeabi_dsub>
 80082fc:	e9dd 2300 	ldrd	r2, r3, [sp]
 8008300:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8008304:	2300      	movs	r3, #0
 8008306:	9304      	str	r3, [sp, #16]
 8008308:	e9dd ab04 	ldrd	sl, fp, [sp, #16]
 800830c:	4606      	mov	r6, r0
 800830e:	460f      	mov	r7, r1
 8008310:	e9dd 0100 	ldrd	r0, r1, [sp]
 8008314:	4652      	mov	r2, sl
 8008316:	465b      	mov	r3, fp
 8008318:	f7f7 ff36 	bl	8000188 <__aeabi_dsub>
 800831c:	4622      	mov	r2, r4
 800831e:	462b      	mov	r3, r5
 8008320:	f7f8 f8ea 	bl	80004f8 <__aeabi_dmul>
 8008324:	e9dd 2300 	ldrd	r2, r3, [sp]
 8008328:	4680      	mov	r8, r0
 800832a:	4689      	mov	r9, r1
 800832c:	4630      	mov	r0, r6
 800832e:	4639      	mov	r1, r7
 8008330:	f7f8 f8e2 	bl	80004f8 <__aeabi_dmul>
 8008334:	4602      	mov	r2, r0
 8008336:	460b      	mov	r3, r1
 8008338:	4640      	mov	r0, r8
 800833a:	4649      	mov	r1, r9
 800833c:	f7f7 ff26 	bl	800018c <__adddf3>
 8008340:	4652      	mov	r2, sl
 8008342:	465b      	mov	r3, fp
 8008344:	4606      	mov	r6, r0
 8008346:	460f      	mov	r7, r1
 8008348:	4620      	mov	r0, r4
 800834a:	4629      	mov	r1, r5
 800834c:	f7f8 f8d4 	bl	80004f8 <__aeabi_dmul>
 8008350:	460b      	mov	r3, r1
 8008352:	4602      	mov	r2, r0
 8008354:	4680      	mov	r8, r0
 8008356:	4689      	mov	r9, r1
 8008358:	4630      	mov	r0, r6
 800835a:	4639      	mov	r1, r7
 800835c:	f7f7 ff16 	bl	800018c <__adddf3>
 8008360:	4b18      	ldr	r3, [pc, #96]	@ (80083c4 <__ieee754_pow+0x40c>)
 8008362:	4604      	mov	r4, r0
 8008364:	4299      	cmp	r1, r3
 8008366:	460d      	mov	r5, r1
 8008368:	468a      	mov	sl, r1
 800836a:	468b      	mov	fp, r1
 800836c:	f340 82e0 	ble.w	8008930 <__ieee754_pow+0x978>
 8008370:	f101 433f 	add.w	r3, r1, #3204448256	@ 0xbf000000
 8008374:	f503 03e0 	add.w	r3, r3, #7340032	@ 0x700000
 8008378:	4303      	orrs	r3, r0
 800837a:	f000 81df 	beq.w	800873c <__ieee754_pow+0x784>
 800837e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8008382:	2200      	movs	r2, #0
 8008384:	2300      	movs	r3, #0
 8008386:	f7f8 fb29 	bl	80009dc <__aeabi_dcmplt>
 800838a:	3800      	subs	r0, #0
 800838c:	bf18      	it	ne
 800838e:	2001      	movne	r0, #1
 8008390:	e71d      	b.n	80081ce <__ieee754_pow+0x216>
 8008392:	bf00      	nop
 8008394:	f3af 8000 	nop.w
 8008398:	60000000 	.word	0x60000000
 800839c:	3ff71547 	.word	0x3ff71547
 80083a0:	f85ddf44 	.word	0xf85ddf44
 80083a4:	3e54ae0b 	.word	0x3e54ae0b
 80083a8:	55555555 	.word	0x55555555
 80083ac:	3fd55555 	.word	0x3fd55555
 80083b0:	652b82fe 	.word	0x652b82fe
 80083b4:	3ff71547 	.word	0x3ff71547
 80083b8:	3ff00000 	.word	0x3ff00000
 80083bc:	3fd00000 	.word	0x3fd00000
 80083c0:	3fe00000 	.word	0x3fe00000
 80083c4:	408fffff 	.word	0x408fffff
 80083c8:	4ad3      	ldr	r2, [pc, #844]	@ (8008718 <__ieee754_pow+0x760>)
 80083ca:	402a      	ands	r2, r5
 80083cc:	2a00      	cmp	r2, #0
 80083ce:	f040 817a 	bne.w	80086c6 <__ieee754_pow+0x70e>
 80083d2:	4bd2      	ldr	r3, [pc, #840]	@ (800871c <__ieee754_pow+0x764>)
 80083d4:	2200      	movs	r2, #0
 80083d6:	f7f8 f88f 	bl	80004f8 <__aeabi_dmul>
 80083da:	f06f 0434 	mvn.w	r4, #52	@ 0x34
 80083de:	460b      	mov	r3, r1
 80083e0:	151a      	asrs	r2, r3, #20
 80083e2:	f2a2 32ff 	subw	r2, r2, #1023	@ 0x3ff
 80083e6:	4422      	add	r2, r4
 80083e8:	920a      	str	r2, [sp, #40]	@ 0x28
 80083ea:	4acd      	ldr	r2, [pc, #820]	@ (8008720 <__ieee754_pow+0x768>)
 80083ec:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80083f0:	f043 557f 	orr.w	r5, r3, #1069547520	@ 0x3fc00000
 80083f4:	4293      	cmp	r3, r2
 80083f6:	f445 1540 	orr.w	r5, r5, #3145728	@ 0x300000
 80083fa:	dd08      	ble.n	800840e <__ieee754_pow+0x456>
 80083fc:	4ac9      	ldr	r2, [pc, #804]	@ (8008724 <__ieee754_pow+0x76c>)
 80083fe:	4293      	cmp	r3, r2
 8008400:	f340 8163 	ble.w	80086ca <__ieee754_pow+0x712>
 8008404:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8008406:	f5a5 1580 	sub.w	r5, r5, #1048576	@ 0x100000
 800840a:	3301      	adds	r3, #1
 800840c:	930a      	str	r3, [sp, #40]	@ 0x28
 800840e:	2600      	movs	r6, #0
 8008410:	00f3      	lsls	r3, r6, #3
 8008412:	930b      	str	r3, [sp, #44]	@ 0x2c
 8008414:	4bc4      	ldr	r3, [pc, #784]	@ (8008728 <__ieee754_pow+0x770>)
 8008416:	4629      	mov	r1, r5
 8008418:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
 800841c:	e9d3 3400 	ldrd	r3, r4, [r3]
 8008420:	461a      	mov	r2, r3
 8008422:	e9cd 3408 	strd	r3, r4, [sp, #32]
 8008426:	4623      	mov	r3, r4
 8008428:	4682      	mov	sl, r0
 800842a:	f7f7 fead 	bl	8000188 <__aeabi_dsub>
 800842e:	4652      	mov	r2, sl
 8008430:	462b      	mov	r3, r5
 8008432:	e9cd 010c 	strd	r0, r1, [sp, #48]	@ 0x30
 8008436:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 800843a:	f7f7 fea7 	bl	800018c <__adddf3>
 800843e:	4602      	mov	r2, r0
 8008440:	460b      	mov	r3, r1
 8008442:	2000      	movs	r0, #0
 8008444:	49b9      	ldr	r1, [pc, #740]	@ (800872c <__ieee754_pow+0x774>)
 8008446:	f7f8 f981 	bl	800074c <__aeabi_ddiv>
 800844a:	4602      	mov	r2, r0
 800844c:	460b      	mov	r3, r1
 800844e:	e9cd 010e 	strd	r0, r1, [sp, #56]	@ 0x38
 8008452:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8008456:	f7f8 f84f 	bl	80004f8 <__aeabi_dmul>
 800845a:	e9cd 0106 	strd	r0, r1, [sp, #24]
 800845e:	e9dd 3406 	ldrd	r3, r4, [sp, #24]
 8008462:	e9cd 3404 	strd	r3, r4, [sp, #16]
 8008466:	2300      	movs	r3, #0
 8008468:	2200      	movs	r2, #0
 800846a:	46ab      	mov	fp, r5
 800846c:	106d      	asrs	r5, r5, #1
 800846e:	f045 5500 	orr.w	r5, r5, #536870912	@ 0x20000000
 8008472:	9304      	str	r3, [sp, #16]
 8008474:	f505 2500 	add.w	r5, r5, #524288	@ 0x80000
 8008478:	e9dd 8904 	ldrd	r8, r9, [sp, #16]
 800847c:	eb05 4386 	add.w	r3, r5, r6, lsl #18
 8008480:	4640      	mov	r0, r8
 8008482:	4649      	mov	r1, r9
 8008484:	4614      	mov	r4, r2
 8008486:	461d      	mov	r5, r3
 8008488:	f7f8 f836 	bl	80004f8 <__aeabi_dmul>
 800848c:	4602      	mov	r2, r0
 800848e:	460b      	mov	r3, r1
 8008490:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8008494:	f7f7 fe78 	bl	8000188 <__aeabi_dsub>
 8008498:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800849c:	4606      	mov	r6, r0
 800849e:	460f      	mov	r7, r1
 80084a0:	4620      	mov	r0, r4
 80084a2:	4629      	mov	r1, r5
 80084a4:	f7f7 fe70 	bl	8000188 <__aeabi_dsub>
 80084a8:	4602      	mov	r2, r0
 80084aa:	460b      	mov	r3, r1
 80084ac:	4650      	mov	r0, sl
 80084ae:	4659      	mov	r1, fp
 80084b0:	f7f7 fe6a 	bl	8000188 <__aeabi_dsub>
 80084b4:	4642      	mov	r2, r8
 80084b6:	464b      	mov	r3, r9
 80084b8:	f7f8 f81e 	bl	80004f8 <__aeabi_dmul>
 80084bc:	4602      	mov	r2, r0
 80084be:	460b      	mov	r3, r1
 80084c0:	4630      	mov	r0, r6
 80084c2:	4639      	mov	r1, r7
 80084c4:	f7f7 fe60 	bl	8000188 <__aeabi_dsub>
 80084c8:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	@ 0x38
 80084cc:	f7f8 f814 	bl	80004f8 <__aeabi_dmul>
 80084d0:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 80084d4:	e9cd 0108 	strd	r0, r1, [sp, #32]
 80084d8:	4610      	mov	r0, r2
 80084da:	4619      	mov	r1, r3
 80084dc:	f7f8 f80c 	bl	80004f8 <__aeabi_dmul>
 80084e0:	a37b      	add	r3, pc, #492	@ (adr r3, 80086d0 <__ieee754_pow+0x718>)
 80084e2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80084e6:	4604      	mov	r4, r0
 80084e8:	460d      	mov	r5, r1
 80084ea:	f7f8 f805 	bl	80004f8 <__aeabi_dmul>
 80084ee:	a37a      	add	r3, pc, #488	@ (adr r3, 80086d8 <__ieee754_pow+0x720>)
 80084f0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80084f4:	f7f7 fe4a 	bl	800018c <__adddf3>
 80084f8:	4622      	mov	r2, r4
 80084fa:	462b      	mov	r3, r5
 80084fc:	f7f7 fffc 	bl	80004f8 <__aeabi_dmul>
 8008500:	a377      	add	r3, pc, #476	@ (adr r3, 80086e0 <__ieee754_pow+0x728>)
 8008502:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008506:	f7f7 fe41 	bl	800018c <__adddf3>
 800850a:	4622      	mov	r2, r4
 800850c:	462b      	mov	r3, r5
 800850e:	f7f7 fff3 	bl	80004f8 <__aeabi_dmul>
 8008512:	a375      	add	r3, pc, #468	@ (adr r3, 80086e8 <__ieee754_pow+0x730>)
 8008514:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008518:	f7f7 fe38 	bl	800018c <__adddf3>
 800851c:	4622      	mov	r2, r4
 800851e:	462b      	mov	r3, r5
 8008520:	f7f7 ffea 	bl	80004f8 <__aeabi_dmul>
 8008524:	a372      	add	r3, pc, #456	@ (adr r3, 80086f0 <__ieee754_pow+0x738>)
 8008526:	e9d3 2300 	ldrd	r2, r3, [r3]
 800852a:	f7f7 fe2f 	bl	800018c <__adddf3>
 800852e:	4622      	mov	r2, r4
 8008530:	462b      	mov	r3, r5
 8008532:	f7f7 ffe1 	bl	80004f8 <__aeabi_dmul>
 8008536:	a370      	add	r3, pc, #448	@ (adr r3, 80086f8 <__ieee754_pow+0x740>)
 8008538:	e9d3 2300 	ldrd	r2, r3, [r3]
 800853c:	f7f7 fe26 	bl	800018c <__adddf3>
 8008540:	4622      	mov	r2, r4
 8008542:	4606      	mov	r6, r0
 8008544:	460f      	mov	r7, r1
 8008546:	462b      	mov	r3, r5
 8008548:	4620      	mov	r0, r4
 800854a:	4629      	mov	r1, r5
 800854c:	f7f7 ffd4 	bl	80004f8 <__aeabi_dmul>
 8008550:	4602      	mov	r2, r0
 8008552:	460b      	mov	r3, r1
 8008554:	4630      	mov	r0, r6
 8008556:	4639      	mov	r1, r7
 8008558:	f7f7 ffce 	bl	80004f8 <__aeabi_dmul>
 800855c:	4604      	mov	r4, r0
 800855e:	460d      	mov	r5, r1
 8008560:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8008564:	4642      	mov	r2, r8
 8008566:	464b      	mov	r3, r9
 8008568:	f7f7 fe10 	bl	800018c <__adddf3>
 800856c:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8008570:	f7f7 ffc2 	bl	80004f8 <__aeabi_dmul>
 8008574:	4622      	mov	r2, r4
 8008576:	462b      	mov	r3, r5
 8008578:	f7f7 fe08 	bl	800018c <__adddf3>
 800857c:	4642      	mov	r2, r8
 800857e:	4682      	mov	sl, r0
 8008580:	468b      	mov	fp, r1
 8008582:	464b      	mov	r3, r9
 8008584:	4640      	mov	r0, r8
 8008586:	4649      	mov	r1, r9
 8008588:	f7f7 ffb6 	bl	80004f8 <__aeabi_dmul>
 800858c:	2200      	movs	r2, #0
 800858e:	4b68      	ldr	r3, [pc, #416]	@ (8008730 <__ieee754_pow+0x778>)
 8008590:	4606      	mov	r6, r0
 8008592:	460f      	mov	r7, r1
 8008594:	f7f7 fdfa 	bl	800018c <__adddf3>
 8008598:	4652      	mov	r2, sl
 800859a:	465b      	mov	r3, fp
 800859c:	f7f7 fdf6 	bl	800018c <__adddf3>
 80085a0:	2400      	movs	r4, #0
 80085a2:	460d      	mov	r5, r1
 80085a4:	4622      	mov	r2, r4
 80085a6:	460b      	mov	r3, r1
 80085a8:	4640      	mov	r0, r8
 80085aa:	4649      	mov	r1, r9
 80085ac:	f7f7 ffa4 	bl	80004f8 <__aeabi_dmul>
 80085b0:	2200      	movs	r2, #0
 80085b2:	4680      	mov	r8, r0
 80085b4:	4689      	mov	r9, r1
 80085b6:	4620      	mov	r0, r4
 80085b8:	4629      	mov	r1, r5
 80085ba:	4b5d      	ldr	r3, [pc, #372]	@ (8008730 <__ieee754_pow+0x778>)
 80085bc:	f7f7 fde4 	bl	8000188 <__aeabi_dsub>
 80085c0:	4632      	mov	r2, r6
 80085c2:	463b      	mov	r3, r7
 80085c4:	f7f7 fde0 	bl	8000188 <__aeabi_dsub>
 80085c8:	4602      	mov	r2, r0
 80085ca:	460b      	mov	r3, r1
 80085cc:	4650      	mov	r0, sl
 80085ce:	4659      	mov	r1, fp
 80085d0:	f7f7 fdda 	bl	8000188 <__aeabi_dsub>
 80085d4:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 80085d8:	f7f7 ff8e 	bl	80004f8 <__aeabi_dmul>
 80085dc:	4622      	mov	r2, r4
 80085de:	4606      	mov	r6, r0
 80085e0:	460f      	mov	r7, r1
 80085e2:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 80085e6:	462b      	mov	r3, r5
 80085e8:	f7f7 ff86 	bl	80004f8 <__aeabi_dmul>
 80085ec:	4602      	mov	r2, r0
 80085ee:	460b      	mov	r3, r1
 80085f0:	4630      	mov	r0, r6
 80085f2:	4639      	mov	r1, r7
 80085f4:	f7f7 fdca 	bl	800018c <__adddf3>
 80085f8:	2400      	movs	r4, #0
 80085fa:	4606      	mov	r6, r0
 80085fc:	460f      	mov	r7, r1
 80085fe:	4602      	mov	r2, r0
 8008600:	460b      	mov	r3, r1
 8008602:	4640      	mov	r0, r8
 8008604:	4649      	mov	r1, r9
 8008606:	f7f7 fdc1 	bl	800018c <__adddf3>
 800860a:	a33d      	add	r3, pc, #244	@ (adr r3, 8008700 <__ieee754_pow+0x748>)
 800860c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008610:	4620      	mov	r0, r4
 8008612:	460d      	mov	r5, r1
 8008614:	f7f7 ff70 	bl	80004f8 <__aeabi_dmul>
 8008618:	4642      	mov	r2, r8
 800861a:	464b      	mov	r3, r9
 800861c:	e9cd 0106 	strd	r0, r1, [sp, #24]
 8008620:	4620      	mov	r0, r4
 8008622:	4629      	mov	r1, r5
 8008624:	f7f7 fdb0 	bl	8000188 <__aeabi_dsub>
 8008628:	4602      	mov	r2, r0
 800862a:	460b      	mov	r3, r1
 800862c:	4630      	mov	r0, r6
 800862e:	4639      	mov	r1, r7
 8008630:	f7f7 fdaa 	bl	8000188 <__aeabi_dsub>
 8008634:	a334      	add	r3, pc, #208	@ (adr r3, 8008708 <__ieee754_pow+0x750>)
 8008636:	e9d3 2300 	ldrd	r2, r3, [r3]
 800863a:	f7f7 ff5d 	bl	80004f8 <__aeabi_dmul>
 800863e:	a334      	add	r3, pc, #208	@ (adr r3, 8008710 <__ieee754_pow+0x758>)
 8008640:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008644:	4606      	mov	r6, r0
 8008646:	460f      	mov	r7, r1
 8008648:	4620      	mov	r0, r4
 800864a:	4629      	mov	r1, r5
 800864c:	f7f7 ff54 	bl	80004f8 <__aeabi_dmul>
 8008650:	4602      	mov	r2, r0
 8008652:	460b      	mov	r3, r1
 8008654:	4630      	mov	r0, r6
 8008656:	4639      	mov	r1, r7
 8008658:	f7f7 fd98 	bl	800018c <__adddf3>
 800865c:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800865e:	4b35      	ldr	r3, [pc, #212]	@ (8008734 <__ieee754_pow+0x77c>)
 8008660:	2400      	movs	r4, #0
 8008662:	4413      	add	r3, r2
 8008664:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008668:	f7f7 fd90 	bl	800018c <__adddf3>
 800866c:	4682      	mov	sl, r0
 800866e:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8008670:	468b      	mov	fp, r1
 8008672:	f7f7 fed7 	bl	8000424 <__aeabi_i2d>
 8008676:	4606      	mov	r6, r0
 8008678:	460f      	mov	r7, r1
 800867a:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800867c:	4b2e      	ldr	r3, [pc, #184]	@ (8008738 <__ieee754_pow+0x780>)
 800867e:	4413      	add	r3, r2
 8008680:	e9d3 8900 	ldrd	r8, r9, [r3]
 8008684:	4652      	mov	r2, sl
 8008686:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800868a:	465b      	mov	r3, fp
 800868c:	f7f7 fd7e 	bl	800018c <__adddf3>
 8008690:	4642      	mov	r2, r8
 8008692:	464b      	mov	r3, r9
 8008694:	f7f7 fd7a 	bl	800018c <__adddf3>
 8008698:	4632      	mov	r2, r6
 800869a:	463b      	mov	r3, r7
 800869c:	f7f7 fd76 	bl	800018c <__adddf3>
 80086a0:	4632      	mov	r2, r6
 80086a2:	463b      	mov	r3, r7
 80086a4:	4620      	mov	r0, r4
 80086a6:	460d      	mov	r5, r1
 80086a8:	f7f7 fd6e 	bl	8000188 <__aeabi_dsub>
 80086ac:	4642      	mov	r2, r8
 80086ae:	464b      	mov	r3, r9
 80086b0:	f7f7 fd6a 	bl	8000188 <__aeabi_dsub>
 80086b4:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 80086b8:	f7f7 fd66 	bl	8000188 <__aeabi_dsub>
 80086bc:	4602      	mov	r2, r0
 80086be:	460b      	mov	r3, r1
 80086c0:	4650      	mov	r0, sl
 80086c2:	4659      	mov	r1, fp
 80086c4:	e618      	b.n	80082f8 <__ieee754_pow+0x340>
 80086c6:	2400      	movs	r4, #0
 80086c8:	e68a      	b.n	80083e0 <__ieee754_pow+0x428>
 80086ca:	2601      	movs	r6, #1
 80086cc:	e6a0      	b.n	8008410 <__ieee754_pow+0x458>
 80086ce:	bf00      	nop
 80086d0:	4a454eef 	.word	0x4a454eef
 80086d4:	3fca7e28 	.word	0x3fca7e28
 80086d8:	93c9db65 	.word	0x93c9db65
 80086dc:	3fcd864a 	.word	0x3fcd864a
 80086e0:	a91d4101 	.word	0xa91d4101
 80086e4:	3fd17460 	.word	0x3fd17460
 80086e8:	518f264d 	.word	0x518f264d
 80086ec:	3fd55555 	.word	0x3fd55555
 80086f0:	db6fabff 	.word	0xdb6fabff
 80086f4:	3fdb6db6 	.word	0x3fdb6db6
 80086f8:	33333303 	.word	0x33333303
 80086fc:	3fe33333 	.word	0x3fe33333
 8008700:	e0000000 	.word	0xe0000000
 8008704:	3feec709 	.word	0x3feec709
 8008708:	dc3a03fd 	.word	0xdc3a03fd
 800870c:	3feec709 	.word	0x3feec709
 8008710:	145b01f5 	.word	0x145b01f5
 8008714:	be3e2fe0 	.word	0xbe3e2fe0
 8008718:	7ff00000 	.word	0x7ff00000
 800871c:	43400000 	.word	0x43400000
 8008720:	0003988e 	.word	0x0003988e
 8008724:	000bb679 	.word	0x000bb679
 8008728:	08009880 	.word	0x08009880
 800872c:	3ff00000 	.word	0x3ff00000
 8008730:	40080000 	.word	0x40080000
 8008734:	08009860 	.word	0x08009860
 8008738:	08009870 	.word	0x08009870
 800873c:	a39a      	add	r3, pc, #616	@ (adr r3, 80089a8 <__ieee754_pow+0x9f0>)
 800873e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008742:	4630      	mov	r0, r6
 8008744:	4639      	mov	r1, r7
 8008746:	f7f7 fd21 	bl	800018c <__adddf3>
 800874a:	4642      	mov	r2, r8
 800874c:	e9cd 0100 	strd	r0, r1, [sp]
 8008750:	464b      	mov	r3, r9
 8008752:	4620      	mov	r0, r4
 8008754:	4629      	mov	r1, r5
 8008756:	f7f7 fd17 	bl	8000188 <__aeabi_dsub>
 800875a:	4602      	mov	r2, r0
 800875c:	460b      	mov	r3, r1
 800875e:	e9dd 0100 	ldrd	r0, r1, [sp]
 8008762:	f7f8 f959 	bl	8000a18 <__aeabi_dcmpgt>
 8008766:	2800      	cmp	r0, #0
 8008768:	f47f ae09 	bne.w	800837e <__ieee754_pow+0x3c6>
 800876c:	f44f 1380 	mov.w	r3, #1048576	@ 0x100000
 8008770:	ea4f 5a2a 	mov.w	sl, sl, asr #20
 8008774:	f2aa 3afe 	subw	sl, sl, #1022	@ 0x3fe
 8008778:	fa43 fa0a 	asr.w	sl, r3, sl
 800877c:	44da      	add	sl, fp
 800877e:	f3ca 510a 	ubfx	r1, sl, #20, #11
 8008782:	489b      	ldr	r0, [pc, #620]	@ (80089f0 <__ieee754_pow+0xa38>)
 8008784:	f2a1 31ff 	subw	r1, r1, #1023	@ 0x3ff
 8008788:	4108      	asrs	r0, r1
 800878a:	ea00 030a 	and.w	r3, r0, sl
 800878e:	f3ca 0a13 	ubfx	sl, sl, #0, #20
 8008792:	f1c1 0114 	rsb	r1, r1, #20
 8008796:	f44a 1a80 	orr.w	sl, sl, #1048576	@ 0x100000
 800879a:	4640      	mov	r0, r8
 800879c:	fa4a fa01 	asr.w	sl, sl, r1
 80087a0:	f1bb 0f00 	cmp.w	fp, #0
 80087a4:	4649      	mov	r1, r9
 80087a6:	f04f 0200 	mov.w	r2, #0
 80087aa:	bfb8      	it	lt
 80087ac:	f1ca 0a00 	rsblt	sl, sl, #0
 80087b0:	f7f7 fcea 	bl	8000188 <__aeabi_dsub>
 80087b4:	4680      	mov	r8, r0
 80087b6:	4689      	mov	r9, r1
 80087b8:	2400      	movs	r4, #0
 80087ba:	4632      	mov	r2, r6
 80087bc:	463b      	mov	r3, r7
 80087be:	4640      	mov	r0, r8
 80087c0:	4649      	mov	r1, r9
 80087c2:	f7f7 fce3 	bl	800018c <__adddf3>
 80087c6:	a37a      	add	r3, pc, #488	@ (adr r3, 80089b0 <__ieee754_pow+0x9f8>)
 80087c8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80087cc:	4620      	mov	r0, r4
 80087ce:	460d      	mov	r5, r1
 80087d0:	f7f7 fe92 	bl	80004f8 <__aeabi_dmul>
 80087d4:	4642      	mov	r2, r8
 80087d6:	464b      	mov	r3, r9
 80087d8:	e9cd 0100 	strd	r0, r1, [sp]
 80087dc:	4620      	mov	r0, r4
 80087de:	4629      	mov	r1, r5
 80087e0:	f7f7 fcd2 	bl	8000188 <__aeabi_dsub>
 80087e4:	4602      	mov	r2, r0
 80087e6:	460b      	mov	r3, r1
 80087e8:	4630      	mov	r0, r6
 80087ea:	4639      	mov	r1, r7
 80087ec:	f7f7 fccc 	bl	8000188 <__aeabi_dsub>
 80087f0:	a371      	add	r3, pc, #452	@ (adr r3, 80089b8 <__ieee754_pow+0xa00>)
 80087f2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80087f6:	f7f7 fe7f 	bl	80004f8 <__aeabi_dmul>
 80087fa:	a371      	add	r3, pc, #452	@ (adr r3, 80089c0 <__ieee754_pow+0xa08>)
 80087fc:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008800:	4680      	mov	r8, r0
 8008802:	4689      	mov	r9, r1
 8008804:	4620      	mov	r0, r4
 8008806:	4629      	mov	r1, r5
 8008808:	f7f7 fe76 	bl	80004f8 <__aeabi_dmul>
 800880c:	4602      	mov	r2, r0
 800880e:	460b      	mov	r3, r1
 8008810:	4640      	mov	r0, r8
 8008812:	4649      	mov	r1, r9
 8008814:	f7f7 fcba 	bl	800018c <__adddf3>
 8008818:	4604      	mov	r4, r0
 800881a:	460d      	mov	r5, r1
 800881c:	4602      	mov	r2, r0
 800881e:	460b      	mov	r3, r1
 8008820:	e9dd 0100 	ldrd	r0, r1, [sp]
 8008824:	f7f7 fcb2 	bl	800018c <__adddf3>
 8008828:	e9dd 2300 	ldrd	r2, r3, [sp]
 800882c:	4680      	mov	r8, r0
 800882e:	4689      	mov	r9, r1
 8008830:	f7f7 fcaa 	bl	8000188 <__aeabi_dsub>
 8008834:	4602      	mov	r2, r0
 8008836:	460b      	mov	r3, r1
 8008838:	4620      	mov	r0, r4
 800883a:	4629      	mov	r1, r5
 800883c:	f7f7 fca4 	bl	8000188 <__aeabi_dsub>
 8008840:	4642      	mov	r2, r8
 8008842:	4606      	mov	r6, r0
 8008844:	460f      	mov	r7, r1
 8008846:	464b      	mov	r3, r9
 8008848:	4640      	mov	r0, r8
 800884a:	4649      	mov	r1, r9
 800884c:	f7f7 fe54 	bl	80004f8 <__aeabi_dmul>
 8008850:	a35d      	add	r3, pc, #372	@ (adr r3, 80089c8 <__ieee754_pow+0xa10>)
 8008852:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008856:	4604      	mov	r4, r0
 8008858:	460d      	mov	r5, r1
 800885a:	f7f7 fe4d 	bl	80004f8 <__aeabi_dmul>
 800885e:	a35c      	add	r3, pc, #368	@ (adr r3, 80089d0 <__ieee754_pow+0xa18>)
 8008860:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008864:	f7f7 fc90 	bl	8000188 <__aeabi_dsub>
 8008868:	4622      	mov	r2, r4
 800886a:	462b      	mov	r3, r5
 800886c:	f7f7 fe44 	bl	80004f8 <__aeabi_dmul>
 8008870:	a359      	add	r3, pc, #356	@ (adr r3, 80089d8 <__ieee754_pow+0xa20>)
 8008872:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008876:	f7f7 fc89 	bl	800018c <__adddf3>
 800887a:	4622      	mov	r2, r4
 800887c:	462b      	mov	r3, r5
 800887e:	f7f7 fe3b 	bl	80004f8 <__aeabi_dmul>
 8008882:	a357      	add	r3, pc, #348	@ (adr r3, 80089e0 <__ieee754_pow+0xa28>)
 8008884:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008888:	f7f7 fc7e 	bl	8000188 <__aeabi_dsub>
 800888c:	4622      	mov	r2, r4
 800888e:	462b      	mov	r3, r5
 8008890:	f7f7 fe32 	bl	80004f8 <__aeabi_dmul>
 8008894:	a354      	add	r3, pc, #336	@ (adr r3, 80089e8 <__ieee754_pow+0xa30>)
 8008896:	e9d3 2300 	ldrd	r2, r3, [r3]
 800889a:	f7f7 fc77 	bl	800018c <__adddf3>
 800889e:	4622      	mov	r2, r4
 80088a0:	462b      	mov	r3, r5
 80088a2:	f7f7 fe29 	bl	80004f8 <__aeabi_dmul>
 80088a6:	4602      	mov	r2, r0
 80088a8:	460b      	mov	r3, r1
 80088aa:	4640      	mov	r0, r8
 80088ac:	4649      	mov	r1, r9
 80088ae:	f7f7 fc6b 	bl	8000188 <__aeabi_dsub>
 80088b2:	4604      	mov	r4, r0
 80088b4:	460d      	mov	r5, r1
 80088b6:	4602      	mov	r2, r0
 80088b8:	460b      	mov	r3, r1
 80088ba:	4640      	mov	r0, r8
 80088bc:	4649      	mov	r1, r9
 80088be:	f7f7 fe1b 	bl	80004f8 <__aeabi_dmul>
 80088c2:	2200      	movs	r2, #0
 80088c4:	e9cd 0100 	strd	r0, r1, [sp]
 80088c8:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 80088cc:	4620      	mov	r0, r4
 80088ce:	4629      	mov	r1, r5
 80088d0:	f7f7 fc5a 	bl	8000188 <__aeabi_dsub>
 80088d4:	4602      	mov	r2, r0
 80088d6:	460b      	mov	r3, r1
 80088d8:	e9dd 0100 	ldrd	r0, r1, [sp]
 80088dc:	f7f7 ff36 	bl	800074c <__aeabi_ddiv>
 80088e0:	4632      	mov	r2, r6
 80088e2:	4604      	mov	r4, r0
 80088e4:	460d      	mov	r5, r1
 80088e6:	463b      	mov	r3, r7
 80088e8:	4640      	mov	r0, r8
 80088ea:	4649      	mov	r1, r9
 80088ec:	f7f7 fe04 	bl	80004f8 <__aeabi_dmul>
 80088f0:	4632      	mov	r2, r6
 80088f2:	463b      	mov	r3, r7
 80088f4:	f7f7 fc4a 	bl	800018c <__adddf3>
 80088f8:	4602      	mov	r2, r0
 80088fa:	460b      	mov	r3, r1
 80088fc:	4620      	mov	r0, r4
 80088fe:	4629      	mov	r1, r5
 8008900:	f7f7 fc42 	bl	8000188 <__aeabi_dsub>
 8008904:	4642      	mov	r2, r8
 8008906:	464b      	mov	r3, r9
 8008908:	f7f7 fc3e 	bl	8000188 <__aeabi_dsub>
 800890c:	4602      	mov	r2, r0
 800890e:	460b      	mov	r3, r1
 8008910:	2000      	movs	r0, #0
 8008912:	4938      	ldr	r1, [pc, #224]	@ (80089f4 <__ieee754_pow+0xa3c>)
 8008914:	f7f7 fc38 	bl	8000188 <__aeabi_dsub>
 8008918:	eb01 540a 	add.w	r4, r1, sl, lsl #20
 800891c:	f5b4 1f80 	cmp.w	r4, #1048576	@ 0x100000
 8008920:	da2e      	bge.n	8008980 <__ieee754_pow+0x9c8>
 8008922:	4652      	mov	r2, sl
 8008924:	f000 f89c 	bl	8008a60 <scalbn>
 8008928:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800892c:	f7ff bbed 	b.w	800810a <__ieee754_pow+0x152>
 8008930:	4c31      	ldr	r4, [pc, #196]	@ (80089f8 <__ieee754_pow+0xa40>)
 8008932:	f021 4300 	bic.w	r3, r1, #2147483648	@ 0x80000000
 8008936:	42a3      	cmp	r3, r4
 8008938:	d91a      	bls.n	8008970 <__ieee754_pow+0x9b8>
 800893a:	4b30      	ldr	r3, [pc, #192]	@ (80089fc <__ieee754_pow+0xa44>)
 800893c:	440b      	add	r3, r1
 800893e:	4303      	orrs	r3, r0
 8008940:	d009      	beq.n	8008956 <__ieee754_pow+0x99e>
 8008942:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8008946:	2200      	movs	r2, #0
 8008948:	2300      	movs	r3, #0
 800894a:	f7f8 f847 	bl	80009dc <__aeabi_dcmplt>
 800894e:	3800      	subs	r0, #0
 8008950:	bf18      	it	ne
 8008952:	2001      	movne	r0, #1
 8008954:	e444      	b.n	80081e0 <__ieee754_pow+0x228>
 8008956:	4642      	mov	r2, r8
 8008958:	464b      	mov	r3, r9
 800895a:	f7f7 fc15 	bl	8000188 <__aeabi_dsub>
 800895e:	4632      	mov	r2, r6
 8008960:	463b      	mov	r3, r7
 8008962:	f7f8 f84f 	bl	8000a04 <__aeabi_dcmpge>
 8008966:	2800      	cmp	r0, #0
 8008968:	d1eb      	bne.n	8008942 <__ieee754_pow+0x98a>
 800896a:	f8df a094 	ldr.w	sl, [pc, #148]	@ 8008a00 <__ieee754_pow+0xa48>
 800896e:	e6fd      	b.n	800876c <__ieee754_pow+0x7b4>
 8008970:	469a      	mov	sl, r3
 8008972:	4b24      	ldr	r3, [pc, #144]	@ (8008a04 <__ieee754_pow+0xa4c>)
 8008974:	459a      	cmp	sl, r3
 8008976:	f63f aef9 	bhi.w	800876c <__ieee754_pow+0x7b4>
 800897a:	f8dd a010 	ldr.w	sl, [sp, #16]
 800897e:	e71b      	b.n	80087b8 <__ieee754_pow+0x800>
 8008980:	4621      	mov	r1, r4
 8008982:	e7d1      	b.n	8008928 <__ieee754_pow+0x970>
 8008984:	2000      	movs	r0, #0
 8008986:	491b      	ldr	r1, [pc, #108]	@ (80089f4 <__ieee754_pow+0xa3c>)
 8008988:	f7ff bb34 	b.w	8007ff4 <__ieee754_pow+0x3c>
 800898c:	2000      	movs	r0, #0
 800898e:	2100      	movs	r1, #0
 8008990:	f7ff bb30 	b.w	8007ff4 <__ieee754_pow+0x3c>
 8008994:	4650      	mov	r0, sl
 8008996:	4659      	mov	r1, fp
 8008998:	f7ff bb2c 	b.w	8007ff4 <__ieee754_pow+0x3c>
 800899c:	460c      	mov	r4, r1
 800899e:	f7ff bb79 	b.w	8008094 <__ieee754_pow+0xdc>
 80089a2:	2400      	movs	r4, #0
 80089a4:	f7ff bb64 	b.w	8008070 <__ieee754_pow+0xb8>
 80089a8:	652b82fe 	.word	0x652b82fe
 80089ac:	3c971547 	.word	0x3c971547
 80089b0:	00000000 	.word	0x00000000
 80089b4:	3fe62e43 	.word	0x3fe62e43
 80089b8:	fefa39ef 	.word	0xfefa39ef
 80089bc:	3fe62e42 	.word	0x3fe62e42
 80089c0:	0ca86c39 	.word	0x0ca86c39
 80089c4:	be205c61 	.word	0xbe205c61
 80089c8:	72bea4d0 	.word	0x72bea4d0
 80089cc:	3e663769 	.word	0x3e663769
 80089d0:	c5d26bf1 	.word	0xc5d26bf1
 80089d4:	3ebbbd41 	.word	0x3ebbbd41
 80089d8:	af25de2c 	.word	0xaf25de2c
 80089dc:	3f11566a 	.word	0x3f11566a
 80089e0:	16bebd93 	.word	0x16bebd93
 80089e4:	3f66c16c 	.word	0x3f66c16c
 80089e8:	5555553e 	.word	0x5555553e
 80089ec:	3fc55555 	.word	0x3fc55555
 80089f0:	fff00000 	.word	0xfff00000
 80089f4:	3ff00000 	.word	0x3ff00000
 80089f8:	4090cbff 	.word	0x4090cbff
 80089fc:	3f6f3400 	.word	0x3f6f3400
 8008a00:	4090cc00 	.word	0x4090cc00
 8008a04:	3fe00000 	.word	0x3fe00000

08008a08 <with_errno>:
 8008a08:	b570      	push	{r4, r5, r6, lr}
 8008a0a:	4604      	mov	r4, r0
 8008a0c:	460d      	mov	r5, r1
 8008a0e:	4616      	mov	r6, r2
 8008a10:	f7fc fab6 	bl	8004f80 <__errno>
 8008a14:	4629      	mov	r1, r5
 8008a16:	6006      	str	r6, [r0, #0]
 8008a18:	4620      	mov	r0, r4
 8008a1a:	bd70      	pop	{r4, r5, r6, pc}

08008a1c <xflow>:
 8008a1c:	b513      	push	{r0, r1, r4, lr}
 8008a1e:	4604      	mov	r4, r0
 8008a20:	4619      	mov	r1, r3
 8008a22:	4610      	mov	r0, r2
 8008a24:	b10c      	cbz	r4, 8008a2a <xflow+0xe>
 8008a26:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
 8008a2a:	e9cd 2300 	strd	r2, r3, [sp]
 8008a2e:	e9dd 2300 	ldrd	r2, r3, [sp]
 8008a32:	f7f7 fd61 	bl	80004f8 <__aeabi_dmul>
 8008a36:	2222      	movs	r2, #34	@ 0x22
 8008a38:	b002      	add	sp, #8
 8008a3a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8008a3e:	f7ff bfe3 	b.w	8008a08 <with_errno>

08008a42 <__math_uflow>:
 8008a42:	2200      	movs	r2, #0
 8008a44:	f04f 5380 	mov.w	r3, #268435456	@ 0x10000000
 8008a48:	f7ff bfe8 	b.w	8008a1c <xflow>

08008a4c <__math_oflow>:
 8008a4c:	2200      	movs	r2, #0
 8008a4e:	f04f 43e0 	mov.w	r3, #1879048192	@ 0x70000000
 8008a52:	f7ff bfe3 	b.w	8008a1c <xflow>

08008a56 <fabs>:
 8008a56:	f021 4300 	bic.w	r3, r1, #2147483648	@ 0x80000000
 8008a5a:	4619      	mov	r1, r3
 8008a5c:	4770      	bx	lr
	...

08008a60 <scalbn>:
 8008a60:	e92d 48f0 	stmdb	sp!, {r4, r5, r6, r7, fp, lr}
 8008a64:	4616      	mov	r6, r2
 8008a66:	f3c1 520a 	ubfx	r2, r1, #20, #11
 8008a6a:	4683      	mov	fp, r0
 8008a6c:	468c      	mov	ip, r1
 8008a6e:	460b      	mov	r3, r1
 8008a70:	b982      	cbnz	r2, 8008a94 <scalbn+0x34>
 8008a72:	f021 4300 	bic.w	r3, r1, #2147483648	@ 0x80000000
 8008a76:	4303      	orrs	r3, r0
 8008a78:	d039      	beq.n	8008aee <scalbn+0x8e>
 8008a7a:	4b2f      	ldr	r3, [pc, #188]	@ (8008b38 <scalbn+0xd8>)
 8008a7c:	2200      	movs	r2, #0
 8008a7e:	f7f7 fd3b 	bl	80004f8 <__aeabi_dmul>
 8008a82:	4b2e      	ldr	r3, [pc, #184]	@ (8008b3c <scalbn+0xdc>)
 8008a84:	4683      	mov	fp, r0
 8008a86:	429e      	cmp	r6, r3
 8008a88:	468c      	mov	ip, r1
 8008a8a:	da0d      	bge.n	8008aa8 <scalbn+0x48>
 8008a8c:	a326      	add	r3, pc, #152	@ (adr r3, 8008b28 <scalbn+0xc8>)
 8008a8e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008a92:	e01b      	b.n	8008acc <scalbn+0x6c>
 8008a94:	f240 77ff 	movw	r7, #2047	@ 0x7ff
 8008a98:	42ba      	cmp	r2, r7
 8008a9a:	d109      	bne.n	8008ab0 <scalbn+0x50>
 8008a9c:	4602      	mov	r2, r0
 8008a9e:	f7f7 fb75 	bl	800018c <__adddf3>
 8008aa2:	4683      	mov	fp, r0
 8008aa4:	468c      	mov	ip, r1
 8008aa6:	e022      	b.n	8008aee <scalbn+0x8e>
 8008aa8:	460b      	mov	r3, r1
 8008aaa:	f3c1 520a 	ubfx	r2, r1, #20, #11
 8008aae:	3a36      	subs	r2, #54	@ 0x36
 8008ab0:	f24c 3150 	movw	r1, #50000	@ 0xc350
 8008ab4:	428e      	cmp	r6, r1
 8008ab6:	dd0c      	ble.n	8008ad2 <scalbn+0x72>
 8008ab8:	a31d      	add	r3, pc, #116	@ (adr r3, 8008b30 <scalbn+0xd0>)
 8008aba:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008abe:	461c      	mov	r4, r3
 8008ac0:	ea4f 71dc 	mov.w	r1, ip, lsr #31
 8008ac4:	f361 74df 	bfi	r4, r1, #31, #1
 8008ac8:	4621      	mov	r1, r4
 8008aca:	481d      	ldr	r0, [pc, #116]	@ (8008b40 <scalbn+0xe0>)
 8008acc:	f7f7 fd14 	bl	80004f8 <__aeabi_dmul>
 8008ad0:	e7e7      	b.n	8008aa2 <scalbn+0x42>
 8008ad2:	f240 71fe 	movw	r1, #2046	@ 0x7fe
 8008ad6:	4432      	add	r2, r6
 8008ad8:	428a      	cmp	r2, r1
 8008ada:	dced      	bgt.n	8008ab8 <scalbn+0x58>
 8008adc:	2a00      	cmp	r2, #0
 8008ade:	dd0a      	ble.n	8008af6 <scalbn+0x96>
 8008ae0:	f023 43ff 	bic.w	r3, r3, #2139095040	@ 0x7f800000
 8008ae4:	f423 03e0 	bic.w	r3, r3, #7340032	@ 0x700000
 8008ae8:	ea43 5502 	orr.w	r5, r3, r2, lsl #20
 8008aec:	46ac      	mov	ip, r5
 8008aee:	4658      	mov	r0, fp
 8008af0:	4661      	mov	r1, ip
 8008af2:	e8bd 88f0 	ldmia.w	sp!, {r4, r5, r6, r7, fp, pc}
 8008af6:	f112 0f35 	cmn.w	r2, #53	@ 0x35
 8008afa:	da09      	bge.n	8008b10 <scalbn+0xb0>
 8008afc:	f00c 4300 	and.w	r3, ip, #2147483648	@ 0x80000000
 8008b00:	f043 71d2 	orr.w	r1, r3, #27525120	@ 0x1a40000
 8008b04:	f441 31b7 	orr.w	r1, r1, #93696	@ 0x16e00
 8008b08:	480e      	ldr	r0, [pc, #56]	@ (8008b44 <scalbn+0xe4>)
 8008b0a:	f041 011f 	orr.w	r1, r1, #31
 8008b0e:	e7bd      	b.n	8008a8c <scalbn+0x2c>
 8008b10:	f023 43ff 	bic.w	r3, r3, #2139095040	@ 0x7f800000
 8008b14:	3236      	adds	r2, #54	@ 0x36
 8008b16:	f423 03e0 	bic.w	r3, r3, #7340032	@ 0x700000
 8008b1a:	ea43 5502 	orr.w	r5, r3, r2, lsl #20
 8008b1e:	4658      	mov	r0, fp
 8008b20:	4629      	mov	r1, r5
 8008b22:	2200      	movs	r2, #0
 8008b24:	4b08      	ldr	r3, [pc, #32]	@ (8008b48 <scalbn+0xe8>)
 8008b26:	e7d1      	b.n	8008acc <scalbn+0x6c>
 8008b28:	c2f8f359 	.word	0xc2f8f359
 8008b2c:	01a56e1f 	.word	0x01a56e1f
 8008b30:	8800759c 	.word	0x8800759c
 8008b34:	7e37e43c 	.word	0x7e37e43c
 8008b38:	43500000 	.word	0x43500000
 8008b3c:	ffff3cb0 	.word	0xffff3cb0
 8008b40:	8800759c 	.word	0x8800759c
 8008b44:	c2f8f359 	.word	0xc2f8f359
 8008b48:	3c900000 	.word	0x3c900000

08008b4c <_init>:
 8008b4c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008b4e:	bf00      	nop
 8008b50:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8008b52:	bc08      	pop	{r3}
 8008b54:	469e      	mov	lr, r3
 8008b56:	4770      	bx	lr

08008b58 <_fini>:
 8008b58:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008b5a:	bf00      	nop
 8008b5c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8008b5e:	bc08      	pop	{r3}
 8008b60:	469e      	mov	lr, r3
 8008b62:	4770      	bx	lr
