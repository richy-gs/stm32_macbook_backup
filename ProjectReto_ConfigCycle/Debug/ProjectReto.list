
ProjectReto.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000130  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00008a24  08000130  08000130  00010130  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000d20  08008b58  08008b58  00018b58  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08009878  08009878  000201d8  2**0
                  CONTENTS
  4 .ARM          00000000  08009878  08009878  000201d8  2**0
                  CONTENTS
  5 .preinit_array 00000000  08009878  08009878  000201d8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08009878  08009878  00019878  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800987c  0800987c  0001987c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000001d8  20000000  08009880  00020000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000021c  200001d8  08009a58  000201d8  2**3
                  ALLOC
 10 ._user_heap_stack 00000604  200003f4  08009a58  000203f4  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  000201d8  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  00020201  2**0
                  CONTENTS, READONLY
 13 .debug_info   00002f6f  00000000  00000000  00020244  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00001016  00000000  00000000  000231b3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000348  00000000  00000000  000241d0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 0000023c  00000000  00000000  00024518  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00003949  00000000  00000000  00024754  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   000043ab  00000000  00000000  0002809d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0000b67c  00000000  00000000  0002c448  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  00002354  00000000  00000000  00037ac4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000067  00000000  00000000  00039e18  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000130 <__do_global_dtors_aux>:
 8000130:	b510      	push	{r4, lr}
 8000132:	4c05      	ldr	r4, [pc, #20]	; (8000148 <__do_global_dtors_aux+0x18>)
 8000134:	7823      	ldrb	r3, [r4, #0]
 8000136:	b933      	cbnz	r3, 8000146 <__do_global_dtors_aux+0x16>
 8000138:	4b04      	ldr	r3, [pc, #16]	; (800014c <__do_global_dtors_aux+0x1c>)
 800013a:	b113      	cbz	r3, 8000142 <__do_global_dtors_aux+0x12>
 800013c:	4804      	ldr	r0, [pc, #16]	; (8000150 <__do_global_dtors_aux+0x20>)
 800013e:	f3af 8000 	nop.w
 8000142:	2301      	movs	r3, #1
 8000144:	7023      	strb	r3, [r4, #0]
 8000146:	bd10      	pop	{r4, pc}
 8000148:	200001d8 	.word	0x200001d8
 800014c:	00000000 	.word	0x00000000
 8000150:	08008b3c 	.word	0x08008b3c

08000154 <frame_dummy>:
 8000154:	b508      	push	{r3, lr}
 8000156:	4b03      	ldr	r3, [pc, #12]	; (8000164 <frame_dummy+0x10>)
 8000158:	b11b      	cbz	r3, 8000162 <frame_dummy+0xe>
 800015a:	4903      	ldr	r1, [pc, #12]	; (8000168 <frame_dummy+0x14>)
 800015c:	4803      	ldr	r0, [pc, #12]	; (800016c <frame_dummy+0x18>)
 800015e:	f3af 8000 	nop.w
 8000162:	bd08      	pop	{r3, pc}
 8000164:	00000000 	.word	0x00000000
 8000168:	200001dc 	.word	0x200001dc
 800016c:	08008b3c 	.word	0x08008b3c

08000170 <strlen>:
 8000170:	4603      	mov	r3, r0
 8000172:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000176:	2a00      	cmp	r2, #0
 8000178:	d1fb      	bne.n	8000172 <strlen+0x2>
 800017a:	1a18      	subs	r0, r3, r0
 800017c:	3801      	subs	r0, #1
 800017e:	4770      	bx	lr

08000180 <__aeabi_drsub>:
 8000180:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000184:	e002      	b.n	800018c <__adddf3>
 8000186:	bf00      	nop

08000188 <__aeabi_dsub>:
 8000188:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0800018c <__adddf3>:
 800018c:	b530      	push	{r4, r5, lr}
 800018e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000192:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000196:	ea94 0f05 	teq	r4, r5
 800019a:	bf08      	it	eq
 800019c:	ea90 0f02 	teqeq	r0, r2
 80001a0:	bf1f      	itttt	ne
 80001a2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80001a6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80001aa:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80001ae:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80001b2:	f000 80e2 	beq.w	800037a <__adddf3+0x1ee>
 80001b6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80001ba:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80001be:	bfb8      	it	lt
 80001c0:	426d      	neglt	r5, r5
 80001c2:	dd0c      	ble.n	80001de <__adddf3+0x52>
 80001c4:	442c      	add	r4, r5
 80001c6:	ea80 0202 	eor.w	r2, r0, r2
 80001ca:	ea81 0303 	eor.w	r3, r1, r3
 80001ce:	ea82 0000 	eor.w	r0, r2, r0
 80001d2:	ea83 0101 	eor.w	r1, r3, r1
 80001d6:	ea80 0202 	eor.w	r2, r0, r2
 80001da:	ea81 0303 	eor.w	r3, r1, r3
 80001de:	2d36      	cmp	r5, #54	; 0x36
 80001e0:	bf88      	it	hi
 80001e2:	bd30      	pophi	{r4, r5, pc}
 80001e4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80001e8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80001ec:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 80001f0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80001f4:	d002      	beq.n	80001fc <__adddf3+0x70>
 80001f6:	4240      	negs	r0, r0
 80001f8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80001fc:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000200:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000204:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000208:	d002      	beq.n	8000210 <__adddf3+0x84>
 800020a:	4252      	negs	r2, r2
 800020c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000210:	ea94 0f05 	teq	r4, r5
 8000214:	f000 80a7 	beq.w	8000366 <__adddf3+0x1da>
 8000218:	f1a4 0401 	sub.w	r4, r4, #1
 800021c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000220:	db0d      	blt.n	800023e <__adddf3+0xb2>
 8000222:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000226:	fa22 f205 	lsr.w	r2, r2, r5
 800022a:	1880      	adds	r0, r0, r2
 800022c:	f141 0100 	adc.w	r1, r1, #0
 8000230:	fa03 f20e 	lsl.w	r2, r3, lr
 8000234:	1880      	adds	r0, r0, r2
 8000236:	fa43 f305 	asr.w	r3, r3, r5
 800023a:	4159      	adcs	r1, r3
 800023c:	e00e      	b.n	800025c <__adddf3+0xd0>
 800023e:	f1a5 0520 	sub.w	r5, r5, #32
 8000242:	f10e 0e20 	add.w	lr, lr, #32
 8000246:	2a01      	cmp	r2, #1
 8000248:	fa03 fc0e 	lsl.w	ip, r3, lr
 800024c:	bf28      	it	cs
 800024e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000252:	fa43 f305 	asr.w	r3, r3, r5
 8000256:	18c0      	adds	r0, r0, r3
 8000258:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800025c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000260:	d507      	bpl.n	8000272 <__adddf3+0xe6>
 8000262:	f04f 0e00 	mov.w	lr, #0
 8000266:	f1dc 0c00 	rsbs	ip, ip, #0
 800026a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800026e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000272:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000276:	d31b      	bcc.n	80002b0 <__adddf3+0x124>
 8000278:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800027c:	d30c      	bcc.n	8000298 <__adddf3+0x10c>
 800027e:	0849      	lsrs	r1, r1, #1
 8000280:	ea5f 0030 	movs.w	r0, r0, rrx
 8000284:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000288:	f104 0401 	add.w	r4, r4, #1
 800028c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000290:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8000294:	f080 809a 	bcs.w	80003cc <__adddf3+0x240>
 8000298:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 800029c:	bf08      	it	eq
 800029e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80002a2:	f150 0000 	adcs.w	r0, r0, #0
 80002a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80002aa:	ea41 0105 	orr.w	r1, r1, r5
 80002ae:	bd30      	pop	{r4, r5, pc}
 80002b0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80002b4:	4140      	adcs	r0, r0
 80002b6:	eb41 0101 	adc.w	r1, r1, r1
 80002ba:	3c01      	subs	r4, #1
 80002bc:	bf28      	it	cs
 80002be:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80002c2:	d2e9      	bcs.n	8000298 <__adddf3+0x10c>
 80002c4:	f091 0f00 	teq	r1, #0
 80002c8:	bf04      	itt	eq
 80002ca:	4601      	moveq	r1, r0
 80002cc:	2000      	moveq	r0, #0
 80002ce:	fab1 f381 	clz	r3, r1
 80002d2:	bf08      	it	eq
 80002d4:	3320      	addeq	r3, #32
 80002d6:	f1a3 030b 	sub.w	r3, r3, #11
 80002da:	f1b3 0220 	subs.w	r2, r3, #32
 80002de:	da0c      	bge.n	80002fa <__adddf3+0x16e>
 80002e0:	320c      	adds	r2, #12
 80002e2:	dd08      	ble.n	80002f6 <__adddf3+0x16a>
 80002e4:	f102 0c14 	add.w	ip, r2, #20
 80002e8:	f1c2 020c 	rsb	r2, r2, #12
 80002ec:	fa01 f00c 	lsl.w	r0, r1, ip
 80002f0:	fa21 f102 	lsr.w	r1, r1, r2
 80002f4:	e00c      	b.n	8000310 <__adddf3+0x184>
 80002f6:	f102 0214 	add.w	r2, r2, #20
 80002fa:	bfd8      	it	le
 80002fc:	f1c2 0c20 	rsble	ip, r2, #32
 8000300:	fa01 f102 	lsl.w	r1, r1, r2
 8000304:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000308:	bfdc      	itt	le
 800030a:	ea41 010c 	orrle.w	r1, r1, ip
 800030e:	4090      	lslle	r0, r2
 8000310:	1ae4      	subs	r4, r4, r3
 8000312:	bfa2      	ittt	ge
 8000314:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000318:	4329      	orrge	r1, r5
 800031a:	bd30      	popge	{r4, r5, pc}
 800031c:	ea6f 0404 	mvn.w	r4, r4
 8000320:	3c1f      	subs	r4, #31
 8000322:	da1c      	bge.n	800035e <__adddf3+0x1d2>
 8000324:	340c      	adds	r4, #12
 8000326:	dc0e      	bgt.n	8000346 <__adddf3+0x1ba>
 8000328:	f104 0414 	add.w	r4, r4, #20
 800032c:	f1c4 0220 	rsb	r2, r4, #32
 8000330:	fa20 f004 	lsr.w	r0, r0, r4
 8000334:	fa01 f302 	lsl.w	r3, r1, r2
 8000338:	ea40 0003 	orr.w	r0, r0, r3
 800033c:	fa21 f304 	lsr.w	r3, r1, r4
 8000340:	ea45 0103 	orr.w	r1, r5, r3
 8000344:	bd30      	pop	{r4, r5, pc}
 8000346:	f1c4 040c 	rsb	r4, r4, #12
 800034a:	f1c4 0220 	rsb	r2, r4, #32
 800034e:	fa20 f002 	lsr.w	r0, r0, r2
 8000352:	fa01 f304 	lsl.w	r3, r1, r4
 8000356:	ea40 0003 	orr.w	r0, r0, r3
 800035a:	4629      	mov	r1, r5
 800035c:	bd30      	pop	{r4, r5, pc}
 800035e:	fa21 f004 	lsr.w	r0, r1, r4
 8000362:	4629      	mov	r1, r5
 8000364:	bd30      	pop	{r4, r5, pc}
 8000366:	f094 0f00 	teq	r4, #0
 800036a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800036e:	bf06      	itte	eq
 8000370:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000374:	3401      	addeq	r4, #1
 8000376:	3d01      	subne	r5, #1
 8000378:	e74e      	b.n	8000218 <__adddf3+0x8c>
 800037a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800037e:	bf18      	it	ne
 8000380:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000384:	d029      	beq.n	80003da <__adddf3+0x24e>
 8000386:	ea94 0f05 	teq	r4, r5
 800038a:	bf08      	it	eq
 800038c:	ea90 0f02 	teqeq	r0, r2
 8000390:	d005      	beq.n	800039e <__adddf3+0x212>
 8000392:	ea54 0c00 	orrs.w	ip, r4, r0
 8000396:	bf04      	itt	eq
 8000398:	4619      	moveq	r1, r3
 800039a:	4610      	moveq	r0, r2
 800039c:	bd30      	pop	{r4, r5, pc}
 800039e:	ea91 0f03 	teq	r1, r3
 80003a2:	bf1e      	ittt	ne
 80003a4:	2100      	movne	r1, #0
 80003a6:	2000      	movne	r0, #0
 80003a8:	bd30      	popne	{r4, r5, pc}
 80003aa:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80003ae:	d105      	bne.n	80003bc <__adddf3+0x230>
 80003b0:	0040      	lsls	r0, r0, #1
 80003b2:	4149      	adcs	r1, r1
 80003b4:	bf28      	it	cs
 80003b6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80003ba:	bd30      	pop	{r4, r5, pc}
 80003bc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80003c0:	bf3c      	itt	cc
 80003c2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80003c6:	bd30      	popcc	{r4, r5, pc}
 80003c8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80003cc:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80003d0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80003d4:	f04f 0000 	mov.w	r0, #0
 80003d8:	bd30      	pop	{r4, r5, pc}
 80003da:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80003de:	bf1a      	itte	ne
 80003e0:	4619      	movne	r1, r3
 80003e2:	4610      	movne	r0, r2
 80003e4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80003e8:	bf1c      	itt	ne
 80003ea:	460b      	movne	r3, r1
 80003ec:	4602      	movne	r2, r0
 80003ee:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80003f2:	bf06      	itte	eq
 80003f4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80003f8:	ea91 0f03 	teqeq	r1, r3
 80003fc:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000400:	bd30      	pop	{r4, r5, pc}
 8000402:	bf00      	nop

08000404 <__aeabi_ui2d>:
 8000404:	f090 0f00 	teq	r0, #0
 8000408:	bf04      	itt	eq
 800040a:	2100      	moveq	r1, #0
 800040c:	4770      	bxeq	lr
 800040e:	b530      	push	{r4, r5, lr}
 8000410:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000414:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000418:	f04f 0500 	mov.w	r5, #0
 800041c:	f04f 0100 	mov.w	r1, #0
 8000420:	e750      	b.n	80002c4 <__adddf3+0x138>
 8000422:	bf00      	nop

08000424 <__aeabi_i2d>:
 8000424:	f090 0f00 	teq	r0, #0
 8000428:	bf04      	itt	eq
 800042a:	2100      	moveq	r1, #0
 800042c:	4770      	bxeq	lr
 800042e:	b530      	push	{r4, r5, lr}
 8000430:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000434:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000438:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800043c:	bf48      	it	mi
 800043e:	4240      	negmi	r0, r0
 8000440:	f04f 0100 	mov.w	r1, #0
 8000444:	e73e      	b.n	80002c4 <__adddf3+0x138>
 8000446:	bf00      	nop

08000448 <__aeabi_f2d>:
 8000448:	0042      	lsls	r2, r0, #1
 800044a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800044e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000452:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000456:	bf1f      	itttt	ne
 8000458:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800045c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000460:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000464:	4770      	bxne	lr
 8000466:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800046a:	bf08      	it	eq
 800046c:	4770      	bxeq	lr
 800046e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000472:	bf04      	itt	eq
 8000474:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000478:	4770      	bxeq	lr
 800047a:	b530      	push	{r4, r5, lr}
 800047c:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000480:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000484:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000488:	e71c      	b.n	80002c4 <__adddf3+0x138>
 800048a:	bf00      	nop

0800048c <__aeabi_ul2d>:
 800048c:	ea50 0201 	orrs.w	r2, r0, r1
 8000490:	bf08      	it	eq
 8000492:	4770      	bxeq	lr
 8000494:	b530      	push	{r4, r5, lr}
 8000496:	f04f 0500 	mov.w	r5, #0
 800049a:	e00a      	b.n	80004b2 <__aeabi_l2d+0x16>

0800049c <__aeabi_l2d>:
 800049c:	ea50 0201 	orrs.w	r2, r0, r1
 80004a0:	bf08      	it	eq
 80004a2:	4770      	bxeq	lr
 80004a4:	b530      	push	{r4, r5, lr}
 80004a6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80004aa:	d502      	bpl.n	80004b2 <__aeabi_l2d+0x16>
 80004ac:	4240      	negs	r0, r0
 80004ae:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80004b2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80004b6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80004ba:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80004be:	f43f aed8 	beq.w	8000272 <__adddf3+0xe6>
 80004c2:	f04f 0203 	mov.w	r2, #3
 80004c6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80004ca:	bf18      	it	ne
 80004cc:	3203      	addne	r2, #3
 80004ce:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80004d2:	bf18      	it	ne
 80004d4:	3203      	addne	r2, #3
 80004d6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80004da:	f1c2 0320 	rsb	r3, r2, #32
 80004de:	fa00 fc03 	lsl.w	ip, r0, r3
 80004e2:	fa20 f002 	lsr.w	r0, r0, r2
 80004e6:	fa01 fe03 	lsl.w	lr, r1, r3
 80004ea:	ea40 000e 	orr.w	r0, r0, lr
 80004ee:	fa21 f102 	lsr.w	r1, r1, r2
 80004f2:	4414      	add	r4, r2
 80004f4:	e6bd      	b.n	8000272 <__adddf3+0xe6>
 80004f6:	bf00      	nop

080004f8 <__aeabi_dmul>:
 80004f8:	b570      	push	{r4, r5, r6, lr}
 80004fa:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80004fe:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000502:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000506:	bf1d      	ittte	ne
 8000508:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800050c:	ea94 0f0c 	teqne	r4, ip
 8000510:	ea95 0f0c 	teqne	r5, ip
 8000514:	f000 f8de 	bleq	80006d4 <__aeabi_dmul+0x1dc>
 8000518:	442c      	add	r4, r5
 800051a:	ea81 0603 	eor.w	r6, r1, r3
 800051e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000522:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000526:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800052a:	bf18      	it	ne
 800052c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000530:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000534:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000538:	d038      	beq.n	80005ac <__aeabi_dmul+0xb4>
 800053a:	fba0 ce02 	umull	ip, lr, r0, r2
 800053e:	f04f 0500 	mov.w	r5, #0
 8000542:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000546:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800054a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800054e:	f04f 0600 	mov.w	r6, #0
 8000552:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000556:	f09c 0f00 	teq	ip, #0
 800055a:	bf18      	it	ne
 800055c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000560:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000564:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000568:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800056c:	d204      	bcs.n	8000578 <__aeabi_dmul+0x80>
 800056e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000572:	416d      	adcs	r5, r5
 8000574:	eb46 0606 	adc.w	r6, r6, r6
 8000578:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800057c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000580:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000584:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000588:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800058c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000590:	bf88      	it	hi
 8000592:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000596:	d81e      	bhi.n	80005d6 <__aeabi_dmul+0xde>
 8000598:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 800059c:	bf08      	it	eq
 800059e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80005a2:	f150 0000 	adcs.w	r0, r0, #0
 80005a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80005aa:	bd70      	pop	{r4, r5, r6, pc}
 80005ac:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80005b0:	ea46 0101 	orr.w	r1, r6, r1
 80005b4:	ea40 0002 	orr.w	r0, r0, r2
 80005b8:	ea81 0103 	eor.w	r1, r1, r3
 80005bc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80005c0:	bfc2      	ittt	gt
 80005c2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80005c6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80005ca:	bd70      	popgt	{r4, r5, r6, pc}
 80005cc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80005d0:	f04f 0e00 	mov.w	lr, #0
 80005d4:	3c01      	subs	r4, #1
 80005d6:	f300 80ab 	bgt.w	8000730 <__aeabi_dmul+0x238>
 80005da:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80005de:	bfde      	ittt	le
 80005e0:	2000      	movle	r0, #0
 80005e2:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 80005e6:	bd70      	pople	{r4, r5, r6, pc}
 80005e8:	f1c4 0400 	rsb	r4, r4, #0
 80005ec:	3c20      	subs	r4, #32
 80005ee:	da35      	bge.n	800065c <__aeabi_dmul+0x164>
 80005f0:	340c      	adds	r4, #12
 80005f2:	dc1b      	bgt.n	800062c <__aeabi_dmul+0x134>
 80005f4:	f104 0414 	add.w	r4, r4, #20
 80005f8:	f1c4 0520 	rsb	r5, r4, #32
 80005fc:	fa00 f305 	lsl.w	r3, r0, r5
 8000600:	fa20 f004 	lsr.w	r0, r0, r4
 8000604:	fa01 f205 	lsl.w	r2, r1, r5
 8000608:	ea40 0002 	orr.w	r0, r0, r2
 800060c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000610:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000614:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000618:	fa21 f604 	lsr.w	r6, r1, r4
 800061c:	eb42 0106 	adc.w	r1, r2, r6
 8000620:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000624:	bf08      	it	eq
 8000626:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800062a:	bd70      	pop	{r4, r5, r6, pc}
 800062c:	f1c4 040c 	rsb	r4, r4, #12
 8000630:	f1c4 0520 	rsb	r5, r4, #32
 8000634:	fa00 f304 	lsl.w	r3, r0, r4
 8000638:	fa20 f005 	lsr.w	r0, r0, r5
 800063c:	fa01 f204 	lsl.w	r2, r1, r4
 8000640:	ea40 0002 	orr.w	r0, r0, r2
 8000644:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000648:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800064c:	f141 0100 	adc.w	r1, r1, #0
 8000650:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000654:	bf08      	it	eq
 8000656:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800065a:	bd70      	pop	{r4, r5, r6, pc}
 800065c:	f1c4 0520 	rsb	r5, r4, #32
 8000660:	fa00 f205 	lsl.w	r2, r0, r5
 8000664:	ea4e 0e02 	orr.w	lr, lr, r2
 8000668:	fa20 f304 	lsr.w	r3, r0, r4
 800066c:	fa01 f205 	lsl.w	r2, r1, r5
 8000670:	ea43 0302 	orr.w	r3, r3, r2
 8000674:	fa21 f004 	lsr.w	r0, r1, r4
 8000678:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800067c:	fa21 f204 	lsr.w	r2, r1, r4
 8000680:	ea20 0002 	bic.w	r0, r0, r2
 8000684:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000688:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800068c:	bf08      	it	eq
 800068e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000692:	bd70      	pop	{r4, r5, r6, pc}
 8000694:	f094 0f00 	teq	r4, #0
 8000698:	d10f      	bne.n	80006ba <__aeabi_dmul+0x1c2>
 800069a:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 800069e:	0040      	lsls	r0, r0, #1
 80006a0:	eb41 0101 	adc.w	r1, r1, r1
 80006a4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80006a8:	bf08      	it	eq
 80006aa:	3c01      	subeq	r4, #1
 80006ac:	d0f7      	beq.n	800069e <__aeabi_dmul+0x1a6>
 80006ae:	ea41 0106 	orr.w	r1, r1, r6
 80006b2:	f095 0f00 	teq	r5, #0
 80006b6:	bf18      	it	ne
 80006b8:	4770      	bxne	lr
 80006ba:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80006be:	0052      	lsls	r2, r2, #1
 80006c0:	eb43 0303 	adc.w	r3, r3, r3
 80006c4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80006c8:	bf08      	it	eq
 80006ca:	3d01      	subeq	r5, #1
 80006cc:	d0f7      	beq.n	80006be <__aeabi_dmul+0x1c6>
 80006ce:	ea43 0306 	orr.w	r3, r3, r6
 80006d2:	4770      	bx	lr
 80006d4:	ea94 0f0c 	teq	r4, ip
 80006d8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80006dc:	bf18      	it	ne
 80006de:	ea95 0f0c 	teqne	r5, ip
 80006e2:	d00c      	beq.n	80006fe <__aeabi_dmul+0x206>
 80006e4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80006e8:	bf18      	it	ne
 80006ea:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80006ee:	d1d1      	bne.n	8000694 <__aeabi_dmul+0x19c>
 80006f0:	ea81 0103 	eor.w	r1, r1, r3
 80006f4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80006f8:	f04f 0000 	mov.w	r0, #0
 80006fc:	bd70      	pop	{r4, r5, r6, pc}
 80006fe:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000702:	bf06      	itte	eq
 8000704:	4610      	moveq	r0, r2
 8000706:	4619      	moveq	r1, r3
 8000708:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800070c:	d019      	beq.n	8000742 <__aeabi_dmul+0x24a>
 800070e:	ea94 0f0c 	teq	r4, ip
 8000712:	d102      	bne.n	800071a <__aeabi_dmul+0x222>
 8000714:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000718:	d113      	bne.n	8000742 <__aeabi_dmul+0x24a>
 800071a:	ea95 0f0c 	teq	r5, ip
 800071e:	d105      	bne.n	800072c <__aeabi_dmul+0x234>
 8000720:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000724:	bf1c      	itt	ne
 8000726:	4610      	movne	r0, r2
 8000728:	4619      	movne	r1, r3
 800072a:	d10a      	bne.n	8000742 <__aeabi_dmul+0x24a>
 800072c:	ea81 0103 	eor.w	r1, r1, r3
 8000730:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000734:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000738:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800073c:	f04f 0000 	mov.w	r0, #0
 8000740:	bd70      	pop	{r4, r5, r6, pc}
 8000742:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000746:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800074a:	bd70      	pop	{r4, r5, r6, pc}

0800074c <__aeabi_ddiv>:
 800074c:	b570      	push	{r4, r5, r6, lr}
 800074e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000752:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000756:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800075a:	bf1d      	ittte	ne
 800075c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000760:	ea94 0f0c 	teqne	r4, ip
 8000764:	ea95 0f0c 	teqne	r5, ip
 8000768:	f000 f8a7 	bleq	80008ba <__aeabi_ddiv+0x16e>
 800076c:	eba4 0405 	sub.w	r4, r4, r5
 8000770:	ea81 0e03 	eor.w	lr, r1, r3
 8000774:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000778:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800077c:	f000 8088 	beq.w	8000890 <__aeabi_ddiv+0x144>
 8000780:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000784:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000788:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800078c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000790:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000794:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000798:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800079c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80007a0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80007a4:	429d      	cmp	r5, r3
 80007a6:	bf08      	it	eq
 80007a8:	4296      	cmpeq	r6, r2
 80007aa:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80007ae:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80007b2:	d202      	bcs.n	80007ba <__aeabi_ddiv+0x6e>
 80007b4:	085b      	lsrs	r3, r3, #1
 80007b6:	ea4f 0232 	mov.w	r2, r2, rrx
 80007ba:	1ab6      	subs	r6, r6, r2
 80007bc:	eb65 0503 	sbc.w	r5, r5, r3
 80007c0:	085b      	lsrs	r3, r3, #1
 80007c2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007c6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80007ca:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80007ce:	ebb6 0e02 	subs.w	lr, r6, r2
 80007d2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007d6:	bf22      	ittt	cs
 80007d8:	1ab6      	subcs	r6, r6, r2
 80007da:	4675      	movcs	r5, lr
 80007dc:	ea40 000c 	orrcs.w	r0, r0, ip
 80007e0:	085b      	lsrs	r3, r3, #1
 80007e2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007e6:	ebb6 0e02 	subs.w	lr, r6, r2
 80007ea:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007ee:	bf22      	ittt	cs
 80007f0:	1ab6      	subcs	r6, r6, r2
 80007f2:	4675      	movcs	r5, lr
 80007f4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80007f8:	085b      	lsrs	r3, r3, #1
 80007fa:	ea4f 0232 	mov.w	r2, r2, rrx
 80007fe:	ebb6 0e02 	subs.w	lr, r6, r2
 8000802:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000806:	bf22      	ittt	cs
 8000808:	1ab6      	subcs	r6, r6, r2
 800080a:	4675      	movcs	r5, lr
 800080c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000810:	085b      	lsrs	r3, r3, #1
 8000812:	ea4f 0232 	mov.w	r2, r2, rrx
 8000816:	ebb6 0e02 	subs.w	lr, r6, r2
 800081a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800081e:	bf22      	ittt	cs
 8000820:	1ab6      	subcs	r6, r6, r2
 8000822:	4675      	movcs	r5, lr
 8000824:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000828:	ea55 0e06 	orrs.w	lr, r5, r6
 800082c:	d018      	beq.n	8000860 <__aeabi_ddiv+0x114>
 800082e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000832:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000836:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800083a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800083e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000842:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000846:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800084a:	d1c0      	bne.n	80007ce <__aeabi_ddiv+0x82>
 800084c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000850:	d10b      	bne.n	800086a <__aeabi_ddiv+0x11e>
 8000852:	ea41 0100 	orr.w	r1, r1, r0
 8000856:	f04f 0000 	mov.w	r0, #0
 800085a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800085e:	e7b6      	b.n	80007ce <__aeabi_ddiv+0x82>
 8000860:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000864:	bf04      	itt	eq
 8000866:	4301      	orreq	r1, r0
 8000868:	2000      	moveq	r0, #0
 800086a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800086e:	bf88      	it	hi
 8000870:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000874:	f63f aeaf 	bhi.w	80005d6 <__aeabi_dmul+0xde>
 8000878:	ebb5 0c03 	subs.w	ip, r5, r3
 800087c:	bf04      	itt	eq
 800087e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000882:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000886:	f150 0000 	adcs.w	r0, r0, #0
 800088a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800088e:	bd70      	pop	{r4, r5, r6, pc}
 8000890:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 8000894:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000898:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 800089c:	bfc2      	ittt	gt
 800089e:	ebd4 050c 	rsbsgt	r5, r4, ip
 80008a2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80008a6:	bd70      	popgt	{r4, r5, r6, pc}
 80008a8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80008ac:	f04f 0e00 	mov.w	lr, #0
 80008b0:	3c01      	subs	r4, #1
 80008b2:	e690      	b.n	80005d6 <__aeabi_dmul+0xde>
 80008b4:	ea45 0e06 	orr.w	lr, r5, r6
 80008b8:	e68d      	b.n	80005d6 <__aeabi_dmul+0xde>
 80008ba:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80008be:	ea94 0f0c 	teq	r4, ip
 80008c2:	bf08      	it	eq
 80008c4:	ea95 0f0c 	teqeq	r5, ip
 80008c8:	f43f af3b 	beq.w	8000742 <__aeabi_dmul+0x24a>
 80008cc:	ea94 0f0c 	teq	r4, ip
 80008d0:	d10a      	bne.n	80008e8 <__aeabi_ddiv+0x19c>
 80008d2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80008d6:	f47f af34 	bne.w	8000742 <__aeabi_dmul+0x24a>
 80008da:	ea95 0f0c 	teq	r5, ip
 80008de:	f47f af25 	bne.w	800072c <__aeabi_dmul+0x234>
 80008e2:	4610      	mov	r0, r2
 80008e4:	4619      	mov	r1, r3
 80008e6:	e72c      	b.n	8000742 <__aeabi_dmul+0x24a>
 80008e8:	ea95 0f0c 	teq	r5, ip
 80008ec:	d106      	bne.n	80008fc <__aeabi_ddiv+0x1b0>
 80008ee:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008f2:	f43f aefd 	beq.w	80006f0 <__aeabi_dmul+0x1f8>
 80008f6:	4610      	mov	r0, r2
 80008f8:	4619      	mov	r1, r3
 80008fa:	e722      	b.n	8000742 <__aeabi_dmul+0x24a>
 80008fc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000900:	bf18      	it	ne
 8000902:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000906:	f47f aec5 	bne.w	8000694 <__aeabi_dmul+0x19c>
 800090a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 800090e:	f47f af0d 	bne.w	800072c <__aeabi_dmul+0x234>
 8000912:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000916:	f47f aeeb 	bne.w	80006f0 <__aeabi_dmul+0x1f8>
 800091a:	e712      	b.n	8000742 <__aeabi_dmul+0x24a>

0800091c <__gedf2>:
 800091c:	f04f 3cff 	mov.w	ip, #4294967295	; 0xffffffff
 8000920:	e006      	b.n	8000930 <__cmpdf2+0x4>
 8000922:	bf00      	nop

08000924 <__ledf2>:
 8000924:	f04f 0c01 	mov.w	ip, #1
 8000928:	e002      	b.n	8000930 <__cmpdf2+0x4>
 800092a:	bf00      	nop

0800092c <__cmpdf2>:
 800092c:	f04f 0c01 	mov.w	ip, #1
 8000930:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000934:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000938:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 800093c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000940:	bf18      	it	ne
 8000942:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000946:	d01b      	beq.n	8000980 <__cmpdf2+0x54>
 8000948:	b001      	add	sp, #4
 800094a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 800094e:	bf0c      	ite	eq
 8000950:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000954:	ea91 0f03 	teqne	r1, r3
 8000958:	bf02      	ittt	eq
 800095a:	ea90 0f02 	teqeq	r0, r2
 800095e:	2000      	moveq	r0, #0
 8000960:	4770      	bxeq	lr
 8000962:	f110 0f00 	cmn.w	r0, #0
 8000966:	ea91 0f03 	teq	r1, r3
 800096a:	bf58      	it	pl
 800096c:	4299      	cmppl	r1, r3
 800096e:	bf08      	it	eq
 8000970:	4290      	cmpeq	r0, r2
 8000972:	bf2c      	ite	cs
 8000974:	17d8      	asrcs	r0, r3, #31
 8000976:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 800097a:	f040 0001 	orr.w	r0, r0, #1
 800097e:	4770      	bx	lr
 8000980:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000984:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000988:	d102      	bne.n	8000990 <__cmpdf2+0x64>
 800098a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 800098e:	d107      	bne.n	80009a0 <__cmpdf2+0x74>
 8000990:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000994:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000998:	d1d6      	bne.n	8000948 <__cmpdf2+0x1c>
 800099a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 800099e:	d0d3      	beq.n	8000948 <__cmpdf2+0x1c>
 80009a0:	f85d 0b04 	ldr.w	r0, [sp], #4
 80009a4:	4770      	bx	lr
 80009a6:	bf00      	nop

080009a8 <__aeabi_cdrcmple>:
 80009a8:	4684      	mov	ip, r0
 80009aa:	4610      	mov	r0, r2
 80009ac:	4662      	mov	r2, ip
 80009ae:	468c      	mov	ip, r1
 80009b0:	4619      	mov	r1, r3
 80009b2:	4663      	mov	r3, ip
 80009b4:	e000      	b.n	80009b8 <__aeabi_cdcmpeq>
 80009b6:	bf00      	nop

080009b8 <__aeabi_cdcmpeq>:
 80009b8:	b501      	push	{r0, lr}
 80009ba:	f7ff ffb7 	bl	800092c <__cmpdf2>
 80009be:	2800      	cmp	r0, #0
 80009c0:	bf48      	it	mi
 80009c2:	f110 0f00 	cmnmi.w	r0, #0
 80009c6:	bd01      	pop	{r0, pc}

080009c8 <__aeabi_dcmpeq>:
 80009c8:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009cc:	f7ff fff4 	bl	80009b8 <__aeabi_cdcmpeq>
 80009d0:	bf0c      	ite	eq
 80009d2:	2001      	moveq	r0, #1
 80009d4:	2000      	movne	r0, #0
 80009d6:	f85d fb08 	ldr.w	pc, [sp], #8
 80009da:	bf00      	nop

080009dc <__aeabi_dcmplt>:
 80009dc:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009e0:	f7ff ffea 	bl	80009b8 <__aeabi_cdcmpeq>
 80009e4:	bf34      	ite	cc
 80009e6:	2001      	movcc	r0, #1
 80009e8:	2000      	movcs	r0, #0
 80009ea:	f85d fb08 	ldr.w	pc, [sp], #8
 80009ee:	bf00      	nop

080009f0 <__aeabi_dcmple>:
 80009f0:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009f4:	f7ff ffe0 	bl	80009b8 <__aeabi_cdcmpeq>
 80009f8:	bf94      	ite	ls
 80009fa:	2001      	movls	r0, #1
 80009fc:	2000      	movhi	r0, #0
 80009fe:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a02:	bf00      	nop

08000a04 <__aeabi_dcmpge>:
 8000a04:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a08:	f7ff ffce 	bl	80009a8 <__aeabi_cdrcmple>
 8000a0c:	bf94      	ite	ls
 8000a0e:	2001      	movls	r0, #1
 8000a10:	2000      	movhi	r0, #0
 8000a12:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a16:	bf00      	nop

08000a18 <__aeabi_dcmpgt>:
 8000a18:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a1c:	f7ff ffc4 	bl	80009a8 <__aeabi_cdrcmple>
 8000a20:	bf34      	ite	cc
 8000a22:	2001      	movcc	r0, #1
 8000a24:	2000      	movcs	r0, #0
 8000a26:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a2a:	bf00      	nop

08000a2c <__aeabi_dcmpun>:
 8000a2c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a30:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a34:	d102      	bne.n	8000a3c <__aeabi_dcmpun+0x10>
 8000a36:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a3a:	d10a      	bne.n	8000a52 <__aeabi_dcmpun+0x26>
 8000a3c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a40:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a44:	d102      	bne.n	8000a4c <__aeabi_dcmpun+0x20>
 8000a46:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a4a:	d102      	bne.n	8000a52 <__aeabi_dcmpun+0x26>
 8000a4c:	f04f 0000 	mov.w	r0, #0
 8000a50:	4770      	bx	lr
 8000a52:	f04f 0001 	mov.w	r0, #1
 8000a56:	4770      	bx	lr

08000a58 <__aeabi_d2iz>:
 8000a58:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000a5c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000a60:	d215      	bcs.n	8000a8e <__aeabi_d2iz+0x36>
 8000a62:	d511      	bpl.n	8000a88 <__aeabi_d2iz+0x30>
 8000a64:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000a68:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000a6c:	d912      	bls.n	8000a94 <__aeabi_d2iz+0x3c>
 8000a6e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000a72:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000a76:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000a7a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000a7e:	fa23 f002 	lsr.w	r0, r3, r2
 8000a82:	bf18      	it	ne
 8000a84:	4240      	negne	r0, r0
 8000a86:	4770      	bx	lr
 8000a88:	f04f 0000 	mov.w	r0, #0
 8000a8c:	4770      	bx	lr
 8000a8e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000a92:	d105      	bne.n	8000aa0 <__aeabi_d2iz+0x48>
 8000a94:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000a98:	bf08      	it	eq
 8000a9a:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000a9e:	4770      	bx	lr
 8000aa0:	f04f 0000 	mov.w	r0, #0
 8000aa4:	4770      	bx	lr
 8000aa6:	bf00      	nop

08000aa8 <__aeabi_d2uiz>:
 8000aa8:	004a      	lsls	r2, r1, #1
 8000aaa:	d211      	bcs.n	8000ad0 <__aeabi_d2uiz+0x28>
 8000aac:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000ab0:	d211      	bcs.n	8000ad6 <__aeabi_d2uiz+0x2e>
 8000ab2:	d50d      	bpl.n	8000ad0 <__aeabi_d2uiz+0x28>
 8000ab4:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000ab8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000abc:	d40e      	bmi.n	8000adc <__aeabi_d2uiz+0x34>
 8000abe:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000ac2:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000ac6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000aca:	fa23 f002 	lsr.w	r0, r3, r2
 8000ace:	4770      	bx	lr
 8000ad0:	f04f 0000 	mov.w	r0, #0
 8000ad4:	4770      	bx	lr
 8000ad6:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000ada:	d102      	bne.n	8000ae2 <__aeabi_d2uiz+0x3a>
 8000adc:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000ae0:	4770      	bx	lr
 8000ae2:	f04f 0000 	mov.w	r0, #0
 8000ae6:	4770      	bx	lr

08000ae8 <__aeabi_d2f>:
 8000ae8:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000aec:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000af0:	bf24      	itt	cs
 8000af2:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000af6:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000afa:	d90d      	bls.n	8000b18 <__aeabi_d2f+0x30>
 8000afc:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000b00:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000b04:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000b08:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000b0c:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000b10:	bf08      	it	eq
 8000b12:	f020 0001 	biceq.w	r0, r0, #1
 8000b16:	4770      	bx	lr
 8000b18:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000b1c:	d121      	bne.n	8000b62 <__aeabi_d2f+0x7a>
 8000b1e:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000b22:	bfbc      	itt	lt
 8000b24:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000b28:	4770      	bxlt	lr
 8000b2a:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000b2e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000b32:	f1c2 0218 	rsb	r2, r2, #24
 8000b36:	f1c2 0c20 	rsb	ip, r2, #32
 8000b3a:	fa10 f30c 	lsls.w	r3, r0, ip
 8000b3e:	fa20 f002 	lsr.w	r0, r0, r2
 8000b42:	bf18      	it	ne
 8000b44:	f040 0001 	orrne.w	r0, r0, #1
 8000b48:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b4c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000b50:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000b54:	ea40 000c 	orr.w	r0, r0, ip
 8000b58:	fa23 f302 	lsr.w	r3, r3, r2
 8000b5c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000b60:	e7cc      	b.n	8000afc <__aeabi_d2f+0x14>
 8000b62:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000b66:	d107      	bne.n	8000b78 <__aeabi_d2f+0x90>
 8000b68:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000b6c:	bf1e      	ittt	ne
 8000b6e:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000b72:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000b76:	4770      	bxne	lr
 8000b78:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000b7c:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000b80:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000b84:	4770      	bx	lr
 8000b86:	bf00      	nop

08000b88 <__aeabi_frsub>:
 8000b88:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
 8000b8c:	e002      	b.n	8000b94 <__addsf3>
 8000b8e:	bf00      	nop

08000b90 <__aeabi_fsub>:
 8000b90:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000

08000b94 <__addsf3>:
 8000b94:	0042      	lsls	r2, r0, #1
 8000b96:	bf1f      	itttt	ne
 8000b98:	ea5f 0341 	movsne.w	r3, r1, lsl #1
 8000b9c:	ea92 0f03 	teqne	r2, r3
 8000ba0:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
 8000ba4:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000ba8:	d06a      	beq.n	8000c80 <__addsf3+0xec>
 8000baa:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8000bae:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
 8000bb2:	bfc1      	itttt	gt
 8000bb4:	18d2      	addgt	r2, r2, r3
 8000bb6:	4041      	eorgt	r1, r0
 8000bb8:	4048      	eorgt	r0, r1
 8000bba:	4041      	eorgt	r1, r0
 8000bbc:	bfb8      	it	lt
 8000bbe:	425b      	neglt	r3, r3
 8000bc0:	2b19      	cmp	r3, #25
 8000bc2:	bf88      	it	hi
 8000bc4:	4770      	bxhi	lr
 8000bc6:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
 8000bca:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000bce:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
 8000bd2:	bf18      	it	ne
 8000bd4:	4240      	negne	r0, r0
 8000bd6:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000bda:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8000bde:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
 8000be2:	bf18      	it	ne
 8000be4:	4249      	negne	r1, r1
 8000be6:	ea92 0f03 	teq	r2, r3
 8000bea:	d03f      	beq.n	8000c6c <__addsf3+0xd8>
 8000bec:	f1a2 0201 	sub.w	r2, r2, #1
 8000bf0:	fa41 fc03 	asr.w	ip, r1, r3
 8000bf4:	eb10 000c 	adds.w	r0, r0, ip
 8000bf8:	f1c3 0320 	rsb	r3, r3, #32
 8000bfc:	fa01 f103 	lsl.w	r1, r1, r3
 8000c00:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 8000c04:	d502      	bpl.n	8000c0c <__addsf3+0x78>
 8000c06:	4249      	negs	r1, r1
 8000c08:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
 8000c0c:	f5b0 0f00 	cmp.w	r0, #8388608	; 0x800000
 8000c10:	d313      	bcc.n	8000c3a <__addsf3+0xa6>
 8000c12:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
 8000c16:	d306      	bcc.n	8000c26 <__addsf3+0x92>
 8000c18:	0840      	lsrs	r0, r0, #1
 8000c1a:	ea4f 0131 	mov.w	r1, r1, rrx
 8000c1e:	f102 0201 	add.w	r2, r2, #1
 8000c22:	2afe      	cmp	r2, #254	; 0xfe
 8000c24:	d251      	bcs.n	8000cca <__addsf3+0x136>
 8000c26:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
 8000c2a:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000c2e:	bf08      	it	eq
 8000c30:	f020 0001 	biceq.w	r0, r0, #1
 8000c34:	ea40 0003 	orr.w	r0, r0, r3
 8000c38:	4770      	bx	lr
 8000c3a:	0049      	lsls	r1, r1, #1
 8000c3c:	eb40 0000 	adc.w	r0, r0, r0
 8000c40:	3a01      	subs	r2, #1
 8000c42:	bf28      	it	cs
 8000c44:	f5b0 0f00 	cmpcs.w	r0, #8388608	; 0x800000
 8000c48:	d2ed      	bcs.n	8000c26 <__addsf3+0x92>
 8000c4a:	fab0 fc80 	clz	ip, r0
 8000c4e:	f1ac 0c08 	sub.w	ip, ip, #8
 8000c52:	ebb2 020c 	subs.w	r2, r2, ip
 8000c56:	fa00 f00c 	lsl.w	r0, r0, ip
 8000c5a:	bfaa      	itet	ge
 8000c5c:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
 8000c60:	4252      	neglt	r2, r2
 8000c62:	4318      	orrge	r0, r3
 8000c64:	bfbc      	itt	lt
 8000c66:	40d0      	lsrlt	r0, r2
 8000c68:	4318      	orrlt	r0, r3
 8000c6a:	4770      	bx	lr
 8000c6c:	f092 0f00 	teq	r2, #0
 8000c70:	f481 0100 	eor.w	r1, r1, #8388608	; 0x800000
 8000c74:	bf06      	itte	eq
 8000c76:	f480 0000 	eoreq.w	r0, r0, #8388608	; 0x800000
 8000c7a:	3201      	addeq	r2, #1
 8000c7c:	3b01      	subne	r3, #1
 8000c7e:	e7b5      	b.n	8000bec <__addsf3+0x58>
 8000c80:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8000c84:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8000c88:	bf18      	it	ne
 8000c8a:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000c8e:	d021      	beq.n	8000cd4 <__addsf3+0x140>
 8000c90:	ea92 0f03 	teq	r2, r3
 8000c94:	d004      	beq.n	8000ca0 <__addsf3+0x10c>
 8000c96:	f092 0f00 	teq	r2, #0
 8000c9a:	bf08      	it	eq
 8000c9c:	4608      	moveq	r0, r1
 8000c9e:	4770      	bx	lr
 8000ca0:	ea90 0f01 	teq	r0, r1
 8000ca4:	bf1c      	itt	ne
 8000ca6:	2000      	movne	r0, #0
 8000ca8:	4770      	bxne	lr
 8000caa:	f012 4f7f 	tst.w	r2, #4278190080	; 0xff000000
 8000cae:	d104      	bne.n	8000cba <__addsf3+0x126>
 8000cb0:	0040      	lsls	r0, r0, #1
 8000cb2:	bf28      	it	cs
 8000cb4:	f040 4000 	orrcs.w	r0, r0, #2147483648	; 0x80000000
 8000cb8:	4770      	bx	lr
 8000cba:	f112 7200 	adds.w	r2, r2, #33554432	; 0x2000000
 8000cbe:	bf3c      	itt	cc
 8000cc0:	f500 0000 	addcc.w	r0, r0, #8388608	; 0x800000
 8000cc4:	4770      	bxcc	lr
 8000cc6:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 8000cca:	f043 40fe 	orr.w	r0, r3, #2130706432	; 0x7f000000
 8000cce:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000cd2:	4770      	bx	lr
 8000cd4:	ea7f 6222 	mvns.w	r2, r2, asr #24
 8000cd8:	bf16      	itet	ne
 8000cda:	4608      	movne	r0, r1
 8000cdc:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
 8000ce0:	4601      	movne	r1, r0
 8000ce2:	0242      	lsls	r2, r0, #9
 8000ce4:	bf06      	itte	eq
 8000ce6:	ea5f 2341 	movseq.w	r3, r1, lsl #9
 8000cea:	ea90 0f01 	teqeq	r0, r1
 8000cee:	f440 0080 	orrne.w	r0, r0, #4194304	; 0x400000
 8000cf2:	4770      	bx	lr

08000cf4 <__aeabi_ui2f>:
 8000cf4:	f04f 0300 	mov.w	r3, #0
 8000cf8:	e004      	b.n	8000d04 <__aeabi_i2f+0x8>
 8000cfa:	bf00      	nop

08000cfc <__aeabi_i2f>:
 8000cfc:	f010 4300 	ands.w	r3, r0, #2147483648	; 0x80000000
 8000d00:	bf48      	it	mi
 8000d02:	4240      	negmi	r0, r0
 8000d04:	ea5f 0c00 	movs.w	ip, r0
 8000d08:	bf08      	it	eq
 8000d0a:	4770      	bxeq	lr
 8000d0c:	f043 4396 	orr.w	r3, r3, #1258291200	; 0x4b000000
 8000d10:	4601      	mov	r1, r0
 8000d12:	f04f 0000 	mov.w	r0, #0
 8000d16:	e01c      	b.n	8000d52 <__aeabi_l2f+0x2a>

08000d18 <__aeabi_ul2f>:
 8000d18:	ea50 0201 	orrs.w	r2, r0, r1
 8000d1c:	bf08      	it	eq
 8000d1e:	4770      	bxeq	lr
 8000d20:	f04f 0300 	mov.w	r3, #0
 8000d24:	e00a      	b.n	8000d3c <__aeabi_l2f+0x14>
 8000d26:	bf00      	nop

08000d28 <__aeabi_l2f>:
 8000d28:	ea50 0201 	orrs.w	r2, r0, r1
 8000d2c:	bf08      	it	eq
 8000d2e:	4770      	bxeq	lr
 8000d30:	f011 4300 	ands.w	r3, r1, #2147483648	; 0x80000000
 8000d34:	d502      	bpl.n	8000d3c <__aeabi_l2f+0x14>
 8000d36:	4240      	negs	r0, r0
 8000d38:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000d3c:	ea5f 0c01 	movs.w	ip, r1
 8000d40:	bf02      	ittt	eq
 8000d42:	4684      	moveq	ip, r0
 8000d44:	4601      	moveq	r1, r0
 8000d46:	2000      	moveq	r0, #0
 8000d48:	f043 43b6 	orr.w	r3, r3, #1526726656	; 0x5b000000
 8000d4c:	bf08      	it	eq
 8000d4e:	f1a3 5380 	subeq.w	r3, r3, #268435456	; 0x10000000
 8000d52:	f5a3 0300 	sub.w	r3, r3, #8388608	; 0x800000
 8000d56:	fabc f28c 	clz	r2, ip
 8000d5a:	3a08      	subs	r2, #8
 8000d5c:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
 8000d60:	db10      	blt.n	8000d84 <__aeabi_l2f+0x5c>
 8000d62:	fa01 fc02 	lsl.w	ip, r1, r2
 8000d66:	4463      	add	r3, ip
 8000d68:	fa00 fc02 	lsl.w	ip, r0, r2
 8000d6c:	f1c2 0220 	rsb	r2, r2, #32
 8000d70:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8000d74:	fa20 f202 	lsr.w	r2, r0, r2
 8000d78:	eb43 0002 	adc.w	r0, r3, r2
 8000d7c:	bf08      	it	eq
 8000d7e:	f020 0001 	biceq.w	r0, r0, #1
 8000d82:	4770      	bx	lr
 8000d84:	f102 0220 	add.w	r2, r2, #32
 8000d88:	fa01 fc02 	lsl.w	ip, r1, r2
 8000d8c:	f1c2 0220 	rsb	r2, r2, #32
 8000d90:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
 8000d94:	fa21 f202 	lsr.w	r2, r1, r2
 8000d98:	eb43 0002 	adc.w	r0, r3, r2
 8000d9c:	bf08      	it	eq
 8000d9e:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000da2:	4770      	bx	lr

08000da4 <__aeabi_fmul>:
 8000da4:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000da8:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8000dac:	bf1e      	ittt	ne
 8000dae:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8000db2:	ea92 0f0c 	teqne	r2, ip
 8000db6:	ea93 0f0c 	teqne	r3, ip
 8000dba:	d06f      	beq.n	8000e9c <__aeabi_fmul+0xf8>
 8000dbc:	441a      	add	r2, r3
 8000dbe:	ea80 0c01 	eor.w	ip, r0, r1
 8000dc2:	0240      	lsls	r0, r0, #9
 8000dc4:	bf18      	it	ne
 8000dc6:	ea5f 2141 	movsne.w	r1, r1, lsl #9
 8000dca:	d01e      	beq.n	8000e0a <__aeabi_fmul+0x66>
 8000dcc:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 8000dd0:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
 8000dd4:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
 8000dd8:	fba0 3101 	umull	r3, r1, r0, r1
 8000ddc:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 8000de0:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
 8000de4:	bf3e      	ittt	cc
 8000de6:	0049      	lslcc	r1, r1, #1
 8000de8:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
 8000dec:	005b      	lslcc	r3, r3, #1
 8000dee:	ea40 0001 	orr.w	r0, r0, r1
 8000df2:	f162 027f 	sbc.w	r2, r2, #127	; 0x7f
 8000df6:	2afd      	cmp	r2, #253	; 0xfd
 8000df8:	d81d      	bhi.n	8000e36 <__aeabi_fmul+0x92>
 8000dfa:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 8000dfe:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000e02:	bf08      	it	eq
 8000e04:	f020 0001 	biceq.w	r0, r0, #1
 8000e08:	4770      	bx	lr
 8000e0a:	f090 0f00 	teq	r0, #0
 8000e0e:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 8000e12:	bf08      	it	eq
 8000e14:	0249      	lsleq	r1, r1, #9
 8000e16:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8000e1a:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
 8000e1e:	3a7f      	subs	r2, #127	; 0x7f
 8000e20:	bfc2      	ittt	gt
 8000e22:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 8000e26:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8000e2a:	4770      	bxgt	lr
 8000e2c:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000e30:	f04f 0300 	mov.w	r3, #0
 8000e34:	3a01      	subs	r2, #1
 8000e36:	dc5d      	bgt.n	8000ef4 <__aeabi_fmul+0x150>
 8000e38:	f112 0f19 	cmn.w	r2, #25
 8000e3c:	bfdc      	itt	le
 8000e3e:	f000 4000 	andle.w	r0, r0, #2147483648	; 0x80000000
 8000e42:	4770      	bxle	lr
 8000e44:	f1c2 0200 	rsb	r2, r2, #0
 8000e48:	0041      	lsls	r1, r0, #1
 8000e4a:	fa21 f102 	lsr.w	r1, r1, r2
 8000e4e:	f1c2 0220 	rsb	r2, r2, #32
 8000e52:	fa00 fc02 	lsl.w	ip, r0, r2
 8000e56:	ea5f 0031 	movs.w	r0, r1, rrx
 8000e5a:	f140 0000 	adc.w	r0, r0, #0
 8000e5e:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
 8000e62:	bf08      	it	eq
 8000e64:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000e68:	4770      	bx	lr
 8000e6a:	f092 0f00 	teq	r2, #0
 8000e6e:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 8000e72:	bf02      	ittt	eq
 8000e74:	0040      	lsleq	r0, r0, #1
 8000e76:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 8000e7a:	3a01      	subeq	r2, #1
 8000e7c:	d0f9      	beq.n	8000e72 <__aeabi_fmul+0xce>
 8000e7e:	ea40 000c 	orr.w	r0, r0, ip
 8000e82:	f093 0f00 	teq	r3, #0
 8000e86:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000e8a:	bf02      	ittt	eq
 8000e8c:	0049      	lsleq	r1, r1, #1
 8000e8e:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 8000e92:	3b01      	subeq	r3, #1
 8000e94:	d0f9      	beq.n	8000e8a <__aeabi_fmul+0xe6>
 8000e96:	ea41 010c 	orr.w	r1, r1, ip
 8000e9a:	e78f      	b.n	8000dbc <__aeabi_fmul+0x18>
 8000e9c:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8000ea0:	ea92 0f0c 	teq	r2, ip
 8000ea4:	bf18      	it	ne
 8000ea6:	ea93 0f0c 	teqne	r3, ip
 8000eaa:	d00a      	beq.n	8000ec2 <__aeabi_fmul+0x11e>
 8000eac:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 8000eb0:	bf18      	it	ne
 8000eb2:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 8000eb6:	d1d8      	bne.n	8000e6a <__aeabi_fmul+0xc6>
 8000eb8:	ea80 0001 	eor.w	r0, r0, r1
 8000ebc:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 8000ec0:	4770      	bx	lr
 8000ec2:	f090 0f00 	teq	r0, #0
 8000ec6:	bf17      	itett	ne
 8000ec8:	f090 4f00 	teqne	r0, #2147483648	; 0x80000000
 8000ecc:	4608      	moveq	r0, r1
 8000ece:	f091 0f00 	teqne	r1, #0
 8000ed2:	f091 4f00 	teqne	r1, #2147483648	; 0x80000000
 8000ed6:	d014      	beq.n	8000f02 <__aeabi_fmul+0x15e>
 8000ed8:	ea92 0f0c 	teq	r2, ip
 8000edc:	d101      	bne.n	8000ee2 <__aeabi_fmul+0x13e>
 8000ede:	0242      	lsls	r2, r0, #9
 8000ee0:	d10f      	bne.n	8000f02 <__aeabi_fmul+0x15e>
 8000ee2:	ea93 0f0c 	teq	r3, ip
 8000ee6:	d103      	bne.n	8000ef0 <__aeabi_fmul+0x14c>
 8000ee8:	024b      	lsls	r3, r1, #9
 8000eea:	bf18      	it	ne
 8000eec:	4608      	movne	r0, r1
 8000eee:	d108      	bne.n	8000f02 <__aeabi_fmul+0x15e>
 8000ef0:	ea80 0001 	eor.w	r0, r0, r1
 8000ef4:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 8000ef8:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000efc:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000f00:	4770      	bx	lr
 8000f02:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000f06:	f440 0040 	orr.w	r0, r0, #12582912	; 0xc00000
 8000f0a:	4770      	bx	lr

08000f0c <__aeabi_fdiv>:
 8000f0c:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000f10:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8000f14:	bf1e      	ittt	ne
 8000f16:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8000f1a:	ea92 0f0c 	teqne	r2, ip
 8000f1e:	ea93 0f0c 	teqne	r3, ip
 8000f22:	d069      	beq.n	8000ff8 <__aeabi_fdiv+0xec>
 8000f24:	eba2 0203 	sub.w	r2, r2, r3
 8000f28:	ea80 0c01 	eor.w	ip, r0, r1
 8000f2c:	0249      	lsls	r1, r1, #9
 8000f2e:	ea4f 2040 	mov.w	r0, r0, lsl #9
 8000f32:	d037      	beq.n	8000fa4 <__aeabi_fdiv+0x98>
 8000f34:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8000f38:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
 8000f3c:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
 8000f40:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 8000f44:	428b      	cmp	r3, r1
 8000f46:	bf38      	it	cc
 8000f48:	005b      	lslcc	r3, r3, #1
 8000f4a:	f142 027d 	adc.w	r2, r2, #125	; 0x7d
 8000f4e:	f44f 0c00 	mov.w	ip, #8388608	; 0x800000
 8000f52:	428b      	cmp	r3, r1
 8000f54:	bf24      	itt	cs
 8000f56:	1a5b      	subcs	r3, r3, r1
 8000f58:	ea40 000c 	orrcs.w	r0, r0, ip
 8000f5c:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
 8000f60:	bf24      	itt	cs
 8000f62:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
 8000f66:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000f6a:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
 8000f6e:	bf24      	itt	cs
 8000f70:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
 8000f74:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000f78:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
 8000f7c:	bf24      	itt	cs
 8000f7e:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
 8000f82:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000f86:	011b      	lsls	r3, r3, #4
 8000f88:	bf18      	it	ne
 8000f8a:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
 8000f8e:	d1e0      	bne.n	8000f52 <__aeabi_fdiv+0x46>
 8000f90:	2afd      	cmp	r2, #253	; 0xfd
 8000f92:	f63f af50 	bhi.w	8000e36 <__aeabi_fmul+0x92>
 8000f96:	428b      	cmp	r3, r1
 8000f98:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000f9c:	bf08      	it	eq
 8000f9e:	f020 0001 	biceq.w	r0, r0, #1
 8000fa2:	4770      	bx	lr
 8000fa4:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 8000fa8:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8000fac:	327f      	adds	r2, #127	; 0x7f
 8000fae:	bfc2      	ittt	gt
 8000fb0:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 8000fb4:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8000fb8:	4770      	bxgt	lr
 8000fba:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000fbe:	f04f 0300 	mov.w	r3, #0
 8000fc2:	3a01      	subs	r2, #1
 8000fc4:	e737      	b.n	8000e36 <__aeabi_fmul+0x92>
 8000fc6:	f092 0f00 	teq	r2, #0
 8000fca:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 8000fce:	bf02      	ittt	eq
 8000fd0:	0040      	lsleq	r0, r0, #1
 8000fd2:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 8000fd6:	3a01      	subeq	r2, #1
 8000fd8:	d0f9      	beq.n	8000fce <__aeabi_fdiv+0xc2>
 8000fda:	ea40 000c 	orr.w	r0, r0, ip
 8000fde:	f093 0f00 	teq	r3, #0
 8000fe2:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000fe6:	bf02      	ittt	eq
 8000fe8:	0049      	lsleq	r1, r1, #1
 8000fea:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 8000fee:	3b01      	subeq	r3, #1
 8000ff0:	d0f9      	beq.n	8000fe6 <__aeabi_fdiv+0xda>
 8000ff2:	ea41 010c 	orr.w	r1, r1, ip
 8000ff6:	e795      	b.n	8000f24 <__aeabi_fdiv+0x18>
 8000ff8:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8000ffc:	ea92 0f0c 	teq	r2, ip
 8001000:	d108      	bne.n	8001014 <__aeabi_fdiv+0x108>
 8001002:	0242      	lsls	r2, r0, #9
 8001004:	f47f af7d 	bne.w	8000f02 <__aeabi_fmul+0x15e>
 8001008:	ea93 0f0c 	teq	r3, ip
 800100c:	f47f af70 	bne.w	8000ef0 <__aeabi_fmul+0x14c>
 8001010:	4608      	mov	r0, r1
 8001012:	e776      	b.n	8000f02 <__aeabi_fmul+0x15e>
 8001014:	ea93 0f0c 	teq	r3, ip
 8001018:	d104      	bne.n	8001024 <__aeabi_fdiv+0x118>
 800101a:	024b      	lsls	r3, r1, #9
 800101c:	f43f af4c 	beq.w	8000eb8 <__aeabi_fmul+0x114>
 8001020:	4608      	mov	r0, r1
 8001022:	e76e      	b.n	8000f02 <__aeabi_fmul+0x15e>
 8001024:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 8001028:	bf18      	it	ne
 800102a:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 800102e:	d1ca      	bne.n	8000fc6 <__aeabi_fdiv+0xba>
 8001030:	f030 4200 	bics.w	r2, r0, #2147483648	; 0x80000000
 8001034:	f47f af5c 	bne.w	8000ef0 <__aeabi_fmul+0x14c>
 8001038:	f031 4300 	bics.w	r3, r1, #2147483648	; 0x80000000
 800103c:	f47f af3c 	bne.w	8000eb8 <__aeabi_fmul+0x114>
 8001040:	e75f      	b.n	8000f02 <__aeabi_fmul+0x15e>
 8001042:	bf00      	nop

08001044 <__aeabi_d2lz>:
 8001044:	b538      	push	{r3, r4, r5, lr}
 8001046:	4605      	mov	r5, r0
 8001048:	460c      	mov	r4, r1
 800104a:	2200      	movs	r2, #0
 800104c:	2300      	movs	r3, #0
 800104e:	4628      	mov	r0, r5
 8001050:	4621      	mov	r1, r4
 8001052:	f7ff fcc3 	bl	80009dc <__aeabi_dcmplt>
 8001056:	b928      	cbnz	r0, 8001064 <__aeabi_d2lz+0x20>
 8001058:	4628      	mov	r0, r5
 800105a:	4621      	mov	r1, r4
 800105c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8001060:	f000 b80a 	b.w	8001078 <__aeabi_d2ulz>
 8001064:	4628      	mov	r0, r5
 8001066:	f104 4100 	add.w	r1, r4, #2147483648	; 0x80000000
 800106a:	f000 f805 	bl	8001078 <__aeabi_d2ulz>
 800106e:	4240      	negs	r0, r0
 8001070:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8001074:	bd38      	pop	{r3, r4, r5, pc}
 8001076:	bf00      	nop

08001078 <__aeabi_d2ulz>:
 8001078:	b5d0      	push	{r4, r6, r7, lr}
 800107a:	2200      	movs	r2, #0
 800107c:	4b0b      	ldr	r3, [pc, #44]	; (80010ac <__aeabi_d2ulz+0x34>)
 800107e:	4606      	mov	r6, r0
 8001080:	460f      	mov	r7, r1
 8001082:	f7ff fa39 	bl	80004f8 <__aeabi_dmul>
 8001086:	f7ff fd0f 	bl	8000aa8 <__aeabi_d2uiz>
 800108a:	4604      	mov	r4, r0
 800108c:	f7ff f9ba 	bl	8000404 <__aeabi_ui2d>
 8001090:	2200      	movs	r2, #0
 8001092:	4b07      	ldr	r3, [pc, #28]	; (80010b0 <__aeabi_d2ulz+0x38>)
 8001094:	f7ff fa30 	bl	80004f8 <__aeabi_dmul>
 8001098:	4602      	mov	r2, r0
 800109a:	460b      	mov	r3, r1
 800109c:	4630      	mov	r0, r6
 800109e:	4639      	mov	r1, r7
 80010a0:	f7ff f872 	bl	8000188 <__aeabi_dsub>
 80010a4:	f7ff fd00 	bl	8000aa8 <__aeabi_d2uiz>
 80010a8:	4621      	mov	r1, r4
 80010aa:	bdd0      	pop	{r4, r6, r7, pc}
 80010ac:	3df00000 	.word	0x3df00000
 80010b0:	41f00000 	.word	0x41f00000

080010b4 <look2_binlxpw>:
/* Forward declaration for local functions */
static void EngTrModel_gear_state(const int32_T *sfEvent);
real_T look2_binlxpw(real_T u0, real_T u1, const real_T bp0[], const real_T bp1[],
                     const real_T table[], const uint32_T maxIndex[], uint32_T
                     stride)
{
 80010b4:	b5b0      	push	{r4, r5, r7, lr}
 80010b6:	b092      	sub	sp, #72	; 0x48
 80010b8:	af00      	add	r7, sp, #0
 80010ba:	e9c7 0102 	strd	r0, r1, [r7, #8]
 80010be:	e9c7 2300 	strd	r2, r3, [r7]
     Extrapolation method: 'Linear'
     Use previous index: 'off'
     Use last breakpoint for index at or above upper limit: 'off'
     Remove protection against out-of-range input in generated code: 'off'
   */
  if (u0 <= bp0[0U]) {
 80010c2:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 80010c4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80010c8:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 80010cc:	f7ff fc90 	bl	80009f0 <__aeabi_dcmple>
 80010d0:	4603      	mov	r3, r0
 80010d2:	2b00      	cmp	r3, #0
 80010d4:	d020      	beq.n	8001118 <look2_binlxpw+0x64>
    iLeft = 0U;
 80010d6:	2300      	movs	r3, #0
 80010d8:	637b      	str	r3, [r7, #52]	; 0x34
    frac = (u0 - bp0[0U]) / (bp0[1U] - bp0[0U]);
 80010da:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 80010dc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80010e0:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 80010e4:	f7ff f850 	bl	8000188 <__aeabi_dsub>
 80010e8:	4602      	mov	r2, r0
 80010ea:	460b      	mov	r3, r1
 80010ec:	4614      	mov	r4, r2
 80010ee:	461d      	mov	r5, r3
 80010f0:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 80010f2:	3308      	adds	r3, #8
 80010f4:	e9d3 0100 	ldrd	r0, r1, [r3]
 80010f8:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 80010fa:	e9d3 2300 	ldrd	r2, r3, [r3]
 80010fe:	f7ff f843 	bl	8000188 <__aeabi_dsub>
 8001102:	4602      	mov	r2, r0
 8001104:	460b      	mov	r3, r1
 8001106:	4620      	mov	r0, r4
 8001108:	4629      	mov	r1, r5
 800110a:	f7ff fb1f 	bl	800074c <__aeabi_ddiv>
 800110e:	4602      	mov	r2, r0
 8001110:	460b      	mov	r3, r1
 8001112:	e9c7 2310 	strd	r2, r3, [r7, #64]	; 0x40
 8001116:	e08e      	b.n	8001236 <look2_binlxpw+0x182>
  } else if (u0 < bp0[maxIndex[0U]]) {
 8001118:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 800111a:	681b      	ldr	r3, [r3, #0]
 800111c:	00db      	lsls	r3, r3, #3
 800111e:	6dba      	ldr	r2, [r7, #88]	; 0x58
 8001120:	4413      	add	r3, r2
 8001122:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001126:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800112a:	f7ff fc57 	bl	80009dc <__aeabi_dcmplt>
 800112e:	4603      	mov	r3, r0
 8001130:	2b00      	cmp	r3, #0
 8001132:	d04d      	beq.n	80011d0 <look2_binlxpw+0x11c>
    /* Binary Search */
    bpIdx = maxIndex[0U] >> 1U;
 8001134:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8001136:	681b      	ldr	r3, [r3, #0]
 8001138:	085b      	lsrs	r3, r3, #1
 800113a:	63bb      	str	r3, [r7, #56]	; 0x38
    iLeft = 0U;
 800113c:	2300      	movs	r3, #0
 800113e:	637b      	str	r3, [r7, #52]	; 0x34
    iRght = maxIndex[0U];
 8001140:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8001142:	681b      	ldr	r3, [r3, #0]
 8001144:	63fb      	str	r3, [r7, #60]	; 0x3c
    while (iRght - iLeft > 1U) {
 8001146:	e016      	b.n	8001176 <look2_binlxpw+0xc2>
      if (u0 < bp0[bpIdx]) {
 8001148:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800114a:	00db      	lsls	r3, r3, #3
 800114c:	6dba      	ldr	r2, [r7, #88]	; 0x58
 800114e:	4413      	add	r3, r2
 8001150:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001154:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 8001158:	f7ff fc40 	bl	80009dc <__aeabi_dcmplt>
 800115c:	4603      	mov	r3, r0
 800115e:	2b00      	cmp	r3, #0
 8001160:	d002      	beq.n	8001168 <look2_binlxpw+0xb4>
        iRght = bpIdx;
 8001162:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8001164:	63fb      	str	r3, [r7, #60]	; 0x3c
 8001166:	e001      	b.n	800116c <look2_binlxpw+0xb8>
      } else {
        iLeft = bpIdx;
 8001168:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800116a:	637b      	str	r3, [r7, #52]	; 0x34
      }

      bpIdx = (iRght + iLeft) >> 1U;
 800116c:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 800116e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8001170:	4413      	add	r3, r2
 8001172:	085b      	lsrs	r3, r3, #1
 8001174:	63bb      	str	r3, [r7, #56]	; 0x38
    while (iRght - iLeft > 1U) {
 8001176:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 8001178:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800117a:	1ad3      	subs	r3, r2, r3
 800117c:	2b01      	cmp	r3, #1
 800117e:	d8e3      	bhi.n	8001148 <look2_binlxpw+0x94>
    }

    frac = (u0 - bp0[iLeft]) / (bp0[iLeft + 1U] - bp0[iLeft]);
 8001180:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8001182:	00db      	lsls	r3, r3, #3
 8001184:	6dba      	ldr	r2, [r7, #88]	; 0x58
 8001186:	4413      	add	r3, r2
 8001188:	e9d3 2300 	ldrd	r2, r3, [r3]
 800118c:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 8001190:	f7fe fffa 	bl	8000188 <__aeabi_dsub>
 8001194:	4602      	mov	r2, r0
 8001196:	460b      	mov	r3, r1
 8001198:	4614      	mov	r4, r2
 800119a:	461d      	mov	r5, r3
 800119c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800119e:	3301      	adds	r3, #1
 80011a0:	00db      	lsls	r3, r3, #3
 80011a2:	6dba      	ldr	r2, [r7, #88]	; 0x58
 80011a4:	4413      	add	r3, r2
 80011a6:	e9d3 0100 	ldrd	r0, r1, [r3]
 80011aa:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80011ac:	00db      	lsls	r3, r3, #3
 80011ae:	6dba      	ldr	r2, [r7, #88]	; 0x58
 80011b0:	4413      	add	r3, r2
 80011b2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80011b6:	f7fe ffe7 	bl	8000188 <__aeabi_dsub>
 80011ba:	4602      	mov	r2, r0
 80011bc:	460b      	mov	r3, r1
 80011be:	4620      	mov	r0, r4
 80011c0:	4629      	mov	r1, r5
 80011c2:	f7ff fac3 	bl	800074c <__aeabi_ddiv>
 80011c6:	4602      	mov	r2, r0
 80011c8:	460b      	mov	r3, r1
 80011ca:	e9c7 2310 	strd	r2, r3, [r7, #64]	; 0x40
 80011ce:	e032      	b.n	8001236 <look2_binlxpw+0x182>
  } else {
    iLeft = maxIndex[0U] - 1U;
 80011d0:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 80011d2:	681b      	ldr	r3, [r3, #0]
 80011d4:	3b01      	subs	r3, #1
 80011d6:	637b      	str	r3, [r7, #52]	; 0x34
    frac = (u0 - bp0[maxIndex[0U] - 1U]) / (bp0[maxIndex[0U]] - bp0[maxIndex[0U]
 80011d8:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 80011da:	681b      	ldr	r3, [r3, #0]
 80011dc:	f103 5300 	add.w	r3, r3, #536870912	; 0x20000000
 80011e0:	3b01      	subs	r3, #1
 80011e2:	00db      	lsls	r3, r3, #3
 80011e4:	6dba      	ldr	r2, [r7, #88]	; 0x58
 80011e6:	4413      	add	r3, r2
 80011e8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80011ec:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 80011f0:	f7fe ffca 	bl	8000188 <__aeabi_dsub>
 80011f4:	4602      	mov	r2, r0
 80011f6:	460b      	mov	r3, r1
 80011f8:	4614      	mov	r4, r2
 80011fa:	461d      	mov	r5, r3
 80011fc:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 80011fe:	681b      	ldr	r3, [r3, #0]
 8001200:	00db      	lsls	r3, r3, #3
 8001202:	6dba      	ldr	r2, [r7, #88]	; 0x58
 8001204:	4413      	add	r3, r2
 8001206:	e9d3 0100 	ldrd	r0, r1, [r3]
 800120a:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 800120c:	681b      	ldr	r3, [r3, #0]
 800120e:	f103 5300 	add.w	r3, r3, #536870912	; 0x20000000
 8001212:	3b01      	subs	r3, #1
 8001214:	00db      	lsls	r3, r3, #3
 8001216:	6dba      	ldr	r2, [r7, #88]	; 0x58
 8001218:	4413      	add	r3, r2
 800121a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800121e:	f7fe ffb3 	bl	8000188 <__aeabi_dsub>
 8001222:	4602      	mov	r2, r0
 8001224:	460b      	mov	r3, r1
 8001226:	4620      	mov	r0, r4
 8001228:	4629      	mov	r1, r5
 800122a:	f7ff fa8f 	bl	800074c <__aeabi_ddiv>
 800122e:	4602      	mov	r2, r0
 8001230:	460b      	mov	r3, r1
 8001232:	e9c7 2310 	strd	r2, r3, [r7, #64]	; 0x40
      - 1U]);
  }

  fractions[0U] = frac;
 8001236:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	; 0x40
 800123a:	e9c7 2304 	strd	r2, r3, [r7, #16]
  bpIndices[0U] = iLeft;
 800123e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8001240:	623b      	str	r3, [r7, #32]
     Extrapolation method: 'Linear'
     Use previous index: 'off'
     Use last breakpoint for index at or above upper limit: 'off'
     Remove protection against out-of-range input in generated code: 'off'
   */
  if (u1 <= bp1[0U]) {
 8001242:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8001244:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001248:	e9d7 0100 	ldrd	r0, r1, [r7]
 800124c:	f7ff fbd0 	bl	80009f0 <__aeabi_dcmple>
 8001250:	4603      	mov	r3, r0
 8001252:	2b00      	cmp	r3, #0
 8001254:	d020      	beq.n	8001298 <look2_binlxpw+0x1e4>
    iLeft = 0U;
 8001256:	2300      	movs	r3, #0
 8001258:	637b      	str	r3, [r7, #52]	; 0x34
    frac = (u1 - bp1[0U]) / (bp1[1U] - bp1[0U]);
 800125a:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 800125c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001260:	e9d7 0100 	ldrd	r0, r1, [r7]
 8001264:	f7fe ff90 	bl	8000188 <__aeabi_dsub>
 8001268:	4602      	mov	r2, r0
 800126a:	460b      	mov	r3, r1
 800126c:	4614      	mov	r4, r2
 800126e:	461d      	mov	r5, r3
 8001270:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8001272:	3308      	adds	r3, #8
 8001274:	e9d3 0100 	ldrd	r0, r1, [r3]
 8001278:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 800127a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800127e:	f7fe ff83 	bl	8000188 <__aeabi_dsub>
 8001282:	4602      	mov	r2, r0
 8001284:	460b      	mov	r3, r1
 8001286:	4620      	mov	r0, r4
 8001288:	4629      	mov	r1, r5
 800128a:	f7ff fa5f 	bl	800074c <__aeabi_ddiv>
 800128e:	4602      	mov	r2, r0
 8001290:	460b      	mov	r3, r1
 8001292:	e9c7 2310 	strd	r2, r3, [r7, #64]	; 0x40
 8001296:	e095      	b.n	80013c4 <look2_binlxpw+0x310>
  } else if (u1 < bp1[maxIndex[1U]]) {
 8001298:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 800129a:	3304      	adds	r3, #4
 800129c:	681b      	ldr	r3, [r3, #0]
 800129e:	00db      	lsls	r3, r3, #3
 80012a0:	6dfa      	ldr	r2, [r7, #92]	; 0x5c
 80012a2:	4413      	add	r3, r2
 80012a4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80012a8:	e9d7 0100 	ldrd	r0, r1, [r7]
 80012ac:	f7ff fb96 	bl	80009dc <__aeabi_dcmplt>
 80012b0:	4603      	mov	r3, r0
 80012b2:	2b00      	cmp	r3, #0
 80012b4:	d04f      	beq.n	8001356 <look2_binlxpw+0x2a2>
    /* Binary Search */
    bpIdx = maxIndex[1U] >> 1U;
 80012b6:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 80012b8:	3304      	adds	r3, #4
 80012ba:	681b      	ldr	r3, [r3, #0]
 80012bc:	085b      	lsrs	r3, r3, #1
 80012be:	63bb      	str	r3, [r7, #56]	; 0x38
    iLeft = 0U;
 80012c0:	2300      	movs	r3, #0
 80012c2:	637b      	str	r3, [r7, #52]	; 0x34
    iRght = maxIndex[1U];
 80012c4:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 80012c6:	3304      	adds	r3, #4
 80012c8:	681b      	ldr	r3, [r3, #0]
 80012ca:	63fb      	str	r3, [r7, #60]	; 0x3c
    while (iRght - iLeft > 1U) {
 80012cc:	e016      	b.n	80012fc <look2_binlxpw+0x248>
      if (u1 < bp1[bpIdx]) {
 80012ce:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80012d0:	00db      	lsls	r3, r3, #3
 80012d2:	6dfa      	ldr	r2, [r7, #92]	; 0x5c
 80012d4:	4413      	add	r3, r2
 80012d6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80012da:	e9d7 0100 	ldrd	r0, r1, [r7]
 80012de:	f7ff fb7d 	bl	80009dc <__aeabi_dcmplt>
 80012e2:	4603      	mov	r3, r0
 80012e4:	2b00      	cmp	r3, #0
 80012e6:	d002      	beq.n	80012ee <look2_binlxpw+0x23a>
        iRght = bpIdx;
 80012e8:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80012ea:	63fb      	str	r3, [r7, #60]	; 0x3c
 80012ec:	e001      	b.n	80012f2 <look2_binlxpw+0x23e>
      } else {
        iLeft = bpIdx;
 80012ee:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80012f0:	637b      	str	r3, [r7, #52]	; 0x34
      }

      bpIdx = (iRght + iLeft) >> 1U;
 80012f2:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 80012f4:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80012f6:	4413      	add	r3, r2
 80012f8:	085b      	lsrs	r3, r3, #1
 80012fa:	63bb      	str	r3, [r7, #56]	; 0x38
    while (iRght - iLeft > 1U) {
 80012fc:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 80012fe:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8001300:	1ad3      	subs	r3, r2, r3
 8001302:	2b01      	cmp	r3, #1
 8001304:	d8e3      	bhi.n	80012ce <look2_binlxpw+0x21a>
    }

    frac = (u1 - bp1[iLeft]) / (bp1[iLeft + 1U] - bp1[iLeft]);
 8001306:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8001308:	00db      	lsls	r3, r3, #3
 800130a:	6dfa      	ldr	r2, [r7, #92]	; 0x5c
 800130c:	4413      	add	r3, r2
 800130e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001312:	e9d7 0100 	ldrd	r0, r1, [r7]
 8001316:	f7fe ff37 	bl	8000188 <__aeabi_dsub>
 800131a:	4602      	mov	r2, r0
 800131c:	460b      	mov	r3, r1
 800131e:	4614      	mov	r4, r2
 8001320:	461d      	mov	r5, r3
 8001322:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8001324:	3301      	adds	r3, #1
 8001326:	00db      	lsls	r3, r3, #3
 8001328:	6dfa      	ldr	r2, [r7, #92]	; 0x5c
 800132a:	4413      	add	r3, r2
 800132c:	e9d3 0100 	ldrd	r0, r1, [r3]
 8001330:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8001332:	00db      	lsls	r3, r3, #3
 8001334:	6dfa      	ldr	r2, [r7, #92]	; 0x5c
 8001336:	4413      	add	r3, r2
 8001338:	e9d3 2300 	ldrd	r2, r3, [r3]
 800133c:	f7fe ff24 	bl	8000188 <__aeabi_dsub>
 8001340:	4602      	mov	r2, r0
 8001342:	460b      	mov	r3, r1
 8001344:	4620      	mov	r0, r4
 8001346:	4629      	mov	r1, r5
 8001348:	f7ff fa00 	bl	800074c <__aeabi_ddiv>
 800134c:	4602      	mov	r2, r0
 800134e:	460b      	mov	r3, r1
 8001350:	e9c7 2310 	strd	r2, r3, [r7, #64]	; 0x40
 8001354:	e036      	b.n	80013c4 <look2_binlxpw+0x310>
  } else {
    iLeft = maxIndex[1U] - 1U;
 8001356:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8001358:	3304      	adds	r3, #4
 800135a:	681b      	ldr	r3, [r3, #0]
 800135c:	3b01      	subs	r3, #1
 800135e:	637b      	str	r3, [r7, #52]	; 0x34
    frac = (u1 - bp1[maxIndex[1U] - 1U]) / (bp1[maxIndex[1U]] - bp1[maxIndex[1U]
 8001360:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8001362:	3304      	adds	r3, #4
 8001364:	681b      	ldr	r3, [r3, #0]
 8001366:	f103 5300 	add.w	r3, r3, #536870912	; 0x20000000
 800136a:	3b01      	subs	r3, #1
 800136c:	00db      	lsls	r3, r3, #3
 800136e:	6dfa      	ldr	r2, [r7, #92]	; 0x5c
 8001370:	4413      	add	r3, r2
 8001372:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001376:	e9d7 0100 	ldrd	r0, r1, [r7]
 800137a:	f7fe ff05 	bl	8000188 <__aeabi_dsub>
 800137e:	4602      	mov	r2, r0
 8001380:	460b      	mov	r3, r1
 8001382:	4614      	mov	r4, r2
 8001384:	461d      	mov	r5, r3
 8001386:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8001388:	3304      	adds	r3, #4
 800138a:	681b      	ldr	r3, [r3, #0]
 800138c:	00db      	lsls	r3, r3, #3
 800138e:	6dfa      	ldr	r2, [r7, #92]	; 0x5c
 8001390:	4413      	add	r3, r2
 8001392:	e9d3 0100 	ldrd	r0, r1, [r3]
 8001396:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8001398:	3304      	adds	r3, #4
 800139a:	681b      	ldr	r3, [r3, #0]
 800139c:	f103 5300 	add.w	r3, r3, #536870912	; 0x20000000
 80013a0:	3b01      	subs	r3, #1
 80013a2:	00db      	lsls	r3, r3, #3
 80013a4:	6dfa      	ldr	r2, [r7, #92]	; 0x5c
 80013a6:	4413      	add	r3, r2
 80013a8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80013ac:	f7fe feec 	bl	8000188 <__aeabi_dsub>
 80013b0:	4602      	mov	r2, r0
 80013b2:	460b      	mov	r3, r1
 80013b4:	4620      	mov	r0, r4
 80013b6:	4629      	mov	r1, r5
 80013b8:	f7ff f9c8 	bl	800074c <__aeabi_ddiv>
 80013bc:	4602      	mov	r2, r0
 80013be:	460b      	mov	r3, r1
 80013c0:	e9c7 2310 	strd	r2, r3, [r7, #64]	; 0x40
  /* Column-major Interpolation 2-D
     Interpolation method: 'Linear point-slope'
     Use last breakpoint for index at or above upper limit: 'off'
     Overflow mode: 'portable wrapping'
   */
  bpIdx = iLeft * stride + bpIndices[0U];
 80013c4:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80013c6:	6eba      	ldr	r2, [r7, #104]	; 0x68
 80013c8:	fb03 f202 	mul.w	r2, r3, r2
 80013cc:	6a3b      	ldr	r3, [r7, #32]
 80013ce:	4413      	add	r3, r2
 80013d0:	63bb      	str	r3, [r7, #56]	; 0x38
  yL_1d = (table[bpIdx + 1U] - table[bpIdx]) * fractions[0U] + table[bpIdx];
 80013d2:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80013d4:	3301      	adds	r3, #1
 80013d6:	00db      	lsls	r3, r3, #3
 80013d8:	6e3a      	ldr	r2, [r7, #96]	; 0x60
 80013da:	4413      	add	r3, r2
 80013dc:	e9d3 0100 	ldrd	r0, r1, [r3]
 80013e0:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80013e2:	00db      	lsls	r3, r3, #3
 80013e4:	6e3a      	ldr	r2, [r7, #96]	; 0x60
 80013e6:	4413      	add	r3, r2
 80013e8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80013ec:	f7fe fecc 	bl	8000188 <__aeabi_dsub>
 80013f0:	4602      	mov	r2, r0
 80013f2:	460b      	mov	r3, r1
 80013f4:	4610      	mov	r0, r2
 80013f6:	4619      	mov	r1, r3
 80013f8:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 80013fc:	f7ff f87c 	bl	80004f8 <__aeabi_dmul>
 8001400:	4602      	mov	r2, r0
 8001402:	460b      	mov	r3, r1
 8001404:	4610      	mov	r0, r2
 8001406:	4619      	mov	r1, r3
 8001408:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800140a:	00db      	lsls	r3, r3, #3
 800140c:	6e3a      	ldr	r2, [r7, #96]	; 0x60
 800140e:	4413      	add	r3, r2
 8001410:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001414:	f7fe feba 	bl	800018c <__adddf3>
 8001418:	4602      	mov	r2, r0
 800141a:	460b      	mov	r3, r1
 800141c:	e9c7 230a 	strd	r2, r3, [r7, #40]	; 0x28
  bpIdx += stride;
 8001420:	6bba      	ldr	r2, [r7, #56]	; 0x38
 8001422:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 8001424:	4413      	add	r3, r2
 8001426:	63bb      	str	r3, [r7, #56]	; 0x38
  return (((table[bpIdx + 1U] - table[bpIdx]) * fractions[0U] + table[bpIdx]) -
 8001428:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800142a:	3301      	adds	r3, #1
 800142c:	00db      	lsls	r3, r3, #3
 800142e:	6e3a      	ldr	r2, [r7, #96]	; 0x60
 8001430:	4413      	add	r3, r2
 8001432:	e9d3 0100 	ldrd	r0, r1, [r3]
 8001436:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8001438:	00db      	lsls	r3, r3, #3
 800143a:	6e3a      	ldr	r2, [r7, #96]	; 0x60
 800143c:	4413      	add	r3, r2
 800143e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001442:	f7fe fea1 	bl	8000188 <__aeabi_dsub>
 8001446:	4602      	mov	r2, r0
 8001448:	460b      	mov	r3, r1
 800144a:	4610      	mov	r0, r2
 800144c:	4619      	mov	r1, r3
 800144e:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 8001452:	f7ff f851 	bl	80004f8 <__aeabi_dmul>
 8001456:	4602      	mov	r2, r0
 8001458:	460b      	mov	r3, r1
 800145a:	4610      	mov	r0, r2
 800145c:	4619      	mov	r1, r3
 800145e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8001460:	00db      	lsls	r3, r3, #3
 8001462:	6e3a      	ldr	r2, [r7, #96]	; 0x60
 8001464:	4413      	add	r3, r2
 8001466:	e9d3 2300 	ldrd	r2, r3, [r3]
 800146a:	f7fe fe8f 	bl	800018c <__adddf3>
 800146e:	4602      	mov	r2, r0
 8001470:	460b      	mov	r3, r1
 8001472:	4610      	mov	r0, r2
 8001474:	4619      	mov	r1, r3
 8001476:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	; 0x28
 800147a:	f7fe fe85 	bl	8000188 <__aeabi_dsub>
 800147e:	4602      	mov	r2, r0
 8001480:	460b      	mov	r3, r1
 8001482:	4610      	mov	r0, r2
 8001484:	4619      	mov	r1, r3
          yL_1d) * frac + yL_1d;
 8001486:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	; 0x40
 800148a:	f7ff f835 	bl	80004f8 <__aeabi_dmul>
 800148e:	4602      	mov	r2, r0
 8001490:	460b      	mov	r3, r1
 8001492:	4610      	mov	r0, r2
 8001494:	4619      	mov	r1, r3
 8001496:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	; 0x28
 800149a:	f7fe fe77 	bl	800018c <__adddf3>
 800149e:	4602      	mov	r2, r0
 80014a0:	460b      	mov	r3, r1
}
 80014a2:	4610      	mov	r0, r2
 80014a4:	4619      	mov	r1, r3
 80014a6:	3748      	adds	r7, #72	; 0x48
 80014a8:	46bd      	mov	sp, r7
 80014aa:	bdb0      	pop	{r4, r5, r7, pc}

080014ac <look1_binlxpw>:

real_T look1_binlxpw(real_T u0, const real_T bp0[], const real_T table[],
                     uint32_T maxIndex)
{
 80014ac:	b5b0      	push	{r4, r5, r7, lr}
 80014ae:	b08a      	sub	sp, #40	; 0x28
 80014b0:	af00      	add	r7, sp, #0
 80014b2:	e9c7 0102 	strd	r0, r1, [r7, #8]
 80014b6:	607a      	str	r2, [r7, #4]
 80014b8:	603b      	str	r3, [r7, #0]
     Extrapolation method: 'Linear'
     Use previous index: 'off'
     Use last breakpoint for index at or above upper limit: 'off'
     Remove protection against out-of-range input in generated code: 'off'
   */
  if (u0 <= bp0[0U]) {
 80014ba:	687b      	ldr	r3, [r7, #4]
 80014bc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80014c0:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 80014c4:	f7ff fa94 	bl	80009f0 <__aeabi_dcmple>
 80014c8:	4603      	mov	r3, r0
 80014ca:	2b00      	cmp	r3, #0
 80014cc:	d020      	beq.n	8001510 <look1_binlxpw+0x64>
    iLeft = 0U;
 80014ce:	2300      	movs	r3, #0
 80014d0:	61bb      	str	r3, [r7, #24]
    frac = (u0 - bp0[0U]) / (bp0[1U] - bp0[0U]);
 80014d2:	687b      	ldr	r3, [r7, #4]
 80014d4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80014d8:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 80014dc:	f7fe fe54 	bl	8000188 <__aeabi_dsub>
 80014e0:	4602      	mov	r2, r0
 80014e2:	460b      	mov	r3, r1
 80014e4:	4614      	mov	r4, r2
 80014e6:	461d      	mov	r5, r3
 80014e8:	687b      	ldr	r3, [r7, #4]
 80014ea:	3308      	adds	r3, #8
 80014ec:	e9d3 0100 	ldrd	r0, r1, [r3]
 80014f0:	687b      	ldr	r3, [r7, #4]
 80014f2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80014f6:	f7fe fe47 	bl	8000188 <__aeabi_dsub>
 80014fa:	4602      	mov	r2, r0
 80014fc:	460b      	mov	r3, r1
 80014fe:	4620      	mov	r0, r4
 8001500:	4629      	mov	r1, r5
 8001502:	f7ff f923 	bl	800074c <__aeabi_ddiv>
 8001506:	4602      	mov	r2, r0
 8001508:	460b      	mov	r3, r1
 800150a:	e9c7 2308 	strd	r2, r3, [r7, #32]
 800150e:	e087      	b.n	8001620 <look1_binlxpw+0x174>
  } else if (u0 < bp0[maxIndex]) {
 8001510:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8001512:	00db      	lsls	r3, r3, #3
 8001514:	687a      	ldr	r2, [r7, #4]
 8001516:	4413      	add	r3, r2
 8001518:	e9d3 2300 	ldrd	r2, r3, [r3]
 800151c:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 8001520:	f7ff fa5c 	bl	80009dc <__aeabi_dcmplt>
 8001524:	4603      	mov	r3, r0
 8001526:	2b00      	cmp	r3, #0
 8001528:	d04b      	beq.n	80015c2 <look1_binlxpw+0x116>
    /* Binary Search */
    bpIdx = maxIndex >> 1U;
 800152a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800152c:	085b      	lsrs	r3, r3, #1
 800152e:	617b      	str	r3, [r7, #20]
    iLeft = 0U;
 8001530:	2300      	movs	r3, #0
 8001532:	61bb      	str	r3, [r7, #24]
    iRght = maxIndex;
 8001534:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8001536:	61fb      	str	r3, [r7, #28]
    while (iRght - iLeft > 1U) {
 8001538:	e016      	b.n	8001568 <look1_binlxpw+0xbc>
      if (u0 < bp0[bpIdx]) {
 800153a:	697b      	ldr	r3, [r7, #20]
 800153c:	00db      	lsls	r3, r3, #3
 800153e:	687a      	ldr	r2, [r7, #4]
 8001540:	4413      	add	r3, r2
 8001542:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001546:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800154a:	f7ff fa47 	bl	80009dc <__aeabi_dcmplt>
 800154e:	4603      	mov	r3, r0
 8001550:	2b00      	cmp	r3, #0
 8001552:	d002      	beq.n	800155a <look1_binlxpw+0xae>
        iRght = bpIdx;
 8001554:	697b      	ldr	r3, [r7, #20]
 8001556:	61fb      	str	r3, [r7, #28]
 8001558:	e001      	b.n	800155e <look1_binlxpw+0xb2>
      } else {
        iLeft = bpIdx;
 800155a:	697b      	ldr	r3, [r7, #20]
 800155c:	61bb      	str	r3, [r7, #24]
      }

      bpIdx = (iRght + iLeft) >> 1U;
 800155e:	69fa      	ldr	r2, [r7, #28]
 8001560:	69bb      	ldr	r3, [r7, #24]
 8001562:	4413      	add	r3, r2
 8001564:	085b      	lsrs	r3, r3, #1
 8001566:	617b      	str	r3, [r7, #20]
    while (iRght - iLeft > 1U) {
 8001568:	69fa      	ldr	r2, [r7, #28]
 800156a:	69bb      	ldr	r3, [r7, #24]
 800156c:	1ad3      	subs	r3, r2, r3
 800156e:	2b01      	cmp	r3, #1
 8001570:	d8e3      	bhi.n	800153a <look1_binlxpw+0x8e>
    }

    frac = (u0 - bp0[iLeft]) / (bp0[iLeft + 1U] - bp0[iLeft]);
 8001572:	69bb      	ldr	r3, [r7, #24]
 8001574:	00db      	lsls	r3, r3, #3
 8001576:	687a      	ldr	r2, [r7, #4]
 8001578:	4413      	add	r3, r2
 800157a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800157e:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 8001582:	f7fe fe01 	bl	8000188 <__aeabi_dsub>
 8001586:	4602      	mov	r2, r0
 8001588:	460b      	mov	r3, r1
 800158a:	4614      	mov	r4, r2
 800158c:	461d      	mov	r5, r3
 800158e:	69bb      	ldr	r3, [r7, #24]
 8001590:	3301      	adds	r3, #1
 8001592:	00db      	lsls	r3, r3, #3
 8001594:	687a      	ldr	r2, [r7, #4]
 8001596:	4413      	add	r3, r2
 8001598:	e9d3 0100 	ldrd	r0, r1, [r3]
 800159c:	69bb      	ldr	r3, [r7, #24]
 800159e:	00db      	lsls	r3, r3, #3
 80015a0:	687a      	ldr	r2, [r7, #4]
 80015a2:	4413      	add	r3, r2
 80015a4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80015a8:	f7fe fdee 	bl	8000188 <__aeabi_dsub>
 80015ac:	4602      	mov	r2, r0
 80015ae:	460b      	mov	r3, r1
 80015b0:	4620      	mov	r0, r4
 80015b2:	4629      	mov	r1, r5
 80015b4:	f7ff f8ca 	bl	800074c <__aeabi_ddiv>
 80015b8:	4602      	mov	r2, r0
 80015ba:	460b      	mov	r3, r1
 80015bc:	e9c7 2308 	strd	r2, r3, [r7, #32]
 80015c0:	e02e      	b.n	8001620 <look1_binlxpw+0x174>
  } else {
    iLeft = maxIndex - 1U;
 80015c2:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80015c4:	3b01      	subs	r3, #1
 80015c6:	61bb      	str	r3, [r7, #24]
    frac = (u0 - bp0[maxIndex - 1U]) / (bp0[maxIndex] - bp0[maxIndex - 1U]);
 80015c8:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80015ca:	f103 5300 	add.w	r3, r3, #536870912	; 0x20000000
 80015ce:	3b01      	subs	r3, #1
 80015d0:	00db      	lsls	r3, r3, #3
 80015d2:	687a      	ldr	r2, [r7, #4]
 80015d4:	4413      	add	r3, r2
 80015d6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80015da:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 80015de:	f7fe fdd3 	bl	8000188 <__aeabi_dsub>
 80015e2:	4602      	mov	r2, r0
 80015e4:	460b      	mov	r3, r1
 80015e6:	4614      	mov	r4, r2
 80015e8:	461d      	mov	r5, r3
 80015ea:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80015ec:	00db      	lsls	r3, r3, #3
 80015ee:	687a      	ldr	r2, [r7, #4]
 80015f0:	4413      	add	r3, r2
 80015f2:	e9d3 0100 	ldrd	r0, r1, [r3]
 80015f6:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80015f8:	f103 5300 	add.w	r3, r3, #536870912	; 0x20000000
 80015fc:	3b01      	subs	r3, #1
 80015fe:	00db      	lsls	r3, r3, #3
 8001600:	687a      	ldr	r2, [r7, #4]
 8001602:	4413      	add	r3, r2
 8001604:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001608:	f7fe fdbe 	bl	8000188 <__aeabi_dsub>
 800160c:	4602      	mov	r2, r0
 800160e:	460b      	mov	r3, r1
 8001610:	4620      	mov	r0, r4
 8001612:	4629      	mov	r1, r5
 8001614:	f7ff f89a 	bl	800074c <__aeabi_ddiv>
 8001618:	4602      	mov	r2, r0
 800161a:	460b      	mov	r3, r1
 800161c:	e9c7 2308 	strd	r2, r3, [r7, #32]
  /* Column-major Interpolation 1-D
     Interpolation method: 'Linear point-slope'
     Use last breakpoint for index at or above upper limit: 'off'
     Overflow mode: 'portable wrapping'
   */
  return (table[iLeft + 1U] - table[iLeft]) * frac + table[iLeft];
 8001620:	69bb      	ldr	r3, [r7, #24]
 8001622:	3301      	adds	r3, #1
 8001624:	00db      	lsls	r3, r3, #3
 8001626:	683a      	ldr	r2, [r7, #0]
 8001628:	4413      	add	r3, r2
 800162a:	e9d3 0100 	ldrd	r0, r1, [r3]
 800162e:	69bb      	ldr	r3, [r7, #24]
 8001630:	00db      	lsls	r3, r3, #3
 8001632:	683a      	ldr	r2, [r7, #0]
 8001634:	4413      	add	r3, r2
 8001636:	e9d3 2300 	ldrd	r2, r3, [r3]
 800163a:	f7fe fda5 	bl	8000188 <__aeabi_dsub>
 800163e:	4602      	mov	r2, r0
 8001640:	460b      	mov	r3, r1
 8001642:	4610      	mov	r0, r2
 8001644:	4619      	mov	r1, r3
 8001646:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 800164a:	f7fe ff55 	bl	80004f8 <__aeabi_dmul>
 800164e:	4602      	mov	r2, r0
 8001650:	460b      	mov	r3, r1
 8001652:	4610      	mov	r0, r2
 8001654:	4619      	mov	r1, r3
 8001656:	69bb      	ldr	r3, [r7, #24]
 8001658:	00db      	lsls	r3, r3, #3
 800165a:	683a      	ldr	r2, [r7, #0]
 800165c:	4413      	add	r3, r2
 800165e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001662:	f7fe fd93 	bl	800018c <__adddf3>
 8001666:	4602      	mov	r2, r0
 8001668:	460b      	mov	r3, r1
}
 800166a:	4610      	mov	r0, r2
 800166c:	4619      	mov	r1, r3
 800166e:	3728      	adds	r7, #40	; 0x28
 8001670:	46bd      	mov	sp, r7
 8001672:	bdb0      	pop	{r4, r5, r7, pc}

08001674 <EngTrModel_gear_state>:

/* Function for Chart: '<Root>/ShiftLogic' */
static void EngTrModel_gear_state(const int32_T *sfEvent)
{
 8001674:	b480      	push	{r7}
 8001676:	b083      	sub	sp, #12
 8001678:	af00      	add	r7, sp, #0
 800167a:	6078      	str	r0, [r7, #4]
  switch (EngTrModel_DW.is_gear_state) {
 800167c:	4b3b      	ldr	r3, [pc, #236]	; (800176c <EngTrModel_gear_state+0xf8>)
 800167e:	f893 3021 	ldrb.w	r3, [r3, #33]	; 0x21
 8001682:	3b01      	subs	r3, #1
 8001684:	2b03      	cmp	r3, #3
 8001686:	d86c      	bhi.n	8001762 <EngTrModel_gear_state+0xee>
 8001688:	a201      	add	r2, pc, #4	; (adr r2, 8001690 <EngTrModel_gear_state+0x1c>)
 800168a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800168e:	bf00      	nop
 8001690:	080016a1 	.word	0x080016a1
 8001694:	080016c1 	.word	0x080016c1
 8001698:	080016df 	.word	0x080016df
 800169c:	08001719 	.word	0x08001719
   case EngTrModel_IN_first:
    if (*sfEvent == EngTrModel_event_UP) {
 80016a0:	687b      	ldr	r3, [r7, #4]
 80016a2:	681b      	ldr	r3, [r3, #0]
 80016a4:	2b01      	cmp	r3, #1
 80016a6:	d155      	bne.n	8001754 <EngTrModel_gear_state+0xe0>
      EngTrModel_DW.is_gear_state = EngTrModel_IN_second;
 80016a8:	4b30      	ldr	r3, [pc, #192]	; (800176c <EngTrModel_gear_state+0xf8>)
 80016aa:	2203      	movs	r2, #3
 80016ac:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
      EngTrModel_B.Gear = 2.0;
 80016b0:	492f      	ldr	r1, [pc, #188]	; (8001770 <EngTrModel_gear_state+0xfc>)
 80016b2:	f04f 0200 	mov.w	r2, #0
 80016b6:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80016ba:	e9c1 230a 	strd	r2, r3, [r1, #40]	; 0x28
    }
    break;
 80016be:	e049      	b.n	8001754 <EngTrModel_gear_state+0xe0>

   case EngTrModel_IN_fourth:
    if (*sfEvent == EngTrModel_event_DOWN) {
 80016c0:	687b      	ldr	r3, [r7, #4]
 80016c2:	681b      	ldr	r3, [r3, #0]
 80016c4:	2b00      	cmp	r3, #0
 80016c6:	d147      	bne.n	8001758 <EngTrModel_gear_state+0xe4>
      EngTrModel_DW.is_gear_state = EngTrModel_IN_third;
 80016c8:	4b28      	ldr	r3, [pc, #160]	; (800176c <EngTrModel_gear_state+0xf8>)
 80016ca:	2204      	movs	r2, #4
 80016cc:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
      EngTrModel_B.Gear = 3.0;
 80016d0:	4927      	ldr	r1, [pc, #156]	; (8001770 <EngTrModel_gear_state+0xfc>)
 80016d2:	f04f 0200 	mov.w	r2, #0
 80016d6:	4b27      	ldr	r3, [pc, #156]	; (8001774 <EngTrModel_gear_state+0x100>)
 80016d8:	e9c1 230a 	strd	r2, r3, [r1, #40]	; 0x28
    }
    break;
 80016dc:	e03c      	b.n	8001758 <EngTrModel_gear_state+0xe4>

   case EngTrModel_IN_second:
    switch (*sfEvent) {
 80016de:	687b      	ldr	r3, [r7, #4]
 80016e0:	681b      	ldr	r3, [r3, #0]
 80016e2:	2b00      	cmp	r3, #0
 80016e4:	d00c      	beq.n	8001700 <EngTrModel_gear_state+0x8c>
 80016e6:	2b01      	cmp	r3, #1
 80016e8:	d138      	bne.n	800175c <EngTrModel_gear_state+0xe8>
     case EngTrModel_event_UP:
      EngTrModel_DW.is_gear_state = EngTrModel_IN_third;
 80016ea:	4b20      	ldr	r3, [pc, #128]	; (800176c <EngTrModel_gear_state+0xf8>)
 80016ec:	2204      	movs	r2, #4
 80016ee:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
      EngTrModel_B.Gear = 3.0;
 80016f2:	491f      	ldr	r1, [pc, #124]	; (8001770 <EngTrModel_gear_state+0xfc>)
 80016f4:	f04f 0200 	mov.w	r2, #0
 80016f8:	4b1e      	ldr	r3, [pc, #120]	; (8001774 <EngTrModel_gear_state+0x100>)
 80016fa:	e9c1 230a 	strd	r2, r3, [r1, #40]	; 0x28
      break;
 80016fe:	e00a      	b.n	8001716 <EngTrModel_gear_state+0xa2>

     case EngTrModel_event_DOWN:
      EngTrModel_DW.is_gear_state = EngTrModel_IN_first;
 8001700:	4b1a      	ldr	r3, [pc, #104]	; (800176c <EngTrModel_gear_state+0xf8>)
 8001702:	2201      	movs	r2, #1
 8001704:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
      EngTrModel_B.Gear = 1.0;
 8001708:	4919      	ldr	r1, [pc, #100]	; (8001770 <EngTrModel_gear_state+0xfc>)
 800170a:	f04f 0200 	mov.w	r2, #0
 800170e:	4b1a      	ldr	r3, [pc, #104]	; (8001778 <EngTrModel_gear_state+0x104>)
 8001710:	e9c1 230a 	strd	r2, r3, [r1, #40]	; 0x28
      break;
 8001714:	bf00      	nop
    }
    break;
 8001716:	e021      	b.n	800175c <EngTrModel_gear_state+0xe8>

   case EngTrModel_IN_third:
    switch (*sfEvent) {
 8001718:	687b      	ldr	r3, [r7, #4]
 800171a:	681b      	ldr	r3, [r3, #0]
 800171c:	2b00      	cmp	r3, #0
 800171e:	d00c      	beq.n	800173a <EngTrModel_gear_state+0xc6>
 8001720:	2b01      	cmp	r3, #1
 8001722:	d11d      	bne.n	8001760 <EngTrModel_gear_state+0xec>
     case EngTrModel_event_UP:
      EngTrModel_DW.is_gear_state = EngTrModel_IN_fourth;
 8001724:	4b11      	ldr	r3, [pc, #68]	; (800176c <EngTrModel_gear_state+0xf8>)
 8001726:	2202      	movs	r2, #2
 8001728:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
      EngTrModel_B.Gear = 4.0;
 800172c:	4910      	ldr	r1, [pc, #64]	; (8001770 <EngTrModel_gear_state+0xfc>)
 800172e:	f04f 0200 	mov.w	r2, #0
 8001732:	4b12      	ldr	r3, [pc, #72]	; (800177c <EngTrModel_gear_state+0x108>)
 8001734:	e9c1 230a 	strd	r2, r3, [r1, #40]	; 0x28
      break;
 8001738:	e00b      	b.n	8001752 <EngTrModel_gear_state+0xde>

     case EngTrModel_event_DOWN:
      EngTrModel_DW.is_gear_state = EngTrModel_IN_second;
 800173a:	4b0c      	ldr	r3, [pc, #48]	; (800176c <EngTrModel_gear_state+0xf8>)
 800173c:	2203      	movs	r2, #3
 800173e:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
      EngTrModel_B.Gear = 2.0;
 8001742:	490b      	ldr	r1, [pc, #44]	; (8001770 <EngTrModel_gear_state+0xfc>)
 8001744:	f04f 0200 	mov.w	r2, #0
 8001748:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800174c:	e9c1 230a 	strd	r2, r3, [r1, #40]	; 0x28
      break;
 8001750:	bf00      	nop
    }
    break;
 8001752:	e005      	b.n	8001760 <EngTrModel_gear_state+0xec>
    break;
 8001754:	bf00      	nop
 8001756:	e004      	b.n	8001762 <EngTrModel_gear_state+0xee>
    break;
 8001758:	bf00      	nop
 800175a:	e002      	b.n	8001762 <EngTrModel_gear_state+0xee>
    break;
 800175c:	bf00      	nop
 800175e:	e000      	b.n	8001762 <EngTrModel_gear_state+0xee>
    break;
 8001760:	bf00      	nop
  }
}
 8001762:	bf00      	nop
 8001764:	370c      	adds	r7, #12
 8001766:	46bd      	mov	sp, r7
 8001768:	bc80      	pop	{r7}
 800176a:	4770      	bx	lr
 800176c:	20000228 	.word	0x20000228
 8001770:	200001f8 	.word	0x200001f8
 8001774:	40080000 	.word	0x40080000
 8001778:	3ff00000 	.word	0x3ff00000
 800177c:	40100000 	.word	0x40100000

08001780 <rt_powd_snf>:

real_T rt_powd_snf(real_T u0, real_T u1)
{
 8001780:	b5b0      	push	{r4, r5, r7, lr}
 8001782:	b08c      	sub	sp, #48	; 0x30
 8001784:	af00      	add	r7, sp, #0
 8001786:	e9c7 0104 	strd	r0, r1, [r7, #16]
 800178a:	e9c7 2302 	strd	r2, r3, [r7, #8]
  real_T y;
  real_T tmp;
  real_T tmp_0;
  if (rtIsNaN(u0) || rtIsNaN(u1)) {
 800178e:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 8001792:	f001 fb4f 	bl	8002e34 <rtIsNaN>
 8001796:	4603      	mov	r3, r0
 8001798:	2b00      	cmp	r3, #0
 800179a:	d106      	bne.n	80017aa <rt_powd_snf+0x2a>
 800179c:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 80017a0:	f001 fb48 	bl	8002e34 <rtIsNaN>
 80017a4:	4603      	mov	r3, r0
 80017a6:	2b00      	cmp	r3, #0
 80017a8:	d005      	beq.n	80017b6 <rt_powd_snf+0x36>
    y = (rtNaN);
 80017aa:	4b7e      	ldr	r3, [pc, #504]	; (80019a4 <rt_powd_snf+0x224>)
 80017ac:	e9d3 2300 	ldrd	r2, r3, [r3]
 80017b0:	e9c7 230a 	strd	r2, r3, [r7, #40]	; 0x28
 80017b4:	e0ef      	b.n	8001996 <rt_powd_snf+0x216>
  } else {
    tmp = fabs(u0);
 80017b6:	693b      	ldr	r3, [r7, #16]
 80017b8:	603b      	str	r3, [r7, #0]
 80017ba:	697b      	ldr	r3, [r7, #20]
 80017bc:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 80017c0:	607b      	str	r3, [r7, #4]
 80017c2:	e9d7 2300 	ldrd	r2, r3, [r7]
 80017c6:	e9c7 2308 	strd	r2, r3, [r7, #32]
    tmp_0 = fabs(u1);
 80017ca:	68bc      	ldr	r4, [r7, #8]
 80017cc:	68fb      	ldr	r3, [r7, #12]
 80017ce:	f023 4500 	bic.w	r5, r3, #2147483648	; 0x80000000
 80017d2:	e9c7 4506 	strd	r4, r5, [r7, #24]
    if (rtIsInf(u1)) {
 80017d6:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 80017da:	f001 fb07 	bl	8002dec <rtIsInf>
 80017de:	4603      	mov	r3, r0
 80017e0:	2b00      	cmp	r3, #0
 80017e2:	d049      	beq.n	8001878 <rt_powd_snf+0xf8>
      if (tmp == 1.0) {
 80017e4:	f04f 0200 	mov.w	r2, #0
 80017e8:	4b6f      	ldr	r3, [pc, #444]	; (80019a8 <rt_powd_snf+0x228>)
 80017ea:	e9d7 0108 	ldrd	r0, r1, [r7, #32]
 80017ee:	f7ff f8eb 	bl	80009c8 <__aeabi_dcmpeq>
 80017f2:	4603      	mov	r3, r0
 80017f4:	2b00      	cmp	r3, #0
 80017f6:	d005      	beq.n	8001804 <rt_powd_snf+0x84>
        y = 1.0;
 80017f8:	f04f 0200 	mov.w	r2, #0
 80017fc:	4b6a      	ldr	r3, [pc, #424]	; (80019a8 <rt_powd_snf+0x228>)
 80017fe:	e9c7 230a 	strd	r2, r3, [r7, #40]	; 0x28
 8001802:	e0c8      	b.n	8001996 <rt_powd_snf+0x216>
      } else if (tmp > 1.0) {
 8001804:	f04f 0200 	mov.w	r2, #0
 8001808:	4b67      	ldr	r3, [pc, #412]	; (80019a8 <rt_powd_snf+0x228>)
 800180a:	e9d7 0108 	ldrd	r0, r1, [r7, #32]
 800180e:	f7ff f903 	bl	8000a18 <__aeabi_dcmpgt>
 8001812:	4603      	mov	r3, r0
 8001814:	2b00      	cmp	r3, #0
 8001816:	d017      	beq.n	8001848 <rt_powd_snf+0xc8>
        if (u1 > 0.0) {
 8001818:	f04f 0200 	mov.w	r2, #0
 800181c:	f04f 0300 	mov.w	r3, #0
 8001820:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 8001824:	f7ff f8f8 	bl	8000a18 <__aeabi_dcmpgt>
 8001828:	4603      	mov	r3, r0
 800182a:	2b00      	cmp	r3, #0
 800182c:	d005      	beq.n	800183a <rt_powd_snf+0xba>
          y = (rtInf);
 800182e:	4b5f      	ldr	r3, [pc, #380]	; (80019ac <rt_powd_snf+0x22c>)
 8001830:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001834:	e9c7 230a 	strd	r2, r3, [r7, #40]	; 0x28
 8001838:	e0ad      	b.n	8001996 <rt_powd_snf+0x216>
        } else {
          y = 0.0;
 800183a:	f04f 0200 	mov.w	r2, #0
 800183e:	f04f 0300 	mov.w	r3, #0
 8001842:	e9c7 230a 	strd	r2, r3, [r7, #40]	; 0x28
 8001846:	e0a6      	b.n	8001996 <rt_powd_snf+0x216>
        }
      } else if (u1 > 0.0) {
 8001848:	f04f 0200 	mov.w	r2, #0
 800184c:	f04f 0300 	mov.w	r3, #0
 8001850:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 8001854:	f7ff f8e0 	bl	8000a18 <__aeabi_dcmpgt>
 8001858:	4603      	mov	r3, r0
 800185a:	2b00      	cmp	r3, #0
 800185c:	d006      	beq.n	800186c <rt_powd_snf+0xec>
        y = 0.0;
 800185e:	f04f 0200 	mov.w	r2, #0
 8001862:	f04f 0300 	mov.w	r3, #0
 8001866:	e9c7 230a 	strd	r2, r3, [r7, #40]	; 0x28
 800186a:	e094      	b.n	8001996 <rt_powd_snf+0x216>
      } else {
        y = (rtInf);
 800186c:	4b4f      	ldr	r3, [pc, #316]	; (80019ac <rt_powd_snf+0x22c>)
 800186e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001872:	e9c7 230a 	strd	r2, r3, [r7, #40]	; 0x28
 8001876:	e08e      	b.n	8001996 <rt_powd_snf+0x216>
      }
    } else if (tmp_0 == 0.0) {
 8001878:	f04f 0200 	mov.w	r2, #0
 800187c:	f04f 0300 	mov.w	r3, #0
 8001880:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 8001884:	f7ff f8a0 	bl	80009c8 <__aeabi_dcmpeq>
 8001888:	4603      	mov	r3, r0
 800188a:	2b00      	cmp	r3, #0
 800188c:	d005      	beq.n	800189a <rt_powd_snf+0x11a>
      y = 1.0;
 800188e:	f04f 0200 	mov.w	r2, #0
 8001892:	4b45      	ldr	r3, [pc, #276]	; (80019a8 <rt_powd_snf+0x228>)
 8001894:	e9c7 230a 	strd	r2, r3, [r7, #40]	; 0x28
 8001898:	e07d      	b.n	8001996 <rt_powd_snf+0x216>
    } else if (tmp_0 == 1.0) {
 800189a:	f04f 0200 	mov.w	r2, #0
 800189e:	4b42      	ldr	r3, [pc, #264]	; (80019a8 <rt_powd_snf+0x228>)
 80018a0:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 80018a4:	f7ff f890 	bl	80009c8 <__aeabi_dcmpeq>
 80018a8:	4603      	mov	r3, r0
 80018aa:	2b00      	cmp	r3, #0
 80018ac:	d01b      	beq.n	80018e6 <rt_powd_snf+0x166>
      if (u1 > 0.0) {
 80018ae:	f04f 0200 	mov.w	r2, #0
 80018b2:	f04f 0300 	mov.w	r3, #0
 80018b6:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 80018ba:	f7ff f8ad 	bl	8000a18 <__aeabi_dcmpgt>
 80018be:	4603      	mov	r3, r0
 80018c0:	2b00      	cmp	r3, #0
 80018c2:	d004      	beq.n	80018ce <rt_powd_snf+0x14e>
        y = u0;
 80018c4:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 80018c8:	e9c7 230a 	strd	r2, r3, [r7, #40]	; 0x28
 80018cc:	e063      	b.n	8001996 <rt_powd_snf+0x216>
      } else {
        y = 1.0 / u0;
 80018ce:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 80018d2:	f04f 0000 	mov.w	r0, #0
 80018d6:	4934      	ldr	r1, [pc, #208]	; (80019a8 <rt_powd_snf+0x228>)
 80018d8:	f7fe ff38 	bl	800074c <__aeabi_ddiv>
 80018dc:	4602      	mov	r2, r0
 80018de:	460b      	mov	r3, r1
 80018e0:	e9c7 230a 	strd	r2, r3, [r7, #40]	; 0x28
 80018e4:	e057      	b.n	8001996 <rt_powd_snf+0x216>
      }
    } else if (u1 == 2.0) {
 80018e6:	f04f 0200 	mov.w	r2, #0
 80018ea:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80018ee:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 80018f2:	f7ff f869 	bl	80009c8 <__aeabi_dcmpeq>
 80018f6:	4603      	mov	r3, r0
 80018f8:	2b00      	cmp	r3, #0
 80018fa:	d00a      	beq.n	8001912 <rt_powd_snf+0x192>
      y = u0 * u0;
 80018fc:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 8001900:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 8001904:	f7fe fdf8 	bl	80004f8 <__aeabi_dmul>
 8001908:	4602      	mov	r2, r0
 800190a:	460b      	mov	r3, r1
 800190c:	e9c7 230a 	strd	r2, r3, [r7, #40]	; 0x28
 8001910:	e041      	b.n	8001996 <rt_powd_snf+0x216>
    } else if ((u1 == 0.5) && (u0 >= 0.0)) {
 8001912:	f04f 0200 	mov.w	r2, #0
 8001916:	4b26      	ldr	r3, [pc, #152]	; (80019b0 <rt_powd_snf+0x230>)
 8001918:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800191c:	f7ff f854 	bl	80009c8 <__aeabi_dcmpeq>
 8001920:	4603      	mov	r3, r0
 8001922:	2b00      	cmp	r3, #0
 8001924:	d011      	beq.n	800194a <rt_powd_snf+0x1ca>
 8001926:	f04f 0200 	mov.w	r2, #0
 800192a:	f04f 0300 	mov.w	r3, #0
 800192e:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 8001932:	f7ff f867 	bl	8000a04 <__aeabi_dcmpge>
 8001936:	4603      	mov	r3, r0
 8001938:	2b00      	cmp	r3, #0
 800193a:	d006      	beq.n	800194a <rt_powd_snf+0x1ca>
      y = sqrt(u0);
 800193c:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 8001940:	f006 f8ee 	bl	8007b20 <sqrt>
 8001944:	e9c7 010a 	strd	r0, r1, [r7, #40]	; 0x28
 8001948:	e025      	b.n	8001996 <rt_powd_snf+0x216>
    } else if ((u0 < 0.0) && (u1 > floor(u1))) {
 800194a:	f04f 0200 	mov.w	r2, #0
 800194e:	f04f 0300 	mov.w	r3, #0
 8001952:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 8001956:	f7ff f841 	bl	80009dc <__aeabi_dcmplt>
 800195a:	4603      	mov	r3, r0
 800195c:	2b00      	cmp	r3, #0
 800195e:	d012      	beq.n	8001986 <rt_powd_snf+0x206>
 8001960:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 8001964:	f006 fa60 	bl	8007e28 <floor>
 8001968:	4602      	mov	r2, r0
 800196a:	460b      	mov	r3, r1
 800196c:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 8001970:	f7ff f852 	bl	8000a18 <__aeabi_dcmpgt>
 8001974:	4603      	mov	r3, r0
 8001976:	2b00      	cmp	r3, #0
 8001978:	d005      	beq.n	8001986 <rt_powd_snf+0x206>
      y = (rtNaN);
 800197a:	4b0a      	ldr	r3, [pc, #40]	; (80019a4 <rt_powd_snf+0x224>)
 800197c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001980:	e9c7 230a 	strd	r2, r3, [r7, #40]	; 0x28
 8001984:	e007      	b.n	8001996 <rt_powd_snf+0x216>
    } else {
      y = pow(u0, u1);
 8001986:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 800198a:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 800198e:	f006 f85f 	bl	8007a50 <pow>
 8001992:	e9c7 010a 	strd	r0, r1, [r7, #40]	; 0x28
    }
  }

  return y;
 8001996:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	; 0x28
}
 800199a:	4610      	mov	r0, r2
 800199c:	4619      	mov	r1, r3
 800199e:	3730      	adds	r7, #48	; 0x30
 80019a0:	46bd      	mov	sp, r7
 80019a2:	bdb0      	pop	{r4, r5, r7, pc}
 80019a4:	20000290 	.word	0x20000290
 80019a8:	3ff00000 	.word	0x3ff00000
 80019ac:	20000280 	.word	0x20000280
 80019b0:	3fe00000 	.word	0x3fe00000
 80019b4:	00000000 	.word	0x00000000

080019b8 <EngTrModel_step>:

/* Model step function */
void EngTrModel_step(void)
{
 80019b8:	b5b0      	push	{r4, r5, r7, lr}
 80019ba:	b08c      	sub	sp, #48	; 0x30
 80019bc:	af06      	add	r7, sp, #24
  int32_T sfEvent;
  real_T InterpDown;
  real_T InterpUp;

  /* DiscreteIntegrator: '<S1>/Discrete-Time Integrator' */
  EngTrModel_B.EngineRPM = EngTrModel_DW.DiscreteTimeIntegrator_DSTATE;
 80019be:	4b8c      	ldr	r3, [pc, #560]	; (8001bf0 <EngTrModel_step+0x238>)
 80019c0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80019c4:	498b      	ldr	r1, [pc, #556]	; (8001bf4 <EngTrModel_step+0x23c>)
 80019c6:	e9c1 2300 	strd	r2, r3, [r1]

  /* Outport: '<Root>/EngineSpeed' */
  EngTrModel_Y.EngineSpeed = EngTrModel_B.EngineRPM;
 80019ca:	4b8a      	ldr	r3, [pc, #552]	; (8001bf4 <EngTrModel_step+0x23c>)
 80019cc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80019d0:	4989      	ldr	r1, [pc, #548]	; (8001bf8 <EngTrModel_step+0x240>)
 80019d2:	e9c1 2300 	strd	r2, r3, [r1]
   *  Gain: '<S8>/ToLinearSpeed'
   */
  /* Unit Conversion - from: ft/min to: mph
     Expression: output = (0.0113636*input) + (0) */
  EngTrModel_B.VehicleSpeed = 6.2831853071795862 *
    EngTrModel_DW.WheelSpeed_DSTATE * 0.011363636363636364;
 80019d6:	4b86      	ldr	r3, [pc, #536]	; (8001bf0 <EngTrModel_step+0x238>)
 80019d8:	e9d3 0102 	ldrd	r0, r1, [r3, #8]
  EngTrModel_B.VehicleSpeed = 6.2831853071795862 *
 80019dc:	a380      	add	r3, pc, #512	; (adr r3, 8001be0 <EngTrModel_step+0x228>)
 80019de:	e9d3 2300 	ldrd	r2, r3, [r3]
 80019e2:	f7fe fd89 	bl	80004f8 <__aeabi_dmul>
 80019e6:	4602      	mov	r2, r0
 80019e8:	460b      	mov	r3, r1
 80019ea:	4610      	mov	r0, r2
 80019ec:	4619      	mov	r1, r3
    EngTrModel_DW.WheelSpeed_DSTATE * 0.011363636363636364;
 80019ee:	a37e      	add	r3, pc, #504	; (adr r3, 8001be8 <EngTrModel_step+0x230>)
 80019f0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80019f4:	f7fe fd80 	bl	80004f8 <__aeabi_dmul>
 80019f8:	4602      	mov	r2, r0
 80019fa:	460b      	mov	r3, r1
  EngTrModel_B.VehicleSpeed = 6.2831853071795862 *
 80019fc:	497d      	ldr	r1, [pc, #500]	; (8001bf4 <EngTrModel_step+0x23c>)
 80019fe:	e9c1 2302 	strd	r2, r3, [r1, #8]

  /* Chart: '<Root>/ShiftLogic' */
  sfEvent = EngTrModel_CALL_EVENT;
 8001a02:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8001a06:	607b      	str	r3, [r7, #4]
  if (EngTrModel_DW.temporalCounter_i1 < MAX_uint32_T) {
 8001a08:	4b79      	ldr	r3, [pc, #484]	; (8001bf0 <EngTrModel_step+0x238>)
 8001a0a:	69db      	ldr	r3, [r3, #28]
 8001a0c:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8001a10:	d004      	beq.n	8001a1c <EngTrModel_step+0x64>
    EngTrModel_DW.temporalCounter_i1++;
 8001a12:	4b77      	ldr	r3, [pc, #476]	; (8001bf0 <EngTrModel_step+0x238>)
 8001a14:	69db      	ldr	r3, [r3, #28]
 8001a16:	3301      	adds	r3, #1
 8001a18:	4a75      	ldr	r2, [pc, #468]	; (8001bf0 <EngTrModel_step+0x238>)
 8001a1a:	61d3      	str	r3, [r2, #28]
  }

  if (EngTrModel_DW.is_active_c1_EngTrModel == 0U) {
 8001a1c:	4b74      	ldr	r3, [pc, #464]	; (8001bf0 <EngTrModel_step+0x238>)
 8001a1e:	f893 3020 	ldrb.w	r3, [r3, #32]
 8001a22:	2b00      	cmp	r3, #0
 8001a24:	d11a      	bne.n	8001a5c <EngTrModel_step+0xa4>
    EngTrModel_DW.is_active_c1_EngTrModel = 1U;
 8001a26:	4b72      	ldr	r3, [pc, #456]	; (8001bf0 <EngTrModel_step+0x238>)
 8001a28:	2201      	movs	r2, #1
 8001a2a:	f883 2020 	strb.w	r2, [r3, #32]
    EngTrModel_DW.is_active_gear_state = 1U;
 8001a2e:	4b70      	ldr	r3, [pc, #448]	; (8001bf0 <EngTrModel_step+0x238>)
 8001a30:	2201      	movs	r2, #1
 8001a32:	f883 2022 	strb.w	r2, [r3, #34]	; 0x22
    EngTrModel_DW.is_gear_state = EngTrModel_IN_first;
 8001a36:	4b6e      	ldr	r3, [pc, #440]	; (8001bf0 <EngTrModel_step+0x238>)
 8001a38:	2201      	movs	r2, #1
 8001a3a:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
    EngTrModel_B.Gear = 1.0;
 8001a3e:	496d      	ldr	r1, [pc, #436]	; (8001bf4 <EngTrModel_step+0x23c>)
 8001a40:	f04f 0200 	mov.w	r2, #0
 8001a44:	4b6d      	ldr	r3, [pc, #436]	; (8001bfc <EngTrModel_step+0x244>)
 8001a46:	e9c1 230a 	strd	r2, r3, [r1, #40]	; 0x28
    EngTrModel_DW.is_active_selection_state = 1U;
 8001a4a:	4b69      	ldr	r3, [pc, #420]	; (8001bf0 <EngTrModel_step+0x238>)
 8001a4c:	2201      	movs	r2, #1
 8001a4e:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
    EngTrModel_DW.is_selection_state = EngTrModel_IN_steady_state;
 8001a52:	4b67      	ldr	r3, [pc, #412]	; (8001bf0 <EngTrModel_step+0x238>)
 8001a54:	2202      	movs	r2, #2
 8001a56:	f883 2023 	strb.w	r2, [r3, #35]	; 0x23
 8001a5a:	e0e4      	b.n	8001c26 <EngTrModel_step+0x26e>
  } else {
    if (EngTrModel_DW.is_active_gear_state != 0U) {
 8001a5c:	4b64      	ldr	r3, [pc, #400]	; (8001bf0 <EngTrModel_step+0x238>)
 8001a5e:	f893 3022 	ldrb.w	r3, [r3, #34]	; 0x22
 8001a62:	2b00      	cmp	r3, #0
 8001a64:	d003      	beq.n	8001a6e <EngTrModel_step+0xb6>
      EngTrModel_gear_state(&sfEvent);
 8001a66:	1d3b      	adds	r3, r7, #4
 8001a68:	4618      	mov	r0, r3
 8001a6a:	f7ff fe03 	bl	8001674 <EngTrModel_gear_state>
    }

    if (EngTrModel_DW.is_active_selection_state != 0U) {
 8001a6e:	4b60      	ldr	r3, [pc, #384]	; (8001bf0 <EngTrModel_step+0x238>)
 8001a70:	f893 3024 	ldrb.w	r3, [r3, #36]	; 0x24
 8001a74:	2b00      	cmp	r3, #0
 8001a76:	f000 80d6 	beq.w	8001c26 <EngTrModel_step+0x26e>
      /* Outputs for Function Call SubSystem: '<S2>/ComputeThreshold' */
      /* Lookup_n-D: '<S5>/InterpDown' incorporates:
       *  Inport: '<Root>/Throttle'
       */
      InterpDown = look2_binlxpw(EngTrModel_U.Throttle, EngTrModel_B.Gear,
 8001a7a:	4b61      	ldr	r3, [pc, #388]	; (8001c00 <EngTrModel_step+0x248>)
 8001a7c:	e9d3 0100 	ldrd	r0, r1, [r3]
 8001a80:	4b5c      	ldr	r3, [pc, #368]	; (8001bf4 <EngTrModel_step+0x23c>)
 8001a82:	e9d3 230a 	ldrd	r2, r3, [r3, #40]	; 0x28
 8001a86:	2406      	movs	r4, #6
 8001a88:	9404      	str	r4, [sp, #16]
 8001a8a:	4c5e      	ldr	r4, [pc, #376]	; (8001c04 <EngTrModel_step+0x24c>)
 8001a8c:	9403      	str	r4, [sp, #12]
 8001a8e:	4c5e      	ldr	r4, [pc, #376]	; (8001c08 <EngTrModel_step+0x250>)
 8001a90:	9402      	str	r4, [sp, #8]
 8001a92:	4c5e      	ldr	r4, [pc, #376]	; (8001c0c <EngTrModel_step+0x254>)
 8001a94:	9401      	str	r4, [sp, #4]
 8001a96:	4c5e      	ldr	r4, [pc, #376]	; (8001c10 <EngTrModel_step+0x258>)
 8001a98:	9400      	str	r4, [sp, #0]
 8001a9a:	f7ff fb0b 	bl	80010b4 <look2_binlxpw>
 8001a9e:	e9c7 0104 	strd	r0, r1, [r7, #16]
        EngTrModel_ConstP.InterpDown_tableData, EngTrModel_ConstP.pooled6, 6U);

      /* Lookup_n-D: '<S5>/InterpUp' incorporates:
       *  Inport: '<Root>/Throttle'
       */
      InterpUp = look2_binlxpw(EngTrModel_U.Throttle, EngTrModel_B.Gear,
 8001aa2:	4b57      	ldr	r3, [pc, #348]	; (8001c00 <EngTrModel_step+0x248>)
 8001aa4:	e9d3 0100 	ldrd	r0, r1, [r3]
 8001aa8:	4b52      	ldr	r3, [pc, #328]	; (8001bf4 <EngTrModel_step+0x23c>)
 8001aaa:	e9d3 230a 	ldrd	r2, r3, [r3, #40]	; 0x28
 8001aae:	2406      	movs	r4, #6
 8001ab0:	9404      	str	r4, [sp, #16]
 8001ab2:	4c54      	ldr	r4, [pc, #336]	; (8001c04 <EngTrModel_step+0x24c>)
 8001ab4:	9403      	str	r4, [sp, #12]
 8001ab6:	4c57      	ldr	r4, [pc, #348]	; (8001c14 <EngTrModel_step+0x25c>)
 8001ab8:	9402      	str	r4, [sp, #8]
 8001aba:	4c54      	ldr	r4, [pc, #336]	; (8001c0c <EngTrModel_step+0x254>)
 8001abc:	9401      	str	r4, [sp, #4]
 8001abe:	4c56      	ldr	r4, [pc, #344]	; (8001c18 <EngTrModel_step+0x260>)
 8001ac0:	9400      	str	r4, [sp, #0]
 8001ac2:	f7ff faf7 	bl	80010b4 <look2_binlxpw>
 8001ac6:	e9c7 0102 	strd	r0, r1, [r7, #8]
        EngTrModel_ConstP.InterpUp_bp01Data, EngTrModel_ConstP.pooled2,
        EngTrModel_ConstP.InterpUp_tableData, EngTrModel_ConstP.pooled6, 6U);

      /* End of Outputs for SubSystem: '<S2>/ComputeThreshold' */
      switch (EngTrModel_DW.is_selection_state) {
 8001aca:	4b49      	ldr	r3, [pc, #292]	; (8001bf0 <EngTrModel_step+0x238>)
 8001acc:	f893 3023 	ldrb.w	r3, [r3, #35]	; 0x23
 8001ad0:	2b03      	cmp	r3, #3
 8001ad2:	d05a      	beq.n	8001b8a <EngTrModel_step+0x1d2>
 8001ad4:	2b03      	cmp	r3, #3
 8001ad6:	f300 80a6 	bgt.w	8001c26 <EngTrModel_step+0x26e>
 8001ada:	2b01      	cmp	r3, #1
 8001adc:	d002      	beq.n	8001ae4 <EngTrModel_step+0x12c>
 8001ade:	2b02      	cmp	r3, #2
 8001ae0:	d02e      	beq.n	8001b40 <EngTrModel_step+0x188>
 8001ae2:	e0a0      	b.n	8001c26 <EngTrModel_step+0x26e>
       case EngTrModel_IN_downshifting:
        if ((EngTrModel_DW.temporalCounter_i1 >= (uint32_T)2.0) &&
 8001ae4:	4b42      	ldr	r3, [pc, #264]	; (8001bf0 <EngTrModel_step+0x238>)
 8001ae6:	69db      	ldr	r3, [r3, #28]
 8001ae8:	2b01      	cmp	r3, #1
 8001aea:	d919      	bls.n	8001b20 <EngTrModel_step+0x168>
            (EngTrModel_B.VehicleSpeed <= InterpDown)) {
 8001aec:	4b41      	ldr	r3, [pc, #260]	; (8001bf4 <EngTrModel_step+0x23c>)
 8001aee:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
        if ((EngTrModel_DW.temporalCounter_i1 >= (uint32_T)2.0) &&
 8001af2:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 8001af6:	f7fe ff85 	bl	8000a04 <__aeabi_dcmpge>
 8001afa:	4603      	mov	r3, r0
 8001afc:	2b00      	cmp	r3, #0
 8001afe:	d00f      	beq.n	8001b20 <EngTrModel_step+0x168>
          sfEvent = EngTrModel_event_DOWN;
 8001b00:	2300      	movs	r3, #0
 8001b02:	607b      	str	r3, [r7, #4]
          if (EngTrModel_DW.is_active_gear_state != 0U) {
 8001b04:	4b3a      	ldr	r3, [pc, #232]	; (8001bf0 <EngTrModel_step+0x238>)
 8001b06:	f893 3022 	ldrb.w	r3, [r3, #34]	; 0x22
 8001b0a:	2b00      	cmp	r3, #0
 8001b0c:	d003      	beq.n	8001b16 <EngTrModel_step+0x15e>
            EngTrModel_gear_state(&sfEvent);
 8001b0e:	1d3b      	adds	r3, r7, #4
 8001b10:	4618      	mov	r0, r3
 8001b12:	f7ff fdaf 	bl	8001674 <EngTrModel_gear_state>
          }

          EngTrModel_DW.is_selection_state = EngTrModel_IN_steady_state;
 8001b16:	4b36      	ldr	r3, [pc, #216]	; (8001bf0 <EngTrModel_step+0x238>)
 8001b18:	2202      	movs	r2, #2
 8001b1a:	f883 2023 	strb.w	r2, [r3, #35]	; 0x23
        } else {
          if (EngTrModel_B.VehicleSpeed > InterpDown) {
            EngTrModel_DW.is_selection_state = EngTrModel_IN_steady_state;
          }
        }
        break;
 8001b1e:	e082      	b.n	8001c26 <EngTrModel_step+0x26e>
          if (EngTrModel_B.VehicleSpeed > InterpDown) {
 8001b20:	4b34      	ldr	r3, [pc, #208]	; (8001bf4 <EngTrModel_step+0x23c>)
 8001b22:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8001b26:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 8001b2a:	f7fe ff57 	bl	80009dc <__aeabi_dcmplt>
 8001b2e:	4603      	mov	r3, r0
 8001b30:	2b00      	cmp	r3, #0
 8001b32:	d100      	bne.n	8001b36 <EngTrModel_step+0x17e>
        break;
 8001b34:	e077      	b.n	8001c26 <EngTrModel_step+0x26e>
            EngTrModel_DW.is_selection_state = EngTrModel_IN_steady_state;
 8001b36:	4b2e      	ldr	r3, [pc, #184]	; (8001bf0 <EngTrModel_step+0x238>)
 8001b38:	2202      	movs	r2, #2
 8001b3a:	f883 2023 	strb.w	r2, [r3, #35]	; 0x23
        break;
 8001b3e:	e072      	b.n	8001c26 <EngTrModel_step+0x26e>

       case EngTrModel_IN_steady_state:
        if (EngTrModel_B.VehicleSpeed > InterpUp) {
 8001b40:	4b2c      	ldr	r3, [pc, #176]	; (8001bf4 <EngTrModel_step+0x23c>)
 8001b42:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8001b46:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 8001b4a:	f7fe ff47 	bl	80009dc <__aeabi_dcmplt>
 8001b4e:	4603      	mov	r3, r0
 8001b50:	2b00      	cmp	r3, #0
 8001b52:	d007      	beq.n	8001b64 <EngTrModel_step+0x1ac>
          EngTrModel_DW.is_selection_state = EngTrModel_IN_upshifting;
 8001b54:	4b26      	ldr	r3, [pc, #152]	; (8001bf0 <EngTrModel_step+0x238>)
 8001b56:	2203      	movs	r2, #3
 8001b58:	f883 2023 	strb.w	r2, [r3, #35]	; 0x23
          EngTrModel_DW.temporalCounter_i1 = 0U;
 8001b5c:	4b24      	ldr	r3, [pc, #144]	; (8001bf0 <EngTrModel_step+0x238>)
 8001b5e:	2200      	movs	r2, #0
 8001b60:	61da      	str	r2, [r3, #28]
          if (EngTrModel_B.VehicleSpeed < InterpDown) {
            EngTrModel_DW.is_selection_state = EngTrModel_IN_downshifting;
            EngTrModel_DW.temporalCounter_i1 = 0U;
          }
        }
        break;
 8001b62:	e060      	b.n	8001c26 <EngTrModel_step+0x26e>
          if (EngTrModel_B.VehicleSpeed < InterpDown) {
 8001b64:	4b23      	ldr	r3, [pc, #140]	; (8001bf4 <EngTrModel_step+0x23c>)
 8001b66:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8001b6a:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 8001b6e:	f7fe ff53 	bl	8000a18 <__aeabi_dcmpgt>
 8001b72:	4603      	mov	r3, r0
 8001b74:	2b00      	cmp	r3, #0
 8001b76:	d100      	bne.n	8001b7a <EngTrModel_step+0x1c2>
        break;
 8001b78:	e055      	b.n	8001c26 <EngTrModel_step+0x26e>
            EngTrModel_DW.is_selection_state = EngTrModel_IN_downshifting;
 8001b7a:	4b1d      	ldr	r3, [pc, #116]	; (8001bf0 <EngTrModel_step+0x238>)
 8001b7c:	2201      	movs	r2, #1
 8001b7e:	f883 2023 	strb.w	r2, [r3, #35]	; 0x23
            EngTrModel_DW.temporalCounter_i1 = 0U;
 8001b82:	4b1b      	ldr	r3, [pc, #108]	; (8001bf0 <EngTrModel_step+0x238>)
 8001b84:	2200      	movs	r2, #0
 8001b86:	61da      	str	r2, [r3, #28]
        break;
 8001b88:	e04d      	b.n	8001c26 <EngTrModel_step+0x26e>

       case EngTrModel_IN_upshifting:
        if ((EngTrModel_DW.temporalCounter_i1 >= (uint32_T)2.0) &&
 8001b8a:	4b19      	ldr	r3, [pc, #100]	; (8001bf0 <EngTrModel_step+0x238>)
 8001b8c:	69db      	ldr	r3, [r3, #28]
 8001b8e:	2b01      	cmp	r3, #1
 8001b90:	d919      	bls.n	8001bc6 <EngTrModel_step+0x20e>
            (EngTrModel_B.VehicleSpeed >= InterpUp)) {
 8001b92:	4b18      	ldr	r3, [pc, #96]	; (8001bf4 <EngTrModel_step+0x23c>)
 8001b94:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
        if ((EngTrModel_DW.temporalCounter_i1 >= (uint32_T)2.0) &&
 8001b98:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 8001b9c:	f7fe ff28 	bl	80009f0 <__aeabi_dcmple>
 8001ba0:	4603      	mov	r3, r0
 8001ba2:	2b00      	cmp	r3, #0
 8001ba4:	d00f      	beq.n	8001bc6 <EngTrModel_step+0x20e>
          sfEvent = EngTrModel_event_UP;
 8001ba6:	2301      	movs	r3, #1
 8001ba8:	607b      	str	r3, [r7, #4]
          if (EngTrModel_DW.is_active_gear_state != 0U) {
 8001baa:	4b11      	ldr	r3, [pc, #68]	; (8001bf0 <EngTrModel_step+0x238>)
 8001bac:	f893 3022 	ldrb.w	r3, [r3, #34]	; 0x22
 8001bb0:	2b00      	cmp	r3, #0
 8001bb2:	d003      	beq.n	8001bbc <EngTrModel_step+0x204>
            EngTrModel_gear_state(&sfEvent);
 8001bb4:	1d3b      	adds	r3, r7, #4
 8001bb6:	4618      	mov	r0, r3
 8001bb8:	f7ff fd5c 	bl	8001674 <EngTrModel_gear_state>
          }

          EngTrModel_DW.is_selection_state = EngTrModel_IN_steady_state;
 8001bbc:	4b0c      	ldr	r3, [pc, #48]	; (8001bf0 <EngTrModel_step+0x238>)
 8001bbe:	2202      	movs	r2, #2
 8001bc0:	f883 2023 	strb.w	r2, [r3, #35]	; 0x23
        } else {
          if (EngTrModel_B.VehicleSpeed < InterpUp) {
            EngTrModel_DW.is_selection_state = EngTrModel_IN_steady_state;
          }
        }
        break;
 8001bc4:	e02e      	b.n	8001c24 <EngTrModel_step+0x26c>
          if (EngTrModel_B.VehicleSpeed < InterpUp) {
 8001bc6:	4b0b      	ldr	r3, [pc, #44]	; (8001bf4 <EngTrModel_step+0x23c>)
 8001bc8:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8001bcc:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 8001bd0:	f7fe ff22 	bl	8000a18 <__aeabi_dcmpgt>
 8001bd4:	4603      	mov	r3, r0
 8001bd6:	2b00      	cmp	r3, #0
 8001bd8:	d120      	bne.n	8001c1c <EngTrModel_step+0x264>
        break;
 8001bda:	e023      	b.n	8001c24 <EngTrModel_step+0x26c>
 8001bdc:	f3af 8000 	nop.w
 8001be0:	54442d18 	.word	0x54442d18
 8001be4:	401921fb 	.word	0x401921fb
 8001be8:	745d1746 	.word	0x745d1746
 8001bec:	3f8745d1 	.word	0x3f8745d1
 8001bf0:	20000228 	.word	0x20000228
 8001bf4:	200001f8 	.word	0x200001f8
 8001bf8:	20000260 	.word	0x20000260
 8001bfc:	3ff00000 	.word	0x3ff00000
 8001c00:	20000250 	.word	0x20000250
 8001c04:	080093d0 	.word	0x080093d0
 8001c08:	08008ba0 	.word	0x08008ba0
 8001c0c:	08008c90 	.word	0x08008c90
 8001c10:	08008c60 	.word	0x08008c60
 8001c14:	08008cb0 	.word	0x08008cb0
 8001c18:	08008d70 	.word	0x08008d70
            EngTrModel_DW.is_selection_state = EngTrModel_IN_steady_state;
 8001c1c:	4b84      	ldr	r3, [pc, #528]	; (8001e30 <EngTrModel_step+0x478>)
 8001c1e:	2202      	movs	r2, #2
 8001c20:	f883 2023 	strb.w	r2, [r3, #35]	; 0x23
        break;
 8001c24:	bf00      	nop
  }

  /* End of Chart: '<Root>/ShiftLogic' */

  /* Lookup_n-D: '<S7>/Table' */
  InterpDown = look1_binlxpw(EngTrModel_B.Gear, EngTrModel_ConstP.pooled2,
 8001c26:	4b83      	ldr	r3, [pc, #524]	; (8001e34 <EngTrModel_step+0x47c>)
 8001c28:	e9d3 010a 	ldrd	r0, r1, [r3, #40]	; 0x28
 8001c2c:	2303      	movs	r3, #3
 8001c2e:	9300      	str	r3, [sp, #0]
 8001c30:	4b81      	ldr	r3, [pc, #516]	; (8001e38 <EngTrModel_step+0x480>)
 8001c32:	4a82      	ldr	r2, [pc, #520]	; (8001e3c <EngTrModel_step+0x484>)
 8001c34:	f7ff fc3a 	bl	80014ac <look1_binlxpw>
 8001c38:	e9c7 0104 	strd	r0, r1, [r7, #16]
    EngTrModel_ConstP.Table_tableData, 3U);

  /* Gain: '<S4>/FinalDriveRatio2' incorporates:
   *  DiscreteIntegrator: '<S4>/WheelSpeed'
   */
  EngTrModel_B.TransmissionRPM = 3.23 * EngTrModel_DW.WheelSpeed_DSTATE;
 8001c3c:	4b7c      	ldr	r3, [pc, #496]	; (8001e30 <EngTrModel_step+0x478>)
 8001c3e:	e9d3 0102 	ldrd	r0, r1, [r3, #8]
 8001c42:	a375      	add	r3, pc, #468	; (adr r3, 8001e18 <EngTrModel_step+0x460>)
 8001c44:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001c48:	f7fe fc56 	bl	80004f8 <__aeabi_dmul>
 8001c4c:	4602      	mov	r2, r0
 8001c4e:	460b      	mov	r3, r1
 8001c50:	4978      	ldr	r1, [pc, #480]	; (8001e34 <EngTrModel_step+0x47c>)
 8001c52:	e9c1 2304 	strd	r2, r3, [r1, #16]

  /* Product: '<S6>/SpeedRatio' incorporates:
   *  Product: '<S7>/Product1'
   */
  if( EngTrModel_B.EngineRPM != 0)
 8001c56:	4b77      	ldr	r3, [pc, #476]	; (8001e34 <EngTrModel_step+0x47c>)
 8001c58:	e9d3 0100 	ldrd	r0, r1, [r3]
 8001c5c:	f04f 0200 	mov.w	r2, #0
 8001c60:	f04f 0300 	mov.w	r3, #0
 8001c64:	f7fe feb0 	bl	80009c8 <__aeabi_dcmpeq>
 8001c68:	4603      	mov	r3, r0
 8001c6a:	2b00      	cmp	r3, #0
 8001c6c:	d114      	bne.n	8001c98 <EngTrModel_step+0x2e0>
    InterpUp = InterpDown * EngTrModel_B.TransmissionRPM / EngTrModel_B.EngineRPM;
 8001c6e:	4b71      	ldr	r3, [pc, #452]	; (8001e34 <EngTrModel_step+0x47c>)
 8001c70:	e9d3 0104 	ldrd	r0, r1, [r3, #16]
 8001c74:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 8001c78:	f7fe fc3e 	bl	80004f8 <__aeabi_dmul>
 8001c7c:	4602      	mov	r2, r0
 8001c7e:	460b      	mov	r3, r1
 8001c80:	4610      	mov	r0, r2
 8001c82:	4619      	mov	r1, r3
 8001c84:	4b6b      	ldr	r3, [pc, #428]	; (8001e34 <EngTrModel_step+0x47c>)
 8001c86:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001c8a:	f7fe fd5f 	bl	800074c <__aeabi_ddiv>
 8001c8e:	4602      	mov	r2, r0
 8001c90:	460b      	mov	r3, r1
 8001c92:	e9c7 2302 	strd	r2, r3, [r7, #8]
 8001c96:	e005      	b.n	8001ca4 <EngTrModel_step+0x2ec>
  else
    InterpUp = 0.0;
 8001c98:	f04f 0200 	mov.w	r2, #0
 8001c9c:	f04f 0300 	mov.w	r3, #0
 8001ca0:	e9c7 2302 	strd	r2, r3, [r7, #8]

  /* Fcn: '<S6>/Impeller' incorporates:
   *  Lookup_n-D: '<S6>/FactorK'
   *  Product: '<S6>/Quotient'
   */
  EngTrModel_B.ImpellerTorque = rt_powd_snf(EngTrModel_B.EngineRPM /
 8001ca4:	4b63      	ldr	r3, [pc, #396]	; (8001e34 <EngTrModel_step+0x47c>)
 8001ca6:	e9d3 4500 	ldrd	r4, r5, [r3]
    look1_binlxpw(InterpUp, EngTrModel_ConstP.pooled5,
 8001caa:	2314      	movs	r3, #20
 8001cac:	9300      	str	r3, [sp, #0]
 8001cae:	4b64      	ldr	r3, [pc, #400]	; (8001e40 <EngTrModel_step+0x488>)
 8001cb0:	4a64      	ldr	r2, [pc, #400]	; (8001e44 <EngTrModel_step+0x48c>)
 8001cb2:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 8001cb6:	f7ff fbf9 	bl	80014ac <look1_binlxpw>
 8001cba:	4602      	mov	r2, r0
 8001cbc:	460b      	mov	r3, r1
  EngTrModel_B.ImpellerTorque = rt_powd_snf(EngTrModel_B.EngineRPM /
 8001cbe:	4620      	mov	r0, r4
 8001cc0:	4629      	mov	r1, r5
 8001cc2:	f7fe fd43 	bl	800074c <__aeabi_ddiv>
 8001cc6:	4602      	mov	r2, r0
 8001cc8:	460b      	mov	r3, r1
 8001cca:	4610      	mov	r0, r2
 8001ccc:	4619      	mov	r1, r3
 8001cce:	f04f 0200 	mov.w	r2, #0
 8001cd2:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001cd6:	f7ff fd53 	bl	8001780 <rt_powd_snf>
 8001cda:	4602      	mov	r2, r0
 8001cdc:	460b      	mov	r3, r1
 8001cde:	4955      	ldr	r1, [pc, #340]	; (8001e34 <EngTrModel_step+0x47c>)
 8001ce0:	e9c1 2306 	strd	r2, r3, [r1, #24]
                  EngTrModel_ConstP.FactorK_tableData, 20U), 2.0);

  /* Lookup_n-D: '<S6>/TorqueRatio' */
  InterpUp = look1_binlxpw(InterpUp, EngTrModel_ConstP.pooled5,
 8001ce4:	2314      	movs	r3, #20
 8001ce6:	9300      	str	r3, [sp, #0]
 8001ce8:	4b57      	ldr	r3, [pc, #348]	; (8001e48 <EngTrModel_step+0x490>)
 8001cea:	4a56      	ldr	r2, [pc, #344]	; (8001e44 <EngTrModel_step+0x48c>)
 8001cec:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 8001cf0:	f7ff fbdc 	bl	80014ac <look1_binlxpw>
 8001cf4:	e9c7 0102 	strd	r0, r1, [r7, #8]
    EngTrModel_ConstP.TorqueRatio_tableData, 20U);

  /* Product: '<S7>/Product' incorporates:
   *  Product: '<S6>/Turbine'
   */
  EngTrModel_B.OutputTorque = EngTrModel_B.ImpellerTorque * InterpUp *
 8001cf8:	4b4e      	ldr	r3, [pc, #312]	; (8001e34 <EngTrModel_step+0x47c>)
 8001cfa:	e9d3 0106 	ldrd	r0, r1, [r3, #24]
 8001cfe:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8001d02:	f7fe fbf9 	bl	80004f8 <__aeabi_dmul>
 8001d06:	4602      	mov	r2, r0
 8001d08:	460b      	mov	r3, r1
 8001d0a:	4610      	mov	r0, r2
 8001d0c:	4619      	mov	r1, r3
 8001d0e:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 8001d12:	f7fe fbf1 	bl	80004f8 <__aeabi_dmul>
 8001d16:	4602      	mov	r2, r0
 8001d18:	460b      	mov	r3, r1
 8001d1a:	4946      	ldr	r1, [pc, #280]	; (8001e34 <EngTrModel_step+0x47c>)
 8001d1c:	e9c1 2308 	strd	r2, r3, [r1, #32]
    InterpDown;

  /* Outport: '<Root>/Gear' */
  EngTrModel_Y.Gear = EngTrModel_B.Gear;
 8001d20:	4b44      	ldr	r3, [pc, #272]	; (8001e34 <EngTrModel_step+0x47c>)
 8001d22:	e9d3 230a 	ldrd	r2, r3, [r3, #40]	; 0x28
 8001d26:	4949      	ldr	r1, [pc, #292]	; (8001e4c <EngTrModel_step+0x494>)
 8001d28:	e9c1 2304 	strd	r2, r3, [r1, #16]

  /* Outport: '<Root>/VehicleSpeed' */
  EngTrModel_Y.VehicleSpeed = EngTrModel_B.VehicleSpeed;
 8001d2c:	4b41      	ldr	r3, [pc, #260]	; (8001e34 <EngTrModel_step+0x47c>)
 8001d2e:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8001d32:	4946      	ldr	r1, [pc, #280]	; (8001e4c <EngTrModel_step+0x494>)
 8001d34:	e9c1 2302 	strd	r2, r3, [r1, #8]
   *  Gain: '<S1>/EnginePlusImpellerInertia'
   *  Inport: '<Root>/Throttle'
   *  Lookup_n-D: '<S1>/EngineTorque'
   *  Sum: '<S1>/Sum'
   */
  EngTrModel_DW.DiscreteTimeIntegrator_DSTATE += (look2_binlxpw
 8001d38:	4b45      	ldr	r3, [pc, #276]	; (8001e50 <EngTrModel_step+0x498>)
 8001d3a:	e9d3 0100 	ldrd	r0, r1, [r3]
 8001d3e:	4b3d      	ldr	r3, [pc, #244]	; (8001e34 <EngTrModel_step+0x47c>)
 8001d40:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001d44:	240a      	movs	r4, #10
 8001d46:	9404      	str	r4, [sp, #16]
 8001d48:	4c42      	ldr	r4, [pc, #264]	; (8001e54 <EngTrModel_step+0x49c>)
 8001d4a:	9403      	str	r4, [sp, #12]
 8001d4c:	4c42      	ldr	r4, [pc, #264]	; (8001e58 <EngTrModel_step+0x4a0>)
 8001d4e:	9402      	str	r4, [sp, #8]
 8001d50:	4c42      	ldr	r4, [pc, #264]	; (8001e5c <EngTrModel_step+0x4a4>)
 8001d52:	9401      	str	r4, [sp, #4]
 8001d54:	4c42      	ldr	r4, [pc, #264]	; (8001e60 <EngTrModel_step+0x4a8>)
 8001d56:	9400      	str	r4, [sp, #0]
 8001d58:	f7ff f9ac 	bl	80010b4 <look2_binlxpw>
    (EngTrModel_U.Throttle, EngTrModel_B.EngineRPM,
     EngTrModel_ConstP.EngineTorque_bp01Data,
     EngTrModel_ConstP.EngineTorque_bp02Data,
     EngTrModel_ConstP.EngineTorque_tableData,
     EngTrModel_ConstP.EngineTorque_maxIndex, 10U) - EngTrModel_B.ImpellerTorque)
 8001d5c:	4b35      	ldr	r3, [pc, #212]	; (8001e34 <EngTrModel_step+0x47c>)
 8001d5e:	e9d3 2306 	ldrd	r2, r3, [r3, #24]
 8001d62:	f7fe fa11 	bl	8000188 <__aeabi_dsub>
 8001d66:	4602      	mov	r2, r0
 8001d68:	460b      	mov	r3, r1
 8001d6a:	4610      	mov	r0, r2
 8001d6c:	4619      	mov	r1, r3
    * 45.472138452209627 * 0.04;
 8001d6e:	a32c      	add	r3, pc, #176	; (adr r3, 8001e20 <EngTrModel_step+0x468>)
 8001d70:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001d74:	f7fe fbc0 	bl	80004f8 <__aeabi_dmul>
 8001d78:	4602      	mov	r2, r0
 8001d7a:	460b      	mov	r3, r1
 8001d7c:	4610      	mov	r0, r2
 8001d7e:	4619      	mov	r1, r3
 8001d80:	a329      	add	r3, pc, #164	; (adr r3, 8001e28 <EngTrModel_step+0x470>)
 8001d82:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001d86:	f7fe fbb7 	bl	80004f8 <__aeabi_dmul>
 8001d8a:	4602      	mov	r2, r0
 8001d8c:	460b      	mov	r3, r1
 8001d8e:	4610      	mov	r0, r2
 8001d90:	4619      	mov	r1, r3
  EngTrModel_DW.DiscreteTimeIntegrator_DSTATE += (look2_binlxpw
 8001d92:	4b27      	ldr	r3, [pc, #156]	; (8001e30 <EngTrModel_step+0x478>)
 8001d94:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001d98:	f7fe f9f8 	bl	800018c <__adddf3>
 8001d9c:	4602      	mov	r2, r0
 8001d9e:	460b      	mov	r3, r1
 8001da0:	4923      	ldr	r1, [pc, #140]	; (8001e30 <EngTrModel_step+0x478>)
 8001da2:	e9c1 2300 	strd	r2, r3, [r1]

  /* Signum: '<S4>/Sign' */
  if (EngTrModel_B.VehicleSpeed < 0.0) {
 8001da6:	4b23      	ldr	r3, [pc, #140]	; (8001e34 <EngTrModel_step+0x47c>)
 8001da8:	e9d3 0102 	ldrd	r0, r1, [r3, #8]
 8001dac:	f04f 0200 	mov.w	r2, #0
 8001db0:	f04f 0300 	mov.w	r3, #0
 8001db4:	f7fe fe12 	bl	80009dc <__aeabi_dcmplt>
 8001db8:	4603      	mov	r3, r0
 8001dba:	2b00      	cmp	r3, #0
 8001dbc:	d005      	beq.n	8001dca <EngTrModel_step+0x412>
    InterpDown = -1.0;
 8001dbe:	f04f 0200 	mov.w	r2, #0
 8001dc2:	4b28      	ldr	r3, [pc, #160]	; (8001e64 <EngTrModel_step+0x4ac>)
 8001dc4:	e9c7 2304 	strd	r2, r3, [r7, #16]
 8001dc8:	e055      	b.n	8001e76 <EngTrModel_step+0x4be>
  } else if (EngTrModel_B.VehicleSpeed > 0.0) {
 8001dca:	4b1a      	ldr	r3, [pc, #104]	; (8001e34 <EngTrModel_step+0x47c>)
 8001dcc:	e9d3 0102 	ldrd	r0, r1, [r3, #8]
 8001dd0:	f04f 0200 	mov.w	r2, #0
 8001dd4:	f04f 0300 	mov.w	r3, #0
 8001dd8:	f7fe fe1e 	bl	8000a18 <__aeabi_dcmpgt>
 8001ddc:	4603      	mov	r3, r0
 8001dde:	2b00      	cmp	r3, #0
 8001de0:	d005      	beq.n	8001dee <EngTrModel_step+0x436>
    InterpDown = 1.0;
 8001de2:	f04f 0200 	mov.w	r2, #0
 8001de6:	4b20      	ldr	r3, [pc, #128]	; (8001e68 <EngTrModel_step+0x4b0>)
 8001de8:	e9c7 2304 	strd	r2, r3, [r7, #16]
 8001dec:	e043      	b.n	8001e76 <EngTrModel_step+0x4be>
  } else if (EngTrModel_B.VehicleSpeed == 0.0) {
 8001dee:	4b11      	ldr	r3, [pc, #68]	; (8001e34 <EngTrModel_step+0x47c>)
 8001df0:	e9d3 0102 	ldrd	r0, r1, [r3, #8]
 8001df4:	f04f 0200 	mov.w	r2, #0
 8001df8:	f04f 0300 	mov.w	r3, #0
 8001dfc:	f7fe fde4 	bl	80009c8 <__aeabi_dcmpeq>
 8001e00:	4603      	mov	r3, r0
 8001e02:	2b00      	cmp	r3, #0
 8001e04:	d032      	beq.n	8001e6c <EngTrModel_step+0x4b4>
    InterpDown = 0.0;
 8001e06:	f04f 0200 	mov.w	r2, #0
 8001e0a:	f04f 0300 	mov.w	r3, #0
 8001e0e:	e9c7 2304 	strd	r2, r3, [r7, #16]
 8001e12:	e030      	b.n	8001e76 <EngTrModel_step+0x4be>
 8001e14:	f3af 8000 	nop.w
 8001e18:	3d70a3d7 	.word	0x3d70a3d7
 8001e1c:	4009d70a 	.word	0x4009d70a
 8001e20:	0865b653 	.word	0x0865b653
 8001e24:	4046bc6f 	.word	0x4046bc6f
 8001e28:	47ae147b 	.word	0x47ae147b
 8001e2c:	3fa47ae1 	.word	0x3fa47ae1
 8001e30:	20000228 	.word	0x20000228
 8001e34:	200001f8 	.word	0x200001f8
 8001e38:	080091b8 	.word	0x080091b8
 8001e3c:	08008c90 	.word	0x08008c90
 8001e40:	080091d8 	.word	0x080091d8
 8001e44:	08009280 	.word	0x08009280
 8001e48:	08009328 	.word	0x08009328
 8001e4c:	20000260 	.word	0x20000260
 8001e50:	20000250 	.word	0x20000250
 8001e54:	080093d8 	.word	0x080093d8
 8001e58:	08008da0 	.word	0x08008da0
 8001e5c:	08009160 	.word	0x08009160
 8001e60:	08009110 	.word	0x08009110
 8001e64:	bff00000 	.word	0xbff00000
 8001e68:	3ff00000 	.word	0x3ff00000
  } else {
    InterpDown = (rtNaN);
 8001e6c:	4b3a      	ldr	r3, [pc, #232]	; (8001f58 <EngTrModel_step+0x5a0>)
 8001e6e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001e72:	e9c7 2304 	strd	r2, r3, [r7, #16]
   *  Inport: '<Root>/Brake'
   *  Product: '<S4>/SignedLoad'
   *  Sum: '<S4>/Sum'
   *  Sum: '<S4>/Sum1'
   */
  EngTrModel_DW.WheelSpeed_DSTATE += (3.23 * EngTrModel_B.OutputTorque - ((0.02 *
 8001e76:	4b39      	ldr	r3, [pc, #228]	; (8001f5c <EngTrModel_step+0x5a4>)
 8001e78:	e9d3 0108 	ldrd	r0, r1, [r3, #32]
 8001e7c:	a32e      	add	r3, pc, #184	; (adr r3, 8001f38 <EngTrModel_step+0x580>)
 8001e7e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001e82:	f7fe fb39 	bl	80004f8 <__aeabi_dmul>
 8001e86:	4602      	mov	r2, r0
 8001e88:	460b      	mov	r3, r1
 8001e8a:	4614      	mov	r4, r2
 8001e8c:	461d      	mov	r5, r3
    rt_powd_snf(EngTrModel_B.VehicleSpeed, 2.0) + 40.0) +
 8001e8e:	4b33      	ldr	r3, [pc, #204]	; (8001f5c <EngTrModel_step+0x5a4>)
 8001e90:	e9d3 0102 	ldrd	r0, r1, [r3, #8]
 8001e94:	f04f 0200 	mov.w	r2, #0
 8001e98:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001e9c:	f7ff fc70 	bl	8001780 <rt_powd_snf>
  EngTrModel_DW.WheelSpeed_DSTATE += (3.23 * EngTrModel_B.OutputTorque - ((0.02 *
 8001ea0:	a327      	add	r3, pc, #156	; (adr r3, 8001f40 <EngTrModel_step+0x588>)
 8001ea2:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001ea6:	f7fe fb27 	bl	80004f8 <__aeabi_dmul>
 8001eaa:	4602      	mov	r2, r0
 8001eac:	460b      	mov	r3, r1
 8001eae:	4610      	mov	r0, r2
 8001eb0:	4619      	mov	r1, r3
    rt_powd_snf(EngTrModel_B.VehicleSpeed, 2.0) + 40.0) +
 8001eb2:	f04f 0200 	mov.w	r2, #0
 8001eb6:	4b2a      	ldr	r3, [pc, #168]	; (8001f60 <EngTrModel_step+0x5a8>)
 8001eb8:	f7fe f968 	bl	800018c <__adddf3>
 8001ebc:	4602      	mov	r2, r0
 8001ebe:	460b      	mov	r3, r1
 8001ec0:	4610      	mov	r0, r2
 8001ec2:	4619      	mov	r1, r3
    EngTrModel_U.BrakeTorque) * InterpDown) * 0.082684618362373577 * 0.04;
 8001ec4:	4b27      	ldr	r3, [pc, #156]	; (8001f64 <EngTrModel_step+0x5ac>)
 8001ec6:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
    rt_powd_snf(EngTrModel_B.VehicleSpeed, 2.0) + 40.0) +
 8001eca:	f7fe f95f 	bl	800018c <__adddf3>
 8001ece:	4602      	mov	r2, r0
 8001ed0:	460b      	mov	r3, r1
 8001ed2:	4610      	mov	r0, r2
 8001ed4:	4619      	mov	r1, r3
    EngTrModel_U.BrakeTorque) * InterpDown) * 0.082684618362373577 * 0.04;
 8001ed6:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 8001eda:	f7fe fb0d 	bl	80004f8 <__aeabi_dmul>
 8001ede:	4602      	mov	r2, r0
 8001ee0:	460b      	mov	r3, r1
  EngTrModel_DW.WheelSpeed_DSTATE += (3.23 * EngTrModel_B.OutputTorque - ((0.02 *
 8001ee2:	4620      	mov	r0, r4
 8001ee4:	4629      	mov	r1, r5
 8001ee6:	f7fe f94f 	bl	8000188 <__aeabi_dsub>
 8001eea:	4602      	mov	r2, r0
 8001eec:	460b      	mov	r3, r1
 8001eee:	4610      	mov	r0, r2
 8001ef0:	4619      	mov	r1, r3
    EngTrModel_U.BrakeTorque) * InterpDown) * 0.082684618362373577 * 0.04;
 8001ef2:	a315      	add	r3, pc, #84	; (adr r3, 8001f48 <EngTrModel_step+0x590>)
 8001ef4:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001ef8:	f7fe fafe 	bl	80004f8 <__aeabi_dmul>
 8001efc:	4602      	mov	r2, r0
 8001efe:	460b      	mov	r3, r1
 8001f00:	4610      	mov	r0, r2
 8001f02:	4619      	mov	r1, r3
 8001f04:	a312      	add	r3, pc, #72	; (adr r3, 8001f50 <EngTrModel_step+0x598>)
 8001f06:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001f0a:	f7fe faf5 	bl	80004f8 <__aeabi_dmul>
 8001f0e:	4602      	mov	r2, r0
 8001f10:	460b      	mov	r3, r1
 8001f12:	4610      	mov	r0, r2
 8001f14:	4619      	mov	r1, r3
  EngTrModel_DW.WheelSpeed_DSTATE += (3.23 * EngTrModel_B.OutputTorque - ((0.02 *
 8001f16:	4b14      	ldr	r3, [pc, #80]	; (8001f68 <EngTrModel_step+0x5b0>)
 8001f18:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8001f1c:	f7fe f936 	bl	800018c <__adddf3>
 8001f20:	4602      	mov	r2, r0
 8001f22:	460b      	mov	r3, r1
 8001f24:	4910      	ldr	r1, [pc, #64]	; (8001f68 <EngTrModel_step+0x5b0>)
 8001f26:	e9c1 2302 	strd	r2, r3, [r1, #8]
}
 8001f2a:	bf00      	nop
 8001f2c:	3718      	adds	r7, #24
 8001f2e:	46bd      	mov	sp, r7
 8001f30:	bdb0      	pop	{r4, r5, r7, pc}
 8001f32:	bf00      	nop
 8001f34:	f3af 8000 	nop.w
 8001f38:	3d70a3d7 	.word	0x3d70a3d7
 8001f3c:	4009d70a 	.word	0x4009d70a
 8001f40:	47ae147b 	.word	0x47ae147b
 8001f44:	3f947ae1 	.word	0x3f947ae1
 8001f48:	b3bfa695 	.word	0xb3bfa695
 8001f4c:	3fb52ad1 	.word	0x3fb52ad1
 8001f50:	47ae147b 	.word	0x47ae147b
 8001f54:	3fa47ae1 	.word	0x3fa47ae1
 8001f58:	20000290 	.word	0x20000290
 8001f5c:	200001f8 	.word	0x200001f8
 8001f60:	40440000 	.word	0x40440000
 8001f64:	20000250 	.word	0x20000250
 8001f68:	20000228 	.word	0x20000228

08001f6c <EngTrModel_initialize>:

/* Model initialize function */
void EngTrModel_initialize(void)
{
 8001f6c:	b580      	push	{r7, lr}
 8001f6e:	af00      	add	r7, sp, #0
  /* Registration code */

  /* initialize non-finites */
  rt_InitInfAndNaN(sizeof(real_T));
 8001f70:	2008      	movs	r0, #8
 8001f72:	f000 ff03 	bl	8002d7c <rt_InitInfAndNaN>
}
 8001f76:	bf00      	nop
 8001f78:	bd80      	pop	{r7, pc}
	...

08001f7c <KEYPAD_Init>:
    {'7', '8', '9'},  // Tercera fila
    {'*', '0', '#'}   // Cuarta fila
};

void KEYPAD_Init(void)
{
 8001f7c:	b480      	push	{r7}
 8001f7e:	af00      	add	r7, sp, #0
    // Configura PA5 (fila 1) como entrada con resistencia pull-down
    GPIOA->CRL &= ~(0xFUL << 20U);  // Limpia la configuración anterior de PA5
 8001f80:	4b34      	ldr	r3, [pc, #208]	; (8002054 <KEYPAD_Init+0xd8>)
 8001f82:	681b      	ldr	r3, [r3, #0]
 8001f84:	4a33      	ldr	r2, [pc, #204]	; (8002054 <KEYPAD_Init+0xd8>)
 8001f86:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 8001f8a:	6013      	str	r3, [r2, #0]
    GPIOA->CRL |= (0x8UL << 20U);   // Entrada con pull-down
 8001f8c:	4b31      	ldr	r3, [pc, #196]	; (8002054 <KEYPAD_Init+0xd8>)
 8001f8e:	681b      	ldr	r3, [r3, #0]
 8001f90:	4a30      	ldr	r2, [pc, #192]	; (8002054 <KEYPAD_Init+0xd8>)
 8001f92:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001f96:	6013      	str	r3, [r2, #0]

    // Configura PA8 (fila 2) como entrada con resistencia pull-down
    GPIOA->CRH &= ~(0xFUL << 0U);  // Limpia la configuración anterior de PA8
 8001f98:	4b2e      	ldr	r3, [pc, #184]	; (8002054 <KEYPAD_Init+0xd8>)
 8001f9a:	685b      	ldr	r3, [r3, #4]
 8001f9c:	4a2d      	ldr	r2, [pc, #180]	; (8002054 <KEYPAD_Init+0xd8>)
 8001f9e:	f023 030f 	bic.w	r3, r3, #15
 8001fa2:	6053      	str	r3, [r2, #4]
    GPIOA->CRH |= (0x8UL << 0U);   // Entrada con pull-down
 8001fa4:	4b2b      	ldr	r3, [pc, #172]	; (8002054 <KEYPAD_Init+0xd8>)
 8001fa6:	685b      	ldr	r3, [r3, #4]
 8001fa8:	4a2a      	ldr	r2, [pc, #168]	; (8002054 <KEYPAD_Init+0xd8>)
 8001faa:	f043 0308 	orr.w	r3, r3, #8
 8001fae:	6053      	str	r3, [r2, #4]

    // Configura PA1 (fila 3) como entrada con resistencia pull-down
    GPIOA->CRL &= ~(0xFUL << 4U);  // Limpia la configuración anterior de PA1
 8001fb0:	4b28      	ldr	r3, [pc, #160]	; (8002054 <KEYPAD_Init+0xd8>)
 8001fb2:	681b      	ldr	r3, [r3, #0]
 8001fb4:	4a27      	ldr	r2, [pc, #156]	; (8002054 <KEYPAD_Init+0xd8>)
 8001fb6:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8001fba:	6013      	str	r3, [r2, #0]
    GPIOA->CRL |= (0x8UL << 4U);   // Entrada con pull-down
 8001fbc:	4b25      	ldr	r3, [pc, #148]	; (8002054 <KEYPAD_Init+0xd8>)
 8001fbe:	681b      	ldr	r3, [r3, #0]
 8001fc0:	4a24      	ldr	r2, [pc, #144]	; (8002054 <KEYPAD_Init+0xd8>)
 8001fc2:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001fc6:	6013      	str	r3, [r2, #0]

    // Configura PA4 (fila 4) como entrada con resistencia pull-down
    GPIOA->CRL &= ~(0xFUL << 16U);  // Limpia la configuración anterior de PA4
 8001fc8:	4b22      	ldr	r3, [pc, #136]	; (8002054 <KEYPAD_Init+0xd8>)
 8001fca:	681b      	ldr	r3, [r3, #0]
 8001fcc:	4a21      	ldr	r2, [pc, #132]	; (8002054 <KEYPAD_Init+0xd8>)
 8001fce:	f423 2370 	bic.w	r3, r3, #983040	; 0xf0000
 8001fd2:	6013      	str	r3, [r2, #0]
    GPIOA->CRL |= (0x8UL << 16U);   // Entrada con pull-down
 8001fd4:	4b1f      	ldr	r3, [pc, #124]	; (8002054 <KEYPAD_Init+0xd8>)
 8001fd6:	681b      	ldr	r3, [r3, #0]
 8001fd8:	4a1e      	ldr	r2, [pc, #120]	; (8002054 <KEYPAD_Init+0xd8>)
 8001fda:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 8001fde:	6013      	str	r3, [r2, #0]

    // Configura PA6 (columna 1) como salida push-pull
    GPIOA->CRL &= ~(0xFUL << 24U);  // Limpia la configuración anterior de PA6
 8001fe0:	4b1c      	ldr	r3, [pc, #112]	; (8002054 <KEYPAD_Init+0xd8>)
 8001fe2:	681b      	ldr	r3, [r3, #0]
 8001fe4:	4a1b      	ldr	r2, [pc, #108]	; (8002054 <KEYPAD_Init+0xd8>)
 8001fe6:	f023 6370 	bic.w	r3, r3, #251658240	; 0xf000000
 8001fea:	6013      	str	r3, [r2, #0]
    GPIOA->CRL |= (0x1UL << 24U);   // Salida push-pull
 8001fec:	4b19      	ldr	r3, [pc, #100]	; (8002054 <KEYPAD_Init+0xd8>)
 8001fee:	681b      	ldr	r3, [r3, #0]
 8001ff0:	4a18      	ldr	r2, [pc, #96]	; (8002054 <KEYPAD_Init+0xd8>)
 8001ff2:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8001ff6:	6013      	str	r3, [r2, #0]

    // Configura PA7 (columna 2) como salida push-pull
    GPIOA->CRL &= ~(0xFUL << 28U);  // Limpia la configuración anterior de PA7
 8001ff8:	4b16      	ldr	r3, [pc, #88]	; (8002054 <KEYPAD_Init+0xd8>)
 8001ffa:	681b      	ldr	r3, [r3, #0]
 8001ffc:	4a15      	ldr	r2, [pc, #84]	; (8002054 <KEYPAD_Init+0xd8>)
 8001ffe:	f023 4370 	bic.w	r3, r3, #4026531840	; 0xf0000000
 8002002:	6013      	str	r3, [r2, #0]
    GPIOA->CRL |= (0x1UL << 28U);   // Salida push-pull
 8002004:	4b13      	ldr	r3, [pc, #76]	; (8002054 <KEYPAD_Init+0xd8>)
 8002006:	681b      	ldr	r3, [r3, #0]
 8002008:	4a12      	ldr	r2, [pc, #72]	; (8002054 <KEYPAD_Init+0xd8>)
 800200a:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800200e:	6013      	str	r3, [r2, #0]

    // Configura PA10 (columna 3) como salida push-pull
    GPIOA->CRH &= ~(0xFUL << 8U);  // Limpia la configuración anterior de PA10
 8002010:	4b10      	ldr	r3, [pc, #64]	; (8002054 <KEYPAD_Init+0xd8>)
 8002012:	685b      	ldr	r3, [r3, #4]
 8002014:	4a0f      	ldr	r2, [pc, #60]	; (8002054 <KEYPAD_Init+0xd8>)
 8002016:	f423 6370 	bic.w	r3, r3, #3840	; 0xf00
 800201a:	6053      	str	r3, [r2, #4]
    GPIOA->CRH |= (0x1UL << 8U);   // Salida push-pull
 800201c:	4b0d      	ldr	r3, [pc, #52]	; (8002054 <KEYPAD_Init+0xd8>)
 800201e:	685b      	ldr	r3, [r3, #4]
 8002020:	4a0c      	ldr	r2, [pc, #48]	; (8002054 <KEYPAD_Init+0xd8>)
 8002022:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8002026:	6053      	str	r3, [r2, #4]

    // Inicializa todas las columnas (PA6, PA7 y PA10) en estado LOW (desactivadas)
    GPIOA->ODR &= ~(0x1UL << 6);
 8002028:	4b0a      	ldr	r3, [pc, #40]	; (8002054 <KEYPAD_Init+0xd8>)
 800202a:	68db      	ldr	r3, [r3, #12]
 800202c:	4a09      	ldr	r2, [pc, #36]	; (8002054 <KEYPAD_Init+0xd8>)
 800202e:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8002032:	60d3      	str	r3, [r2, #12]
    GPIOA->ODR &= ~(0x1UL << 7);
 8002034:	4b07      	ldr	r3, [pc, #28]	; (8002054 <KEYPAD_Init+0xd8>)
 8002036:	68db      	ldr	r3, [r3, #12]
 8002038:	4a06      	ldr	r2, [pc, #24]	; (8002054 <KEYPAD_Init+0xd8>)
 800203a:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800203e:	60d3      	str	r3, [r2, #12]
    GPIOA->ODR &= ~(0x1UL << 10);
 8002040:	4b04      	ldr	r3, [pc, #16]	; (8002054 <KEYPAD_Init+0xd8>)
 8002042:	68db      	ldr	r3, [r3, #12]
 8002044:	4a03      	ldr	r2, [pc, #12]	; (8002054 <KEYPAD_Init+0xd8>)
 8002046:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800204a:	60d3      	str	r3, [r2, #12]
}
 800204c:	bf00      	nop
 800204e:	46bd      	mov	sp, r7
 8002050:	bc80      	pop	{r7}
 8002052:	4770      	bx	lr
 8002054:	40010800 	.word	0x40010800

08002058 <KEYPAD_ReadKey>:

char KEYPAD_ReadKey(void)
{
 8002058:	b480      	push	{r7}
 800205a:	b08f      	sub	sp, #60	; 0x3c
 800205c:	af00      	add	r7, sp, #0
    char key = '\0';  // Inicializa sin carácter presionado
 800205e:	2300      	movs	r3, #0
 8002060:	f887 3037 	strb.w	r3, [r7, #55]	; 0x37

    // Activa PA6 (columna 1) en HIGH
    GPIOA->ODR |= (0x1UL << 6);
 8002064:	4b91      	ldr	r3, [pc, #580]	; (80022ac <KEYPAD_ReadKey+0x254>)
 8002066:	68db      	ldr	r3, [r3, #12]
 8002068:	4a90      	ldr	r2, [pc, #576]	; (80022ac <KEYPAD_ReadKey+0x254>)
 800206a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800206e:	60d3      	str	r3, [r2, #12]

    // Verifica cada fila (PA5, PA8, PA1, PA4)
    if (GPIOA->IDR & (0x1UL << 5))
 8002070:	4b8e      	ldr	r3, [pc, #568]	; (80022ac <KEYPAD_ReadKey+0x254>)
 8002072:	689b      	ldr	r3, [r3, #8]
 8002074:	f003 0320 	and.w	r3, r3, #32
 8002078:	2b00      	cmp	r3, #0
 800207a:	d00e      	beq.n	800209a <KEYPAD_ReadKey+0x42>
    {
        for (volatile int i = 0; i < 10000; i++);
 800207c:	2300      	movs	r3, #0
 800207e:	633b      	str	r3, [r7, #48]	; 0x30
 8002080:	e002      	b.n	8002088 <KEYPAD_ReadKey+0x30>
 8002082:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002084:	3301      	adds	r3, #1
 8002086:	633b      	str	r3, [r7, #48]	; 0x30
 8002088:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800208a:	f242 720f 	movw	r2, #9999	; 0x270f
 800208e:	4293      	cmp	r3, r2
 8002090:	ddf7      	ble.n	8002082 <KEYPAD_ReadKey+0x2a>
        key = KEYPAD_MAP[0][0];  // Retorna '1'
 8002092:	2331      	movs	r3, #49	; 0x31
 8002094:	f887 3037 	strb.w	r3, [r7, #55]	; 0x37
 8002098:	e03d      	b.n	8002116 <KEYPAD_ReadKey+0xbe>
    }
    else if (GPIOA->IDR & (0x1UL << 8))
 800209a:	4b84      	ldr	r3, [pc, #528]	; (80022ac <KEYPAD_ReadKey+0x254>)
 800209c:	689b      	ldr	r3, [r3, #8]
 800209e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80020a2:	2b00      	cmp	r3, #0
 80020a4:	d00e      	beq.n	80020c4 <KEYPAD_ReadKey+0x6c>
    {
        for (volatile int i = 0; i < 10000; i++);
 80020a6:	2300      	movs	r3, #0
 80020a8:	62fb      	str	r3, [r7, #44]	; 0x2c
 80020aa:	e002      	b.n	80020b2 <KEYPAD_ReadKey+0x5a>
 80020ac:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80020ae:	3301      	adds	r3, #1
 80020b0:	62fb      	str	r3, [r7, #44]	; 0x2c
 80020b2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80020b4:	f242 720f 	movw	r2, #9999	; 0x270f
 80020b8:	4293      	cmp	r3, r2
 80020ba:	ddf7      	ble.n	80020ac <KEYPAD_ReadKey+0x54>
        key = KEYPAD_MAP[1][0];  // Retorna '4'
 80020bc:	2334      	movs	r3, #52	; 0x34
 80020be:	f887 3037 	strb.w	r3, [r7, #55]	; 0x37
 80020c2:	e028      	b.n	8002116 <KEYPAD_ReadKey+0xbe>
    }
    else if (GPIOA->IDR & (0x1UL << 1))
 80020c4:	4b79      	ldr	r3, [pc, #484]	; (80022ac <KEYPAD_ReadKey+0x254>)
 80020c6:	689b      	ldr	r3, [r3, #8]
 80020c8:	f003 0302 	and.w	r3, r3, #2
 80020cc:	2b00      	cmp	r3, #0
 80020ce:	d00e      	beq.n	80020ee <KEYPAD_ReadKey+0x96>
    {
        for (volatile int i = 0; i < 10000; i++);
 80020d0:	2300      	movs	r3, #0
 80020d2:	62bb      	str	r3, [r7, #40]	; 0x28
 80020d4:	e002      	b.n	80020dc <KEYPAD_ReadKey+0x84>
 80020d6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80020d8:	3301      	adds	r3, #1
 80020da:	62bb      	str	r3, [r7, #40]	; 0x28
 80020dc:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80020de:	f242 720f 	movw	r2, #9999	; 0x270f
 80020e2:	4293      	cmp	r3, r2
 80020e4:	ddf7      	ble.n	80020d6 <KEYPAD_ReadKey+0x7e>
        key = KEYPAD_MAP[2][0];  // Retorna '7'
 80020e6:	2337      	movs	r3, #55	; 0x37
 80020e8:	f887 3037 	strb.w	r3, [r7, #55]	; 0x37
 80020ec:	e013      	b.n	8002116 <KEYPAD_ReadKey+0xbe>
    }
    else if (GPIOA->IDR & (0x1UL << 4))
 80020ee:	4b6f      	ldr	r3, [pc, #444]	; (80022ac <KEYPAD_ReadKey+0x254>)
 80020f0:	689b      	ldr	r3, [r3, #8]
 80020f2:	f003 0310 	and.w	r3, r3, #16
 80020f6:	2b00      	cmp	r3, #0
 80020f8:	d00d      	beq.n	8002116 <KEYPAD_ReadKey+0xbe>
    {
        for (volatile int i = 0; i < 10000; i++);
 80020fa:	2300      	movs	r3, #0
 80020fc:	627b      	str	r3, [r7, #36]	; 0x24
 80020fe:	e002      	b.n	8002106 <KEYPAD_ReadKey+0xae>
 8002100:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002102:	3301      	adds	r3, #1
 8002104:	627b      	str	r3, [r7, #36]	; 0x24
 8002106:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002108:	f242 720f 	movw	r2, #9999	; 0x270f
 800210c:	4293      	cmp	r3, r2
 800210e:	ddf7      	ble.n	8002100 <KEYPAD_ReadKey+0xa8>
        key = KEYPAD_MAP[3][0];  // Retorna 'A'
 8002110:	232a      	movs	r3, #42	; 0x2a
 8002112:	f887 3037 	strb.w	r3, [r7, #55]	; 0x37
    }

    // Desactiva PA6 (columna 1) volviéndola a LOW
    GPIOA->ODR &= ~(0x1UL << 6);
 8002116:	4b65      	ldr	r3, [pc, #404]	; (80022ac <KEYPAD_ReadKey+0x254>)
 8002118:	68db      	ldr	r3, [r3, #12]
 800211a:	4a64      	ldr	r2, [pc, #400]	; (80022ac <KEYPAD_ReadKey+0x254>)
 800211c:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8002120:	60d3      	str	r3, [r2, #12]

    // Activa PA7 (columna 2) en HIGH
    GPIOA->ODR |= (0x1UL << 7);
 8002122:	4b62      	ldr	r3, [pc, #392]	; (80022ac <KEYPAD_ReadKey+0x254>)
 8002124:	68db      	ldr	r3, [r3, #12]
 8002126:	4a61      	ldr	r2, [pc, #388]	; (80022ac <KEYPAD_ReadKey+0x254>)
 8002128:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800212c:	60d3      	str	r3, [r2, #12]

    // Verifica cada fila (PA5, PA8, PA1, PA4)
    if (GPIOA->IDR & (0x1UL << 5))
 800212e:	4b5f      	ldr	r3, [pc, #380]	; (80022ac <KEYPAD_ReadKey+0x254>)
 8002130:	689b      	ldr	r3, [r3, #8]
 8002132:	f003 0320 	and.w	r3, r3, #32
 8002136:	2b00      	cmp	r3, #0
 8002138:	d00e      	beq.n	8002158 <KEYPAD_ReadKey+0x100>
    {
        for (volatile int i = 0; i < 10000; i++);
 800213a:	2300      	movs	r3, #0
 800213c:	623b      	str	r3, [r7, #32]
 800213e:	e002      	b.n	8002146 <KEYPAD_ReadKey+0xee>
 8002140:	6a3b      	ldr	r3, [r7, #32]
 8002142:	3301      	adds	r3, #1
 8002144:	623b      	str	r3, [r7, #32]
 8002146:	6a3b      	ldr	r3, [r7, #32]
 8002148:	f242 720f 	movw	r2, #9999	; 0x270f
 800214c:	4293      	cmp	r3, r2
 800214e:	ddf7      	ble.n	8002140 <KEYPAD_ReadKey+0xe8>
        key = KEYPAD_MAP[0][1];  // Retorna '2'
 8002150:	2332      	movs	r3, #50	; 0x32
 8002152:	f887 3037 	strb.w	r3, [r7, #55]	; 0x37
 8002156:	e03d      	b.n	80021d4 <KEYPAD_ReadKey+0x17c>
    }
    else if (GPIOA->IDR & (0x1UL << 8))
 8002158:	4b54      	ldr	r3, [pc, #336]	; (80022ac <KEYPAD_ReadKey+0x254>)
 800215a:	689b      	ldr	r3, [r3, #8]
 800215c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8002160:	2b00      	cmp	r3, #0
 8002162:	d00e      	beq.n	8002182 <KEYPAD_ReadKey+0x12a>
    {
        for (volatile int i = 0; i < 10000; i++);
 8002164:	2300      	movs	r3, #0
 8002166:	61fb      	str	r3, [r7, #28]
 8002168:	e002      	b.n	8002170 <KEYPAD_ReadKey+0x118>
 800216a:	69fb      	ldr	r3, [r7, #28]
 800216c:	3301      	adds	r3, #1
 800216e:	61fb      	str	r3, [r7, #28]
 8002170:	69fb      	ldr	r3, [r7, #28]
 8002172:	f242 720f 	movw	r2, #9999	; 0x270f
 8002176:	4293      	cmp	r3, r2
 8002178:	ddf7      	ble.n	800216a <KEYPAD_ReadKey+0x112>
        key = KEYPAD_MAP[1][1];  // Retorna '5'
 800217a:	2335      	movs	r3, #53	; 0x35
 800217c:	f887 3037 	strb.w	r3, [r7, #55]	; 0x37
 8002180:	e028      	b.n	80021d4 <KEYPAD_ReadKey+0x17c>
    }
    else if (GPIOA->IDR & (0x1UL << 1))
 8002182:	4b4a      	ldr	r3, [pc, #296]	; (80022ac <KEYPAD_ReadKey+0x254>)
 8002184:	689b      	ldr	r3, [r3, #8]
 8002186:	f003 0302 	and.w	r3, r3, #2
 800218a:	2b00      	cmp	r3, #0
 800218c:	d00e      	beq.n	80021ac <KEYPAD_ReadKey+0x154>
    {
        for (volatile int i = 0; i < 10000; i++);
 800218e:	2300      	movs	r3, #0
 8002190:	61bb      	str	r3, [r7, #24]
 8002192:	e002      	b.n	800219a <KEYPAD_ReadKey+0x142>
 8002194:	69bb      	ldr	r3, [r7, #24]
 8002196:	3301      	adds	r3, #1
 8002198:	61bb      	str	r3, [r7, #24]
 800219a:	69bb      	ldr	r3, [r7, #24]
 800219c:	f242 720f 	movw	r2, #9999	; 0x270f
 80021a0:	4293      	cmp	r3, r2
 80021a2:	ddf7      	ble.n	8002194 <KEYPAD_ReadKey+0x13c>
        key = KEYPAD_MAP[2][1];  // Retorna '8'
 80021a4:	2338      	movs	r3, #56	; 0x38
 80021a6:	f887 3037 	strb.w	r3, [r7, #55]	; 0x37
 80021aa:	e013      	b.n	80021d4 <KEYPAD_ReadKey+0x17c>
    }
    else if (GPIOA->IDR & (0x1UL << 4))
 80021ac:	4b3f      	ldr	r3, [pc, #252]	; (80022ac <KEYPAD_ReadKey+0x254>)
 80021ae:	689b      	ldr	r3, [r3, #8]
 80021b0:	f003 0310 	and.w	r3, r3, #16
 80021b4:	2b00      	cmp	r3, #0
 80021b6:	d00d      	beq.n	80021d4 <KEYPAD_ReadKey+0x17c>
    {
        for (volatile int i = 0; i < 10000; i++);
 80021b8:	2300      	movs	r3, #0
 80021ba:	617b      	str	r3, [r7, #20]
 80021bc:	e002      	b.n	80021c4 <KEYPAD_ReadKey+0x16c>
 80021be:	697b      	ldr	r3, [r7, #20]
 80021c0:	3301      	adds	r3, #1
 80021c2:	617b      	str	r3, [r7, #20]
 80021c4:	697b      	ldr	r3, [r7, #20]
 80021c6:	f242 720f 	movw	r2, #9999	; 0x270f
 80021ca:	4293      	cmp	r3, r2
 80021cc:	ddf7      	ble.n	80021be <KEYPAD_ReadKey+0x166>
        key = KEYPAD_MAP[3][1];  // Retorna 'B'
 80021ce:	2330      	movs	r3, #48	; 0x30
 80021d0:	f887 3037 	strb.w	r3, [r7, #55]	; 0x37
    }

    // Desactiva PA7 (columna 2) volviéndola a LOW
    GPIOA->ODR &= ~(0x1UL << 7);
 80021d4:	4b35      	ldr	r3, [pc, #212]	; (80022ac <KEYPAD_ReadKey+0x254>)
 80021d6:	68db      	ldr	r3, [r3, #12]
 80021d8:	4a34      	ldr	r2, [pc, #208]	; (80022ac <KEYPAD_ReadKey+0x254>)
 80021da:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80021de:	60d3      	str	r3, [r2, #12]

    // Activa PA10 (columna 3) en HIGH
    GPIOA->ODR |= (0x1UL << 10);
 80021e0:	4b32      	ldr	r3, [pc, #200]	; (80022ac <KEYPAD_ReadKey+0x254>)
 80021e2:	68db      	ldr	r3, [r3, #12]
 80021e4:	4a31      	ldr	r2, [pc, #196]	; (80022ac <KEYPAD_ReadKey+0x254>)
 80021e6:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80021ea:	60d3      	str	r3, [r2, #12]

    // Verifica cada fila (PA5, PA8, PA1, PA4)
    if (GPIOA->IDR & (0x1UL << 5))
 80021ec:	4b2f      	ldr	r3, [pc, #188]	; (80022ac <KEYPAD_ReadKey+0x254>)
 80021ee:	689b      	ldr	r3, [r3, #8]
 80021f0:	f003 0320 	and.w	r3, r3, #32
 80021f4:	2b00      	cmp	r3, #0
 80021f6:	d00e      	beq.n	8002216 <KEYPAD_ReadKey+0x1be>
    {
        for (volatile int i = 0; i < 10000; i++);
 80021f8:	2300      	movs	r3, #0
 80021fa:	613b      	str	r3, [r7, #16]
 80021fc:	e002      	b.n	8002204 <KEYPAD_ReadKey+0x1ac>
 80021fe:	693b      	ldr	r3, [r7, #16]
 8002200:	3301      	adds	r3, #1
 8002202:	613b      	str	r3, [r7, #16]
 8002204:	693b      	ldr	r3, [r7, #16]
 8002206:	f242 720f 	movw	r2, #9999	; 0x270f
 800220a:	4293      	cmp	r3, r2
 800220c:	ddf7      	ble.n	80021fe <KEYPAD_ReadKey+0x1a6>
        key = KEYPAD_MAP[0][2];  // Retorna '3'
 800220e:	2333      	movs	r3, #51	; 0x33
 8002210:	f887 3037 	strb.w	r3, [r7, #55]	; 0x37
 8002214:	e03d      	b.n	8002292 <KEYPAD_ReadKey+0x23a>
    }
    else if (GPIOA->IDR & (0x1UL << 8))
 8002216:	4b25      	ldr	r3, [pc, #148]	; (80022ac <KEYPAD_ReadKey+0x254>)
 8002218:	689b      	ldr	r3, [r3, #8]
 800221a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800221e:	2b00      	cmp	r3, #0
 8002220:	d00e      	beq.n	8002240 <KEYPAD_ReadKey+0x1e8>
    {
        for (volatile int i = 0; i < 10000; i++);
 8002222:	2300      	movs	r3, #0
 8002224:	60fb      	str	r3, [r7, #12]
 8002226:	e002      	b.n	800222e <KEYPAD_ReadKey+0x1d6>
 8002228:	68fb      	ldr	r3, [r7, #12]
 800222a:	3301      	adds	r3, #1
 800222c:	60fb      	str	r3, [r7, #12]
 800222e:	68fb      	ldr	r3, [r7, #12]
 8002230:	f242 720f 	movw	r2, #9999	; 0x270f
 8002234:	4293      	cmp	r3, r2
 8002236:	ddf7      	ble.n	8002228 <KEYPAD_ReadKey+0x1d0>
        key = KEYPAD_MAP[1][2];  // Retorna '6'
 8002238:	2336      	movs	r3, #54	; 0x36
 800223a:	f887 3037 	strb.w	r3, [r7, #55]	; 0x37
 800223e:	e028      	b.n	8002292 <KEYPAD_ReadKey+0x23a>
    }
    else if (GPIOA->IDR & (0x1UL << 1))
 8002240:	4b1a      	ldr	r3, [pc, #104]	; (80022ac <KEYPAD_ReadKey+0x254>)
 8002242:	689b      	ldr	r3, [r3, #8]
 8002244:	f003 0302 	and.w	r3, r3, #2
 8002248:	2b00      	cmp	r3, #0
 800224a:	d00e      	beq.n	800226a <KEYPAD_ReadKey+0x212>
    {
        for (volatile int i = 0; i < 10000; i++);
 800224c:	2300      	movs	r3, #0
 800224e:	60bb      	str	r3, [r7, #8]
 8002250:	e002      	b.n	8002258 <KEYPAD_ReadKey+0x200>
 8002252:	68bb      	ldr	r3, [r7, #8]
 8002254:	3301      	adds	r3, #1
 8002256:	60bb      	str	r3, [r7, #8]
 8002258:	68bb      	ldr	r3, [r7, #8]
 800225a:	f242 720f 	movw	r2, #9999	; 0x270f
 800225e:	4293      	cmp	r3, r2
 8002260:	ddf7      	ble.n	8002252 <KEYPAD_ReadKey+0x1fa>
        key = KEYPAD_MAP[2][2];  // Retorna '9'
 8002262:	2339      	movs	r3, #57	; 0x39
 8002264:	f887 3037 	strb.w	r3, [r7, #55]	; 0x37
 8002268:	e013      	b.n	8002292 <KEYPAD_ReadKey+0x23a>
    }
    else if (GPIOA->IDR & (0x1UL << 4))
 800226a:	4b10      	ldr	r3, [pc, #64]	; (80022ac <KEYPAD_ReadKey+0x254>)
 800226c:	689b      	ldr	r3, [r3, #8]
 800226e:	f003 0310 	and.w	r3, r3, #16
 8002272:	2b00      	cmp	r3, #0
 8002274:	d00d      	beq.n	8002292 <KEYPAD_ReadKey+0x23a>
    {
        for (volatile int i = 0; i < 10000; i++);
 8002276:	2300      	movs	r3, #0
 8002278:	607b      	str	r3, [r7, #4]
 800227a:	e002      	b.n	8002282 <KEYPAD_ReadKey+0x22a>
 800227c:	687b      	ldr	r3, [r7, #4]
 800227e:	3301      	adds	r3, #1
 8002280:	607b      	str	r3, [r7, #4]
 8002282:	687b      	ldr	r3, [r7, #4]
 8002284:	f242 720f 	movw	r2, #9999	; 0x270f
 8002288:	4293      	cmp	r3, r2
 800228a:	ddf7      	ble.n	800227c <KEYPAD_ReadKey+0x224>
        key = KEYPAD_MAP[3][2];  // Retorna 'C'
 800228c:	2323      	movs	r3, #35	; 0x23
 800228e:	f887 3037 	strb.w	r3, [r7, #55]	; 0x37
    }

    // Desactiva PA10 (columna 3) volviéndola a LOW
    GPIOA->ODR &= ~(0x1UL << 10);
 8002292:	4b06      	ldr	r3, [pc, #24]	; (80022ac <KEYPAD_ReadKey+0x254>)
 8002294:	68db      	ldr	r3, [r3, #12]
 8002296:	4a05      	ldr	r2, [pc, #20]	; (80022ac <KEYPAD_ReadKey+0x254>)
 8002298:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800229c:	60d3      	str	r3, [r2, #12]

    return key;
 800229e:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
}
 80022a2:	4618      	mov	r0, r3
 80022a4:	373c      	adds	r7, #60	; 0x3c
 80022a6:	46bd      	mov	sp, r7
 80022a8:	bc80      	pop	{r7}
 80022aa:	4770      	bx	lr
 80022ac:	40010800 	.word	0x40010800

080022b0 <LCD_Init>:
		{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
		{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }
};

//Funcion que inicializa el LCD a 4 bits
void LCD_Init(void){
 80022b0:	b580      	push	{r7, lr}
 80022b2:	b082      	sub	sp, #8
 80022b4:	af00      	add	r7, sp, #0
	int8_t const *p;
/**
  * Configuracion de todos los pines hacia el LCD general purpose output push-pull, 10 MHz speed
  */
	RCC->APB2ENR	|=	 ( 0x1UL <<  4U );//			IO port C clock enable
 80022b6:	4b62      	ldr	r3, [pc, #392]	; (8002440 <LCD_Init+0x190>)
 80022b8:	699b      	ldr	r3, [r3, #24]
 80022ba:	4a61      	ldr	r2, [pc, #388]	; (8002440 <LCD_Init+0x190>)
 80022bc:	f043 0310 	orr.w	r3, r3, #16
 80022c0:	6193      	str	r3, [r2, #24]
	GPIOC->CRL	&=	~( 0x3UL << 30U ) & ~( 0x2UL << 28U )
 80022c2:	4b60      	ldr	r3, [pc, #384]	; (8002444 <LCD_Init+0x194>)
 80022c4:	681b      	ldr	r3, [r3, #0]
 80022c6:	4a5f      	ldr	r2, [pc, #380]	; (8002444 <LCD_Init+0x194>)
 80022c8:	f023 436e 	bic.w	r3, r3, #3992977408	; 0xee000000
 80022cc:	6013      	str	r3, [r2, #0]
			& 	~( 0x3UL << 26U ) & ~( 0x2UL << 24U );
	GPIOC->CRL 	|= 	 ( 0x1UL << 28U )
 80022ce:	4b5d      	ldr	r3, [pc, #372]	; (8002444 <LCD_Init+0x194>)
 80022d0:	681b      	ldr	r3, [r3, #0]
 80022d2:	4a5c      	ldr	r2, [pc, #368]	; (8002444 <LCD_Init+0x194>)
 80022d4:	f043 5388 	orr.w	r3, r3, #285212672	; 0x11000000
 80022d8:	6013      	str	r3, [r2, #0]
			|  	 ( 0x1UL << 24U );
	GPIOC->CRH	&=	~( 0x3UL << 18U ) & ~( 0x2UL << 16U )
 80022da:	4b5a      	ldr	r3, [pc, #360]	; (8002444 <LCD_Init+0x194>)
 80022dc:	685a      	ldr	r2, [r3, #4]
 80022de:	4959      	ldr	r1, [pc, #356]	; (8002444 <LCD_Init+0x194>)
 80022e0:	4b59      	ldr	r3, [pc, #356]	; (8002448 <LCD_Init+0x198>)
 80022e2:	4013      	ands	r3, r2
 80022e4:	604b      	str	r3, [r1, #4]
			& 	~( 0x3UL << 14U ) & ~( 0x2UL << 12U )
			&	~( 0x3UL << 10U ) & ~( 0x2UL <<  8U )
			& 	~( 0x3UL <<  6U ) & ~( 0x2UL <<  4U )
			& 	~( 0x3UL <<  2U ) & ~( 0x2UL <<  0U );
	GPIOC->CRH	|= 	 ( 0x1UL << 16U )
 80022e6:	4b57      	ldr	r3, [pc, #348]	; (8002444 <LCD_Init+0x194>)
 80022e8:	685a      	ldr	r2, [r3, #4]
 80022ea:	4956      	ldr	r1, [pc, #344]	; (8002444 <LCD_Init+0x194>)
 80022ec:	4b57      	ldr	r3, [pc, #348]	; (800244c <LCD_Init+0x19c>)
 80022ee:	4313      	orrs	r3, r2
 80022f0:	604b      	str	r3, [r1, #4]
/**
  * Inicialización del LCD
  * https://web.alfredstate.edu/faculty/weimandn/lcd/lcd_initialization/lcd_initialization_index.html
  * Power ON
  */
	GPIOC->BSRR	 =	 LCD_RS_PIN_LOW;
 80022f2:	4b54      	ldr	r3, [pc, #336]	; (8002444 <LCD_Init+0x194>)
 80022f4:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
 80022f8:	611a      	str	r2, [r3, #16]
	GPIOC->BSRR	 =	 LCD_RW_PIN_LOW;
 80022fa:	4b52      	ldr	r3, [pc, #328]	; (8002444 <LCD_Init+0x194>)
 80022fc:	f44f 0200 	mov.w	r2, #8388608	; 0x800000
 8002300:	611a      	str	r2, [r3, #16]
	GPIOC->BSRR	 =	 LCD_EN_PIN_LOW;
 8002302:	4b50      	ldr	r3, [pc, #320]	; (8002444 <LCD_Init+0x194>)
 8002304:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8002308:	611a      	str	r2, [r3, #16]
	GPIOC->BSRR	 =	 LCD_D4_PIN_LOW;
 800230a:	4b4e      	ldr	r3, [pc, #312]	; (8002444 <LCD_Init+0x194>)
 800230c:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
 8002310:	611a      	str	r2, [r3, #16]
	GPIOC->BSRR	 =	 LCD_D5_PIN_LOW;
 8002312:	4b4c      	ldr	r3, [pc, #304]	; (8002444 <LCD_Init+0x194>)
 8002314:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8002318:	611a      	str	r2, [r3, #16]
	GPIOC->BSRR	 =	 LCD_D6_PIN_LOW;
 800231a:	4b4a      	ldr	r3, [pc, #296]	; (8002444 <LCD_Init+0x194>)
 800231c:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8002320:	611a      	str	r2, [r3, #16]
	GPIOC->BSRR	 =	 LCD_D7_PIN_LOW;
 8002322:	4b48      	ldr	r3, [pc, #288]	; (8002444 <LCD_Init+0x194>)
 8002324:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8002328:	611a      	str	r2, [r3, #16]

	tim2_delay(TIM2_TIME_50MS);//  50ms
 800232a:	4849      	ldr	r0, [pc, #292]	; (8002450 <LCD_Init+0x1a0>)
 800232c:	f000 fefe 	bl	800312c <tim2_delay>

	/* Special case of 'Function Set' 				*/
	GPIOC->BSRR	 =	 LCD_D4_PIN_HIGH;
 8002330:	4b44      	ldr	r3, [pc, #272]	; (8002444 <LCD_Init+0x194>)
 8002332:	f44f 7200 	mov.w	r2, #512	; 0x200
 8002336:	611a      	str	r2, [r3, #16]
	GPIOC->BSRR	 =	 LCD_D5_PIN_HIGH;
 8002338:	4b42      	ldr	r3, [pc, #264]	; (8002444 <LCD_Init+0x194>)
 800233a:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800233e:	611a      	str	r2, [r3, #16]
	GPIOC->BSRR	 =	 LCD_D6_PIN_LOW;
 8002340:	4b40      	ldr	r3, [pc, #256]	; (8002444 <LCD_Init+0x194>)
 8002342:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8002346:	611a      	str	r2, [r3, #16]
	GPIOC->BSRR	 =	 LCD_D7_PIN_LOW;
 8002348:	4b3e      	ldr	r3, [pc, #248]	; (8002444 <LCD_Init+0x194>)
 800234a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800234e:	611a      	str	r2, [r3, #16]
	LCD_Pulse_EN( );
 8002350:	f000 fa24 	bl	800279c <LCD_Pulse_EN>
	tim2_delay(TIM2_TIME_5MS);//	5ms
 8002354:	483f      	ldr	r0, [pc, #252]	; (8002454 <LCD_Init+0x1a4>)
 8002356:	f000 fee9 	bl	800312c <tim2_delay>
	/* Special case of 'Function Set' 				*/
	GPIOC->BSRR	 =	 LCD_D4_PIN_HIGH;
 800235a:	4b3a      	ldr	r3, [pc, #232]	; (8002444 <LCD_Init+0x194>)
 800235c:	f44f 7200 	mov.w	r2, #512	; 0x200
 8002360:	611a      	str	r2, [r3, #16]
	GPIOC->BSRR	 =	 LCD_D5_PIN_HIGH;
 8002362:	4b38      	ldr	r3, [pc, #224]	; (8002444 <LCD_Init+0x194>)
 8002364:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8002368:	611a      	str	r2, [r3, #16]
	GPIOC->BSRR	 =	 LCD_D6_PIN_LOW;
 800236a:	4b36      	ldr	r3, [pc, #216]	; (8002444 <LCD_Init+0x194>)
 800236c:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8002370:	611a      	str	r2, [r3, #16]
	GPIOC->BSRR	 =	 LCD_D7_PIN_LOW;
 8002372:	4b34      	ldr	r3, [pc, #208]	; (8002444 <LCD_Init+0x194>)
 8002374:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8002378:	611a      	str	r2, [r3, #16]
	LCD_Pulse_EN( );
 800237a:	f000 fa0f 	bl	800279c <LCD_Pulse_EN>
	tim2_delay(TIM2_TIME_100uS);//	100us
 800237e:	4836      	ldr	r0, [pc, #216]	; (8002458 <LCD_Init+0x1a8>)
 8002380:	f000 fed4 	bl	800312c <tim2_delay>
	/* Special case of 'Function Set' 				*/
	GPIOC->BSRR	 =	 LCD_D4_PIN_HIGH;
 8002384:	4b2f      	ldr	r3, [pc, #188]	; (8002444 <LCD_Init+0x194>)
 8002386:	f44f 7200 	mov.w	r2, #512	; 0x200
 800238a:	611a      	str	r2, [r3, #16]
	GPIOC->BSRR	 =	 LCD_D5_PIN_HIGH;
 800238c:	4b2d      	ldr	r3, [pc, #180]	; (8002444 <LCD_Init+0x194>)
 800238e:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8002392:	611a      	str	r2, [r3, #16]
	GPIOC->BSRR	 =	 LCD_D6_PIN_LOW;
 8002394:	4b2b      	ldr	r3, [pc, #172]	; (8002444 <LCD_Init+0x194>)
 8002396:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 800239a:	611a      	str	r2, [r3, #16]
	GPIOC->BSRR	 =	 LCD_D7_PIN_LOW;
 800239c:	4b29      	ldr	r3, [pc, #164]	; (8002444 <LCD_Init+0x194>)
 800239e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80023a2:	611a      	str	r2, [r3, #16]
	LCD_Pulse_EN( );
 80023a4:	f000 f9fa 	bl	800279c <LCD_Pulse_EN>
	while( LCD_Busy( ) );//						checking the busy flag
 80023a8:	bf00      	nop
 80023aa:	f000 f9a3 	bl	80026f4 <LCD_Busy>
 80023ae:	4603      	mov	r3, r0
 80023b0:	2b00      	cmp	r3, #0
 80023b2:	d1fa      	bne.n	80023aa <LCD_Init+0xfa>
	/* Initial 'Function Set' to change 4-bit mode 			*/
	GPIOC->BSRR	 =	 LCD_D4_PIN_LOW;
 80023b4:	4b23      	ldr	r3, [pc, #140]	; (8002444 <LCD_Init+0x194>)
 80023b6:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
 80023ba:	611a      	str	r2, [r3, #16]
	GPIOC->BSRR	 =	 LCD_D5_PIN_HIGH;
 80023bc:	4b21      	ldr	r3, [pc, #132]	; (8002444 <LCD_Init+0x194>)
 80023be:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80023c2:	611a      	str	r2, [r3, #16]
	GPIOC->BSRR	 =	 LCD_D6_PIN_LOW;
 80023c4:	4b1f      	ldr	r3, [pc, #124]	; (8002444 <LCD_Init+0x194>)
 80023c6:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 80023ca:	611a      	str	r2, [r3, #16]
	GPIOC->BSRR	 =	 LCD_D7_PIN_LOW;
 80023cc:	4b1d      	ldr	r3, [pc, #116]	; (8002444 <LCD_Init+0x194>)
 80023ce:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80023d2:	611a      	str	r2, [r3, #16]
	LCD_Pulse_EN( );
 80023d4:	f000 f9e2 	bl	800279c <LCD_Pulse_EN>
	while( LCD_Busy( ) );//						checking the busy flag
 80023d8:	bf00      	nop
 80023da:	f000 f98b 	bl	80026f4 <LCD_Busy>
 80023de:	4603      	mov	r3, r0
 80023e0:	2b00      	cmp	r3, #0
 80023e2:	d1fa      	bne.n	80023da <LCD_Init+0x12a>
	/* 'Function Set' (I=1, N and F as required)			*/
	LCD_Write_Cmd( 0x28U );//					2-line display, 5x7 dot
 80023e4:	2028      	movs	r0, #40	; 0x28
 80023e6:	f000 f8a1 	bl	800252c <LCD_Write_Cmd>
	/* 'Display ON/OFF Control' (D=0, C=0, B=0)			*/
	LCD_Write_Cmd( 0x08U );//					display, cursor and blinking off
 80023ea:	2008      	movs	r0, #8
 80023ec:	f000 f89e 	bl	800252c <LCD_Write_Cmd>
	/* 'Clear Display'						*/
	LCD_Write_Cmd( 0x01U );//
 80023f0:	2001      	movs	r0, #1
 80023f2:	f000 f89b 	bl	800252c <LCD_Write_Cmd>
	/* 'Entry Mode Set' (I/D and S as required)			*/
	LCD_Write_Cmd( 0x06U );//					cursor increment by 1, shift off
 80023f6:	2006      	movs	r0, #6
 80023f8:	f000 f898 	bl	800252c <LCD_Write_Cmd>
	/* Initialization Ends						*/
	LCD_Write_Cmd( 0x0FU );//					display, cursor and blinking on
 80023fc:	200f      	movs	r0, #15
 80023fe:	f000 f895 	bl	800252c <LCD_Write_Cmd>

	//Cargamos el caracter definido por el usuario en la CGRAM
	LCD_Write_Cmd( 0x40 );//					establece la direccion CGRAM desde 0
 8002402:	2040      	movs	r0, #64	; 0x40
 8002404:	f000 f892 	bl	800252c <LCD_Write_Cmd>
	p = &UserFont[0][0];
 8002408:	4b14      	ldr	r3, [pc, #80]	; (800245c <LCD_Init+0x1ac>)
 800240a:	607b      	str	r3, [r7, #4]

	for( int i = 0; i < sizeof( UserFont ); i++, p++ )
 800240c:	2300      	movs	r3, #0
 800240e:	603b      	str	r3, [r7, #0]
 8002410:	e00c      	b.n	800242c <LCD_Init+0x17c>
		LCD_Put_Char( *p );
 8002412:	687b      	ldr	r3, [r7, #4]
 8002414:	f993 3000 	ldrsb.w	r3, [r3]
 8002418:	b2db      	uxtb	r3, r3
 800241a:	4618      	mov	r0, r3
 800241c:	f000 f89a 	bl	8002554 <LCD_Put_Char>
	for( int i = 0; i < sizeof( UserFont ); i++, p++ )
 8002420:	683b      	ldr	r3, [r7, #0]
 8002422:	3301      	adds	r3, #1
 8002424:	603b      	str	r3, [r7, #0]
 8002426:	687b      	ldr	r3, [r7, #4]
 8002428:	3301      	adds	r3, #1
 800242a:	607b      	str	r3, [r7, #4]
 800242c:	683b      	ldr	r3, [r7, #0]
 800242e:	2b3f      	cmp	r3, #63	; 0x3f
 8002430:	d9ef      	bls.n	8002412 <LCD_Init+0x162>

	/*	Set DDRAM address in address			*/
	LCD_Write_Cmd( 0x80 );//
 8002432:	2080      	movs	r0, #128	; 0x80
 8002434:	f000 f87a 	bl	800252c <LCD_Write_Cmd>
}
 8002438:	bf00      	nop
 800243a:	3708      	adds	r7, #8
 800243c:	46bd      	mov	sp, r7
 800243e:	bd80      	pop	{r7, pc}
 8002440:	40021000 	.word	0x40021000
 8002444:	40011000 	.word	0x40011000
 8002448:	fff11111 	.word	0xfff11111
 800244c:	00011111 	.word	0x00011111
 8002450:	3d4ccccd 	.word	0x3d4ccccd
 8002454:	3ba3d70a 	.word	0x3ba3d70a
 8002458:	38d1b717 	.word	0x38d1b717
 800245c:	080093e0 	.word	0x080093e0

08002460 <LCD_Out_Data4>:

//Funcion que genera un strobe en el LCD
void LCD_Out_Data4(uint8_t val){
 8002460:	b480      	push	{r7}
 8002462:	b083      	sub	sp, #12
 8002464:	af00      	add	r7, sp, #0
 8002466:	4603      	mov	r3, r0
 8002468:	71fb      	strb	r3, [r7, #7]
	if( ( val & 0x01U ) == 0x01U )//				Bit[0]
 800246a:	79fb      	ldrb	r3, [r7, #7]
 800246c:	f003 0301 	and.w	r3, r3, #1
 8002470:	2b00      	cmp	r3, #0
 8002472:	d004      	beq.n	800247e <LCD_Out_Data4+0x1e>
		GPIOC->BSRR	=	LCD_D4_PIN_HIGH;
 8002474:	4b1b      	ldr	r3, [pc, #108]	; (80024e4 <LCD_Out_Data4+0x84>)
 8002476:	f44f 7200 	mov.w	r2, #512	; 0x200
 800247a:	611a      	str	r2, [r3, #16]
 800247c:	e003      	b.n	8002486 <LCD_Out_Data4+0x26>
	else
		GPIOC->BSRR	=	LCD_D4_PIN_LOW;
 800247e:	4b19      	ldr	r3, [pc, #100]	; (80024e4 <LCD_Out_Data4+0x84>)
 8002480:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
 8002484:	611a      	str	r2, [r3, #16]

	if( ( val & 0x02U ) == 0x02U )//				Bit[1]
 8002486:	79fb      	ldrb	r3, [r7, #7]
 8002488:	f003 0302 	and.w	r3, r3, #2
 800248c:	2b00      	cmp	r3, #0
 800248e:	d004      	beq.n	800249a <LCD_Out_Data4+0x3a>
		GPIOC->BSRR	=	LCD_D5_PIN_HIGH;
 8002490:	4b14      	ldr	r3, [pc, #80]	; (80024e4 <LCD_Out_Data4+0x84>)
 8002492:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8002496:	611a      	str	r2, [r3, #16]
 8002498:	e003      	b.n	80024a2 <LCD_Out_Data4+0x42>
	else
		GPIOC->BSRR	=	LCD_D5_PIN_LOW;
 800249a:	4b12      	ldr	r3, [pc, #72]	; (80024e4 <LCD_Out_Data4+0x84>)
 800249c:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80024a0:	611a      	str	r2, [r3, #16]

	if( ( val & 0x04U ) == 0x04U )//				Bit[2]
 80024a2:	79fb      	ldrb	r3, [r7, #7]
 80024a4:	f003 0304 	and.w	r3, r3, #4
 80024a8:	2b00      	cmp	r3, #0
 80024aa:	d004      	beq.n	80024b6 <LCD_Out_Data4+0x56>
		GPIOC->BSRR	=	LCD_D6_PIN_HIGH;
 80024ac:	4b0d      	ldr	r3, [pc, #52]	; (80024e4 <LCD_Out_Data4+0x84>)
 80024ae:	f44f 6200 	mov.w	r2, #2048	; 0x800
 80024b2:	611a      	str	r2, [r3, #16]
 80024b4:	e003      	b.n	80024be <LCD_Out_Data4+0x5e>
	else
		GPIOC->BSRR	=	LCD_D6_PIN_LOW;
 80024b6:	4b0b      	ldr	r3, [pc, #44]	; (80024e4 <LCD_Out_Data4+0x84>)
 80024b8:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 80024bc:	611a      	str	r2, [r3, #16]

	if( ( val & 0x08U ) == 0x08U )//				Bit[3]
 80024be:	79fb      	ldrb	r3, [r7, #7]
 80024c0:	f003 0308 	and.w	r3, r3, #8
 80024c4:	2b00      	cmp	r3, #0
 80024c6:	d004      	beq.n	80024d2 <LCD_Out_Data4+0x72>
		GPIOC->BSRR	=	LCD_D7_PIN_HIGH;
 80024c8:	4b06      	ldr	r3, [pc, #24]	; (80024e4 <LCD_Out_Data4+0x84>)
 80024ca:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 80024ce:	611a      	str	r2, [r3, #16]
	else
		GPIOC->BSRR	=	LCD_D7_PIN_LOW;
}
 80024d0:	e003      	b.n	80024da <LCD_Out_Data4+0x7a>
		GPIOC->BSRR	=	LCD_D7_PIN_LOW;
 80024d2:	4b04      	ldr	r3, [pc, #16]	; (80024e4 <LCD_Out_Data4+0x84>)
 80024d4:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80024d8:	611a      	str	r2, [r3, #16]
}
 80024da:	bf00      	nop
 80024dc:	370c      	adds	r7, #12
 80024de:	46bd      	mov	sp, r7
 80024e0:	bc80      	pop	{r7}
 80024e2:	4770      	bx	lr
 80024e4:	40011000 	.word	0x40011000

080024e8 <LCD_Write_Byte>:

//Funcion que escribe 1 byte de datos en el LCD
void LCD_Write_Byte(uint8_t val){
 80024e8:	b580      	push	{r7, lr}
 80024ea:	b082      	sub	sp, #8
 80024ec:	af00      	add	r7, sp, #0
 80024ee:	4603      	mov	r3, r0
 80024f0:	71fb      	strb	r3, [r7, #7]
	LCD_Out_Data4( ( val >> 4 ) & 0x0FU );
 80024f2:	79fb      	ldrb	r3, [r7, #7]
 80024f4:	091b      	lsrs	r3, r3, #4
 80024f6:	b2db      	uxtb	r3, r3
 80024f8:	4618      	mov	r0, r3
 80024fa:	f7ff ffb1 	bl	8002460 <LCD_Out_Data4>
	LCD_Pulse_EN( );
 80024fe:	f000 f94d 	bl	800279c <LCD_Pulse_EN>
	LCD_Out_Data4( val & 0x0FU );
 8002502:	79fb      	ldrb	r3, [r7, #7]
 8002504:	f003 030f 	and.w	r3, r3, #15
 8002508:	b2db      	uxtb	r3, r3
 800250a:	4618      	mov	r0, r3
 800250c:	f7ff ffa8 	bl	8002460 <LCD_Out_Data4>
	LCD_Pulse_EN( );
 8002510:	f000 f944 	bl	800279c <LCD_Pulse_EN>
	while( LCD_Busy( ) );
 8002514:	bf00      	nop
 8002516:	f000 f8ed 	bl	80026f4 <LCD_Busy>
 800251a:	4603      	mov	r3, r0
 800251c:	2b00      	cmp	r3, #0
 800251e:	d1fa      	bne.n	8002516 <LCD_Write_Byte+0x2e>
}
 8002520:	bf00      	nop
 8002522:	bf00      	nop
 8002524:	3708      	adds	r7, #8
 8002526:	46bd      	mov	sp, r7
 8002528:	bd80      	pop	{r7, pc}
	...

0800252c <LCD_Write_Cmd>:

//Funcion que escribe un comando en el LCD
void LCD_Write_Cmd(uint8_t val){
 800252c:	b580      	push	{r7, lr}
 800252e:	b082      	sub	sp, #8
 8002530:	af00      	add	r7, sp, #0
 8002532:	4603      	mov	r3, r0
 8002534:	71fb      	strb	r3, [r7, #7]
	GPIOC->BSRR	=	LCD_RS_PIN_LOW;//			RS=0 (seleccion de comando)
 8002536:	4b06      	ldr	r3, [pc, #24]	; (8002550 <LCD_Write_Cmd+0x24>)
 8002538:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
 800253c:	611a      	str	r2, [r3, #16]
	LCD_Write_Byte( val );
 800253e:	79fb      	ldrb	r3, [r7, #7]
 8002540:	4618      	mov	r0, r3
 8002542:	f7ff ffd1 	bl	80024e8 <LCD_Write_Byte>
}
 8002546:	bf00      	nop
 8002548:	3708      	adds	r7, #8
 800254a:	46bd      	mov	sp, r7
 800254c:	bd80      	pop	{r7, pc}
 800254e:	bf00      	nop
 8002550:	40011000 	.word	0x40011000

08002554 <LCD_Put_Char>:

//Escribe un caracter ASCII en el LCD
void LCD_Put_Char(uint8_t c){
 8002554:	b580      	push	{r7, lr}
 8002556:	b082      	sub	sp, #8
 8002558:	af00      	add	r7, sp, #0
 800255a:	4603      	mov	r3, r0
 800255c:	71fb      	strb	r3, [r7, #7]
	GPIOC->BSRR	=	LCD_RS_PIN_HIGH;//			RS=1 (seleccion de caracteres)
 800255e:	4b05      	ldr	r3, [pc, #20]	; (8002574 <LCD_Put_Char+0x20>)
 8002560:	2240      	movs	r2, #64	; 0x40
 8002562:	611a      	str	r2, [r3, #16]
	LCD_Write_Byte( c );
 8002564:	79fb      	ldrb	r3, [r7, #7]
 8002566:	4618      	mov	r0, r3
 8002568:	f7ff ffbe 	bl	80024e8 <LCD_Write_Byte>
}
 800256c:	bf00      	nop
 800256e:	3708      	adds	r7, #8
 8002570:	46bd      	mov	sp, r7
 8002572:	bd80      	pop	{r7, pc}
 8002574:	40011000 	.word	0x40011000

08002578 <LCD_Set_Cursor>:

//Funcion que establece el cursor en una posicion de la pantalla del LCD
//Minimum values for line and column must be 1
void LCD_Set_Cursor(uint8_t line, uint8_t column){
 8002578:	b580      	push	{r7, lr}
 800257a:	b084      	sub	sp, #16
 800257c:	af00      	add	r7, sp, #0
 800257e:	4603      	mov	r3, r0
 8002580:	460a      	mov	r2, r1
 8002582:	71fb      	strb	r3, [r7, #7]
 8002584:	4613      	mov	r3, r2
 8002586:	71bb      	strb	r3, [r7, #6]
	uint8_t address;
	column--;
 8002588:	79bb      	ldrb	r3, [r7, #6]
 800258a:	3b01      	subs	r3, #1
 800258c:	71bb      	strb	r3, [r7, #6]
	line--;
 800258e:	79fb      	ldrb	r3, [r7, #7]
 8002590:	3b01      	subs	r3, #1
 8002592:	71fb      	strb	r3, [r7, #7]
	address = ( line * 0x40U ) + column;
 8002594:	79fb      	ldrb	r3, [r7, #7]
 8002596:	019b      	lsls	r3, r3, #6
 8002598:	b2da      	uxtb	r2, r3
 800259a:	79bb      	ldrb	r3, [r7, #6]
 800259c:	4413      	add	r3, r2
 800259e:	73fb      	strb	r3, [r7, #15]
	address = 0x80U + ( address & 0x7FU );
 80025a0:	7bfb      	ldrb	r3, [r7, #15]
 80025a2:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 80025a6:	b2db      	uxtb	r3, r3
 80025a8:	3b80      	subs	r3, #128	; 0x80
 80025aa:	73fb      	strb	r3, [r7, #15]
	LCD_Write_Cmd( address );
 80025ac:	7bfb      	ldrb	r3, [r7, #15]
 80025ae:	4618      	mov	r0, r3
 80025b0:	f7ff ffbc 	bl	800252c <LCD_Write_Cmd>
}
 80025b4:	bf00      	nop
 80025b6:	3710      	adds	r7, #16
 80025b8:	46bd      	mov	sp, r7
 80025ba:	bd80      	pop	{r7, pc}

080025bc <LCD_Put_Str>:

//Funcion que envia una cadena de caracteres ASCII al LCD
void LCD_Put_Str(char * str){
 80025bc:	b580      	push	{r7, lr}
 80025be:	b084      	sub	sp, #16
 80025c0:	af00      	add	r7, sp, #0
 80025c2:	6078      	str	r0, [r7, #4]
	for( int16_t i = 0; i < 16 && str[ i ] != 0; i++ )
 80025c4:	2300      	movs	r3, #0
 80025c6:	81fb      	strh	r3, [r7, #14]
 80025c8:	e00d      	b.n	80025e6 <LCD_Put_Str+0x2a>
		LCD_Put_Char( str[ i ] );//				envia 1 byte al LCD
 80025ca:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 80025ce:	687a      	ldr	r2, [r7, #4]
 80025d0:	4413      	add	r3, r2
 80025d2:	781b      	ldrb	r3, [r3, #0]
 80025d4:	4618      	mov	r0, r3
 80025d6:	f7ff ffbd 	bl	8002554 <LCD_Put_Char>
	for( int16_t i = 0; i < 16 && str[ i ] != 0; i++ )
 80025da:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 80025de:	b29b      	uxth	r3, r3
 80025e0:	3301      	adds	r3, #1
 80025e2:	b29b      	uxth	r3, r3
 80025e4:	81fb      	strh	r3, [r7, #14]
 80025e6:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 80025ea:	2b0f      	cmp	r3, #15
 80025ec:	dc06      	bgt.n	80025fc <LCD_Put_Str+0x40>
 80025ee:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 80025f2:	687a      	ldr	r2, [r7, #4]
 80025f4:	4413      	add	r3, r2
 80025f6:	781b      	ldrb	r3, [r3, #0]
 80025f8:	2b00      	cmp	r3, #0
 80025fa:	d1e6      	bne.n	80025ca <LCD_Put_Str+0xe>
}
 80025fc:	bf00      	nop
 80025fe:	3710      	adds	r7, #16
 8002600:	46bd      	mov	sp, r7
 8002602:	bd80      	pop	{r7, pc}

08002604 <LCD_Put_Num>:

//Funcion que envia un caracter numerico al LCD
//El número debe ser entero y de 5 dígitos máximo
void LCD_Put_Num(int16_t num){
 8002604:	b580      	push	{r7, lr}
 8002606:	b086      	sub	sp, #24
 8002608:	af00      	add	r7, sp, #0
 800260a:	4603      	mov	r3, r0
 800260c:	80fb      	strh	r3, [r7, #6]
	int16_t p;
	int16_t f = 0;
 800260e:	2300      	movs	r3, #0
 8002610:	82bb      	strh	r3, [r7, #20]
	int8_t ch[ 5 ];

	for( int16_t i = 0; i < 5; i++ ){
 8002612:	2300      	movs	r3, #0
 8002614:	827b      	strh	r3, [r7, #18]
 8002616:	e064      	b.n	80026e2 <LCD_Put_Num+0xde>
		p = 1;
 8002618:	2301      	movs	r3, #1
 800261a:	82fb      	strh	r3, [r7, #22]
		for( int16_t j = 4 - i; j > 0; j-- )
 800261c:	8a7b      	ldrh	r3, [r7, #18]
 800261e:	f1c3 0304 	rsb	r3, r3, #4
 8002622:	b29b      	uxth	r3, r3
 8002624:	823b      	strh	r3, [r7, #16]
 8002626:	e00c      	b.n	8002642 <LCD_Put_Num+0x3e>
			p = p * 10;
 8002628:	8afb      	ldrh	r3, [r7, #22]
 800262a:	461a      	mov	r2, r3
 800262c:	0092      	lsls	r2, r2, #2
 800262e:	4413      	add	r3, r2
 8002630:	005b      	lsls	r3, r3, #1
 8002632:	b29b      	uxth	r3, r3
 8002634:	82fb      	strh	r3, [r7, #22]
		for( int16_t j = 4 - i; j > 0; j-- )
 8002636:	f9b7 3010 	ldrsh.w	r3, [r7, #16]
 800263a:	b29b      	uxth	r3, r3
 800263c:	3b01      	subs	r3, #1
 800263e:	b29b      	uxth	r3, r3
 8002640:	823b      	strh	r3, [r7, #16]
 8002642:	f9b7 3010 	ldrsh.w	r3, [r7, #16]
 8002646:	2b00      	cmp	r3, #0
 8002648:	dcee      	bgt.n	8002628 <LCD_Put_Num+0x24>
		ch[ i ] = ( num / p );
 800264a:	f9b7 2006 	ldrsh.w	r2, [r7, #6]
 800264e:	f9b7 3016 	ldrsh.w	r3, [r7, #22]
 8002652:	fb92 f2f3 	sdiv	r2, r2, r3
 8002656:	f9b7 3012 	ldrsh.w	r3, [r7, #18]
 800265a:	b252      	sxtb	r2, r2
 800265c:	3318      	adds	r3, #24
 800265e:	443b      	add	r3, r7
 8002660:	f803 2c10 	strb.w	r2, [r3, #-16]
		if( num >= p && !f )
 8002664:	f9b7 2006 	ldrsh.w	r2, [r7, #6]
 8002668:	f9b7 3016 	ldrsh.w	r3, [r7, #22]
 800266c:	429a      	cmp	r2, r3
 800266e:	db05      	blt.n	800267c <LCD_Put_Num+0x78>
 8002670:	f9b7 3014 	ldrsh.w	r3, [r7, #20]
 8002674:	2b00      	cmp	r3, #0
 8002676:	d101      	bne.n	800267c <LCD_Put_Num+0x78>
			f = 1;
 8002678:	2301      	movs	r3, #1
 800267a:	82bb      	strh	r3, [r7, #20]
		num = num - ch[ i ] * p;
 800267c:	88fa      	ldrh	r2, [r7, #6]
 800267e:	f9b7 3012 	ldrsh.w	r3, [r7, #18]
 8002682:	3318      	adds	r3, #24
 8002684:	443b      	add	r3, r7
 8002686:	f913 3c10 	ldrsb.w	r3, [r3, #-16]
 800268a:	b29b      	uxth	r3, r3
 800268c:	8af9      	ldrh	r1, [r7, #22]
 800268e:	fb01 f303 	mul.w	r3, r1, r3
 8002692:	b29b      	uxth	r3, r3
 8002694:	1ad3      	subs	r3, r2, r3
 8002696:	b29b      	uxth	r3, r3
 8002698:	80fb      	strh	r3, [r7, #6]
		ch[ i ] = ch[ i ] + 48;
 800269a:	f9b7 3012 	ldrsh.w	r3, [r7, #18]
 800269e:	3318      	adds	r3, #24
 80026a0:	443b      	add	r3, r7
 80026a2:	f913 3c10 	ldrsb.w	r3, [r3, #-16]
 80026a6:	b2db      	uxtb	r3, r3
 80026a8:	3330      	adds	r3, #48	; 0x30
 80026aa:	b2da      	uxtb	r2, r3
 80026ac:	f9b7 3012 	ldrsh.w	r3, [r7, #18]
 80026b0:	b252      	sxtb	r2, r2
 80026b2:	3318      	adds	r3, #24
 80026b4:	443b      	add	r3, r7
 80026b6:	f803 2c10 	strb.w	r2, [r3, #-16]
		if( f )
 80026ba:	f9b7 3014 	ldrsh.w	r3, [r7, #20]
 80026be:	2b00      	cmp	r3, #0
 80026c0:	d009      	beq.n	80026d6 <LCD_Put_Num+0xd2>
			LCD_Put_Char( ch[ i ] );
 80026c2:	f9b7 3012 	ldrsh.w	r3, [r7, #18]
 80026c6:	3318      	adds	r3, #24
 80026c8:	443b      	add	r3, r7
 80026ca:	f913 3c10 	ldrsb.w	r3, [r3, #-16]
 80026ce:	b2db      	uxtb	r3, r3
 80026d0:	4618      	mov	r0, r3
 80026d2:	f7ff ff3f 	bl	8002554 <LCD_Put_Char>
	for( int16_t i = 0; i < 5; i++ ){
 80026d6:	f9b7 3012 	ldrsh.w	r3, [r7, #18]
 80026da:	b29b      	uxth	r3, r3
 80026dc:	3301      	adds	r3, #1
 80026de:	b29b      	uxth	r3, r3
 80026e0:	827b      	strh	r3, [r7, #18]
 80026e2:	f9b7 3012 	ldrsh.w	r3, [r7, #18]
 80026e6:	2b04      	cmp	r3, #4
 80026e8:	dd96      	ble.n	8002618 <LCD_Put_Num+0x14>
	}
}
 80026ea:	bf00      	nop
 80026ec:	bf00      	nop
 80026ee:	3718      	adds	r7, #24
 80026f0:	46bd      	mov	sp, r7
 80026f2:	bd80      	pop	{r7, pc}

080026f4 <LCD_Busy>:

//Funcion que provoca tiempos de espera en el LCD
char LCD_Busy(void){
 80026f4:	b580      	push	{r7, lr}
 80026f6:	af00      	add	r7, sp, #0
/**
  * Configuracion de D7 as input floating
  */
	GPIOC->CRH	&=	~( 0x2UL << 18U ) & ~( 0x3UL << 16U );
 80026f8:	4b26      	ldr	r3, [pc, #152]	; (8002794 <LCD_Busy+0xa0>)
 80026fa:	685b      	ldr	r3, [r3, #4]
 80026fc:	4a25      	ldr	r2, [pc, #148]	; (8002794 <LCD_Busy+0xa0>)
 80026fe:	f423 2330 	bic.w	r3, r3, #720896	; 0xb0000
 8002702:	6053      	str	r3, [r2, #4]
	GPIOC->CRH	|=   	 ( 0x1UL << 18U );
 8002704:	4b23      	ldr	r3, [pc, #140]	; (8002794 <LCD_Busy+0xa0>)
 8002706:	685b      	ldr	r3, [r3, #4]
 8002708:	4a22      	ldr	r2, [pc, #136]	; (8002794 <LCD_Busy+0xa0>)
 800270a:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 800270e:	6053      	str	r3, [r2, #4]
	GPIOC->BSRR	 =	 LCD_RS_PIN_LOW;
 8002710:	4b20      	ldr	r3, [pc, #128]	; (8002794 <LCD_Busy+0xa0>)
 8002712:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
 8002716:	611a      	str	r2, [r3, #16]
	GPIOC->BSRR	 =	 LCD_RW_PIN_HIGH;
 8002718:	4b1e      	ldr	r3, [pc, #120]	; (8002794 <LCD_Busy+0xa0>)
 800271a:	2280      	movs	r2, #128	; 0x80
 800271c:	611a      	str	r2, [r3, #16]
	GPIOC->BSRR	 =	 LCD_EN_PIN_HIGH;
 800271e:	4b1d      	ldr	r3, [pc, #116]	; (8002794 <LCD_Busy+0xa0>)
 8002720:	f44f 7280 	mov.w	r2, #256	; 0x100
 8002724:	611a      	str	r2, [r3, #16]
	tim2_delay(TIM2_TIME_100uS) ;//	100us
 8002726:	481c      	ldr	r0, [pc, #112]	; (8002798 <LCD_Busy+0xa4>)
 8002728:	f000 fd00 	bl	800312c <tim2_delay>
	if(( GPIOC->IDR	& LCD_D7_PIN_HIGH )) {//			if D7 is set, then
 800272c:	4b19      	ldr	r3, [pc, #100]	; (8002794 <LCD_Busy+0xa0>)
 800272e:	689b      	ldr	r3, [r3, #8]
 8002730:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8002734:	2b00      	cmp	r3, #0
 8002736:	d015      	beq.n	8002764 <LCD_Busy+0x70>
		GPIOC->BSRR	= 	LCD_EN_PIN_LOW;
 8002738:	4b16      	ldr	r3, [pc, #88]	; (8002794 <LCD_Busy+0xa0>)
 800273a:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 800273e:	611a      	str	r2, [r3, #16]
		GPIOC->BSRR	=	LCD_RW_PIN_LOW;
 8002740:	4b14      	ldr	r3, [pc, #80]	; (8002794 <LCD_Busy+0xa0>)
 8002742:	f44f 0200 	mov.w	r2, #8388608	; 0x800000
 8002746:	611a      	str	r2, [r3, #16]
/**
  * Configuracion de D7 as output push-pull, 10 MHz speed
  */
		GPIOC->CRH	&=	~( 0x3UL << 18U ) & ~( 0x2UL << 16U );
 8002748:	4b12      	ldr	r3, [pc, #72]	; (8002794 <LCD_Busy+0xa0>)
 800274a:	685b      	ldr	r3, [r3, #4]
 800274c:	4a11      	ldr	r2, [pc, #68]	; (8002794 <LCD_Busy+0xa0>)
 800274e:	f423 2360 	bic.w	r3, r3, #917504	; 0xe0000
 8002752:	6053      	str	r3, [r2, #4]
		GPIOC->CRH	|=   	 ( 0x1UL << 16U );
 8002754:	4b0f      	ldr	r3, [pc, #60]	; (8002794 <LCD_Busy+0xa0>)
 8002756:	685b      	ldr	r3, [r3, #4]
 8002758:	4a0e      	ldr	r2, [pc, #56]	; (8002794 <LCD_Busy+0xa0>)
 800275a:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800275e:	6053      	str	r3, [r2, #4]
		return 1;
 8002760:	2301      	movs	r3, #1
 8002762:	e014      	b.n	800278e <LCD_Busy+0x9a>
	} else {
		GPIOC->BSRR	= 	LCD_EN_PIN_LOW;
 8002764:	4b0b      	ldr	r3, [pc, #44]	; (8002794 <LCD_Busy+0xa0>)
 8002766:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 800276a:	611a      	str	r2, [r3, #16]
		GPIOC->BSRR	=	LCD_RW_PIN_LOW;
 800276c:	4b09      	ldr	r3, [pc, #36]	; (8002794 <LCD_Busy+0xa0>)
 800276e:	f44f 0200 	mov.w	r2, #8388608	; 0x800000
 8002772:	611a      	str	r2, [r3, #16]
/**
  * Configuracion de D7 as output push-pull, 10 MHz speed
  */
		GPIOC->CRH	&=	~( 0x3UL << 18U ) & ~( 0x2UL << 16U );
 8002774:	4b07      	ldr	r3, [pc, #28]	; (8002794 <LCD_Busy+0xa0>)
 8002776:	685b      	ldr	r3, [r3, #4]
 8002778:	4a06      	ldr	r2, [pc, #24]	; (8002794 <LCD_Busy+0xa0>)
 800277a:	f423 2360 	bic.w	r3, r3, #917504	; 0xe0000
 800277e:	6053      	str	r3, [r2, #4]
		GPIOC->CRH	|=   	 ( 0x1UL << 16U );
 8002780:	4b04      	ldr	r3, [pc, #16]	; (8002794 <LCD_Busy+0xa0>)
 8002782:	685b      	ldr	r3, [r3, #4]
 8002784:	4a03      	ldr	r2, [pc, #12]	; (8002794 <LCD_Busy+0xa0>)
 8002786:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800278a:	6053      	str	r3, [r2, #4]
		return 0;
 800278c:	2300      	movs	r3, #0
	}
}
 800278e:	4618      	mov	r0, r3
 8002790:	bd80      	pop	{r7, pc}
 8002792:	bf00      	nop
 8002794:	40011000 	.word	0x40011000
 8002798:	38d1b717 	.word	0x38d1b717

0800279c <LCD_Pulse_EN>:

//Funcion que genera un pulso en el pin EN del LCD
void LCD_Pulse_EN(void){
 800279c:	b580      	push	{r7, lr}
 800279e:	af00      	add	r7, sp, #0
	GPIOC->BSRR	=	LCD_EN_PIN_LOW;//
 80027a0:	4b0b      	ldr	r3, [pc, #44]	; (80027d0 <LCD_Pulse_EN+0x34>)
 80027a2:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 80027a6:	611a      	str	r2, [r3, #16]
	tim2_delay(TIM2_TIME_10uS) ;//	10us
 80027a8:	480a      	ldr	r0, [pc, #40]	; (80027d4 <LCD_Pulse_EN+0x38>)
 80027aa:	f000 fcbf 	bl	800312c <tim2_delay>
	GPIOC->BSRR	=	LCD_EN_PIN_HIGH;//			habilita pin EN ON
 80027ae:	4b08      	ldr	r3, [pc, #32]	; (80027d0 <LCD_Pulse_EN+0x34>)
 80027b0:	f44f 7280 	mov.w	r2, #256	; 0x100
 80027b4:	611a      	str	r2, [r3, #16]
	tim2_delay(TIM2_TIME_10uS) ;//	10us
 80027b6:	4807      	ldr	r0, [pc, #28]	; (80027d4 <LCD_Pulse_EN+0x38>)
 80027b8:	f000 fcb8 	bl	800312c <tim2_delay>
	GPIOC->BSRR	=	LCD_EN_PIN_LOW;//			habilita pin EN OFF
 80027bc:	4b04      	ldr	r3, [pc, #16]	; (80027d0 <LCD_Pulse_EN+0x34>)
 80027be:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 80027c2:	611a      	str	r2, [r3, #16]
	tim2_delay(TIM2_TIME_1MS) ;//	1ms
 80027c4:	4804      	ldr	r0, [pc, #16]	; (80027d8 <LCD_Pulse_EN+0x3c>)
 80027c6:	f000 fcb1 	bl	800312c <tim2_delay>
}
 80027ca:	bf00      	nop
 80027cc:	bd80      	pop	{r7, pc}
 80027ce:	bf00      	nop
 80027d0:	40011000 	.word	0x40011000
 80027d4:	3727c5ac 	.word	0x3727c5ac
 80027d8:	3a83126f 	.word	0x3a83126f

080027dc <main>:

uint16_t USE_ADC1_MODULE(void);


int main(void)
{
 80027dc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80027de:	b08b      	sub	sp, #44	; 0x2c
 80027e0:	af06      	add	r7, sp, #24
	USER_RCC_Init();
 80027e2:	f000 f8d5 	bl	8002990 <USER_RCC_Init>
	USER_GPIO_Init();
 80027e6:	f000 f983 	bl	8002af0 <USER_GPIO_Init>
  	USER_USART1_Init();
 80027ea:	f000 fd15 	bl	8003218 <USER_USART1_Init>
  	USE_ADC1_MODULE();
 80027ee:	f000 f963 	bl	8002ab8 <USE_ADC1_MODULE>
	EngTrModel_initialize();
 80027f2:	f7ff fbbb 	bl	8001f6c <EngTrModel_initialize>

	LCD_Init();
 80027f6:	f7ff fd5b 	bl	80022b0 <LCD_Init>

	uint16_t readValue = 0;
 80027fa:	2300      	movs	r3, #0
 80027fc:	80fb      	strh	r3, [r7, #6]
	int ThrottleValue = 0;
 80027fe:	2300      	movs	r3, #0
 8002800:	60fb      	str	r3, [r7, #12]
//		printf("Gear: %f\r\n", EngTrModel_Y.Gear);
//		USER_TIM2_Delay(TIM2_PRESC_200MS, TIM2_INIT_COUNT_200MS);//  200ms

//// -------------- PRACTICA PANTALLLA LCD Y DATOS  ----------------

		char *direccion = "Front";
 8002802:	4b53      	ldr	r3, [pc, #332]	; (8002950 <main+0x174>)
 8002804:	60bb      	str	r3, [r7, #8]

		KEYPAD_Init();
 8002806:	f7ff fbb9 	bl	8001f7c <KEYPAD_Init>
		pressedButton = KEYPAD_ReadKey();
 800280a:	f7ff fc25 	bl	8002058 <KEYPAD_ReadKey>
 800280e:	4603      	mov	r3, r0
 8002810:	461a      	mov	r2, r3
 8002812:	4b50      	ldr	r3, [pc, #320]	; (8002954 <main+0x178>)
 8002814:	701a      	strb	r2, [r3, #0]


		readValue = USE_ADC1_MODULE();
 8002816:	f000 f94f 	bl	8002ab8 <USE_ADC1_MODULE>
 800281a:	4603      	mov	r3, r0
 800281c:	80fb      	strh	r3, [r7, #6]
		ThrottleValue = ((readValue*100)/4095);
 800281e:	88fb      	ldrh	r3, [r7, #6]
 8002820:	2264      	movs	r2, #100	; 0x64
 8002822:	fb02 f303 	mul.w	r3, r2, r3
 8002826:	4a4c      	ldr	r2, [pc, #304]	; (8002958 <main+0x17c>)
 8002828:	fb82 1203 	smull	r1, r2, r2, r3
 800282c:	441a      	add	r2, r3
 800282e:	12d2      	asrs	r2, r2, #11
 8002830:	17db      	asrs	r3, r3, #31
 8002832:	1ad3      	subs	r3, r2, r3
 8002834:	60fb      	str	r3, [r7, #12]

		if (ThrottleValue < 5){
 8002836:	68fb      	ldr	r3, [r7, #12]
 8002838:	2b04      	cmp	r3, #4
 800283a:	dc01      	bgt.n	8002840 <main+0x64>
			ThrottleValue = 5;
 800283c:	2305      	movs	r3, #5
 800283e:	60fb      	str	r3, [r7, #12]
		}

		EngTrModel_U.Throttle = ThrottleValue;
 8002840:	68f8      	ldr	r0, [r7, #12]
 8002842:	f7fd fdef 	bl	8000424 <__aeabi_i2d>
 8002846:	4602      	mov	r2, r0
 8002848:	460b      	mov	r3, r1
 800284a:	4944      	ldr	r1, [pc, #272]	; (800295c <main+0x180>)
 800284c:	e9c1 2300 	strd	r2, r3, [r1]


	    if(pressedButton == '2')
 8002850:	4b40      	ldr	r3, [pc, #256]	; (8002954 <main+0x178>)
 8002852:	781b      	ldrb	r3, [r3, #0]
 8002854:	b2db      	uxtb	r3, r3
 8002856:	2b32      	cmp	r3, #50	; 0x32
 8002858:	d108      	bne.n	800286c <main+0x90>
	    {
	    	EngTrModel_U.BrakeTorque = 100.0;
 800285a:	4940      	ldr	r1, [pc, #256]	; (800295c <main+0x180>)
 800285c:	f04f 0200 	mov.w	r2, #0
 8002860:	4b3f      	ldr	r3, [pc, #252]	; (8002960 <main+0x184>)
 8002862:	e9c1 2302 	strd	r2, r3, [r1, #8]
	    	direccion = "Break";
 8002866:	4b3f      	ldr	r3, [pc, #252]	; (8002964 <main+0x188>)
 8002868:	60bb      	str	r3, [r7, #8]
 800286a:	e016      	b.n	800289a <main+0xbe>
	    }
	    else if(pressedButton == '1')
 800286c:	4b39      	ldr	r3, [pc, #228]	; (8002954 <main+0x178>)
 800286e:	781b      	ldrb	r3, [r3, #0]
 8002870:	b2db      	uxtb	r3, r3
 8002872:	2b31      	cmp	r3, #49	; 0x31
 8002874:	d102      	bne.n	800287c <main+0xa0>
	    {
	    	direccion = "Left";
 8002876:	4b3c      	ldr	r3, [pc, #240]	; (8002968 <main+0x18c>)
 8002878:	60bb      	str	r3, [r7, #8]
 800287a:	e00e      	b.n	800289a <main+0xbe>
	    }
	    else if(pressedButton == '3')
 800287c:	4b35      	ldr	r3, [pc, #212]	; (8002954 <main+0x178>)
 800287e:	781b      	ldrb	r3, [r3, #0]
 8002880:	b2db      	uxtb	r3, r3
 8002882:	2b33      	cmp	r3, #51	; 0x33
 8002884:	d102      	bne.n	800288c <main+0xb0>
		{
	    	direccion = "Right";
 8002886:	4b39      	ldr	r3, [pc, #228]	; (800296c <main+0x190>)
 8002888:	60bb      	str	r3, [r7, #8]
 800288a:	e006      	b.n	800289a <main+0xbe>
		}
	    else
	    {
	    	EngTrModel_U.BrakeTorque = 0.0;
 800288c:	4933      	ldr	r1, [pc, #204]	; (800295c <main+0x180>)
 800288e:	f04f 0200 	mov.w	r2, #0
 8002892:	f04f 0300 	mov.w	r3, #0
 8002896:	e9c1 2302 	strd	r2, r3, [r1, #8]
	    }

	    // Update the values into the vehicle model
	    EngTrModel_step();
 800289a:	f7ff f88d 	bl	80019b8 <EngTrModel_step>

	    // Send the output values
	    printf("%f,%f,%f,%s\n\r", EngTrModel_Y.VehicleSpeed, EngTrModel_Y.Gear ,EngTrModel_Y.EngineSpeed, direccion);
 800289e:	4b34      	ldr	r3, [pc, #208]	; (8002970 <main+0x194>)
 80028a0:	e9d3 4502 	ldrd	r4, r5, [r3, #8]
 80028a4:	4b32      	ldr	r3, [pc, #200]	; (8002970 <main+0x194>)
 80028a6:	e9d3 2304 	ldrd	r2, r3, [r3, #16]
 80028aa:	4931      	ldr	r1, [pc, #196]	; (8002970 <main+0x194>)
 80028ac:	e9d1 0100 	ldrd	r0, r1, [r1]
 80028b0:	68be      	ldr	r6, [r7, #8]
 80028b2:	9604      	str	r6, [sp, #16]
 80028b4:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80028b8:	e9cd 2300 	strd	r2, r3, [sp]
 80028bc:	4622      	mov	r2, r4
 80028be:	462b      	mov	r3, r5
 80028c0:	482c      	ldr	r0, [pc, #176]	; (8002974 <main+0x198>)
 80028c2:	f002 fae9 	bl	8004e98 <iprintf>
	    tim2_delay(TIM2_TIME_50MS);
 80028c6:	482c      	ldr	r0, [pc, #176]	; (8002978 <main+0x19c>)
 80028c8:	f000 fc30 	bl	800312c <tim2_delay>

		LCD_Clear();
 80028cc:	2001      	movs	r0, #1
 80028ce:	f7ff fe2d 	bl	800252c <LCD_Write_Cmd>
		LCD_Set_Cursor( 1, 1 );
 80028d2:	2101      	movs	r1, #1
 80028d4:	2001      	movs	r0, #1
 80028d6:	f7ff fe4f 	bl	8002578 <LCD_Set_Cursor>
		LCD_Put_Str( "VS:" );
 80028da:	4828      	ldr	r0, [pc, #160]	; (800297c <main+0x1a0>)
 80028dc:	f7ff fe6e 	bl	80025bc <LCD_Put_Str>
		LCD_Put_Num( EngTrModel_Y.VehicleSpeed );
 80028e0:	4b23      	ldr	r3, [pc, #140]	; (8002970 <main+0x194>)
 80028e2:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 80028e6:	4610      	mov	r0, r2
 80028e8:	4619      	mov	r1, r3
 80028ea:	f7fe f8b5 	bl	8000a58 <__aeabi_d2iz>
 80028ee:	4603      	mov	r3, r0
 80028f0:	b21b      	sxth	r3, r3
 80028f2:	4618      	mov	r0, r3
 80028f4:	f7ff fe86 	bl	8002604 <LCD_Put_Num>
		LCD_Put_Str( "   G:");
 80028f8:	4821      	ldr	r0, [pc, #132]	; (8002980 <main+0x1a4>)
 80028fa:	f7ff fe5f 	bl	80025bc <LCD_Put_Str>
		LCD_Put_Num( EngTrModel_Y.Gear );
 80028fe:	4b1c      	ldr	r3, [pc, #112]	; (8002970 <main+0x194>)
 8002900:	e9d3 2304 	ldrd	r2, r3, [r3, #16]
 8002904:	4610      	mov	r0, r2
 8002906:	4619      	mov	r1, r3
 8002908:	f7fe f8a6 	bl	8000a58 <__aeabi_d2iz>
 800290c:	4603      	mov	r3, r0
 800290e:	b21b      	sxth	r3, r3
 8002910:	4618      	mov	r0, r3
 8002912:	f7ff fe77 	bl	8002604 <LCD_Put_Num>
		LCD_Set_Cursor( 2, 1 );
 8002916:	2101      	movs	r1, #1
 8002918:	2002      	movs	r0, #2
 800291a:	f7ff fe2d 	bl	8002578 <LCD_Set_Cursor>
		LCD_Put_Str( "ES:");
 800291e:	4819      	ldr	r0, [pc, #100]	; (8002984 <main+0x1a8>)
 8002920:	f7ff fe4c 	bl	80025bc <LCD_Put_Str>
		LCD_Put_Num( EngTrModel_Y.EngineSpeed );
 8002924:	4b12      	ldr	r3, [pc, #72]	; (8002970 <main+0x194>)
 8002926:	e9d3 2300 	ldrd	r2, r3, [r3]
 800292a:	4610      	mov	r0, r2
 800292c:	4619      	mov	r1, r3
 800292e:	f7fe f893 	bl	8000a58 <__aeabi_d2iz>
 8002932:	4603      	mov	r3, r0
 8002934:	b21b      	sxth	r3, r3
 8002936:	4618      	mov	r0, r3
 8002938:	f7ff fe64 	bl	8002604 <LCD_Put_Num>
		LCD_Put_Str( " D: ");
 800293c:	4812      	ldr	r0, [pc, #72]	; (8002988 <main+0x1ac>)
 800293e:	f7ff fe3d 	bl	80025bc <LCD_Put_Str>
		LCD_Put_Str( direccion );
 8002942:	68b8      	ldr	r0, [r7, #8]
 8002944:	f7ff fe3a 	bl	80025bc <LCD_Put_Str>
		tim2_delay(TIM2_TIME_200MS);
 8002948:	4810      	ldr	r0, [pc, #64]	; (800298c <main+0x1b0>)
 800294a:	f000 fbef 	bl	800312c <tim2_delay>
	{
 800294e:	e758      	b.n	8002802 <main+0x26>
 8002950:	08008b58 	.word	0x08008b58
 8002954:	20000278 	.word	0x20000278
 8002958:	80080081 	.word	0x80080081
 800295c:	20000250 	.word	0x20000250
 8002960:	40590000 	.word	0x40590000
 8002964:	08008b60 	.word	0x08008b60
 8002968:	08008b68 	.word	0x08008b68
 800296c:	08008b70 	.word	0x08008b70
 8002970:	20000260 	.word	0x20000260
 8002974:	08008b78 	.word	0x08008b78
 8002978:	3d4ccccd 	.word	0x3d4ccccd
 800297c:	08008b88 	.word	0x08008b88
 8002980:	08008b8c 	.word	0x08008b8c
 8002984:	08008b94 	.word	0x08008b94
 8002988:	08008b98 	.word	0x08008b98
 800298c:	3e4ccccd 	.word	0x3e4ccccd

08002990 <USER_RCC_Init>:

	}
}

void USER_RCC_Init(void){
 8002990:	b480      	push	{r7}
 8002992:	af00      	add	r7, sp, #0
	/*System Clock (SYSCLK) Configuration or */
	FLASH->ACR		&=	~( 0X5UL <<  0U); // two wait states latency, if SYSCLK > 48MHz
 8002994:	4b45      	ldr	r3, [pc, #276]	; (8002aac <USER_RCC_Init+0x11c>)
 8002996:	681b      	ldr	r3, [r3, #0]
 8002998:	4a44      	ldr	r2, [pc, #272]	; (8002aac <USER_RCC_Init+0x11c>)
 800299a:	f023 0305 	bic.w	r3, r3, #5
 800299e:	6013      	str	r3, [r2, #0]
	FLASH->ACR		|=	 ( 0X2UL <<  0U); // two wait states latency, if SYSCLK > 48MHz
 80029a0:	4b42      	ldr	r3, [pc, #264]	; (8002aac <USER_RCC_Init+0x11c>)
 80029a2:	681b      	ldr	r3, [r3, #0]
 80029a4:	4a41      	ldr	r2, [pc, #260]	; (8002aac <USER_RCC_Init+0x11c>)
 80029a6:	f043 0302 	orr.w	r3, r3, #2
 80029aa:	6013      	str	r3, [r2, #0]
	RCC->CFGR		&=	~( 0x1UL << 16U)  // PLL HSI Clock /2 selected as PLL input clock
 80029ac:	4b40      	ldr	r3, [pc, #256]	; (8002ab0 <USER_RCC_Init+0x120>)
 80029ae:	685b      	ldr	r3, [r3, #4]
 80029b0:	4a3f      	ldr	r2, [pc, #252]	; (8002ab0 <USER_RCC_Init+0x120>)
 80029b2:	f423 339d 	bic.w	r3, r3, #80384	; 0x13a00
 80029b6:	f423 73f8 	bic.w	r3, r3, #496	; 0x1f0
 80029ba:	6053      	str	r3, [r2, #4]
					&	~( 0x7UL << 11U)  // APB2 prescaler /1
					&	~( 0x3UL <<  8U)  // APB1 prescaler /2 (APB1 must not exceeed 36Mhz)
					&	~( 0xFUL <<  4U); // AHB perscaler /1
	RCC->CFGR		|=	 ( 0xFUL << 18U)  // PLL input clock x 16 (PLLMUL bits)
 80029bc:	4b3c      	ldr	r3, [pc, #240]	; (8002ab0 <USER_RCC_Init+0x120>)
 80029be:	685b      	ldr	r3, [r3, #4]
 80029c0:	4a3b      	ldr	r2, [pc, #236]	; (8002ab0 <USER_RCC_Init+0x120>)
 80029c2:	f443 1370 	orr.w	r3, r3, #3932160	; 0x3c0000
 80029c6:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80029ca:	6053      	str	r3, [r2, #4]
					|	 ( 0x4UL <<  8U); // APB1 Prescaler /2
	RCC->CR			|= 	 ( 0x1UL << 24U); // PLL2 ON
 80029cc:	4b38      	ldr	r3, [pc, #224]	; (8002ab0 <USER_RCC_Init+0x120>)
 80029ce:	681b      	ldr	r3, [r3, #0]
 80029d0:	4a37      	ldr	r2, [pc, #220]	; (8002ab0 <USER_RCC_Init+0x120>)
 80029d2:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80029d6:	6013      	str	r3, [r2, #0]
	while( !(RCC->CR & ~(0x1UL << 25U )));// Wait until PLL is locked
 80029d8:	bf00      	nop
 80029da:	4b35      	ldr	r3, [pc, #212]	; (8002ab0 <USER_RCC_Init+0x120>)
 80029dc:	681b      	ldr	r3, [r3, #0]
 80029de:	f023 7300 	bic.w	r3, r3, #33554432	; 0x2000000
 80029e2:	2b00      	cmp	r3, #0
 80029e4:	d0f9      	beq.n	80029da <USER_RCC_Init+0x4a>
	RCC->CFGR 		&=  ~( 0x1UL <<  0U); // PLL used as system clock (SW bits)
 80029e6:	4b32      	ldr	r3, [pc, #200]	; (8002ab0 <USER_RCC_Init+0x120>)
 80029e8:	685b      	ldr	r3, [r3, #4]
 80029ea:	4a31      	ldr	r2, [pc, #196]	; (8002ab0 <USER_RCC_Init+0x120>)
 80029ec:	f023 0301 	bic.w	r3, r3, #1
 80029f0:	6053      	str	r3, [r2, #4]
	RCC->CFGR		|=	 ( 0x2UL <<  0U); // PLL used as system clock (SW bits)
 80029f2:	4b2f      	ldr	r3, [pc, #188]	; (8002ab0 <USER_RCC_Init+0x120>)
 80029f4:	685b      	ldr	r3, [r3, #4]
 80029f6:	4a2e      	ldr	r2, [pc, #184]	; (8002ab0 <USER_RCC_Init+0x120>)
 80029f8:	f043 0302 	orr.w	r3, r3, #2
 80029fc:	6053      	str	r3, [r2, #4]
	while( 0x8UL != (RCC->CFGR & 0xCUL)); // wait until PLL is switched
 80029fe:	bf00      	nop
 8002a00:	4b2b      	ldr	r3, [pc, #172]	; (8002ab0 <USER_RCC_Init+0x120>)
 8002a02:	685b      	ldr	r3, [r3, #4]
 8002a04:	f003 030c 	and.w	r3, r3, #12
 8002a08:	2b08      	cmp	r3, #8
 8002a0a:	d1f9      	bne.n	8002a00 <USER_RCC_Init+0x70>

	// Enable clock for required peripherals
	RCC->APB2ENR    |=  ( 0x1UL <<  2U )    // IO port A clock enable
 8002a0c:	4b28      	ldr	r3, [pc, #160]	; (8002ab0 <USER_RCC_Init+0x120>)
 8002a0e:	699b      	ldr	r3, [r3, #24]
 8002a10:	4a27      	ldr	r2, [pc, #156]	; (8002ab0 <USER_RCC_Init+0x120>)
 8002a12:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8002a16:	f043 0304 	orr.w	r3, r3, #4
 8002a1a:	6193      	str	r3, [r2, #24]
	                |   ( 0x1UL << 14U ); 	// USART 1 clock enable
	RCC->APB2ENR    |=  ( 0x1UL <<  4U );   // IO port C clock enable
 8002a1c:	4b24      	ldr	r3, [pc, #144]	; (8002ab0 <USER_RCC_Init+0x120>)
 8002a1e:	699b      	ldr	r3, [r3, #24]
 8002a20:	4a23      	ldr	r2, [pc, #140]	; (8002ab0 <USER_RCC_Init+0x120>)
 8002a22:	f043 0310 	orr.w	r3, r3, #16
 8002a26:	6193      	str	r3, [r2, #24]
	RCC->APB2ENR    |=  ( 0x1UL <<  9U );   // ADC1 clock enable
 8002a28:	4b21      	ldr	r3, [pc, #132]	; (8002ab0 <USER_RCC_Init+0x120>)
 8002a2a:	699b      	ldr	r3, [r3, #24]
 8002a2c:	4a20      	ldr	r2, [pc, #128]	; (8002ab0 <USER_RCC_Init+0x120>)
 8002a2e:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8002a32:	6193      	str	r3, [r2, #24]


	// Configure ADC1 clock peripheral
	RCC->CFGR		|= 	( 0x3  <<  14);	// PCLK2 divided by 8
 8002a34:	4b1e      	ldr	r3, [pc, #120]	; (8002ab0 <USER_RCC_Init+0x120>)
 8002a36:	685b      	ldr	r3, [r3, #4]
 8002a38:	4a1d      	ldr	r2, [pc, #116]	; (8002ab0 <USER_RCC_Init+0x120>)
 8002a3a:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8002a3e:	6053      	str	r3, [r2, #4]
	// INITIALIZE AND ENABLE THE ADC1 PERIPHERAL
	ADC1->CR1		&=	~(0xF << 16UL);
 8002a40:	4b1c      	ldr	r3, [pc, #112]	; (8002ab4 <USER_RCC_Init+0x124>)
 8002a42:	685b      	ldr	r3, [r3, #4]
 8002a44:	4a1b      	ldr	r2, [pc, #108]	; (8002ab4 <USER_RCC_Init+0x124>)
 8002a46:	f423 2370 	bic.w	r3, r3, #983040	; 0xf0000
 8002a4a:	6053      	str	r3, [r2, #4]
	// DETERMINE THE RESULT FORMAT
	ADC1->CR2		&= ~(0x1  << 11UL)  // Right Alignment
 8002a4c:	4b19      	ldr	r3, [pc, #100]	; (8002ab4 <USER_RCC_Init+0x124>)
 8002a4e:	689b      	ldr	r3, [r3, #8]
 8002a50:	4a18      	ldr	r2, [pc, #96]	; (8002ab4 <USER_RCC_Init+0x124>)
 8002a52:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8002a56:	6093      	str	r3, [r2, #8]
					|	(0x1  <<  1UL); // Continuos conversion mode

	// DETERMINE THE SAMPLE TIME
	// ¿Cómo se determina el Sample time adecuado?
	ADC1->SMPR2		&= ~(0x7  <<  0UL); // 1.5 Cycles
 8002a58:	4b16      	ldr	r3, [pc, #88]	; (8002ab4 <USER_RCC_Init+0x124>)
 8002a5a:	691b      	ldr	r3, [r3, #16]
 8002a5c:	4a15      	ldr	r2, [pc, #84]	; (8002ab4 <USER_RCC_Init+0x124>)
 8002a5e:	f023 0307 	bic.w	r3, r3, #7
 8002a62:	6113      	str	r3, [r2, #16]
	// THE SECUENCES AND/OR THE NUMBER OF CONVERSACIONS FOR THE ADC REGULAR CHANNELS
	ADC1->SQR1		&= ~(0xF  <<  20UL);// 1 Conversion for regular channels
 8002a64:	4b13      	ldr	r3, [pc, #76]	; (8002ab4 <USER_RCC_Init+0x124>)
 8002a66:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002a68:	4a12      	ldr	r2, [pc, #72]	; (8002ab4 <USER_RCC_Init+0x124>)
 8002a6a:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 8002a6e:	62d3      	str	r3, [r2, #44]	; 0x2c
	// SELECT THE CHANNEL FOR THE FIRST ADC CONVERSATION
	ADC1->SQR3		&= ~(0x1F  << 0UL);// first conversion in channel 0
 8002a70:	4b10      	ldr	r3, [pc, #64]	; (8002ab4 <USER_RCC_Init+0x124>)
 8002a72:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8002a74:	4a0f      	ldr	r2, [pc, #60]	; (8002ab4 <USER_RCC_Init+0x124>)
 8002a76:	f023 031f 	bic.w	r3, r3, #31
 8002a7a:	6353      	str	r3, [r2, #52]	; 0x34

	// ENABLE THE ADC MODULE
	ADC1->CR2		|=  (0x1  <<  0UL); // ADC Enable and start conversion
 8002a7c:	4b0d      	ldr	r3, [pc, #52]	; (8002ab4 <USER_RCC_Init+0x124>)
 8002a7e:	689b      	ldr	r3, [r3, #8]
 8002a80:	4a0c      	ldr	r2, [pc, #48]	; (8002ab4 <USER_RCC_Init+0x124>)
 8002a82:	f043 0301 	orr.w	r3, r3, #1
 8002a86:	6093      	str	r3, [r2, #8]
	// ADC Calibration
	ADC1->CR2		|=  (0x1  <<  2UL); // Start the calibration
 8002a88:	4b0a      	ldr	r3, [pc, #40]	; (8002ab4 <USER_RCC_Init+0x124>)
 8002a8a:	689b      	ldr	r3, [r3, #8]
 8002a8c:	4a09      	ldr	r2, [pc, #36]	; (8002ab4 <USER_RCC_Init+0x124>)
 8002a8e:	f043 0304 	orr.w	r3, r3, #4
 8002a92:	6093      	str	r3, [r2, #8]
    // Wait until after calibration is complete
    while ((ADC1->CR2 & (0x1UL << 2U)) == 0);
 8002a94:	bf00      	nop
 8002a96:	4b07      	ldr	r3, [pc, #28]	; (8002ab4 <USER_RCC_Init+0x124>)
 8002a98:	689b      	ldr	r3, [r3, #8]
 8002a9a:	f003 0304 	and.w	r3, r3, #4
 8002a9e:	2b00      	cmp	r3, #0
 8002aa0:	d0f9      	beq.n	8002a96 <USER_RCC_Init+0x106>
}
 8002aa2:	bf00      	nop
 8002aa4:	bf00      	nop
 8002aa6:	46bd      	mov	sp, r7
 8002aa8:	bc80      	pop	{r7}
 8002aaa:	4770      	bx	lr
 8002aac:	40022000 	.word	0x40022000
 8002ab0:	40021000 	.word	0x40021000
 8002ab4:	40012400 	.word	0x40012400

08002ab8 <USE_ADC1_MODULE>:


uint16_t USE_ADC1_MODULE(void){
 8002ab8:	b480      	push	{r7}
 8002aba:	b083      	sub	sp, #12
 8002abc:	af00      	add	r7, sp, #0
	ADC1->CR2	|=  (0x1  <<  0UL); // ADC Enable and start conversion
 8002abe:	4b0b      	ldr	r3, [pc, #44]	; (8002aec <USE_ADC1_MODULE+0x34>)
 8002ac0:	689b      	ldr	r3, [r3, #8]
 8002ac2:	4a0a      	ldr	r2, [pc, #40]	; (8002aec <USE_ADC1_MODULE+0x34>)
 8002ac4:	f043 0301 	orr.w	r3, r3, #1
 8002ac8:	6093      	str	r3, [r2, #8]

	// Wait until conversation is done (SR reg EOC bit)
    while ((ADC1->SR & (0x1UL << 1U)) == 0);
 8002aca:	bf00      	nop
 8002acc:	4b07      	ldr	r3, [pc, #28]	; (8002aec <USE_ADC1_MODULE+0x34>)
 8002ace:	681b      	ldr	r3, [r3, #0]
 8002ad0:	f003 0302 	and.w	r3, r3, #2
 8002ad4:	2b00      	cmp	r3, #0
 8002ad6:	d0f9      	beq.n	8002acc <USE_ADC1_MODULE+0x14>

    // Read the value in DR(15:0) of ADC1
    uint16_t readValue = ADC1->DR & 0xFFFF;
 8002ad8:	4b04      	ldr	r3, [pc, #16]	; (8002aec <USE_ADC1_MODULE+0x34>)
 8002ada:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8002adc:	80fb      	strh	r3, [r7, #6]

    return readValue;
 8002ade:	88fb      	ldrh	r3, [r7, #6]
}
 8002ae0:	4618      	mov	r0, r3
 8002ae2:	370c      	adds	r7, #12
 8002ae4:	46bd      	mov	sp, r7
 8002ae6:	bc80      	pop	{r7}
 8002ae8:	4770      	bx	lr
 8002aea:	bf00      	nop
 8002aec:	40012400 	.word	0x40012400

08002af0 <USER_GPIO_Init>:



void USER_GPIO_Init(void) {
 8002af0:	b480      	push	{r7}
 8002af2:	af00      	add	r7, sp, #0
	// Configure USART1_TX pin (PA9) as alternate function output push-pull, max speed 10MHz
    GPIOA->CRH  &=  ~( 0x1UL <<  6U )
 8002af4:	4b16      	ldr	r3, [pc, #88]	; (8002b50 <USER_GPIO_Init+0x60>)
 8002af6:	685b      	ldr	r3, [r3, #4]
 8002af8:	4a15      	ldr	r2, [pc, #84]	; (8002b50 <USER_GPIO_Init+0x60>)
 8002afa:	f023 0360 	bic.w	r3, r3, #96	; 0x60
 8002afe:	6053      	str	r3, [r2, #4]
                &   ~( 0x2UL <<  4U );
    GPIOA->CRH  |=  ( 0x2UL <<  6U )
 8002b00:	4b13      	ldr	r3, [pc, #76]	; (8002b50 <USER_GPIO_Init+0x60>)
 8002b02:	685b      	ldr	r3, [r3, #4]
 8002b04:	4a12      	ldr	r2, [pc, #72]	; (8002b50 <USER_GPIO_Init+0x60>)
 8002b06:	f043 0390 	orr.w	r3, r3, #144	; 0x90
 8002b0a:	6053      	str	r3, [r2, #4]
                |   ( 0x1UL <<  4U );


	// GPIOx_BSRR modified to reset pin 5 of port A (LD2 is connected to PA5)
    GPIOA->BSRR &= (0x1UL << 21U); // Immediate value
 8002b0c:	4b10      	ldr	r3, [pc, #64]	; (8002b50 <USER_GPIO_Init+0x60>)
 8002b0e:	691b      	ldr	r3, [r3, #16]
 8002b10:	4a0f      	ldr	r2, [pc, #60]	; (8002b50 <USER_GPIO_Init+0x60>)
 8002b12:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8002b16:	6113      	str	r3, [r2, #16]
    // GPIOx_CRL modified to configure pin 5 as output
    GPIOA->CRL = GPIOA->CRL & ~(0x3UL << 22U) & ~(0x2UL << 20U); // GPIOx_CRL actual value & (to clear) (mask) CNF5[1:0] bits & (to clear) (mask) MODE5_1 bit
 8002b18:	4b0d      	ldr	r3, [pc, #52]	; (8002b50 <USER_GPIO_Init+0x60>)
 8002b1a:	681b      	ldr	r3, [r3, #0]
 8002b1c:	4a0c      	ldr	r2, [pc, #48]	; (8002b50 <USER_GPIO_Init+0x60>)
 8002b1e:	f423 0360 	bic.w	r3, r3, #14680064	; 0xe00000
 8002b22:	6013      	str	r3, [r2, #0]
    // GPIOx_CRL modified to select pin 5 max speed of 10MHz
    GPIOA->CRL = GPIOA->CRL | (0x1UL << 20U); // GPIOx_CRL actual value | (to set) (mask) MODE5_0 bit
 8002b24:	4b0a      	ldr	r3, [pc, #40]	; (8002b50 <USER_GPIO_Init+0x60>)
 8002b26:	681b      	ldr	r3, [r3, #0]
 8002b28:	4a09      	ldr	r2, [pc, #36]	; (8002b50 <USER_GPIO_Init+0x60>)
 8002b2a:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8002b2e:	6013      	str	r3, [r2, #0]

    // CONFIGURE THE ADC1 PIN3 TO INPUT THE VOLTAGE
    // GPIOx_BSRR modified to reset pin 0 of port A
	GPIOA->BSRR |= (0x1UL << 16U); // Immediate value
 8002b30:	4b07      	ldr	r3, [pc, #28]	; (8002b50 <USER_GPIO_Init+0x60>)
 8002b32:	691b      	ldr	r3, [r3, #16]
 8002b34:	4a06      	ldr	r2, [pc, #24]	; (8002b50 <USER_GPIO_Init+0x60>)
 8002b36:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8002b3a:	6113      	str	r3, [r2, #16]
	// GPIOx_CRL modified to configure pin 0 as input analog
	GPIOA->CRL  &=  ~(0x3UL << 2U) & ~(0x3UL << 0U);
 8002b3c:	4b04      	ldr	r3, [pc, #16]	; (8002b50 <USER_GPIO_Init+0x60>)
 8002b3e:	681b      	ldr	r3, [r3, #0]
 8002b40:	4a03      	ldr	r2, [pc, #12]	; (8002b50 <USER_GPIO_Init+0x60>)
 8002b42:	f023 030f 	bic.w	r3, r3, #15
 8002b46:	6013      	str	r3, [r2, #0]
}
 8002b48:	bf00      	nop
 8002b4a:	46bd      	mov	sp, r7
 8002b4c:	bc80      	pop	{r7}
 8002b4e:	4770      	bx	lr
 8002b50:	40010800 	.word	0x40010800

08002b54 <rtGetInf>:
/*
 * Initialize rtInf needed by the generated code.
 * Inf is initialized as non-signaling. Assumes IEEE.
 */
real_T rtGetInf(void)
{
 8002b54:	b580      	push	{r7, lr}
 8002b56:	b088      	sub	sp, #32
 8002b58:	af00      	add	r7, sp, #0
  size_t bitsPerReal = sizeof(real_T) * (NumBitsPerChar);
 8002b5a:	2340      	movs	r3, #64	; 0x40
 8002b5c:	617b      	str	r3, [r7, #20]
  real_T inf = 0.0;
 8002b5e:	f04f 0200 	mov.w	r2, #0
 8002b62:	f04f 0300 	mov.w	r3, #0
 8002b66:	e9c7 2306 	strd	r2, r3, [r7, #24]
  if (bitsPerReal == 32U) {
 8002b6a:	697b      	ldr	r3, [r7, #20]
 8002b6c:	2b20      	cmp	r3, #32
 8002b6e:	d10a      	bne.n	8002b86 <rtGetInf+0x32>
    inf = rtGetInfF();
 8002b70:	f000 f836 	bl	8002be0 <rtGetInfF>
 8002b74:	4603      	mov	r3, r0
 8002b76:	4618      	mov	r0, r3
 8002b78:	f7fd fc66 	bl	8000448 <__aeabi_f2d>
 8002b7c:	4602      	mov	r2, r0
 8002b7e:	460b      	mov	r3, r1
 8002b80:	e9c7 2306 	strd	r2, r3, [r7, #24]
 8002b84:	e022      	b.n	8002bcc <rtGetInf+0x78>
  } else {
    uint16_T one = 1U;
 8002b86:	2301      	movs	r3, #1
 8002b88:	823b      	strh	r3, [r7, #16]
    enum {
      LittleEndian,
      BigEndian
    } machByteOrder = (*((uint8_T *) &one) == 1U) ? LittleEndian : BigEndian;
 8002b8a:	f107 0310 	add.w	r3, r7, #16
 8002b8e:	781b      	ldrb	r3, [r3, #0]
 8002b90:	2b01      	cmp	r3, #1
 8002b92:	bf14      	ite	ne
 8002b94:	2301      	movne	r3, #1
 8002b96:	2300      	moveq	r3, #0
 8002b98:	b2db      	uxtb	r3, r3
 8002b9a:	74fb      	strb	r3, [r7, #19]
    switch (machByteOrder) {
 8002b9c:	7cfb      	ldrb	r3, [r7, #19]
 8002b9e:	2b00      	cmp	r3, #0
 8002ba0:	d002      	beq.n	8002ba8 <rtGetInf+0x54>
 8002ba2:	2b01      	cmp	r3, #1
 8002ba4:	d009      	beq.n	8002bba <rtGetInf+0x66>
 8002ba6:	e011      	b.n	8002bcc <rtGetInf+0x78>
        union {
          LittleEndianIEEEDouble bitVal;
          real_T fltVal;
        } tmpVal;

        tmpVal.bitVal.words.wordH = 0x7FF00000U;
 8002ba8:	4b0c      	ldr	r3, [pc, #48]	; (8002bdc <rtGetInf+0x88>)
 8002baa:	60fb      	str	r3, [r7, #12]
        tmpVal.bitVal.words.wordL = 0x00000000U;
 8002bac:	2300      	movs	r3, #0
 8002bae:	60bb      	str	r3, [r7, #8]
        inf = tmpVal.fltVal;
 8002bb0:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8002bb4:	e9c7 2306 	strd	r2, r3, [r7, #24]
        break;
 8002bb8:	e008      	b.n	8002bcc <rtGetInf+0x78>
        union {
          BigEndianIEEEDouble bitVal;
          real_T fltVal;
        } tmpVal;

        tmpVal.bitVal.words.wordH = 0x7FF00000U;
 8002bba:	4b08      	ldr	r3, [pc, #32]	; (8002bdc <rtGetInf+0x88>)
 8002bbc:	603b      	str	r3, [r7, #0]
        tmpVal.bitVal.words.wordL = 0x00000000U;
 8002bbe:	2300      	movs	r3, #0
 8002bc0:	607b      	str	r3, [r7, #4]
        inf = tmpVal.fltVal;
 8002bc2:	e9d7 2300 	ldrd	r2, r3, [r7]
 8002bc6:	e9c7 2306 	strd	r2, r3, [r7, #24]
        break;
 8002bca:	bf00      	nop
      }
    }
  }

  return inf;
 8002bcc:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
}
 8002bd0:	4610      	mov	r0, r2
 8002bd2:	4619      	mov	r1, r3
 8002bd4:	3720      	adds	r7, #32
 8002bd6:	46bd      	mov	sp, r7
 8002bd8:	bd80      	pop	{r7, pc}
 8002bda:	bf00      	nop
 8002bdc:	7ff00000 	.word	0x7ff00000

08002be0 <rtGetInfF>:
/*
 * Initialize rtInfF needed by the generated code.
 * Inf is initialized as non-signaling. Assumes IEEE.
 */
real32_T rtGetInfF(void)
{
 8002be0:	b480      	push	{r7}
 8002be2:	b083      	sub	sp, #12
 8002be4:	af00      	add	r7, sp, #0
  IEEESingle infF;
  infF.wordL.wordLuint = 0x7F800000U;
 8002be6:	f04f 43ff 	mov.w	r3, #2139095040	; 0x7f800000
 8002bea:	607b      	str	r3, [r7, #4]
  return infF.wordL.wordLreal;
 8002bec:	687b      	ldr	r3, [r7, #4]
}
 8002bee:	4618      	mov	r0, r3
 8002bf0:	370c      	adds	r7, #12
 8002bf2:	46bd      	mov	sp, r7
 8002bf4:	bc80      	pop	{r7}
 8002bf6:	4770      	bx	lr

08002bf8 <rtGetMinusInf>:
/*
 * Initialize rtMinusInf needed by the generated code.
 * Inf is initialized as non-signaling. Assumes IEEE.
 */
real_T rtGetMinusInf(void)
{
 8002bf8:	b580      	push	{r7, lr}
 8002bfa:	b088      	sub	sp, #32
 8002bfc:	af00      	add	r7, sp, #0
  size_t bitsPerReal = sizeof(real_T) * (NumBitsPerChar);
 8002bfe:	2340      	movs	r3, #64	; 0x40
 8002c00:	617b      	str	r3, [r7, #20]
  real_T minf = 0.0;
 8002c02:	f04f 0200 	mov.w	r2, #0
 8002c06:	f04f 0300 	mov.w	r3, #0
 8002c0a:	e9c7 2306 	strd	r2, r3, [r7, #24]
  if (bitsPerReal == 32U) {
 8002c0e:	697b      	ldr	r3, [r7, #20]
 8002c10:	2b20      	cmp	r3, #32
 8002c12:	d10a      	bne.n	8002c2a <rtGetMinusInf+0x32>
    minf = rtGetMinusInfF();
 8002c14:	f000 f836 	bl	8002c84 <rtGetMinusInfF>
 8002c18:	4603      	mov	r3, r0
 8002c1a:	4618      	mov	r0, r3
 8002c1c:	f7fd fc14 	bl	8000448 <__aeabi_f2d>
 8002c20:	4602      	mov	r2, r0
 8002c22:	460b      	mov	r3, r1
 8002c24:	e9c7 2306 	strd	r2, r3, [r7, #24]
 8002c28:	e022      	b.n	8002c70 <rtGetMinusInf+0x78>
  } else {
    uint16_T one = 1U;
 8002c2a:	2301      	movs	r3, #1
 8002c2c:	823b      	strh	r3, [r7, #16]
    enum {
      LittleEndian,
      BigEndian
    } machByteOrder = (*((uint8_T *) &one) == 1U) ? LittleEndian : BigEndian;
 8002c2e:	f107 0310 	add.w	r3, r7, #16
 8002c32:	781b      	ldrb	r3, [r3, #0]
 8002c34:	2b01      	cmp	r3, #1
 8002c36:	bf14      	ite	ne
 8002c38:	2301      	movne	r3, #1
 8002c3a:	2300      	moveq	r3, #0
 8002c3c:	b2db      	uxtb	r3, r3
 8002c3e:	74fb      	strb	r3, [r7, #19]
    switch (machByteOrder) {
 8002c40:	7cfb      	ldrb	r3, [r7, #19]
 8002c42:	2b00      	cmp	r3, #0
 8002c44:	d002      	beq.n	8002c4c <rtGetMinusInf+0x54>
 8002c46:	2b01      	cmp	r3, #1
 8002c48:	d009      	beq.n	8002c5e <rtGetMinusInf+0x66>
 8002c4a:	e011      	b.n	8002c70 <rtGetMinusInf+0x78>
        union {
          LittleEndianIEEEDouble bitVal;
          real_T fltVal;
        } tmpVal;

        tmpVal.bitVal.words.wordH = 0xFFF00000U;
 8002c4c:	4b0c      	ldr	r3, [pc, #48]	; (8002c80 <rtGetMinusInf+0x88>)
 8002c4e:	60fb      	str	r3, [r7, #12]
        tmpVal.bitVal.words.wordL = 0x00000000U;
 8002c50:	2300      	movs	r3, #0
 8002c52:	60bb      	str	r3, [r7, #8]
        minf = tmpVal.fltVal;
 8002c54:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8002c58:	e9c7 2306 	strd	r2, r3, [r7, #24]
        break;
 8002c5c:	e008      	b.n	8002c70 <rtGetMinusInf+0x78>
        union {
          BigEndianIEEEDouble bitVal;
          real_T fltVal;
        } tmpVal;

        tmpVal.bitVal.words.wordH = 0xFFF00000U;
 8002c5e:	4b08      	ldr	r3, [pc, #32]	; (8002c80 <rtGetMinusInf+0x88>)
 8002c60:	603b      	str	r3, [r7, #0]
        tmpVal.bitVal.words.wordL = 0x00000000U;
 8002c62:	2300      	movs	r3, #0
 8002c64:	607b      	str	r3, [r7, #4]
        minf = tmpVal.fltVal;
 8002c66:	e9d7 2300 	ldrd	r2, r3, [r7]
 8002c6a:	e9c7 2306 	strd	r2, r3, [r7, #24]
        break;
 8002c6e:	bf00      	nop
      }
    }
  }

  return minf;
 8002c70:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
}
 8002c74:	4610      	mov	r0, r2
 8002c76:	4619      	mov	r1, r3
 8002c78:	3720      	adds	r7, #32
 8002c7a:	46bd      	mov	sp, r7
 8002c7c:	bd80      	pop	{r7, pc}
 8002c7e:	bf00      	nop
 8002c80:	fff00000 	.word	0xfff00000

08002c84 <rtGetMinusInfF>:
/*
 * Initialize rtMinusInfF needed by the generated code.
 * Inf is initialized as non-signaling. Assumes IEEE.
 */
real32_T rtGetMinusInfF(void)
{
 8002c84:	b480      	push	{r7}
 8002c86:	b083      	sub	sp, #12
 8002c88:	af00      	add	r7, sp, #0
  IEEESingle minfF;
  minfF.wordL.wordLuint = 0xFF800000U;
 8002c8a:	4b04      	ldr	r3, [pc, #16]	; (8002c9c <rtGetMinusInfF+0x18>)
 8002c8c:	607b      	str	r3, [r7, #4]
  return minfF.wordL.wordLreal;
 8002c8e:	687b      	ldr	r3, [r7, #4]
}
 8002c90:	4618      	mov	r0, r3
 8002c92:	370c      	adds	r7, #12
 8002c94:	46bd      	mov	sp, r7
 8002c96:	bc80      	pop	{r7}
 8002c98:	4770      	bx	lr
 8002c9a:	bf00      	nop
 8002c9c:	ff800000 	.word	0xff800000

08002ca0 <rtGetNaN>:
/*
 * Initialize rtNaN needed by the generated code.
 * NaN is initialized as non-signaling. Assumes IEEE.
 */
real_T rtGetNaN(void)
{
 8002ca0:	b580      	push	{r7, lr}
 8002ca2:	b088      	sub	sp, #32
 8002ca4:	af00      	add	r7, sp, #0
  size_t bitsPerReal = sizeof(real_T) * (NumBitsPerChar);
 8002ca6:	2340      	movs	r3, #64	; 0x40
 8002ca8:	617b      	str	r3, [r7, #20]
  real_T nan = 0.0;
 8002caa:	f04f 0200 	mov.w	r2, #0
 8002cae:	f04f 0300 	mov.w	r3, #0
 8002cb2:	e9c7 2306 	strd	r2, r3, [r7, #24]
  if (bitsPerReal == 32U) {
 8002cb6:	697b      	ldr	r3, [r7, #20]
 8002cb8:	2b20      	cmp	r3, #32
 8002cba:	d10a      	bne.n	8002cd2 <rtGetNaN+0x32>
    nan = rtGetNaNF();
 8002cbc:	f000 f838 	bl	8002d30 <rtGetNaNF>
 8002cc0:	4603      	mov	r3, r0
 8002cc2:	4618      	mov	r0, r3
 8002cc4:	f7fd fbc0 	bl	8000448 <__aeabi_f2d>
 8002cc8:	4602      	mov	r2, r0
 8002cca:	460b      	mov	r3, r1
 8002ccc:	e9c7 2306 	strd	r2, r3, [r7, #24]
 8002cd0:	e024      	b.n	8002d1c <rtGetNaN+0x7c>
  } else {
    uint16_T one = 1U;
 8002cd2:	2301      	movs	r3, #1
 8002cd4:	823b      	strh	r3, [r7, #16]
    enum {
      LittleEndian,
      BigEndian
    } machByteOrder = (*((uint8_T *) &one) == 1U) ? LittleEndian : BigEndian;
 8002cd6:	f107 0310 	add.w	r3, r7, #16
 8002cda:	781b      	ldrb	r3, [r3, #0]
 8002cdc:	2b01      	cmp	r3, #1
 8002cde:	bf14      	ite	ne
 8002ce0:	2301      	movne	r3, #1
 8002ce2:	2300      	moveq	r3, #0
 8002ce4:	b2db      	uxtb	r3, r3
 8002ce6:	74fb      	strb	r3, [r7, #19]
    switch (machByteOrder) {
 8002ce8:	7cfb      	ldrb	r3, [r7, #19]
 8002cea:	2b00      	cmp	r3, #0
 8002cec:	d002      	beq.n	8002cf4 <rtGetNaN+0x54>
 8002cee:	2b01      	cmp	r3, #1
 8002cf0:	d009      	beq.n	8002d06 <rtGetNaN+0x66>
 8002cf2:	e013      	b.n	8002d1c <rtGetNaN+0x7c>
        union {
          LittleEndianIEEEDouble bitVal;
          real_T fltVal;
        } tmpVal;

        tmpVal.bitVal.words.wordH = 0xFFF80000U;
 8002cf4:	4b0d      	ldr	r3, [pc, #52]	; (8002d2c <rtGetNaN+0x8c>)
 8002cf6:	60fb      	str	r3, [r7, #12]
        tmpVal.bitVal.words.wordL = 0x00000000U;
 8002cf8:	2300      	movs	r3, #0
 8002cfa:	60bb      	str	r3, [r7, #8]
        nan = tmpVal.fltVal;
 8002cfc:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8002d00:	e9c7 2306 	strd	r2, r3, [r7, #24]
        break;
 8002d04:	e00a      	b.n	8002d1c <rtGetNaN+0x7c>
        union {
          BigEndianIEEEDouble bitVal;
          real_T fltVal;
        } tmpVal;

        tmpVal.bitVal.words.wordH = 0x7FFFFFFFU;
 8002d06:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 8002d0a:	603b      	str	r3, [r7, #0]
        tmpVal.bitVal.words.wordL = 0xFFFFFFFFU;
 8002d0c:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8002d10:	607b      	str	r3, [r7, #4]
        nan = tmpVal.fltVal;
 8002d12:	e9d7 2300 	ldrd	r2, r3, [r7]
 8002d16:	e9c7 2306 	strd	r2, r3, [r7, #24]
        break;
 8002d1a:	bf00      	nop
      }
    }
  }

  return nan;
 8002d1c:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
}
 8002d20:	4610      	mov	r0, r2
 8002d22:	4619      	mov	r1, r3
 8002d24:	3720      	adds	r7, #32
 8002d26:	46bd      	mov	sp, r7
 8002d28:	bd80      	pop	{r7, pc}
 8002d2a:	bf00      	nop
 8002d2c:	fff80000 	.word	0xfff80000

08002d30 <rtGetNaNF>:
/*
 * Initialize rtNaNF needed by the generated code.
 * NaN is initialized as non-signaling. Assumes IEEE.
 */
real32_T rtGetNaNF(void)
{
 8002d30:	b480      	push	{r7}
 8002d32:	b085      	sub	sp, #20
 8002d34:	af00      	add	r7, sp, #0
  IEEESingle nanF = { { 0 } };
 8002d36:	f04f 0300 	mov.w	r3, #0
 8002d3a:	60bb      	str	r3, [r7, #8]

  uint16_T one = 1U;
 8002d3c:	2301      	movs	r3, #1
 8002d3e:	80fb      	strh	r3, [r7, #6]
  enum {
    LittleEndian,
    BigEndian
  } machByteOrder = (*((uint8_T *) &one) == 1U) ? LittleEndian : BigEndian;
 8002d40:	1dbb      	adds	r3, r7, #6
 8002d42:	781b      	ldrb	r3, [r3, #0]
 8002d44:	2b01      	cmp	r3, #1
 8002d46:	bf14      	ite	ne
 8002d48:	2301      	movne	r3, #1
 8002d4a:	2300      	moveq	r3, #0
 8002d4c:	b2db      	uxtb	r3, r3
 8002d4e:	73fb      	strb	r3, [r7, #15]
  switch (machByteOrder) {
 8002d50:	7bfb      	ldrb	r3, [r7, #15]
 8002d52:	2b00      	cmp	r3, #0
 8002d54:	d002      	beq.n	8002d5c <rtGetNaNF+0x2c>
 8002d56:	2b01      	cmp	r3, #1
 8002d58:	d003      	beq.n	8002d62 <rtGetNaNF+0x32>
 8002d5a:	e006      	b.n	8002d6a <rtGetNaNF+0x3a>
   case LittleEndian:
    {
      nanF.wordL.wordLuint = 0xFFC00000U;
 8002d5c:	4b06      	ldr	r3, [pc, #24]	; (8002d78 <rtGetNaNF+0x48>)
 8002d5e:	60bb      	str	r3, [r7, #8]
      break;
 8002d60:	e003      	b.n	8002d6a <rtGetNaNF+0x3a>
    }

   case BigEndian:
    {
      nanF.wordL.wordLuint = 0x7FFFFFFFU;
 8002d62:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 8002d66:	60bb      	str	r3, [r7, #8]
      break;
 8002d68:	bf00      	nop
    }
  }

  return nanF.wordL.wordLreal;
 8002d6a:	68bb      	ldr	r3, [r7, #8]
}
 8002d6c:	4618      	mov	r0, r3
 8002d6e:	3714      	adds	r7, #20
 8002d70:	46bd      	mov	sp, r7
 8002d72:	bc80      	pop	{r7}
 8002d74:	4770      	bx	lr
 8002d76:	bf00      	nop
 8002d78:	ffc00000 	.word	0xffc00000

08002d7c <rt_InitInfAndNaN>:
/*
 * Initialize the rtInf, rtMinusInf, and rtNaN needed by the
 * generated code. NaN is initialized as non-signaling. Assumes IEEE.
 */
void rt_InitInfAndNaN(size_t realSize)
{
 8002d7c:	b580      	push	{r7, lr}
 8002d7e:	b082      	sub	sp, #8
 8002d80:	af00      	add	r7, sp, #0
 8002d82:	6078      	str	r0, [r7, #4]
  (void) (realSize);
  rtNaN = rtGetNaN();
 8002d84:	f7ff ff8c 	bl	8002ca0 <rtGetNaN>
 8002d88:	4602      	mov	r2, r0
 8002d8a:	460b      	mov	r3, r1
 8002d8c:	4911      	ldr	r1, [pc, #68]	; (8002dd4 <rt_InitInfAndNaN+0x58>)
 8002d8e:	e9c1 2300 	strd	r2, r3, [r1]
  rtNaNF = rtGetNaNF();
 8002d92:	f7ff ffcd 	bl	8002d30 <rtGetNaNF>
 8002d96:	4603      	mov	r3, r0
 8002d98:	4a0f      	ldr	r2, [pc, #60]	; (8002dd8 <rt_InitInfAndNaN+0x5c>)
 8002d9a:	6013      	str	r3, [r2, #0]
  rtInf = rtGetInf();
 8002d9c:	f7ff feda 	bl	8002b54 <rtGetInf>
 8002da0:	4602      	mov	r2, r0
 8002da2:	460b      	mov	r3, r1
 8002da4:	490d      	ldr	r1, [pc, #52]	; (8002ddc <rt_InitInfAndNaN+0x60>)
 8002da6:	e9c1 2300 	strd	r2, r3, [r1]
  rtInfF = rtGetInfF();
 8002daa:	f7ff ff19 	bl	8002be0 <rtGetInfF>
 8002dae:	4603      	mov	r3, r0
 8002db0:	4a0b      	ldr	r2, [pc, #44]	; (8002de0 <rt_InitInfAndNaN+0x64>)
 8002db2:	6013      	str	r3, [r2, #0]
  rtMinusInf = rtGetMinusInf();
 8002db4:	f7ff ff20 	bl	8002bf8 <rtGetMinusInf>
 8002db8:	4602      	mov	r2, r0
 8002dba:	460b      	mov	r3, r1
 8002dbc:	4909      	ldr	r1, [pc, #36]	; (8002de4 <rt_InitInfAndNaN+0x68>)
 8002dbe:	e9c1 2300 	strd	r2, r3, [r1]
  rtMinusInfF = rtGetMinusInfF();
 8002dc2:	f7ff ff5f 	bl	8002c84 <rtGetMinusInfF>
 8002dc6:	4603      	mov	r3, r0
 8002dc8:	4a07      	ldr	r2, [pc, #28]	; (8002de8 <rt_InitInfAndNaN+0x6c>)
 8002dca:	6013      	str	r3, [r2, #0]
}
 8002dcc:	bf00      	nop
 8002dce:	3708      	adds	r7, #8
 8002dd0:	46bd      	mov	sp, r7
 8002dd2:	bd80      	pop	{r7, pc}
 8002dd4:	20000290 	.word	0x20000290
 8002dd8:	200002a0 	.word	0x200002a0
 8002ddc:	20000280 	.word	0x20000280
 8002de0:	20000298 	.word	0x20000298
 8002de4:	20000288 	.word	0x20000288
 8002de8:	2000029c 	.word	0x2000029c

08002dec <rtIsInf>:

/* Test if value is infinite */
boolean_T rtIsInf(real_T value)
{
 8002dec:	b580      	push	{r7, lr}
 8002dee:	b082      	sub	sp, #8
 8002df0:	af00      	add	r7, sp, #0
 8002df2:	e9c7 0100 	strd	r0, r1, [r7]
  return (boolean_T)((value==rtInf || value==rtMinusInf) ? 1U : 0U);
 8002df6:	4b0d      	ldr	r3, [pc, #52]	; (8002e2c <rtIsInf+0x40>)
 8002df8:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002dfc:	e9d7 0100 	ldrd	r0, r1, [r7]
 8002e00:	f7fd fde2 	bl	80009c8 <__aeabi_dcmpeq>
 8002e04:	4603      	mov	r3, r0
 8002e06:	2b00      	cmp	r3, #0
 8002e08:	d109      	bne.n	8002e1e <rtIsInf+0x32>
 8002e0a:	4b09      	ldr	r3, [pc, #36]	; (8002e30 <rtIsInf+0x44>)
 8002e0c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002e10:	e9d7 0100 	ldrd	r0, r1, [r7]
 8002e14:	f7fd fdd8 	bl	80009c8 <__aeabi_dcmpeq>
 8002e18:	4603      	mov	r3, r0
 8002e1a:	2b00      	cmp	r3, #0
 8002e1c:	d001      	beq.n	8002e22 <rtIsInf+0x36>
 8002e1e:	2301      	movs	r3, #1
 8002e20:	e000      	b.n	8002e24 <rtIsInf+0x38>
 8002e22:	2300      	movs	r3, #0
}
 8002e24:	4618      	mov	r0, r3
 8002e26:	3708      	adds	r7, #8
 8002e28:	46bd      	mov	sp, r7
 8002e2a:	bd80      	pop	{r7, pc}
 8002e2c:	20000280 	.word	0x20000280
 8002e30:	20000288 	.word	0x20000288

08002e34 <rtIsNaN>:
  return (boolean_T)(((value)==rtInfF || (value)==rtMinusInfF) ? 1U : 0U);
}

/* Test if value is not a number */
boolean_T rtIsNaN(real_T value)
{
 8002e34:	b580      	push	{r7, lr}
 8002e36:	b08a      	sub	sp, #40	; 0x28
 8002e38:	af00      	add	r7, sp, #0
 8002e3a:	e9c7 0100 	strd	r0, r1, [r7]
  boolean_T result = (boolean_T) 0;
 8002e3e:	2300      	movs	r3, #0
 8002e40:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
  size_t bitsPerReal = sizeof(real_T) * (NumBitsPerChar);
 8002e44:	2340      	movs	r3, #64	; 0x40
 8002e46:	623b      	str	r3, [r7, #32]
  if (bitsPerReal == 32U) {
 8002e48:	6a3b      	ldr	r3, [r7, #32]
 8002e4a:	2b20      	cmp	r3, #32
 8002e4c:	d10b      	bne.n	8002e66 <rtIsNaN+0x32>
    result = rtIsNaNF((real32_T)value);
 8002e4e:	e9d7 0100 	ldrd	r0, r1, [r7]
 8002e52:	f7fd fe49 	bl	8000ae8 <__aeabi_d2f>
 8002e56:	4603      	mov	r3, r0
 8002e58:	4618      	mov	r0, r3
 8002e5a:	f000 f84d 	bl	8002ef8 <rtIsNaNF>
 8002e5e:	4603      	mov	r3, r0
 8002e60:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 8002e64:	e040      	b.n	8002ee8 <rtIsNaN+0xb4>
  } else {
    uint16_T one = 1U;
 8002e66:	2301      	movs	r3, #1
 8002e68:	83bb      	strh	r3, [r7, #28]
    enum {
      LittleEndian,
      BigEndian
    } machByteOrder = (*((uint8_T *) &one) == 1U) ? LittleEndian : BigEndian;
 8002e6a:	f107 031c 	add.w	r3, r7, #28
 8002e6e:	781b      	ldrb	r3, [r3, #0]
 8002e70:	2b01      	cmp	r3, #1
 8002e72:	bf14      	ite	ne
 8002e74:	2301      	movne	r3, #1
 8002e76:	2300      	moveq	r3, #0
 8002e78:	b2db      	uxtb	r3, r3
 8002e7a:	77fb      	strb	r3, [r7, #31]
    switch (machByteOrder) {
 8002e7c:	7ffb      	ldrb	r3, [r7, #31]
 8002e7e:	2b00      	cmp	r3, #0
 8002e80:	d002      	beq.n	8002e88 <rtIsNaN+0x54>
 8002e82:	2b01      	cmp	r3, #1
 8002e84:	d018      	beq.n	8002eb8 <rtIsNaN+0x84>
 8002e86:	e02f      	b.n	8002ee8 <rtIsNaN+0xb4>
        union {
          LittleEndianIEEEDouble bitVal;
          real_T fltVal;
        } tmpVal;

        tmpVal.fltVal = value;
 8002e88:	e9d7 2300 	ldrd	r2, r3, [r7]
 8002e8c:	e9c7 2304 	strd	r2, r3, [r7, #16]
        result = (boolean_T)((tmpVal.bitVal.words.wordH & 0x7FF00000) ==
 8002e90:	697a      	ldr	r2, [r7, #20]
 8002e92:	4b18      	ldr	r3, [pc, #96]	; (8002ef4 <rtIsNaN+0xc0>)
 8002e94:	4013      	ands	r3, r2
                             0x7FF00000 &&
 8002e96:	4a17      	ldr	r2, [pc, #92]	; (8002ef4 <rtIsNaN+0xc0>)
 8002e98:	4293      	cmp	r3, r2
 8002e9a:	d109      	bne.n	8002eb0 <rtIsNaN+0x7c>
                             ( (tmpVal.bitVal.words.wordH & 0x000FFFFF) != 0 ||
 8002e9c:	697b      	ldr	r3, [r7, #20]
 8002e9e:	f3c3 0313 	ubfx	r3, r3, #0, #20
                             0x7FF00000 &&
 8002ea2:	2b00      	cmp	r3, #0
 8002ea4:	d102      	bne.n	8002eac <rtIsNaN+0x78>
                              (tmpVal.bitVal.words.wordL != 0) ));
 8002ea6:	693b      	ldr	r3, [r7, #16]
                             ( (tmpVal.bitVal.words.wordH & 0x000FFFFF) != 0 ||
 8002ea8:	2b00      	cmp	r3, #0
 8002eaa:	d001      	beq.n	8002eb0 <rtIsNaN+0x7c>
                             0x7FF00000 &&
 8002eac:	2301      	movs	r3, #1
 8002eae:	e000      	b.n	8002eb2 <rtIsNaN+0x7e>
 8002eb0:	2300      	movs	r3, #0
        result = (boolean_T)((tmpVal.bitVal.words.wordH & 0x7FF00000) ==
 8002eb2:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
        break;
 8002eb6:	e017      	b.n	8002ee8 <rtIsNaN+0xb4>
        union {
          BigEndianIEEEDouble bitVal;
          real_T fltVal;
        } tmpVal;

        tmpVal.fltVal = value;
 8002eb8:	e9d7 2300 	ldrd	r2, r3, [r7]
 8002ebc:	e9c7 2302 	strd	r2, r3, [r7, #8]
        result = (boolean_T)((tmpVal.bitVal.words.wordH & 0x7FF00000) ==
 8002ec0:	68ba      	ldr	r2, [r7, #8]
 8002ec2:	4b0c      	ldr	r3, [pc, #48]	; (8002ef4 <rtIsNaN+0xc0>)
 8002ec4:	4013      	ands	r3, r2
                             0x7FF00000 &&
 8002ec6:	4a0b      	ldr	r2, [pc, #44]	; (8002ef4 <rtIsNaN+0xc0>)
 8002ec8:	4293      	cmp	r3, r2
 8002eca:	d109      	bne.n	8002ee0 <rtIsNaN+0xac>
                             ( (tmpVal.bitVal.words.wordH & 0x000FFFFF) != 0 ||
 8002ecc:	68bb      	ldr	r3, [r7, #8]
 8002ece:	f3c3 0313 	ubfx	r3, r3, #0, #20
                             0x7FF00000 &&
 8002ed2:	2b00      	cmp	r3, #0
 8002ed4:	d102      	bne.n	8002edc <rtIsNaN+0xa8>
                              (tmpVal.bitVal.words.wordL != 0) ));
 8002ed6:	68fb      	ldr	r3, [r7, #12]
                             ( (tmpVal.bitVal.words.wordH & 0x000FFFFF) != 0 ||
 8002ed8:	2b00      	cmp	r3, #0
 8002eda:	d001      	beq.n	8002ee0 <rtIsNaN+0xac>
                             0x7FF00000 &&
 8002edc:	2301      	movs	r3, #1
 8002ede:	e000      	b.n	8002ee2 <rtIsNaN+0xae>
 8002ee0:	2300      	movs	r3, #0
        result = (boolean_T)((tmpVal.bitVal.words.wordH & 0x7FF00000) ==
 8002ee2:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
        break;
 8002ee6:	bf00      	nop
      }
    }
  }

  return result;
 8002ee8:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
}
 8002eec:	4618      	mov	r0, r3
 8002eee:	3728      	adds	r7, #40	; 0x28
 8002ef0:	46bd      	mov	sp, r7
 8002ef2:	bd80      	pop	{r7, pc}
 8002ef4:	7ff00000 	.word	0x7ff00000

08002ef8 <rtIsNaNF>:

/* Test if single-precision value is not a number */
boolean_T rtIsNaNF(real32_T value)
{
 8002ef8:	b480      	push	{r7}
 8002efa:	b085      	sub	sp, #20
 8002efc:	af00      	add	r7, sp, #0
 8002efe:	6078      	str	r0, [r7, #4]
  IEEESingle tmp;
  tmp.wordL.wordLreal = value;
 8002f00:	687b      	ldr	r3, [r7, #4]
 8002f02:	60fb      	str	r3, [r7, #12]
  return (boolean_T)( (tmp.wordL.wordLuint & 0x7F800000) == 0x7F800000 &&
 8002f04:	68fb      	ldr	r3, [r7, #12]
 8002f06:	f003 43ff 	and.w	r3, r3, #2139095040	; 0x7f800000
 8002f0a:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 8002f0e:	d106      	bne.n	8002f1e <rtIsNaNF+0x26>
                     (tmp.wordL.wordLuint & 0x007FFFFF) != 0 );
 8002f10:	68fb      	ldr	r3, [r7, #12]
 8002f12:	f3c3 0316 	ubfx	r3, r3, #0, #23
  return (boolean_T)( (tmp.wordL.wordLuint & 0x7F800000) == 0x7F800000 &&
 8002f16:	2b00      	cmp	r3, #0
 8002f18:	d001      	beq.n	8002f1e <rtIsNaNF+0x26>
 8002f1a:	2301      	movs	r3, #1
 8002f1c:	e000      	b.n	8002f20 <rtIsNaNF+0x28>
 8002f1e:	2300      	movs	r3, #0
 8002f20:	b2db      	uxtb	r3, r3
}
 8002f22:	4618      	mov	r0, r3
 8002f24:	3714      	adds	r7, #20
 8002f26:	46bd      	mov	sp, r7
 8002f28:	bc80      	pop	{r7}
 8002f2a:	4770      	bx	lr

08002f2c <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8002f2c:	b480      	push	{r7}
 8002f2e:	af00      	add	r7, sp, #0
  return 1;
 8002f30:	2301      	movs	r3, #1
}
 8002f32:	4618      	mov	r0, r3
 8002f34:	46bd      	mov	sp, r7
 8002f36:	bc80      	pop	{r7}
 8002f38:	4770      	bx	lr

08002f3a <_kill>:

int _kill(int pid, int sig)
{
 8002f3a:	b580      	push	{r7, lr}
 8002f3c:	b082      	sub	sp, #8
 8002f3e:	af00      	add	r7, sp, #0
 8002f40:	6078      	str	r0, [r7, #4]
 8002f42:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 8002f44:	f001 ffd8 	bl	8004ef8 <__errno>
 8002f48:	4603      	mov	r3, r0
 8002f4a:	2216      	movs	r2, #22
 8002f4c:	601a      	str	r2, [r3, #0]
  return -1;
 8002f4e:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
}
 8002f52:	4618      	mov	r0, r3
 8002f54:	3708      	adds	r7, #8
 8002f56:	46bd      	mov	sp, r7
 8002f58:	bd80      	pop	{r7, pc}

08002f5a <_exit>:

void _exit (int status)
{
 8002f5a:	b580      	push	{r7, lr}
 8002f5c:	b082      	sub	sp, #8
 8002f5e:	af00      	add	r7, sp, #0
 8002f60:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 8002f62:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8002f66:	6878      	ldr	r0, [r7, #4]
 8002f68:	f7ff ffe7 	bl	8002f3a <_kill>
  while (1) {}    /* Make sure we hang here */
 8002f6c:	e7fe      	b.n	8002f6c <_exit+0x12>

08002f6e <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8002f6e:	b580      	push	{r7, lr}
 8002f70:	b086      	sub	sp, #24
 8002f72:	af00      	add	r7, sp, #0
 8002f74:	60f8      	str	r0, [r7, #12]
 8002f76:	60b9      	str	r1, [r7, #8]
 8002f78:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002f7a:	2300      	movs	r3, #0
 8002f7c:	617b      	str	r3, [r7, #20]
 8002f7e:	e00a      	b.n	8002f96 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 8002f80:	f3af 8000 	nop.w
 8002f84:	4601      	mov	r1, r0
 8002f86:	68bb      	ldr	r3, [r7, #8]
 8002f88:	1c5a      	adds	r2, r3, #1
 8002f8a:	60ba      	str	r2, [r7, #8]
 8002f8c:	b2ca      	uxtb	r2, r1
 8002f8e:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002f90:	697b      	ldr	r3, [r7, #20]
 8002f92:	3301      	adds	r3, #1
 8002f94:	617b      	str	r3, [r7, #20]
 8002f96:	697a      	ldr	r2, [r7, #20]
 8002f98:	687b      	ldr	r3, [r7, #4]
 8002f9a:	429a      	cmp	r2, r3
 8002f9c:	dbf0      	blt.n	8002f80 <_read+0x12>
  }

  return len;
 8002f9e:	687b      	ldr	r3, [r7, #4]
}
 8002fa0:	4618      	mov	r0, r3
 8002fa2:	3718      	adds	r7, #24
 8002fa4:	46bd      	mov	sp, r7
 8002fa6:	bd80      	pop	{r7, pc}

08002fa8 <_close>:
  }
  return len;
}

int _close(int file)
{
 8002fa8:	b480      	push	{r7}
 8002faa:	b083      	sub	sp, #12
 8002fac:	af00      	add	r7, sp, #0
 8002fae:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8002fb0:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
}
 8002fb4:	4618      	mov	r0, r3
 8002fb6:	370c      	adds	r7, #12
 8002fb8:	46bd      	mov	sp, r7
 8002fba:	bc80      	pop	{r7}
 8002fbc:	4770      	bx	lr

08002fbe <_fstat>:


int _fstat(int file, struct stat *st)
{
 8002fbe:	b480      	push	{r7}
 8002fc0:	b083      	sub	sp, #12
 8002fc2:	af00      	add	r7, sp, #0
 8002fc4:	6078      	str	r0, [r7, #4]
 8002fc6:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8002fc8:	683b      	ldr	r3, [r7, #0]
 8002fca:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8002fce:	605a      	str	r2, [r3, #4]
  return 0;
 8002fd0:	2300      	movs	r3, #0
}
 8002fd2:	4618      	mov	r0, r3
 8002fd4:	370c      	adds	r7, #12
 8002fd6:	46bd      	mov	sp, r7
 8002fd8:	bc80      	pop	{r7}
 8002fda:	4770      	bx	lr

08002fdc <_isatty>:

int _isatty(int file)
{
 8002fdc:	b480      	push	{r7}
 8002fde:	b083      	sub	sp, #12
 8002fe0:	af00      	add	r7, sp, #0
 8002fe2:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8002fe4:	2301      	movs	r3, #1
}
 8002fe6:	4618      	mov	r0, r3
 8002fe8:	370c      	adds	r7, #12
 8002fea:	46bd      	mov	sp, r7
 8002fec:	bc80      	pop	{r7}
 8002fee:	4770      	bx	lr

08002ff0 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8002ff0:	b480      	push	{r7}
 8002ff2:	b085      	sub	sp, #20
 8002ff4:	af00      	add	r7, sp, #0
 8002ff6:	60f8      	str	r0, [r7, #12]
 8002ff8:	60b9      	str	r1, [r7, #8]
 8002ffa:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8002ffc:	2300      	movs	r3, #0
}
 8002ffe:	4618      	mov	r0, r3
 8003000:	3714      	adds	r7, #20
 8003002:	46bd      	mov	sp, r7
 8003004:	bc80      	pop	{r7}
 8003006:	4770      	bx	lr

08003008 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8003008:	b580      	push	{r7, lr}
 800300a:	b086      	sub	sp, #24
 800300c:	af00      	add	r7, sp, #0
 800300e:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8003010:	4a14      	ldr	r2, [pc, #80]	; (8003064 <_sbrk+0x5c>)
 8003012:	4b15      	ldr	r3, [pc, #84]	; (8003068 <_sbrk+0x60>)
 8003014:	1ad3      	subs	r3, r2, r3
 8003016:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8003018:	697b      	ldr	r3, [r7, #20]
 800301a:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 800301c:	4b13      	ldr	r3, [pc, #76]	; (800306c <_sbrk+0x64>)
 800301e:	681b      	ldr	r3, [r3, #0]
 8003020:	2b00      	cmp	r3, #0
 8003022:	d102      	bne.n	800302a <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8003024:	4b11      	ldr	r3, [pc, #68]	; (800306c <_sbrk+0x64>)
 8003026:	4a12      	ldr	r2, [pc, #72]	; (8003070 <_sbrk+0x68>)
 8003028:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800302a:	4b10      	ldr	r3, [pc, #64]	; (800306c <_sbrk+0x64>)
 800302c:	681a      	ldr	r2, [r3, #0]
 800302e:	687b      	ldr	r3, [r7, #4]
 8003030:	4413      	add	r3, r2
 8003032:	693a      	ldr	r2, [r7, #16]
 8003034:	429a      	cmp	r2, r3
 8003036:	d207      	bcs.n	8003048 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8003038:	f001 ff5e 	bl	8004ef8 <__errno>
 800303c:	4603      	mov	r3, r0
 800303e:	220c      	movs	r2, #12
 8003040:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8003042:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8003046:	e009      	b.n	800305c <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8003048:	4b08      	ldr	r3, [pc, #32]	; (800306c <_sbrk+0x64>)
 800304a:	681b      	ldr	r3, [r3, #0]
 800304c:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800304e:	4b07      	ldr	r3, [pc, #28]	; (800306c <_sbrk+0x64>)
 8003050:	681a      	ldr	r2, [r3, #0]
 8003052:	687b      	ldr	r3, [r7, #4]
 8003054:	4413      	add	r3, r2
 8003056:	4a05      	ldr	r2, [pc, #20]	; (800306c <_sbrk+0x64>)
 8003058:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800305a:	68fb      	ldr	r3, [r7, #12]
}
 800305c:	4618      	mov	r0, r3
 800305e:	3718      	adds	r7, #24
 8003060:	46bd      	mov	sp, r7
 8003062:	bd80      	pop	{r7, pc}
 8003064:	20005000 	.word	0x20005000
 8003068:	00000400 	.word	0x00000400
 800306c:	200002a4 	.word	0x200002a4
 8003070:	200003f8 	.word	0x200003f8

08003074 <tim2_get_prescaler>:

#include "timers.h"
#include "main.h"
#include <math.h>

uint16_t tim2_get_prescaler(float time) {
 8003074:	b580      	push	{r7, lr}
 8003076:	b082      	sub	sp, #8
 8003078:	af00      	add	r7, sp, #0
 800307a:	6078      	str	r0, [r7, #4]
    return (uint16_t)(ceil((time / (T_HCLK * ((65535 + 1) - 0))) - 1));
 800307c:	490f      	ldr	r1, [pc, #60]	; (80030bc <tim2_get_prescaler+0x48>)
 800307e:	6878      	ldr	r0, [r7, #4]
 8003080:	f7fd ff44 	bl	8000f0c <__aeabi_fdiv>
 8003084:	4603      	mov	r3, r0
 8003086:	f04f 517e 	mov.w	r1, #1065353216	; 0x3f800000
 800308a:	4618      	mov	r0, r3
 800308c:	f7fd fd80 	bl	8000b90 <__aeabi_fsub>
 8003090:	4603      	mov	r3, r0
 8003092:	4618      	mov	r0, r3
 8003094:	f7fd f9d8 	bl	8000448 <__aeabi_f2d>
 8003098:	4602      	mov	r2, r0
 800309a:	460b      	mov	r3, r1
 800309c:	4610      	mov	r0, r2
 800309e:	4619      	mov	r1, r3
 80030a0:	f004 fe42 	bl	8007d28 <ceil>
 80030a4:	4602      	mov	r2, r0
 80030a6:	460b      	mov	r3, r1
 80030a8:	4610      	mov	r0, r2
 80030aa:	4619      	mov	r1, r3
 80030ac:	f7fd fcfc 	bl	8000aa8 <__aeabi_d2uiz>
 80030b0:	4603      	mov	r3, r0
 80030b2:	b29b      	uxth	r3, r3
}
 80030b4:	4618      	mov	r0, r3
 80030b6:	3708      	adds	r7, #8
 80030b8:	46bd      	mov	sp, r7
 80030ba:	bd80      	pop	{r7, pc}
 80030bc:	3b0637bd 	.word	0x3b0637bd

080030c0 <tim2_get_init_count>:

uint16_t tim2_get_init_count(float time, uint16_t prescaler) {
 80030c0:	b580      	push	{r7, lr}
 80030c2:	b082      	sub	sp, #8
 80030c4:	af00      	add	r7, sp, #0
 80030c6:	6078      	str	r0, [r7, #4]
 80030c8:	460b      	mov	r3, r1
 80030ca:	807b      	strh	r3, [r7, #2]
    return (uint16_t)((65535 + 1) - (round(time / (T_HCLK * (prescaler + 1)))));
 80030cc:	887b      	ldrh	r3, [r7, #2]
 80030ce:	3301      	adds	r3, #1
 80030d0:	4618      	mov	r0, r3
 80030d2:	f7fd fe13 	bl	8000cfc <__aeabi_i2f>
 80030d6:	4603      	mov	r3, r0
 80030d8:	4912      	ldr	r1, [pc, #72]	; (8003124 <tim2_get_init_count+0x64>)
 80030da:	4618      	mov	r0, r3
 80030dc:	f7fd fe62 	bl	8000da4 <__aeabi_fmul>
 80030e0:	4603      	mov	r3, r0
 80030e2:	4619      	mov	r1, r3
 80030e4:	6878      	ldr	r0, [r7, #4]
 80030e6:	f7fd ff11 	bl	8000f0c <__aeabi_fdiv>
 80030ea:	4603      	mov	r3, r0
 80030ec:	4618      	mov	r0, r3
 80030ee:	f7fd f9ab 	bl	8000448 <__aeabi_f2d>
 80030f2:	4602      	mov	r2, r0
 80030f4:	460b      	mov	r3, r1
 80030f6:	4610      	mov	r0, r2
 80030f8:	4619      	mov	r1, r3
 80030fa:	f004 ff15 	bl	8007f28 <round>
 80030fe:	4602      	mov	r2, r0
 8003100:	460b      	mov	r3, r1
 8003102:	f04f 0000 	mov.w	r0, #0
 8003106:	4908      	ldr	r1, [pc, #32]	; (8003128 <tim2_get_init_count+0x68>)
 8003108:	f7fd f83e 	bl	8000188 <__aeabi_dsub>
 800310c:	4602      	mov	r2, r0
 800310e:	460b      	mov	r3, r1
 8003110:	4610      	mov	r0, r2
 8003112:	4619      	mov	r1, r3
 8003114:	f7fd fcc8 	bl	8000aa8 <__aeabi_d2uiz>
 8003118:	4603      	mov	r3, r0
 800311a:	b29b      	uxth	r3, r3
}
 800311c:	4618      	mov	r0, r3
 800311e:	3708      	adds	r7, #8
 8003120:	46bd      	mov	sp, r7
 8003122:	bd80      	pop	{r7, pc}
 8003124:	330637bd 	.word	0x330637bd
 8003128:	40f00000 	.word	0x40f00000

0800312c <tim2_delay>:

void tim2_delay(float time) {
 800312c:	b580      	push	{r7, lr}
 800312e:	b084      	sub	sp, #16
 8003130:	af00      	add	r7, sp, #0
 8003132:	6078      	str	r0, [r7, #4]
    uint16_t prescaler = tim2_get_prescaler(time);
 8003134:	6878      	ldr	r0, [r7, #4]
 8003136:	f7ff ff9d 	bl	8003074 <tim2_get_prescaler>
 800313a:	4603      	mov	r3, r0
 800313c:	81fb      	strh	r3, [r7, #14]
    uint16_t init_count = tim2_get_init_count(time, prescaler);
 800313e:	89fb      	ldrh	r3, [r7, #14]
 8003140:	4619      	mov	r1, r3
 8003142:	6878      	ldr	r0, [r7, #4]
 8003144:	f7ff ffbc 	bl	80030c0 <tim2_get_init_count>
 8003148:	4603      	mov	r3, r0
 800314a:	81bb      	strh	r3, [r7, #12]

    // Enable Timer 2 clock
    RCC->APB1ENR |= (0x1 << 0U);
 800314c:	4b1e      	ldr	r3, [pc, #120]	; (80031c8 <tim2_delay+0x9c>)
 800314e:	69db      	ldr	r3, [r3, #28]
 8003150:	4a1d      	ldr	r2, [pc, #116]	; (80031c8 <tim2_delay+0x9c>)
 8003152:	f043 0301 	orr.w	r3, r3, #1
 8003156:	61d3      	str	r3, [r2, #28]

    RCC->APB2ENR    |=  ( 0x1UL <<  4U );
 8003158:	4b1b      	ldr	r3, [pc, #108]	; (80031c8 <tim2_delay+0x9c>)
 800315a:	699b      	ldr	r3, [r3, #24]
 800315c:	4a1a      	ldr	r2, [pc, #104]	; (80031c8 <tim2_delay+0x9c>)
 800315e:	f043 0310 	orr.w	r3, r3, #16
 8003162:	6193      	str	r3, [r2, #24]

    // Clear control register 1 of Timer 2 to reset configuration
    TIM2->CR1 &= ~(0x72);
 8003164:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8003168:	681b      	ldr	r3, [r3, #0]
 800316a:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800316e:	f023 0372 	bic.w	r3, r3, #114	; 0x72
 8003172:	6013      	str	r3, [r2, #0]

    // Clear status register of Timer 2 to reset any pending flags
    TIM2->SR &= ~(0x1UL << 0U);
 8003174:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8003178:	691b      	ldr	r3, [r3, #16]
 800317a:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800317e:	f023 0301 	bic.w	r3, r3, #1
 8003182:	6113      	str	r3, [r2, #16]

    // Set auto-reload register of Timer 2 to maximum value for longest delay
    TIM2->ARR = 65535;
 8003184:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8003188:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800318c:	62da      	str	r2, [r3, #44]	; 0x2c

    // Set counter register of Timer 2 to initial value for desired delay
    TIM2->CNT = init_count;
 800318e:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8003192:	89bb      	ldrh	r3, [r7, #12]
 8003194:	6253      	str	r3, [r2, #36]	; 0x24

    // Set prescaler register of Timer 2 for desired time base
    TIM2->PSC = prescaler;
 8003196:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800319a:	89fb      	ldrh	r3, [r7, #14]
 800319c:	6293      	str	r3, [r2, #40]	; 0x28

    // Start Timer 2 by setting control register 1
    TIM2->CR1 |= (0x1 << 0U);
 800319e:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80031a2:	681b      	ldr	r3, [r3, #0]
 80031a4:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80031a8:	f043 0301 	orr.w	r3, r3, #1
 80031ac:	6013      	str	r3, [r2, #0]

    // Wait until Timer 2 update event occurs
    while ((TIM2->SR & (0x1UL << 0U)) == 0);
 80031ae:	bf00      	nop
 80031b0:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80031b4:	691b      	ldr	r3, [r3, #16]
 80031b6:	f003 0301 	and.w	r3, r3, #1
 80031ba:	2b00      	cmp	r3, #0
 80031bc:	d0f8      	beq.n	80031b0 <tim2_delay+0x84>

}
 80031be:	bf00      	nop
 80031c0:	bf00      	nop
 80031c2:	3710      	adds	r7, #16
 80031c4:	46bd      	mov	sp, r7
 80031c6:	bd80      	pop	{r7, pc}
 80031c8:	40021000 	.word	0x40021000

080031cc <_write>:
#include "main.h"
#include "uart.h"

static void USER_USART1_Send_8bit( uint8_t Data );

int _write(int  file, char *ptr, int len){
 80031cc:	b480      	push	{r7}
 80031ce:	b087      	sub	sp, #28
 80031d0:	af00      	add	r7, sp, #0
 80031d2:	60f8      	str	r0, [r7, #12]
 80031d4:	60b9      	str	r1, [r7, #8]
 80031d6:	607a      	str	r2, [r7, #4]
	int DataIdx;
	for(DataIdx = 0; DataIdx < len ; DataIdx++){
 80031d8:	2300      	movs	r3, #0
 80031da:	617b      	str	r3, [r7, #20]
 80031dc:	e00f      	b.n	80031fe <_write+0x32>
		while(!( USART1 -> SR & USART_SR_TXE ));
 80031de:	bf00      	nop
 80031e0:	4b0c      	ldr	r3, [pc, #48]	; (8003214 <_write+0x48>)
 80031e2:	681b      	ldr	r3, [r3, #0]
 80031e4:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80031e8:	2b00      	cmp	r3, #0
 80031ea:	d0f9      	beq.n	80031e0 <_write+0x14>
		USART1 -> DR = *ptr++;
 80031ec:	68bb      	ldr	r3, [r7, #8]
 80031ee:	1c5a      	adds	r2, r3, #1
 80031f0:	60ba      	str	r2, [r7, #8]
 80031f2:	781a      	ldrb	r2, [r3, #0]
 80031f4:	4b07      	ldr	r3, [pc, #28]	; (8003214 <_write+0x48>)
 80031f6:	605a      	str	r2, [r3, #4]
	for(DataIdx = 0; DataIdx < len ; DataIdx++){
 80031f8:	697b      	ldr	r3, [r7, #20]
 80031fa:	3301      	adds	r3, #1
 80031fc:	617b      	str	r3, [r7, #20]
 80031fe:	697a      	ldr	r2, [r7, #20]
 8003200:	687b      	ldr	r3, [r7, #4]
 8003202:	429a      	cmp	r2, r3
 8003204:	dbeb      	blt.n	80031de <_write+0x12>
	}
	return len;
 8003206:	687b      	ldr	r3, [r7, #4]
}
 8003208:	4618      	mov	r0, r3
 800320a:	371c      	adds	r7, #28
 800320c:	46bd      	mov	sp, r7
 800320e:	bc80      	pop	{r7}
 8003210:	4770      	bx	lr
 8003212:	bf00      	nop
 8003214:	40013800 	.word	0x40013800

08003218 <USER_USART1_Init>:

void USER_USART1_Init( void ){
 8003218:	b480      	push	{r7}
 800321a:	af00      	add	r7, sp, #0
	USART1->CR1	|=	 USART_CR1_UE;//	Step 1 Usart enabled
 800321c:	4b12      	ldr	r3, [pc, #72]	; (8003268 <USER_USART1_Init+0x50>)
 800321e:	68db      	ldr	r3, [r3, #12]
 8003220:	4a11      	ldr	r2, [pc, #68]	; (8003268 <USER_USART1_Init+0x50>)
 8003222:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8003226:	60d3      	str	r3, [r2, #12]
	USART1->CR1	&=	~USART_CR1_M;//		Step 2 8 Data bits
 8003228:	4b0f      	ldr	r3, [pc, #60]	; (8003268 <USER_USART1_Init+0x50>)
 800322a:	68db      	ldr	r3, [r3, #12]
 800322c:	4a0e      	ldr	r2, [pc, #56]	; (8003268 <USER_USART1_Init+0x50>)
 800322e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8003232:	60d3      	str	r3, [r2, #12]
	USART1->CR2	&=	~USART_CR2_STOP;//	Step 3 1 Stop bit
 8003234:	4b0c      	ldr	r3, [pc, #48]	; (8003268 <USER_USART1_Init+0x50>)
 8003236:	691b      	ldr	r3, [r3, #16]
 8003238:	4a0b      	ldr	r2, [pc, #44]	; (8003268 <USER_USART1_Init+0x50>)
 800323a:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 800323e:	6113      	str	r3, [r2, #16]
	USART1->BRR	 =	 USARTDIV;//		Step 5 Desired baud rate
 8003240:	4b09      	ldr	r3, [pc, #36]	; (8003268 <USER_USART1_Init+0x50>)
 8003242:	2222      	movs	r2, #34	; 0x22
 8003244:	609a      	str	r2, [r3, #8]
	USART1->CR1	|= 	 USART_CR1_TE;//	Step 6 Transmitter enabled
 8003246:	4b08      	ldr	r3, [pc, #32]	; (8003268 <USER_USART1_Init+0x50>)
 8003248:	68db      	ldr	r3, [r3, #12]
 800324a:	4a07      	ldr	r2, [pc, #28]	; (8003268 <USER_USART1_Init+0x50>)
 800324c:	f043 0308 	orr.w	r3, r3, #8
 8003250:	60d3      	str	r3, [r2, #12]
	USART1->CR1	|= 	 USART_CR1_RE;//	Step 7 Receiver enabled
 8003252:	4b05      	ldr	r3, [pc, #20]	; (8003268 <USER_USART1_Init+0x50>)
 8003254:	68db      	ldr	r3, [r3, #12]
 8003256:	4a04      	ldr	r2, [pc, #16]	; (8003268 <USER_USART1_Init+0x50>)
 8003258:	f043 0304 	orr.w	r3, r3, #4
 800325c:	60d3      	str	r3, [r2, #12]
}
 800325e:	bf00      	nop
 8003260:	46bd      	mov	sp, r7
 8003262:	bc80      	pop	{r7}
 8003264:	4770      	bx	lr
 8003266:	bf00      	nop
 8003268:	40013800 	.word	0x40013800

0800326c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800326c:	480d      	ldr	r0, [pc, #52]	; (80032a4 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800326e:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8003270:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8003274:	480c      	ldr	r0, [pc, #48]	; (80032a8 <LoopForever+0x6>)
  ldr r1, =_edata
 8003276:	490d      	ldr	r1, [pc, #52]	; (80032ac <LoopForever+0xa>)
  ldr r2, =_sidata
 8003278:	4a0d      	ldr	r2, [pc, #52]	; (80032b0 <LoopForever+0xe>)
  movs r3, #0
 800327a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800327c:	e002      	b.n	8003284 <LoopCopyDataInit>

0800327e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800327e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8003280:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8003282:	3304      	adds	r3, #4

08003284 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8003284:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8003286:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8003288:	d3f9      	bcc.n	800327e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800328a:	4a0a      	ldr	r2, [pc, #40]	; (80032b4 <LoopForever+0x12>)
  ldr r4, =_ebss
 800328c:	4c0a      	ldr	r4, [pc, #40]	; (80032b8 <LoopForever+0x16>)
  movs r3, #0
 800328e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8003290:	e001      	b.n	8003296 <LoopFillZerobss>

08003292 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8003292:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8003294:	3204      	adds	r2, #4

08003296 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8003296:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8003298:	d3fb      	bcc.n	8003292 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800329a:	f001 fe33 	bl	8004f04 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800329e:	f7ff fa9d 	bl	80027dc <main>

080032a2 <LoopForever>:

LoopForever:
  b LoopForever
 80032a2:	e7fe      	b.n	80032a2 <LoopForever>
  ldr   r0, =_estack
 80032a4:	20005000 	.word	0x20005000
  ldr r0, =_sdata
 80032a8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80032ac:	200001d8 	.word	0x200001d8
  ldr r2, =_sidata
 80032b0:	08009880 	.word	0x08009880
  ldr r2, =_sbss
 80032b4:	200001d8 	.word	0x200001d8
  ldr r4, =_ebss
 80032b8:	200003f4 	.word	0x200003f4

080032bc <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80032bc:	e7fe      	b.n	80032bc <ADC1_2_IRQHandler>

080032be <__cvt>:
 80032be:	2b00      	cmp	r3, #0
 80032c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80032c4:	461f      	mov	r7, r3
 80032c6:	bfbb      	ittet	lt
 80032c8:	f103 4300 	addlt.w	r3, r3, #2147483648	; 0x80000000
 80032cc:	461f      	movlt	r7, r3
 80032ce:	2300      	movge	r3, #0
 80032d0:	232d      	movlt	r3, #45	; 0x2d
 80032d2:	b088      	sub	sp, #32
 80032d4:	4614      	mov	r4, r2
 80032d6:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80032d8:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80032da:	7013      	strb	r3, [r2, #0]
 80032dc:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80032de:	f8dd a04c 	ldr.w	sl, [sp, #76]	; 0x4c
 80032e2:	f023 0820 	bic.w	r8, r3, #32
 80032e6:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 80032ea:	d005      	beq.n	80032f8 <__cvt+0x3a>
 80032ec:	f1b8 0f45 	cmp.w	r8, #69	; 0x45
 80032f0:	d100      	bne.n	80032f4 <__cvt+0x36>
 80032f2:	3501      	adds	r5, #1
 80032f4:	2302      	movs	r3, #2
 80032f6:	e000      	b.n	80032fa <__cvt+0x3c>
 80032f8:	2303      	movs	r3, #3
 80032fa:	aa07      	add	r2, sp, #28
 80032fc:	9204      	str	r2, [sp, #16]
 80032fe:	aa06      	add	r2, sp, #24
 8003300:	e9cd a202 	strd	sl, r2, [sp, #8]
 8003304:	e9cd 3500 	strd	r3, r5, [sp]
 8003308:	4622      	mov	r2, r4
 800330a:	463b      	mov	r3, r7
 800330c:	f001 fed4 	bl	80050b8 <_dtoa_r>
 8003310:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 8003314:	4606      	mov	r6, r0
 8003316:	d102      	bne.n	800331e <__cvt+0x60>
 8003318:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800331a:	07db      	lsls	r3, r3, #31
 800331c:	d522      	bpl.n	8003364 <__cvt+0xa6>
 800331e:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 8003322:	eb06 0905 	add.w	r9, r6, r5
 8003326:	d110      	bne.n	800334a <__cvt+0x8c>
 8003328:	7833      	ldrb	r3, [r6, #0]
 800332a:	2b30      	cmp	r3, #48	; 0x30
 800332c:	d10a      	bne.n	8003344 <__cvt+0x86>
 800332e:	2200      	movs	r2, #0
 8003330:	2300      	movs	r3, #0
 8003332:	4620      	mov	r0, r4
 8003334:	4639      	mov	r1, r7
 8003336:	f7fd fb47 	bl	80009c8 <__aeabi_dcmpeq>
 800333a:	b918      	cbnz	r0, 8003344 <__cvt+0x86>
 800333c:	f1c5 0501 	rsb	r5, r5, #1
 8003340:	f8ca 5000 	str.w	r5, [sl]
 8003344:	f8da 3000 	ldr.w	r3, [sl]
 8003348:	4499      	add	r9, r3
 800334a:	2200      	movs	r2, #0
 800334c:	2300      	movs	r3, #0
 800334e:	4620      	mov	r0, r4
 8003350:	4639      	mov	r1, r7
 8003352:	f7fd fb39 	bl	80009c8 <__aeabi_dcmpeq>
 8003356:	b108      	cbz	r0, 800335c <__cvt+0x9e>
 8003358:	f8cd 901c 	str.w	r9, [sp, #28]
 800335c:	2230      	movs	r2, #48	; 0x30
 800335e:	9b07      	ldr	r3, [sp, #28]
 8003360:	454b      	cmp	r3, r9
 8003362:	d307      	bcc.n	8003374 <__cvt+0xb6>
 8003364:	4630      	mov	r0, r6
 8003366:	9b07      	ldr	r3, [sp, #28]
 8003368:	9a15      	ldr	r2, [sp, #84]	; 0x54
 800336a:	1b9b      	subs	r3, r3, r6
 800336c:	6013      	str	r3, [r2, #0]
 800336e:	b008      	add	sp, #32
 8003370:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003374:	1c59      	adds	r1, r3, #1
 8003376:	9107      	str	r1, [sp, #28]
 8003378:	701a      	strb	r2, [r3, #0]
 800337a:	e7f0      	b.n	800335e <__cvt+0xa0>

0800337c <__exponent>:
 800337c:	4603      	mov	r3, r0
 800337e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8003380:	2900      	cmp	r1, #0
 8003382:	f803 2b02 	strb.w	r2, [r3], #2
 8003386:	bfb6      	itet	lt
 8003388:	222d      	movlt	r2, #45	; 0x2d
 800338a:	222b      	movge	r2, #43	; 0x2b
 800338c:	4249      	neglt	r1, r1
 800338e:	2909      	cmp	r1, #9
 8003390:	7042      	strb	r2, [r0, #1]
 8003392:	dd2a      	ble.n	80033ea <__exponent+0x6e>
 8003394:	f10d 0207 	add.w	r2, sp, #7
 8003398:	4617      	mov	r7, r2
 800339a:	260a      	movs	r6, #10
 800339c:	fb91 f5f6 	sdiv	r5, r1, r6
 80033a0:	4694      	mov	ip, r2
 80033a2:	fb06 1415 	mls	r4, r6, r5, r1
 80033a6:	3430      	adds	r4, #48	; 0x30
 80033a8:	f80c 4c01 	strb.w	r4, [ip, #-1]
 80033ac:	460c      	mov	r4, r1
 80033ae:	2c63      	cmp	r4, #99	; 0x63
 80033b0:	4629      	mov	r1, r5
 80033b2:	f102 32ff 	add.w	r2, r2, #4294967295	; 0xffffffff
 80033b6:	dcf1      	bgt.n	800339c <__exponent+0x20>
 80033b8:	3130      	adds	r1, #48	; 0x30
 80033ba:	f1ac 0402 	sub.w	r4, ip, #2
 80033be:	f802 1c01 	strb.w	r1, [r2, #-1]
 80033c2:	4622      	mov	r2, r4
 80033c4:	1c41      	adds	r1, r0, #1
 80033c6:	42ba      	cmp	r2, r7
 80033c8:	d30a      	bcc.n	80033e0 <__exponent+0x64>
 80033ca:	f10d 0209 	add.w	r2, sp, #9
 80033ce:	eba2 020c 	sub.w	r2, r2, ip
 80033d2:	42bc      	cmp	r4, r7
 80033d4:	bf88      	it	hi
 80033d6:	2200      	movhi	r2, #0
 80033d8:	4413      	add	r3, r2
 80033da:	1a18      	subs	r0, r3, r0
 80033dc:	b003      	add	sp, #12
 80033de:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80033e0:	f812 5b01 	ldrb.w	r5, [r2], #1
 80033e4:	f801 5f01 	strb.w	r5, [r1, #1]!
 80033e8:	e7ed      	b.n	80033c6 <__exponent+0x4a>
 80033ea:	2330      	movs	r3, #48	; 0x30
 80033ec:	3130      	adds	r1, #48	; 0x30
 80033ee:	7083      	strb	r3, [r0, #2]
 80033f0:	70c1      	strb	r1, [r0, #3]
 80033f2:	1d03      	adds	r3, r0, #4
 80033f4:	e7f1      	b.n	80033da <__exponent+0x5e>
	...

080033f8 <_printf_float>:
 80033f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80033fc:	b091      	sub	sp, #68	; 0x44
 80033fe:	460c      	mov	r4, r1
 8003400:	f8dd 8068 	ldr.w	r8, [sp, #104]	; 0x68
 8003404:	4616      	mov	r6, r2
 8003406:	461f      	mov	r7, r3
 8003408:	4605      	mov	r5, r0
 800340a:	f001 fd71 	bl	8004ef0 <_localeconv_r>
 800340e:	6803      	ldr	r3, [r0, #0]
 8003410:	4618      	mov	r0, r3
 8003412:	9309      	str	r3, [sp, #36]	; 0x24
 8003414:	f7fc feac 	bl	8000170 <strlen>
 8003418:	2300      	movs	r3, #0
 800341a:	930e      	str	r3, [sp, #56]	; 0x38
 800341c:	f8d8 3000 	ldr.w	r3, [r8]
 8003420:	900a      	str	r0, [sp, #40]	; 0x28
 8003422:	3307      	adds	r3, #7
 8003424:	f023 0307 	bic.w	r3, r3, #7
 8003428:	f103 0208 	add.w	r2, r3, #8
 800342c:	f894 9018 	ldrb.w	r9, [r4, #24]
 8003430:	f8d4 b000 	ldr.w	fp, [r4]
 8003434:	f8c8 2000 	str.w	r2, [r8]
 8003438:	e9d3 a800 	ldrd	sl, r8, [r3]
 800343c:	4652      	mov	r2, sl
 800343e:	4643      	mov	r3, r8
 8003440:	e9c4 2312 	strd	r2, r3, [r4, #72]	; 0x48
 8003444:	f028 4300 	bic.w	r3, r8, #2147483648	; 0x80000000
 8003448:	930b      	str	r3, [sp, #44]	; 0x2c
 800344a:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 800344e:	4650      	mov	r0, sl
 8003450:	4b9c      	ldr	r3, [pc, #624]	; (80036c4 <_printf_float+0x2cc>)
 8003452:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8003454:	f7fd faea 	bl	8000a2c <__aeabi_dcmpun>
 8003458:	bb70      	cbnz	r0, 80034b8 <_printf_float+0xc0>
 800345a:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 800345e:	4650      	mov	r0, sl
 8003460:	4b98      	ldr	r3, [pc, #608]	; (80036c4 <_printf_float+0x2cc>)
 8003462:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8003464:	f7fd fac4 	bl	80009f0 <__aeabi_dcmple>
 8003468:	bb30      	cbnz	r0, 80034b8 <_printf_float+0xc0>
 800346a:	2200      	movs	r2, #0
 800346c:	2300      	movs	r3, #0
 800346e:	4650      	mov	r0, sl
 8003470:	4641      	mov	r1, r8
 8003472:	f7fd fab3 	bl	80009dc <__aeabi_dcmplt>
 8003476:	b110      	cbz	r0, 800347e <_printf_float+0x86>
 8003478:	232d      	movs	r3, #45	; 0x2d
 800347a:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800347e:	4a92      	ldr	r2, [pc, #584]	; (80036c8 <_printf_float+0x2d0>)
 8003480:	4b92      	ldr	r3, [pc, #584]	; (80036cc <_printf_float+0x2d4>)
 8003482:	f1b9 0f47 	cmp.w	r9, #71	; 0x47
 8003486:	bf94      	ite	ls
 8003488:	4690      	movls	r8, r2
 800348a:	4698      	movhi	r8, r3
 800348c:	2303      	movs	r3, #3
 800348e:	f04f 0a00 	mov.w	sl, #0
 8003492:	6123      	str	r3, [r4, #16]
 8003494:	f02b 0304 	bic.w	r3, fp, #4
 8003498:	6023      	str	r3, [r4, #0]
 800349a:	4633      	mov	r3, r6
 800349c:	4621      	mov	r1, r4
 800349e:	4628      	mov	r0, r5
 80034a0:	9700      	str	r7, [sp, #0]
 80034a2:	aa0f      	add	r2, sp, #60	; 0x3c
 80034a4:	f000 f9d6 	bl	8003854 <_printf_common>
 80034a8:	3001      	adds	r0, #1
 80034aa:	f040 8090 	bne.w	80035ce <_printf_float+0x1d6>
 80034ae:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80034b2:	b011      	add	sp, #68	; 0x44
 80034b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80034b8:	4652      	mov	r2, sl
 80034ba:	4643      	mov	r3, r8
 80034bc:	4650      	mov	r0, sl
 80034be:	4641      	mov	r1, r8
 80034c0:	f7fd fab4 	bl	8000a2c <__aeabi_dcmpun>
 80034c4:	b148      	cbz	r0, 80034da <_printf_float+0xe2>
 80034c6:	f1b8 0f00 	cmp.w	r8, #0
 80034ca:	bfb8      	it	lt
 80034cc:	232d      	movlt	r3, #45	; 0x2d
 80034ce:	4a80      	ldr	r2, [pc, #512]	; (80036d0 <_printf_float+0x2d8>)
 80034d0:	bfb8      	it	lt
 80034d2:	f884 3043 	strblt.w	r3, [r4, #67]	; 0x43
 80034d6:	4b7f      	ldr	r3, [pc, #508]	; (80036d4 <_printf_float+0x2dc>)
 80034d8:	e7d3      	b.n	8003482 <_printf_float+0x8a>
 80034da:	6863      	ldr	r3, [r4, #4]
 80034dc:	f009 01df 	and.w	r1, r9, #223	; 0xdf
 80034e0:	1c5a      	adds	r2, r3, #1
 80034e2:	d142      	bne.n	800356a <_printf_float+0x172>
 80034e4:	2306      	movs	r3, #6
 80034e6:	6063      	str	r3, [r4, #4]
 80034e8:	2200      	movs	r2, #0
 80034ea:	9206      	str	r2, [sp, #24]
 80034ec:	aa0e      	add	r2, sp, #56	; 0x38
 80034ee:	e9cd 9204 	strd	r9, r2, [sp, #16]
 80034f2:	aa0d      	add	r2, sp, #52	; 0x34
 80034f4:	f44b 6380 	orr.w	r3, fp, #1024	; 0x400
 80034f8:	9203      	str	r2, [sp, #12]
 80034fa:	f10d 0233 	add.w	r2, sp, #51	; 0x33
 80034fe:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8003502:	6023      	str	r3, [r4, #0]
 8003504:	6863      	ldr	r3, [r4, #4]
 8003506:	4652      	mov	r2, sl
 8003508:	9300      	str	r3, [sp, #0]
 800350a:	4628      	mov	r0, r5
 800350c:	4643      	mov	r3, r8
 800350e:	910b      	str	r1, [sp, #44]	; 0x2c
 8003510:	f7ff fed5 	bl	80032be <__cvt>
 8003514:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8003516:	4680      	mov	r8, r0
 8003518:	2947      	cmp	r1, #71	; 0x47
 800351a:	990d      	ldr	r1, [sp, #52]	; 0x34
 800351c:	d108      	bne.n	8003530 <_printf_float+0x138>
 800351e:	1cc8      	adds	r0, r1, #3
 8003520:	db02      	blt.n	8003528 <_printf_float+0x130>
 8003522:	6863      	ldr	r3, [r4, #4]
 8003524:	4299      	cmp	r1, r3
 8003526:	dd40      	ble.n	80035aa <_printf_float+0x1b2>
 8003528:	f1a9 0902 	sub.w	r9, r9, #2
 800352c:	fa5f f989 	uxtb.w	r9, r9
 8003530:	f1b9 0f65 	cmp.w	r9, #101	; 0x65
 8003534:	d81f      	bhi.n	8003576 <_printf_float+0x17e>
 8003536:	464a      	mov	r2, r9
 8003538:	3901      	subs	r1, #1
 800353a:	f104 0050 	add.w	r0, r4, #80	; 0x50
 800353e:	910d      	str	r1, [sp, #52]	; 0x34
 8003540:	f7ff ff1c 	bl	800337c <__exponent>
 8003544:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8003546:	4682      	mov	sl, r0
 8003548:	1813      	adds	r3, r2, r0
 800354a:	2a01      	cmp	r2, #1
 800354c:	6123      	str	r3, [r4, #16]
 800354e:	dc02      	bgt.n	8003556 <_printf_float+0x15e>
 8003550:	6822      	ldr	r2, [r4, #0]
 8003552:	07d2      	lsls	r2, r2, #31
 8003554:	d501      	bpl.n	800355a <_printf_float+0x162>
 8003556:	3301      	adds	r3, #1
 8003558:	6123      	str	r3, [r4, #16]
 800355a:	f89d 3033 	ldrb.w	r3, [sp, #51]	; 0x33
 800355e:	2b00      	cmp	r3, #0
 8003560:	d09b      	beq.n	800349a <_printf_float+0xa2>
 8003562:	232d      	movs	r3, #45	; 0x2d
 8003564:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8003568:	e797      	b.n	800349a <_printf_float+0xa2>
 800356a:	2947      	cmp	r1, #71	; 0x47
 800356c:	d1bc      	bne.n	80034e8 <_printf_float+0xf0>
 800356e:	2b00      	cmp	r3, #0
 8003570:	d1ba      	bne.n	80034e8 <_printf_float+0xf0>
 8003572:	2301      	movs	r3, #1
 8003574:	e7b7      	b.n	80034e6 <_printf_float+0xee>
 8003576:	f1b9 0f66 	cmp.w	r9, #102	; 0x66
 800357a:	d118      	bne.n	80035ae <_printf_float+0x1b6>
 800357c:	2900      	cmp	r1, #0
 800357e:	6863      	ldr	r3, [r4, #4]
 8003580:	dd0b      	ble.n	800359a <_printf_float+0x1a2>
 8003582:	6121      	str	r1, [r4, #16]
 8003584:	b913      	cbnz	r3, 800358c <_printf_float+0x194>
 8003586:	6822      	ldr	r2, [r4, #0]
 8003588:	07d0      	lsls	r0, r2, #31
 800358a:	d502      	bpl.n	8003592 <_printf_float+0x19a>
 800358c:	3301      	adds	r3, #1
 800358e:	440b      	add	r3, r1
 8003590:	6123      	str	r3, [r4, #16]
 8003592:	f04f 0a00 	mov.w	sl, #0
 8003596:	65a1      	str	r1, [r4, #88]	; 0x58
 8003598:	e7df      	b.n	800355a <_printf_float+0x162>
 800359a:	b913      	cbnz	r3, 80035a2 <_printf_float+0x1aa>
 800359c:	6822      	ldr	r2, [r4, #0]
 800359e:	07d2      	lsls	r2, r2, #31
 80035a0:	d501      	bpl.n	80035a6 <_printf_float+0x1ae>
 80035a2:	3302      	adds	r3, #2
 80035a4:	e7f4      	b.n	8003590 <_printf_float+0x198>
 80035a6:	2301      	movs	r3, #1
 80035a8:	e7f2      	b.n	8003590 <_printf_float+0x198>
 80035aa:	f04f 0967 	mov.w	r9, #103	; 0x67
 80035ae:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80035b0:	4299      	cmp	r1, r3
 80035b2:	db05      	blt.n	80035c0 <_printf_float+0x1c8>
 80035b4:	6823      	ldr	r3, [r4, #0]
 80035b6:	6121      	str	r1, [r4, #16]
 80035b8:	07d8      	lsls	r0, r3, #31
 80035ba:	d5ea      	bpl.n	8003592 <_printf_float+0x19a>
 80035bc:	1c4b      	adds	r3, r1, #1
 80035be:	e7e7      	b.n	8003590 <_printf_float+0x198>
 80035c0:	2900      	cmp	r1, #0
 80035c2:	bfcc      	ite	gt
 80035c4:	2201      	movgt	r2, #1
 80035c6:	f1c1 0202 	rsble	r2, r1, #2
 80035ca:	4413      	add	r3, r2
 80035cc:	e7e0      	b.n	8003590 <_printf_float+0x198>
 80035ce:	6823      	ldr	r3, [r4, #0]
 80035d0:	055a      	lsls	r2, r3, #21
 80035d2:	d407      	bmi.n	80035e4 <_printf_float+0x1ec>
 80035d4:	6923      	ldr	r3, [r4, #16]
 80035d6:	4642      	mov	r2, r8
 80035d8:	4631      	mov	r1, r6
 80035da:	4628      	mov	r0, r5
 80035dc:	47b8      	blx	r7
 80035de:	3001      	adds	r0, #1
 80035e0:	d12b      	bne.n	800363a <_printf_float+0x242>
 80035e2:	e764      	b.n	80034ae <_printf_float+0xb6>
 80035e4:	f1b9 0f65 	cmp.w	r9, #101	; 0x65
 80035e8:	f240 80dd 	bls.w	80037a6 <_printf_float+0x3ae>
 80035ec:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 80035f0:	2200      	movs	r2, #0
 80035f2:	2300      	movs	r3, #0
 80035f4:	f7fd f9e8 	bl	80009c8 <__aeabi_dcmpeq>
 80035f8:	2800      	cmp	r0, #0
 80035fa:	d033      	beq.n	8003664 <_printf_float+0x26c>
 80035fc:	2301      	movs	r3, #1
 80035fe:	4631      	mov	r1, r6
 8003600:	4628      	mov	r0, r5
 8003602:	4a35      	ldr	r2, [pc, #212]	; (80036d8 <_printf_float+0x2e0>)
 8003604:	47b8      	blx	r7
 8003606:	3001      	adds	r0, #1
 8003608:	f43f af51 	beq.w	80034ae <_printf_float+0xb6>
 800360c:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 8003610:	429a      	cmp	r2, r3
 8003612:	db02      	blt.n	800361a <_printf_float+0x222>
 8003614:	6823      	ldr	r3, [r4, #0]
 8003616:	07d8      	lsls	r0, r3, #31
 8003618:	d50f      	bpl.n	800363a <_printf_float+0x242>
 800361a:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800361e:	4631      	mov	r1, r6
 8003620:	4628      	mov	r0, r5
 8003622:	47b8      	blx	r7
 8003624:	3001      	adds	r0, #1
 8003626:	f43f af42 	beq.w	80034ae <_printf_float+0xb6>
 800362a:	f04f 0800 	mov.w	r8, #0
 800362e:	f104 091a 	add.w	r9, r4, #26
 8003632:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8003634:	3b01      	subs	r3, #1
 8003636:	4543      	cmp	r3, r8
 8003638:	dc09      	bgt.n	800364e <_printf_float+0x256>
 800363a:	6823      	ldr	r3, [r4, #0]
 800363c:	079b      	lsls	r3, r3, #30
 800363e:	f100 8104 	bmi.w	800384a <_printf_float+0x452>
 8003642:	68e0      	ldr	r0, [r4, #12]
 8003644:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8003646:	4298      	cmp	r0, r3
 8003648:	bfb8      	it	lt
 800364a:	4618      	movlt	r0, r3
 800364c:	e731      	b.n	80034b2 <_printf_float+0xba>
 800364e:	2301      	movs	r3, #1
 8003650:	464a      	mov	r2, r9
 8003652:	4631      	mov	r1, r6
 8003654:	4628      	mov	r0, r5
 8003656:	47b8      	blx	r7
 8003658:	3001      	adds	r0, #1
 800365a:	f43f af28 	beq.w	80034ae <_printf_float+0xb6>
 800365e:	f108 0801 	add.w	r8, r8, #1
 8003662:	e7e6      	b.n	8003632 <_printf_float+0x23a>
 8003664:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8003666:	2b00      	cmp	r3, #0
 8003668:	dc38      	bgt.n	80036dc <_printf_float+0x2e4>
 800366a:	2301      	movs	r3, #1
 800366c:	4631      	mov	r1, r6
 800366e:	4628      	mov	r0, r5
 8003670:	4a19      	ldr	r2, [pc, #100]	; (80036d8 <_printf_float+0x2e0>)
 8003672:	47b8      	blx	r7
 8003674:	3001      	adds	r0, #1
 8003676:	f43f af1a 	beq.w	80034ae <_printf_float+0xb6>
 800367a:	e9dd 320d 	ldrd	r3, r2, [sp, #52]	; 0x34
 800367e:	4313      	orrs	r3, r2
 8003680:	d102      	bne.n	8003688 <_printf_float+0x290>
 8003682:	6823      	ldr	r3, [r4, #0]
 8003684:	07d9      	lsls	r1, r3, #31
 8003686:	d5d8      	bpl.n	800363a <_printf_float+0x242>
 8003688:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800368c:	4631      	mov	r1, r6
 800368e:	4628      	mov	r0, r5
 8003690:	47b8      	blx	r7
 8003692:	3001      	adds	r0, #1
 8003694:	f43f af0b 	beq.w	80034ae <_printf_float+0xb6>
 8003698:	f04f 0900 	mov.w	r9, #0
 800369c:	f104 0a1a 	add.w	sl, r4, #26
 80036a0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80036a2:	425b      	negs	r3, r3
 80036a4:	454b      	cmp	r3, r9
 80036a6:	dc01      	bgt.n	80036ac <_printf_float+0x2b4>
 80036a8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80036aa:	e794      	b.n	80035d6 <_printf_float+0x1de>
 80036ac:	2301      	movs	r3, #1
 80036ae:	4652      	mov	r2, sl
 80036b0:	4631      	mov	r1, r6
 80036b2:	4628      	mov	r0, r5
 80036b4:	47b8      	blx	r7
 80036b6:	3001      	adds	r0, #1
 80036b8:	f43f aef9 	beq.w	80034ae <_printf_float+0xb6>
 80036bc:	f109 0901 	add.w	r9, r9, #1
 80036c0:	e7ee      	b.n	80036a0 <_printf_float+0x2a8>
 80036c2:	bf00      	nop
 80036c4:	7fefffff 	.word	0x7fefffff
 80036c8:	08009420 	.word	0x08009420
 80036cc:	08009424 	.word	0x08009424
 80036d0:	08009428 	.word	0x08009428
 80036d4:	0800942c 	.word	0x0800942c
 80036d8:	08009430 	.word	0x08009430
 80036dc:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80036de:	6da3      	ldr	r3, [r4, #88]	; 0x58
 80036e0:	429a      	cmp	r2, r3
 80036e2:	bfa8      	it	ge
 80036e4:	461a      	movge	r2, r3
 80036e6:	2a00      	cmp	r2, #0
 80036e8:	4691      	mov	r9, r2
 80036ea:	dc37      	bgt.n	800375c <_printf_float+0x364>
 80036ec:	f04f 0b00 	mov.w	fp, #0
 80036f0:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 80036f4:	f104 021a 	add.w	r2, r4, #26
 80036f8:	f8d4 a058 	ldr.w	sl, [r4, #88]	; 0x58
 80036fc:	ebaa 0309 	sub.w	r3, sl, r9
 8003700:	455b      	cmp	r3, fp
 8003702:	dc33      	bgt.n	800376c <_printf_float+0x374>
 8003704:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 8003708:	429a      	cmp	r2, r3
 800370a:	db3b      	blt.n	8003784 <_printf_float+0x38c>
 800370c:	6823      	ldr	r3, [r4, #0]
 800370e:	07da      	lsls	r2, r3, #31
 8003710:	d438      	bmi.n	8003784 <_printf_float+0x38c>
 8003712:	e9dd 320d 	ldrd	r3, r2, [sp, #52]	; 0x34
 8003716:	eba2 0903 	sub.w	r9, r2, r3
 800371a:	eba2 020a 	sub.w	r2, r2, sl
 800371e:	4591      	cmp	r9, r2
 8003720:	bfa8      	it	ge
 8003722:	4691      	movge	r9, r2
 8003724:	f1b9 0f00 	cmp.w	r9, #0
 8003728:	dc34      	bgt.n	8003794 <_printf_float+0x39c>
 800372a:	f04f 0800 	mov.w	r8, #0
 800372e:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8003732:	f104 0a1a 	add.w	sl, r4, #26
 8003736:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 800373a:	1a9b      	subs	r3, r3, r2
 800373c:	eba3 0309 	sub.w	r3, r3, r9
 8003740:	4543      	cmp	r3, r8
 8003742:	f77f af7a 	ble.w	800363a <_printf_float+0x242>
 8003746:	2301      	movs	r3, #1
 8003748:	4652      	mov	r2, sl
 800374a:	4631      	mov	r1, r6
 800374c:	4628      	mov	r0, r5
 800374e:	47b8      	blx	r7
 8003750:	3001      	adds	r0, #1
 8003752:	f43f aeac 	beq.w	80034ae <_printf_float+0xb6>
 8003756:	f108 0801 	add.w	r8, r8, #1
 800375a:	e7ec      	b.n	8003736 <_printf_float+0x33e>
 800375c:	4613      	mov	r3, r2
 800375e:	4631      	mov	r1, r6
 8003760:	4642      	mov	r2, r8
 8003762:	4628      	mov	r0, r5
 8003764:	47b8      	blx	r7
 8003766:	3001      	adds	r0, #1
 8003768:	d1c0      	bne.n	80036ec <_printf_float+0x2f4>
 800376a:	e6a0      	b.n	80034ae <_printf_float+0xb6>
 800376c:	2301      	movs	r3, #1
 800376e:	4631      	mov	r1, r6
 8003770:	4628      	mov	r0, r5
 8003772:	920b      	str	r2, [sp, #44]	; 0x2c
 8003774:	47b8      	blx	r7
 8003776:	3001      	adds	r0, #1
 8003778:	f43f ae99 	beq.w	80034ae <_printf_float+0xb6>
 800377c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800377e:	f10b 0b01 	add.w	fp, fp, #1
 8003782:	e7b9      	b.n	80036f8 <_printf_float+0x300>
 8003784:	4631      	mov	r1, r6
 8003786:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800378a:	4628      	mov	r0, r5
 800378c:	47b8      	blx	r7
 800378e:	3001      	adds	r0, #1
 8003790:	d1bf      	bne.n	8003712 <_printf_float+0x31a>
 8003792:	e68c      	b.n	80034ae <_printf_float+0xb6>
 8003794:	464b      	mov	r3, r9
 8003796:	4631      	mov	r1, r6
 8003798:	4628      	mov	r0, r5
 800379a:	eb08 020a 	add.w	r2, r8, sl
 800379e:	47b8      	blx	r7
 80037a0:	3001      	adds	r0, #1
 80037a2:	d1c2      	bne.n	800372a <_printf_float+0x332>
 80037a4:	e683      	b.n	80034ae <_printf_float+0xb6>
 80037a6:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80037a8:	2a01      	cmp	r2, #1
 80037aa:	dc01      	bgt.n	80037b0 <_printf_float+0x3b8>
 80037ac:	07db      	lsls	r3, r3, #31
 80037ae:	d539      	bpl.n	8003824 <_printf_float+0x42c>
 80037b0:	2301      	movs	r3, #1
 80037b2:	4642      	mov	r2, r8
 80037b4:	4631      	mov	r1, r6
 80037b6:	4628      	mov	r0, r5
 80037b8:	47b8      	blx	r7
 80037ba:	3001      	adds	r0, #1
 80037bc:	f43f ae77 	beq.w	80034ae <_printf_float+0xb6>
 80037c0:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80037c4:	4631      	mov	r1, r6
 80037c6:	4628      	mov	r0, r5
 80037c8:	47b8      	blx	r7
 80037ca:	3001      	adds	r0, #1
 80037cc:	f43f ae6f 	beq.w	80034ae <_printf_float+0xb6>
 80037d0:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 80037d4:	2200      	movs	r2, #0
 80037d6:	2300      	movs	r3, #0
 80037d8:	f8dd 9038 	ldr.w	r9, [sp, #56]	; 0x38
 80037dc:	f7fd f8f4 	bl	80009c8 <__aeabi_dcmpeq>
 80037e0:	b9d8      	cbnz	r0, 800381a <_printf_float+0x422>
 80037e2:	f109 33ff 	add.w	r3, r9, #4294967295	; 0xffffffff
 80037e6:	f108 0201 	add.w	r2, r8, #1
 80037ea:	4631      	mov	r1, r6
 80037ec:	4628      	mov	r0, r5
 80037ee:	47b8      	blx	r7
 80037f0:	3001      	adds	r0, #1
 80037f2:	d10e      	bne.n	8003812 <_printf_float+0x41a>
 80037f4:	e65b      	b.n	80034ae <_printf_float+0xb6>
 80037f6:	2301      	movs	r3, #1
 80037f8:	464a      	mov	r2, r9
 80037fa:	4631      	mov	r1, r6
 80037fc:	4628      	mov	r0, r5
 80037fe:	47b8      	blx	r7
 8003800:	3001      	adds	r0, #1
 8003802:	f43f ae54 	beq.w	80034ae <_printf_float+0xb6>
 8003806:	f108 0801 	add.w	r8, r8, #1
 800380a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800380c:	3b01      	subs	r3, #1
 800380e:	4543      	cmp	r3, r8
 8003810:	dcf1      	bgt.n	80037f6 <_printf_float+0x3fe>
 8003812:	4653      	mov	r3, sl
 8003814:	f104 0250 	add.w	r2, r4, #80	; 0x50
 8003818:	e6de      	b.n	80035d8 <_printf_float+0x1e0>
 800381a:	f04f 0800 	mov.w	r8, #0
 800381e:	f104 091a 	add.w	r9, r4, #26
 8003822:	e7f2      	b.n	800380a <_printf_float+0x412>
 8003824:	2301      	movs	r3, #1
 8003826:	4642      	mov	r2, r8
 8003828:	e7df      	b.n	80037ea <_printf_float+0x3f2>
 800382a:	2301      	movs	r3, #1
 800382c:	464a      	mov	r2, r9
 800382e:	4631      	mov	r1, r6
 8003830:	4628      	mov	r0, r5
 8003832:	47b8      	blx	r7
 8003834:	3001      	adds	r0, #1
 8003836:	f43f ae3a 	beq.w	80034ae <_printf_float+0xb6>
 800383a:	f108 0801 	add.w	r8, r8, #1
 800383e:	68e3      	ldr	r3, [r4, #12]
 8003840:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8003842:	1a5b      	subs	r3, r3, r1
 8003844:	4543      	cmp	r3, r8
 8003846:	dcf0      	bgt.n	800382a <_printf_float+0x432>
 8003848:	e6fb      	b.n	8003642 <_printf_float+0x24a>
 800384a:	f04f 0800 	mov.w	r8, #0
 800384e:	f104 0919 	add.w	r9, r4, #25
 8003852:	e7f4      	b.n	800383e <_printf_float+0x446>

08003854 <_printf_common>:
 8003854:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003858:	4616      	mov	r6, r2
 800385a:	4699      	mov	r9, r3
 800385c:	688a      	ldr	r2, [r1, #8]
 800385e:	690b      	ldr	r3, [r1, #16]
 8003860:	4607      	mov	r7, r0
 8003862:	4293      	cmp	r3, r2
 8003864:	bfb8      	it	lt
 8003866:	4613      	movlt	r3, r2
 8003868:	6033      	str	r3, [r6, #0]
 800386a:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 800386e:	460c      	mov	r4, r1
 8003870:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8003874:	b10a      	cbz	r2, 800387a <_printf_common+0x26>
 8003876:	3301      	adds	r3, #1
 8003878:	6033      	str	r3, [r6, #0]
 800387a:	6823      	ldr	r3, [r4, #0]
 800387c:	0699      	lsls	r1, r3, #26
 800387e:	bf42      	ittt	mi
 8003880:	6833      	ldrmi	r3, [r6, #0]
 8003882:	3302      	addmi	r3, #2
 8003884:	6033      	strmi	r3, [r6, #0]
 8003886:	6825      	ldr	r5, [r4, #0]
 8003888:	f015 0506 	ands.w	r5, r5, #6
 800388c:	d106      	bne.n	800389c <_printf_common+0x48>
 800388e:	f104 0a19 	add.w	sl, r4, #25
 8003892:	68e3      	ldr	r3, [r4, #12]
 8003894:	6832      	ldr	r2, [r6, #0]
 8003896:	1a9b      	subs	r3, r3, r2
 8003898:	42ab      	cmp	r3, r5
 800389a:	dc2b      	bgt.n	80038f4 <_printf_common+0xa0>
 800389c:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 80038a0:	1e13      	subs	r3, r2, #0
 80038a2:	6822      	ldr	r2, [r4, #0]
 80038a4:	bf18      	it	ne
 80038a6:	2301      	movne	r3, #1
 80038a8:	0692      	lsls	r2, r2, #26
 80038aa:	d430      	bmi.n	800390e <_printf_common+0xba>
 80038ac:	4649      	mov	r1, r9
 80038ae:	4638      	mov	r0, r7
 80038b0:	f104 0243 	add.w	r2, r4, #67	; 0x43
 80038b4:	47c0      	blx	r8
 80038b6:	3001      	adds	r0, #1
 80038b8:	d023      	beq.n	8003902 <_printf_common+0xae>
 80038ba:	6823      	ldr	r3, [r4, #0]
 80038bc:	6922      	ldr	r2, [r4, #16]
 80038be:	f003 0306 	and.w	r3, r3, #6
 80038c2:	2b04      	cmp	r3, #4
 80038c4:	bf14      	ite	ne
 80038c6:	2500      	movne	r5, #0
 80038c8:	6833      	ldreq	r3, [r6, #0]
 80038ca:	f04f 0600 	mov.w	r6, #0
 80038ce:	bf08      	it	eq
 80038d0:	68e5      	ldreq	r5, [r4, #12]
 80038d2:	f104 041a 	add.w	r4, r4, #26
 80038d6:	bf08      	it	eq
 80038d8:	1aed      	subeq	r5, r5, r3
 80038da:	f854 3c12 	ldr.w	r3, [r4, #-18]
 80038de:	bf08      	it	eq
 80038e0:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80038e4:	4293      	cmp	r3, r2
 80038e6:	bfc4      	itt	gt
 80038e8:	1a9b      	subgt	r3, r3, r2
 80038ea:	18ed      	addgt	r5, r5, r3
 80038ec:	42b5      	cmp	r5, r6
 80038ee:	d11a      	bne.n	8003926 <_printf_common+0xd2>
 80038f0:	2000      	movs	r0, #0
 80038f2:	e008      	b.n	8003906 <_printf_common+0xb2>
 80038f4:	2301      	movs	r3, #1
 80038f6:	4652      	mov	r2, sl
 80038f8:	4649      	mov	r1, r9
 80038fa:	4638      	mov	r0, r7
 80038fc:	47c0      	blx	r8
 80038fe:	3001      	adds	r0, #1
 8003900:	d103      	bne.n	800390a <_printf_common+0xb6>
 8003902:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8003906:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800390a:	3501      	adds	r5, #1
 800390c:	e7c1      	b.n	8003892 <_printf_common+0x3e>
 800390e:	2030      	movs	r0, #48	; 0x30
 8003910:	18e1      	adds	r1, r4, r3
 8003912:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8003916:	1c5a      	adds	r2, r3, #1
 8003918:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 800391c:	4422      	add	r2, r4
 800391e:	3302      	adds	r3, #2
 8003920:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8003924:	e7c2      	b.n	80038ac <_printf_common+0x58>
 8003926:	2301      	movs	r3, #1
 8003928:	4622      	mov	r2, r4
 800392a:	4649      	mov	r1, r9
 800392c:	4638      	mov	r0, r7
 800392e:	47c0      	blx	r8
 8003930:	3001      	adds	r0, #1
 8003932:	d0e6      	beq.n	8003902 <_printf_common+0xae>
 8003934:	3601      	adds	r6, #1
 8003936:	e7d9      	b.n	80038ec <_printf_common+0x98>

08003938 <_printf_i>:
 8003938:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800393c:	7e0f      	ldrb	r7, [r1, #24]
 800393e:	4691      	mov	r9, r2
 8003940:	2f78      	cmp	r7, #120	; 0x78
 8003942:	4680      	mov	r8, r0
 8003944:	460c      	mov	r4, r1
 8003946:	469a      	mov	sl, r3
 8003948:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800394a:	f101 0243 	add.w	r2, r1, #67	; 0x43
 800394e:	d807      	bhi.n	8003960 <_printf_i+0x28>
 8003950:	2f62      	cmp	r7, #98	; 0x62
 8003952:	d80a      	bhi.n	800396a <_printf_i+0x32>
 8003954:	2f00      	cmp	r7, #0
 8003956:	f000 80d5 	beq.w	8003b04 <_printf_i+0x1cc>
 800395a:	2f58      	cmp	r7, #88	; 0x58
 800395c:	f000 80c1 	beq.w	8003ae2 <_printf_i+0x1aa>
 8003960:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8003964:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8003968:	e03a      	b.n	80039e0 <_printf_i+0xa8>
 800396a:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 800396e:	2b15      	cmp	r3, #21
 8003970:	d8f6      	bhi.n	8003960 <_printf_i+0x28>
 8003972:	a101      	add	r1, pc, #4	; (adr r1, 8003978 <_printf_i+0x40>)
 8003974:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8003978:	080039d1 	.word	0x080039d1
 800397c:	080039e5 	.word	0x080039e5
 8003980:	08003961 	.word	0x08003961
 8003984:	08003961 	.word	0x08003961
 8003988:	08003961 	.word	0x08003961
 800398c:	08003961 	.word	0x08003961
 8003990:	080039e5 	.word	0x080039e5
 8003994:	08003961 	.word	0x08003961
 8003998:	08003961 	.word	0x08003961
 800399c:	08003961 	.word	0x08003961
 80039a0:	08003961 	.word	0x08003961
 80039a4:	08003aeb 	.word	0x08003aeb
 80039a8:	08003a11 	.word	0x08003a11
 80039ac:	08003aa5 	.word	0x08003aa5
 80039b0:	08003961 	.word	0x08003961
 80039b4:	08003961 	.word	0x08003961
 80039b8:	08003b0d 	.word	0x08003b0d
 80039bc:	08003961 	.word	0x08003961
 80039c0:	08003a11 	.word	0x08003a11
 80039c4:	08003961 	.word	0x08003961
 80039c8:	08003961 	.word	0x08003961
 80039cc:	08003aad 	.word	0x08003aad
 80039d0:	682b      	ldr	r3, [r5, #0]
 80039d2:	1d1a      	adds	r2, r3, #4
 80039d4:	681b      	ldr	r3, [r3, #0]
 80039d6:	602a      	str	r2, [r5, #0]
 80039d8:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80039dc:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80039e0:	2301      	movs	r3, #1
 80039e2:	e0a0      	b.n	8003b26 <_printf_i+0x1ee>
 80039e4:	6820      	ldr	r0, [r4, #0]
 80039e6:	682b      	ldr	r3, [r5, #0]
 80039e8:	0607      	lsls	r7, r0, #24
 80039ea:	f103 0104 	add.w	r1, r3, #4
 80039ee:	6029      	str	r1, [r5, #0]
 80039f0:	d501      	bpl.n	80039f6 <_printf_i+0xbe>
 80039f2:	681e      	ldr	r6, [r3, #0]
 80039f4:	e003      	b.n	80039fe <_printf_i+0xc6>
 80039f6:	0646      	lsls	r6, r0, #25
 80039f8:	d5fb      	bpl.n	80039f2 <_printf_i+0xba>
 80039fa:	f9b3 6000 	ldrsh.w	r6, [r3]
 80039fe:	2e00      	cmp	r6, #0
 8003a00:	da03      	bge.n	8003a0a <_printf_i+0xd2>
 8003a02:	232d      	movs	r3, #45	; 0x2d
 8003a04:	4276      	negs	r6, r6
 8003a06:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8003a0a:	230a      	movs	r3, #10
 8003a0c:	4859      	ldr	r0, [pc, #356]	; (8003b74 <_printf_i+0x23c>)
 8003a0e:	e012      	b.n	8003a36 <_printf_i+0xfe>
 8003a10:	682b      	ldr	r3, [r5, #0]
 8003a12:	6820      	ldr	r0, [r4, #0]
 8003a14:	1d19      	adds	r1, r3, #4
 8003a16:	6029      	str	r1, [r5, #0]
 8003a18:	0605      	lsls	r5, r0, #24
 8003a1a:	d501      	bpl.n	8003a20 <_printf_i+0xe8>
 8003a1c:	681e      	ldr	r6, [r3, #0]
 8003a1e:	e002      	b.n	8003a26 <_printf_i+0xee>
 8003a20:	0641      	lsls	r1, r0, #25
 8003a22:	d5fb      	bpl.n	8003a1c <_printf_i+0xe4>
 8003a24:	881e      	ldrh	r6, [r3, #0]
 8003a26:	2f6f      	cmp	r7, #111	; 0x6f
 8003a28:	bf0c      	ite	eq
 8003a2a:	2308      	moveq	r3, #8
 8003a2c:	230a      	movne	r3, #10
 8003a2e:	4851      	ldr	r0, [pc, #324]	; (8003b74 <_printf_i+0x23c>)
 8003a30:	2100      	movs	r1, #0
 8003a32:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8003a36:	6865      	ldr	r5, [r4, #4]
 8003a38:	2d00      	cmp	r5, #0
 8003a3a:	bfa8      	it	ge
 8003a3c:	6821      	ldrge	r1, [r4, #0]
 8003a3e:	60a5      	str	r5, [r4, #8]
 8003a40:	bfa4      	itt	ge
 8003a42:	f021 0104 	bicge.w	r1, r1, #4
 8003a46:	6021      	strge	r1, [r4, #0]
 8003a48:	b90e      	cbnz	r6, 8003a4e <_printf_i+0x116>
 8003a4a:	2d00      	cmp	r5, #0
 8003a4c:	d04b      	beq.n	8003ae6 <_printf_i+0x1ae>
 8003a4e:	4615      	mov	r5, r2
 8003a50:	fbb6 f1f3 	udiv	r1, r6, r3
 8003a54:	fb03 6711 	mls	r7, r3, r1, r6
 8003a58:	5dc7      	ldrb	r7, [r0, r7]
 8003a5a:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8003a5e:	4637      	mov	r7, r6
 8003a60:	42bb      	cmp	r3, r7
 8003a62:	460e      	mov	r6, r1
 8003a64:	d9f4      	bls.n	8003a50 <_printf_i+0x118>
 8003a66:	2b08      	cmp	r3, #8
 8003a68:	d10b      	bne.n	8003a82 <_printf_i+0x14a>
 8003a6a:	6823      	ldr	r3, [r4, #0]
 8003a6c:	07de      	lsls	r6, r3, #31
 8003a6e:	d508      	bpl.n	8003a82 <_printf_i+0x14a>
 8003a70:	6923      	ldr	r3, [r4, #16]
 8003a72:	6861      	ldr	r1, [r4, #4]
 8003a74:	4299      	cmp	r1, r3
 8003a76:	bfde      	ittt	le
 8003a78:	2330      	movle	r3, #48	; 0x30
 8003a7a:	f805 3c01 	strble.w	r3, [r5, #-1]
 8003a7e:	f105 35ff 	addle.w	r5, r5, #4294967295	; 0xffffffff
 8003a82:	1b52      	subs	r2, r2, r5
 8003a84:	6122      	str	r2, [r4, #16]
 8003a86:	464b      	mov	r3, r9
 8003a88:	4621      	mov	r1, r4
 8003a8a:	4640      	mov	r0, r8
 8003a8c:	f8cd a000 	str.w	sl, [sp]
 8003a90:	aa03      	add	r2, sp, #12
 8003a92:	f7ff fedf 	bl	8003854 <_printf_common>
 8003a96:	3001      	adds	r0, #1
 8003a98:	d14a      	bne.n	8003b30 <_printf_i+0x1f8>
 8003a9a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8003a9e:	b004      	add	sp, #16
 8003aa0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003aa4:	6823      	ldr	r3, [r4, #0]
 8003aa6:	f043 0320 	orr.w	r3, r3, #32
 8003aaa:	6023      	str	r3, [r4, #0]
 8003aac:	2778      	movs	r7, #120	; 0x78
 8003aae:	4832      	ldr	r0, [pc, #200]	; (8003b78 <_printf_i+0x240>)
 8003ab0:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8003ab4:	6823      	ldr	r3, [r4, #0]
 8003ab6:	6829      	ldr	r1, [r5, #0]
 8003ab8:	061f      	lsls	r7, r3, #24
 8003aba:	f851 6b04 	ldr.w	r6, [r1], #4
 8003abe:	d402      	bmi.n	8003ac6 <_printf_i+0x18e>
 8003ac0:	065f      	lsls	r7, r3, #25
 8003ac2:	bf48      	it	mi
 8003ac4:	b2b6      	uxthmi	r6, r6
 8003ac6:	07df      	lsls	r7, r3, #31
 8003ac8:	bf48      	it	mi
 8003aca:	f043 0320 	orrmi.w	r3, r3, #32
 8003ace:	6029      	str	r1, [r5, #0]
 8003ad0:	bf48      	it	mi
 8003ad2:	6023      	strmi	r3, [r4, #0]
 8003ad4:	b91e      	cbnz	r6, 8003ade <_printf_i+0x1a6>
 8003ad6:	6823      	ldr	r3, [r4, #0]
 8003ad8:	f023 0320 	bic.w	r3, r3, #32
 8003adc:	6023      	str	r3, [r4, #0]
 8003ade:	2310      	movs	r3, #16
 8003ae0:	e7a6      	b.n	8003a30 <_printf_i+0xf8>
 8003ae2:	4824      	ldr	r0, [pc, #144]	; (8003b74 <_printf_i+0x23c>)
 8003ae4:	e7e4      	b.n	8003ab0 <_printf_i+0x178>
 8003ae6:	4615      	mov	r5, r2
 8003ae8:	e7bd      	b.n	8003a66 <_printf_i+0x12e>
 8003aea:	682b      	ldr	r3, [r5, #0]
 8003aec:	6826      	ldr	r6, [r4, #0]
 8003aee:	1d18      	adds	r0, r3, #4
 8003af0:	6961      	ldr	r1, [r4, #20]
 8003af2:	6028      	str	r0, [r5, #0]
 8003af4:	0635      	lsls	r5, r6, #24
 8003af6:	681b      	ldr	r3, [r3, #0]
 8003af8:	d501      	bpl.n	8003afe <_printf_i+0x1c6>
 8003afa:	6019      	str	r1, [r3, #0]
 8003afc:	e002      	b.n	8003b04 <_printf_i+0x1cc>
 8003afe:	0670      	lsls	r0, r6, #25
 8003b00:	d5fb      	bpl.n	8003afa <_printf_i+0x1c2>
 8003b02:	8019      	strh	r1, [r3, #0]
 8003b04:	2300      	movs	r3, #0
 8003b06:	4615      	mov	r5, r2
 8003b08:	6123      	str	r3, [r4, #16]
 8003b0a:	e7bc      	b.n	8003a86 <_printf_i+0x14e>
 8003b0c:	682b      	ldr	r3, [r5, #0]
 8003b0e:	2100      	movs	r1, #0
 8003b10:	1d1a      	adds	r2, r3, #4
 8003b12:	602a      	str	r2, [r5, #0]
 8003b14:	681d      	ldr	r5, [r3, #0]
 8003b16:	6862      	ldr	r2, [r4, #4]
 8003b18:	4628      	mov	r0, r5
 8003b1a:	f001 fa1a 	bl	8004f52 <memchr>
 8003b1e:	b108      	cbz	r0, 8003b24 <_printf_i+0x1ec>
 8003b20:	1b40      	subs	r0, r0, r5
 8003b22:	6060      	str	r0, [r4, #4]
 8003b24:	6863      	ldr	r3, [r4, #4]
 8003b26:	6123      	str	r3, [r4, #16]
 8003b28:	2300      	movs	r3, #0
 8003b2a:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8003b2e:	e7aa      	b.n	8003a86 <_printf_i+0x14e>
 8003b30:	462a      	mov	r2, r5
 8003b32:	4649      	mov	r1, r9
 8003b34:	4640      	mov	r0, r8
 8003b36:	6923      	ldr	r3, [r4, #16]
 8003b38:	47d0      	blx	sl
 8003b3a:	3001      	adds	r0, #1
 8003b3c:	d0ad      	beq.n	8003a9a <_printf_i+0x162>
 8003b3e:	6823      	ldr	r3, [r4, #0]
 8003b40:	079b      	lsls	r3, r3, #30
 8003b42:	d413      	bmi.n	8003b6c <_printf_i+0x234>
 8003b44:	68e0      	ldr	r0, [r4, #12]
 8003b46:	9b03      	ldr	r3, [sp, #12]
 8003b48:	4298      	cmp	r0, r3
 8003b4a:	bfb8      	it	lt
 8003b4c:	4618      	movlt	r0, r3
 8003b4e:	e7a6      	b.n	8003a9e <_printf_i+0x166>
 8003b50:	2301      	movs	r3, #1
 8003b52:	4632      	mov	r2, r6
 8003b54:	4649      	mov	r1, r9
 8003b56:	4640      	mov	r0, r8
 8003b58:	47d0      	blx	sl
 8003b5a:	3001      	adds	r0, #1
 8003b5c:	d09d      	beq.n	8003a9a <_printf_i+0x162>
 8003b5e:	3501      	adds	r5, #1
 8003b60:	68e3      	ldr	r3, [r4, #12]
 8003b62:	9903      	ldr	r1, [sp, #12]
 8003b64:	1a5b      	subs	r3, r3, r1
 8003b66:	42ab      	cmp	r3, r5
 8003b68:	dcf2      	bgt.n	8003b50 <_printf_i+0x218>
 8003b6a:	e7eb      	b.n	8003b44 <_printf_i+0x20c>
 8003b6c:	2500      	movs	r5, #0
 8003b6e:	f104 0619 	add.w	r6, r4, #25
 8003b72:	e7f5      	b.n	8003b60 <_printf_i+0x228>
 8003b74:	08009432 	.word	0x08009432
 8003b78:	08009443 	.word	0x08009443

08003b7c <_scanf_float>:
 8003b7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003b80:	b087      	sub	sp, #28
 8003b82:	9303      	str	r3, [sp, #12]
 8003b84:	688b      	ldr	r3, [r1, #8]
 8003b86:	4617      	mov	r7, r2
 8003b88:	1e5a      	subs	r2, r3, #1
 8003b8a:	f5b2 7fae 	cmp.w	r2, #348	; 0x15c
 8003b8e:	bf85      	ittet	hi
 8003b90:	f46f 75ae 	mvnhi.w	r5, #348	; 0x15c
 8003b94:	195b      	addhi	r3, r3, r5
 8003b96:	2300      	movls	r3, #0
 8003b98:	9302      	strhi	r3, [sp, #8]
 8003b9a:	bf88      	it	hi
 8003b9c:	f240 135d 	movwhi	r3, #349	; 0x15d
 8003ba0:	468b      	mov	fp, r1
 8003ba2:	f04f 0500 	mov.w	r5, #0
 8003ba6:	bf8c      	ite	hi
 8003ba8:	608b      	strhi	r3, [r1, #8]
 8003baa:	9302      	strls	r3, [sp, #8]
 8003bac:	680b      	ldr	r3, [r1, #0]
 8003bae:	4680      	mov	r8, r0
 8003bb0:	f443 63f0 	orr.w	r3, r3, #1920	; 0x780
 8003bb4:	f84b 3b1c 	str.w	r3, [fp], #28
 8003bb8:	460c      	mov	r4, r1
 8003bba:	465e      	mov	r6, fp
 8003bbc:	46aa      	mov	sl, r5
 8003bbe:	46a9      	mov	r9, r5
 8003bc0:	e9cd 5504 	strd	r5, r5, [sp, #16]
 8003bc4:	9501      	str	r5, [sp, #4]
 8003bc6:	68a2      	ldr	r2, [r4, #8]
 8003bc8:	b152      	cbz	r2, 8003be0 <_scanf_float+0x64>
 8003bca:	683b      	ldr	r3, [r7, #0]
 8003bcc:	781b      	ldrb	r3, [r3, #0]
 8003bce:	2b4e      	cmp	r3, #78	; 0x4e
 8003bd0:	d864      	bhi.n	8003c9c <_scanf_float+0x120>
 8003bd2:	2b40      	cmp	r3, #64	; 0x40
 8003bd4:	d83c      	bhi.n	8003c50 <_scanf_float+0xd4>
 8003bd6:	f1a3 012b 	sub.w	r1, r3, #43	; 0x2b
 8003bda:	b2c8      	uxtb	r0, r1
 8003bdc:	280e      	cmp	r0, #14
 8003bde:	d93a      	bls.n	8003c56 <_scanf_float+0xda>
 8003be0:	f1b9 0f00 	cmp.w	r9, #0
 8003be4:	d003      	beq.n	8003bee <_scanf_float+0x72>
 8003be6:	6823      	ldr	r3, [r4, #0]
 8003be8:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8003bec:	6023      	str	r3, [r4, #0]
 8003bee:	f10a 3aff 	add.w	sl, sl, #4294967295	; 0xffffffff
 8003bf2:	f1ba 0f01 	cmp.w	sl, #1
 8003bf6:	f200 8113 	bhi.w	8003e20 <_scanf_float+0x2a4>
 8003bfa:	455e      	cmp	r6, fp
 8003bfc:	f200 8105 	bhi.w	8003e0a <_scanf_float+0x28e>
 8003c00:	2501      	movs	r5, #1
 8003c02:	4628      	mov	r0, r5
 8003c04:	b007      	add	sp, #28
 8003c06:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003c0a:	f1a3 0261 	sub.w	r2, r3, #97	; 0x61
 8003c0e:	2a0d      	cmp	r2, #13
 8003c10:	d8e6      	bhi.n	8003be0 <_scanf_float+0x64>
 8003c12:	a101      	add	r1, pc, #4	; (adr r1, 8003c18 <_scanf_float+0x9c>)
 8003c14:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 8003c18:	08003d57 	.word	0x08003d57
 8003c1c:	08003be1 	.word	0x08003be1
 8003c20:	08003be1 	.word	0x08003be1
 8003c24:	08003be1 	.word	0x08003be1
 8003c28:	08003db7 	.word	0x08003db7
 8003c2c:	08003d8f 	.word	0x08003d8f
 8003c30:	08003be1 	.word	0x08003be1
 8003c34:	08003be1 	.word	0x08003be1
 8003c38:	08003d65 	.word	0x08003d65
 8003c3c:	08003be1 	.word	0x08003be1
 8003c40:	08003be1 	.word	0x08003be1
 8003c44:	08003be1 	.word	0x08003be1
 8003c48:	08003be1 	.word	0x08003be1
 8003c4c:	08003d1d 	.word	0x08003d1d
 8003c50:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8003c54:	e7db      	b.n	8003c0e <_scanf_float+0x92>
 8003c56:	290e      	cmp	r1, #14
 8003c58:	d8c2      	bhi.n	8003be0 <_scanf_float+0x64>
 8003c5a:	a001      	add	r0, pc, #4	; (adr r0, 8003c60 <_scanf_float+0xe4>)
 8003c5c:	f850 f021 	ldr.w	pc, [r0, r1, lsl #2]
 8003c60:	08003d0f 	.word	0x08003d0f
 8003c64:	08003be1 	.word	0x08003be1
 8003c68:	08003d0f 	.word	0x08003d0f
 8003c6c:	08003da3 	.word	0x08003da3
 8003c70:	08003be1 	.word	0x08003be1
 8003c74:	08003cbd 	.word	0x08003cbd
 8003c78:	08003cf9 	.word	0x08003cf9
 8003c7c:	08003cf9 	.word	0x08003cf9
 8003c80:	08003cf9 	.word	0x08003cf9
 8003c84:	08003cf9 	.word	0x08003cf9
 8003c88:	08003cf9 	.word	0x08003cf9
 8003c8c:	08003cf9 	.word	0x08003cf9
 8003c90:	08003cf9 	.word	0x08003cf9
 8003c94:	08003cf9 	.word	0x08003cf9
 8003c98:	08003cf9 	.word	0x08003cf9
 8003c9c:	2b6e      	cmp	r3, #110	; 0x6e
 8003c9e:	d809      	bhi.n	8003cb4 <_scanf_float+0x138>
 8003ca0:	2b60      	cmp	r3, #96	; 0x60
 8003ca2:	d8b2      	bhi.n	8003c0a <_scanf_float+0x8e>
 8003ca4:	2b54      	cmp	r3, #84	; 0x54
 8003ca6:	d077      	beq.n	8003d98 <_scanf_float+0x21c>
 8003ca8:	2b59      	cmp	r3, #89	; 0x59
 8003caa:	d199      	bne.n	8003be0 <_scanf_float+0x64>
 8003cac:	2d07      	cmp	r5, #7
 8003cae:	d197      	bne.n	8003be0 <_scanf_float+0x64>
 8003cb0:	2508      	movs	r5, #8
 8003cb2:	e029      	b.n	8003d08 <_scanf_float+0x18c>
 8003cb4:	2b74      	cmp	r3, #116	; 0x74
 8003cb6:	d06f      	beq.n	8003d98 <_scanf_float+0x21c>
 8003cb8:	2b79      	cmp	r3, #121	; 0x79
 8003cba:	e7f6      	b.n	8003caa <_scanf_float+0x12e>
 8003cbc:	6821      	ldr	r1, [r4, #0]
 8003cbe:	05c8      	lsls	r0, r1, #23
 8003cc0:	d51a      	bpl.n	8003cf8 <_scanf_float+0x17c>
 8003cc2:	9b02      	ldr	r3, [sp, #8]
 8003cc4:	f021 0180 	bic.w	r1, r1, #128	; 0x80
 8003cc8:	6021      	str	r1, [r4, #0]
 8003cca:	f109 0901 	add.w	r9, r9, #1
 8003cce:	b11b      	cbz	r3, 8003cd8 <_scanf_float+0x15c>
 8003cd0:	3b01      	subs	r3, #1
 8003cd2:	3201      	adds	r2, #1
 8003cd4:	9302      	str	r3, [sp, #8]
 8003cd6:	60a2      	str	r2, [r4, #8]
 8003cd8:	68a3      	ldr	r3, [r4, #8]
 8003cda:	3b01      	subs	r3, #1
 8003cdc:	60a3      	str	r3, [r4, #8]
 8003cde:	6923      	ldr	r3, [r4, #16]
 8003ce0:	3301      	adds	r3, #1
 8003ce2:	6123      	str	r3, [r4, #16]
 8003ce4:	687b      	ldr	r3, [r7, #4]
 8003ce6:	3b01      	subs	r3, #1
 8003ce8:	2b00      	cmp	r3, #0
 8003cea:	607b      	str	r3, [r7, #4]
 8003cec:	f340 8084 	ble.w	8003df8 <_scanf_float+0x27c>
 8003cf0:	683b      	ldr	r3, [r7, #0]
 8003cf2:	3301      	adds	r3, #1
 8003cf4:	603b      	str	r3, [r7, #0]
 8003cf6:	e766      	b.n	8003bc6 <_scanf_float+0x4a>
 8003cf8:	eb1a 0f05 	cmn.w	sl, r5
 8003cfc:	f47f af70 	bne.w	8003be0 <_scanf_float+0x64>
 8003d00:	6822      	ldr	r2, [r4, #0]
 8003d02:	f422 72c0 	bic.w	r2, r2, #384	; 0x180
 8003d06:	6022      	str	r2, [r4, #0]
 8003d08:	f806 3b01 	strb.w	r3, [r6], #1
 8003d0c:	e7e4      	b.n	8003cd8 <_scanf_float+0x15c>
 8003d0e:	6822      	ldr	r2, [r4, #0]
 8003d10:	0610      	lsls	r0, r2, #24
 8003d12:	f57f af65 	bpl.w	8003be0 <_scanf_float+0x64>
 8003d16:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8003d1a:	e7f4      	b.n	8003d06 <_scanf_float+0x18a>
 8003d1c:	f1ba 0f00 	cmp.w	sl, #0
 8003d20:	d10e      	bne.n	8003d40 <_scanf_float+0x1c4>
 8003d22:	f1b9 0f00 	cmp.w	r9, #0
 8003d26:	d10e      	bne.n	8003d46 <_scanf_float+0x1ca>
 8003d28:	6822      	ldr	r2, [r4, #0]
 8003d2a:	f402 61e0 	and.w	r1, r2, #1792	; 0x700
 8003d2e:	f5b1 6fe0 	cmp.w	r1, #1792	; 0x700
 8003d32:	d108      	bne.n	8003d46 <_scanf_float+0x1ca>
 8003d34:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 8003d38:	f04f 0a01 	mov.w	sl, #1
 8003d3c:	6022      	str	r2, [r4, #0]
 8003d3e:	e7e3      	b.n	8003d08 <_scanf_float+0x18c>
 8003d40:	f1ba 0f02 	cmp.w	sl, #2
 8003d44:	d055      	beq.n	8003df2 <_scanf_float+0x276>
 8003d46:	2d01      	cmp	r5, #1
 8003d48:	d002      	beq.n	8003d50 <_scanf_float+0x1d4>
 8003d4a:	2d04      	cmp	r5, #4
 8003d4c:	f47f af48 	bne.w	8003be0 <_scanf_float+0x64>
 8003d50:	3501      	adds	r5, #1
 8003d52:	b2ed      	uxtb	r5, r5
 8003d54:	e7d8      	b.n	8003d08 <_scanf_float+0x18c>
 8003d56:	f1ba 0f01 	cmp.w	sl, #1
 8003d5a:	f47f af41 	bne.w	8003be0 <_scanf_float+0x64>
 8003d5e:	f04f 0a02 	mov.w	sl, #2
 8003d62:	e7d1      	b.n	8003d08 <_scanf_float+0x18c>
 8003d64:	b97d      	cbnz	r5, 8003d86 <_scanf_float+0x20a>
 8003d66:	f1b9 0f00 	cmp.w	r9, #0
 8003d6a:	f47f af3c 	bne.w	8003be6 <_scanf_float+0x6a>
 8003d6e:	6822      	ldr	r2, [r4, #0]
 8003d70:	f402 61e0 	and.w	r1, r2, #1792	; 0x700
 8003d74:	f5b1 6fe0 	cmp.w	r1, #1792	; 0x700
 8003d78:	f47f af39 	bne.w	8003bee <_scanf_float+0x72>
 8003d7c:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 8003d80:	2501      	movs	r5, #1
 8003d82:	6022      	str	r2, [r4, #0]
 8003d84:	e7c0      	b.n	8003d08 <_scanf_float+0x18c>
 8003d86:	2d03      	cmp	r5, #3
 8003d88:	d0e2      	beq.n	8003d50 <_scanf_float+0x1d4>
 8003d8a:	2d05      	cmp	r5, #5
 8003d8c:	e7de      	b.n	8003d4c <_scanf_float+0x1d0>
 8003d8e:	2d02      	cmp	r5, #2
 8003d90:	f47f af26 	bne.w	8003be0 <_scanf_float+0x64>
 8003d94:	2503      	movs	r5, #3
 8003d96:	e7b7      	b.n	8003d08 <_scanf_float+0x18c>
 8003d98:	2d06      	cmp	r5, #6
 8003d9a:	f47f af21 	bne.w	8003be0 <_scanf_float+0x64>
 8003d9e:	2507      	movs	r5, #7
 8003da0:	e7b2      	b.n	8003d08 <_scanf_float+0x18c>
 8003da2:	6822      	ldr	r2, [r4, #0]
 8003da4:	0591      	lsls	r1, r2, #22
 8003da6:	f57f af1b 	bpl.w	8003be0 <_scanf_float+0x64>
 8003daa:	f422 7220 	bic.w	r2, r2, #640	; 0x280
 8003dae:	6022      	str	r2, [r4, #0]
 8003db0:	f8cd 9004 	str.w	r9, [sp, #4]
 8003db4:	e7a8      	b.n	8003d08 <_scanf_float+0x18c>
 8003db6:	6822      	ldr	r2, [r4, #0]
 8003db8:	f402 61a0 	and.w	r1, r2, #1280	; 0x500
 8003dbc:	f5b1 6f80 	cmp.w	r1, #1024	; 0x400
 8003dc0:	d006      	beq.n	8003dd0 <_scanf_float+0x254>
 8003dc2:	0550      	lsls	r0, r2, #21
 8003dc4:	f57f af0c 	bpl.w	8003be0 <_scanf_float+0x64>
 8003dc8:	f1b9 0f00 	cmp.w	r9, #0
 8003dcc:	f43f af0f 	beq.w	8003bee <_scanf_float+0x72>
 8003dd0:	0591      	lsls	r1, r2, #22
 8003dd2:	bf58      	it	pl
 8003dd4:	9901      	ldrpl	r1, [sp, #4]
 8003dd6:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 8003dda:	bf58      	it	pl
 8003ddc:	eba9 0101 	subpl.w	r1, r9, r1
 8003de0:	f442 72c0 	orr.w	r2, r2, #384	; 0x180
 8003de4:	f04f 0900 	mov.w	r9, #0
 8003de8:	bf58      	it	pl
 8003dea:	e9cd 1604 	strdpl	r1, r6, [sp, #16]
 8003dee:	6022      	str	r2, [r4, #0]
 8003df0:	e78a      	b.n	8003d08 <_scanf_float+0x18c>
 8003df2:	f04f 0a03 	mov.w	sl, #3
 8003df6:	e787      	b.n	8003d08 <_scanf_float+0x18c>
 8003df8:	4639      	mov	r1, r7
 8003dfa:	4640      	mov	r0, r8
 8003dfc:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
 8003e00:	4798      	blx	r3
 8003e02:	2800      	cmp	r0, #0
 8003e04:	f43f aedf 	beq.w	8003bc6 <_scanf_float+0x4a>
 8003e08:	e6ea      	b.n	8003be0 <_scanf_float+0x64>
 8003e0a:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8003e0e:	463a      	mov	r2, r7
 8003e10:	4640      	mov	r0, r8
 8003e12:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 8003e16:	4798      	blx	r3
 8003e18:	6923      	ldr	r3, [r4, #16]
 8003e1a:	3b01      	subs	r3, #1
 8003e1c:	6123      	str	r3, [r4, #16]
 8003e1e:	e6ec      	b.n	8003bfa <_scanf_float+0x7e>
 8003e20:	1e6b      	subs	r3, r5, #1
 8003e22:	2b06      	cmp	r3, #6
 8003e24:	d825      	bhi.n	8003e72 <_scanf_float+0x2f6>
 8003e26:	2d02      	cmp	r5, #2
 8003e28:	d836      	bhi.n	8003e98 <_scanf_float+0x31c>
 8003e2a:	455e      	cmp	r6, fp
 8003e2c:	f67f aee8 	bls.w	8003c00 <_scanf_float+0x84>
 8003e30:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8003e34:	463a      	mov	r2, r7
 8003e36:	4640      	mov	r0, r8
 8003e38:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 8003e3c:	4798      	blx	r3
 8003e3e:	6923      	ldr	r3, [r4, #16]
 8003e40:	3b01      	subs	r3, #1
 8003e42:	6123      	str	r3, [r4, #16]
 8003e44:	e7f1      	b.n	8003e2a <_scanf_float+0x2ae>
 8003e46:	9802      	ldr	r0, [sp, #8]
 8003e48:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8003e4c:	f810 1d01 	ldrb.w	r1, [r0, #-1]!
 8003e50:	463a      	mov	r2, r7
 8003e52:	9002      	str	r0, [sp, #8]
 8003e54:	4640      	mov	r0, r8
 8003e56:	4798      	blx	r3
 8003e58:	6923      	ldr	r3, [r4, #16]
 8003e5a:	3b01      	subs	r3, #1
 8003e5c:	6123      	str	r3, [r4, #16]
 8003e5e:	f10a 3aff 	add.w	sl, sl, #4294967295	; 0xffffffff
 8003e62:	fa5f fa8a 	uxtb.w	sl, sl
 8003e66:	f1ba 0f02 	cmp.w	sl, #2
 8003e6a:	d1ec      	bne.n	8003e46 <_scanf_float+0x2ca>
 8003e6c:	3d03      	subs	r5, #3
 8003e6e:	b2ed      	uxtb	r5, r5
 8003e70:	1b76      	subs	r6, r6, r5
 8003e72:	6823      	ldr	r3, [r4, #0]
 8003e74:	05da      	lsls	r2, r3, #23
 8003e76:	d52f      	bpl.n	8003ed8 <_scanf_float+0x35c>
 8003e78:	055b      	lsls	r3, r3, #21
 8003e7a:	d510      	bpl.n	8003e9e <_scanf_float+0x322>
 8003e7c:	455e      	cmp	r6, fp
 8003e7e:	f67f aebf 	bls.w	8003c00 <_scanf_float+0x84>
 8003e82:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8003e86:	463a      	mov	r2, r7
 8003e88:	4640      	mov	r0, r8
 8003e8a:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 8003e8e:	4798      	blx	r3
 8003e90:	6923      	ldr	r3, [r4, #16]
 8003e92:	3b01      	subs	r3, #1
 8003e94:	6123      	str	r3, [r4, #16]
 8003e96:	e7f1      	b.n	8003e7c <_scanf_float+0x300>
 8003e98:	46aa      	mov	sl, r5
 8003e9a:	9602      	str	r6, [sp, #8]
 8003e9c:	e7df      	b.n	8003e5e <_scanf_float+0x2e2>
 8003e9e:	f816 1c01 	ldrb.w	r1, [r6, #-1]
 8003ea2:	6923      	ldr	r3, [r4, #16]
 8003ea4:	2965      	cmp	r1, #101	; 0x65
 8003ea6:	f103 33ff 	add.w	r3, r3, #4294967295	; 0xffffffff
 8003eaa:	f106 35ff 	add.w	r5, r6, #4294967295	; 0xffffffff
 8003eae:	6123      	str	r3, [r4, #16]
 8003eb0:	d00c      	beq.n	8003ecc <_scanf_float+0x350>
 8003eb2:	2945      	cmp	r1, #69	; 0x45
 8003eb4:	d00a      	beq.n	8003ecc <_scanf_float+0x350>
 8003eb6:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8003eba:	463a      	mov	r2, r7
 8003ebc:	4640      	mov	r0, r8
 8003ebe:	4798      	blx	r3
 8003ec0:	6923      	ldr	r3, [r4, #16]
 8003ec2:	f816 1c02 	ldrb.w	r1, [r6, #-2]
 8003ec6:	3b01      	subs	r3, #1
 8003ec8:	1eb5      	subs	r5, r6, #2
 8003eca:	6123      	str	r3, [r4, #16]
 8003ecc:	463a      	mov	r2, r7
 8003ece:	4640      	mov	r0, r8
 8003ed0:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8003ed4:	4798      	blx	r3
 8003ed6:	462e      	mov	r6, r5
 8003ed8:	6825      	ldr	r5, [r4, #0]
 8003eda:	f015 0510 	ands.w	r5, r5, #16
 8003ede:	d155      	bne.n	8003f8c <_scanf_float+0x410>
 8003ee0:	7035      	strb	r5, [r6, #0]
 8003ee2:	6823      	ldr	r3, [r4, #0]
 8003ee4:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
 8003ee8:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8003eec:	d11d      	bne.n	8003f2a <_scanf_float+0x3ae>
 8003eee:	9b01      	ldr	r3, [sp, #4]
 8003ef0:	454b      	cmp	r3, r9
 8003ef2:	eba3 0209 	sub.w	r2, r3, r9
 8003ef6:	d125      	bne.n	8003f44 <_scanf_float+0x3c8>
 8003ef8:	2200      	movs	r2, #0
 8003efa:	4659      	mov	r1, fp
 8003efc:	4640      	mov	r0, r8
 8003efe:	f000 ff27 	bl	8004d50 <_strtod_r>
 8003f02:	9b03      	ldr	r3, [sp, #12]
 8003f04:	f8d4 c000 	ldr.w	ip, [r4]
 8003f08:	681b      	ldr	r3, [r3, #0]
 8003f0a:	f01c 0f02 	tst.w	ip, #2
 8003f0e:	4606      	mov	r6, r0
 8003f10:	460f      	mov	r7, r1
 8003f12:	f103 0204 	add.w	r2, r3, #4
 8003f16:	d020      	beq.n	8003f5a <_scanf_float+0x3de>
 8003f18:	9903      	ldr	r1, [sp, #12]
 8003f1a:	600a      	str	r2, [r1, #0]
 8003f1c:	681b      	ldr	r3, [r3, #0]
 8003f1e:	e9c3 6700 	strd	r6, r7, [r3]
 8003f22:	68e3      	ldr	r3, [r4, #12]
 8003f24:	3301      	adds	r3, #1
 8003f26:	60e3      	str	r3, [r4, #12]
 8003f28:	e66b      	b.n	8003c02 <_scanf_float+0x86>
 8003f2a:	9b04      	ldr	r3, [sp, #16]
 8003f2c:	2b00      	cmp	r3, #0
 8003f2e:	d0e3      	beq.n	8003ef8 <_scanf_float+0x37c>
 8003f30:	9905      	ldr	r1, [sp, #20]
 8003f32:	230a      	movs	r3, #10
 8003f34:	462a      	mov	r2, r5
 8003f36:	4640      	mov	r0, r8
 8003f38:	3101      	adds	r1, #1
 8003f3a:	f000 ff8d 	bl	8004e58 <_strtol_r>
 8003f3e:	9b04      	ldr	r3, [sp, #16]
 8003f40:	9e05      	ldr	r6, [sp, #20]
 8003f42:	1ac2      	subs	r2, r0, r3
 8003f44:	f204 136f 	addw	r3, r4, #367	; 0x16f
 8003f48:	429e      	cmp	r6, r3
 8003f4a:	bf28      	it	cs
 8003f4c:	f504 76b7 	addcs.w	r6, r4, #366	; 0x16e
 8003f50:	4630      	mov	r0, r6
 8003f52:	490f      	ldr	r1, [pc, #60]	; (8003f90 <_scanf_float+0x414>)
 8003f54:	f000 f820 	bl	8003f98 <siprintf>
 8003f58:	e7ce      	b.n	8003ef8 <_scanf_float+0x37c>
 8003f5a:	f01c 0f04 	tst.w	ip, #4
 8003f5e:	d1db      	bne.n	8003f18 <_scanf_float+0x39c>
 8003f60:	f8dd c00c 	ldr.w	ip, [sp, #12]
 8003f64:	f8cc 2000 	str.w	r2, [ip]
 8003f68:	f8d3 8000 	ldr.w	r8, [r3]
 8003f6c:	4602      	mov	r2, r0
 8003f6e:	460b      	mov	r3, r1
 8003f70:	f7fc fd5c 	bl	8000a2c <__aeabi_dcmpun>
 8003f74:	b128      	cbz	r0, 8003f82 <_scanf_float+0x406>
 8003f76:	4807      	ldr	r0, [pc, #28]	; (8003f94 <_scanf_float+0x418>)
 8003f78:	f001 f80e 	bl	8004f98 <nanf>
 8003f7c:	f8c8 0000 	str.w	r0, [r8]
 8003f80:	e7cf      	b.n	8003f22 <_scanf_float+0x3a6>
 8003f82:	4630      	mov	r0, r6
 8003f84:	4639      	mov	r1, r7
 8003f86:	f7fc fdaf 	bl	8000ae8 <__aeabi_d2f>
 8003f8a:	e7f7      	b.n	8003f7c <_scanf_float+0x400>
 8003f8c:	2500      	movs	r5, #0
 8003f8e:	e638      	b.n	8003c02 <_scanf_float+0x86>
 8003f90:	08009454 	.word	0x08009454
 8003f94:	08009847 	.word	0x08009847

08003f98 <siprintf>:
 8003f98:	b40e      	push	{r1, r2, r3}
 8003f9a:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 8003f9e:	b500      	push	{lr}
 8003fa0:	b09c      	sub	sp, #112	; 0x70
 8003fa2:	ab1d      	add	r3, sp, #116	; 0x74
 8003fa4:	9002      	str	r0, [sp, #8]
 8003fa6:	9006      	str	r0, [sp, #24]
 8003fa8:	9107      	str	r1, [sp, #28]
 8003faa:	9104      	str	r1, [sp, #16]
 8003fac:	4808      	ldr	r0, [pc, #32]	; (8003fd0 <siprintf+0x38>)
 8003fae:	4909      	ldr	r1, [pc, #36]	; (8003fd4 <siprintf+0x3c>)
 8003fb0:	f853 2b04 	ldr.w	r2, [r3], #4
 8003fb4:	9105      	str	r1, [sp, #20]
 8003fb6:	6800      	ldr	r0, [r0, #0]
 8003fb8:	a902      	add	r1, sp, #8
 8003fba:	9301      	str	r3, [sp, #4]
 8003fbc:	f002 fa14 	bl	80063e8 <_svfiprintf_r>
 8003fc0:	2200      	movs	r2, #0
 8003fc2:	9b02      	ldr	r3, [sp, #8]
 8003fc4:	701a      	strb	r2, [r3, #0]
 8003fc6:	b01c      	add	sp, #112	; 0x70
 8003fc8:	f85d eb04 	ldr.w	lr, [sp], #4
 8003fcc:	b003      	add	sp, #12
 8003fce:	4770      	bx	lr
 8003fd0:	200001c4 	.word	0x200001c4
 8003fd4:	ffff0208 	.word	0xffff0208

08003fd8 <std>:
 8003fd8:	2300      	movs	r3, #0
 8003fda:	b510      	push	{r4, lr}
 8003fdc:	4604      	mov	r4, r0
 8003fde:	e9c0 3300 	strd	r3, r3, [r0]
 8003fe2:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8003fe6:	6083      	str	r3, [r0, #8]
 8003fe8:	8181      	strh	r1, [r0, #12]
 8003fea:	6643      	str	r3, [r0, #100]	; 0x64
 8003fec:	81c2      	strh	r2, [r0, #14]
 8003fee:	6183      	str	r3, [r0, #24]
 8003ff0:	4619      	mov	r1, r3
 8003ff2:	2208      	movs	r2, #8
 8003ff4:	305c      	adds	r0, #92	; 0x5c
 8003ff6:	f000 ff73 	bl	8004ee0 <memset>
 8003ffa:	4b0d      	ldr	r3, [pc, #52]	; (8004030 <std+0x58>)
 8003ffc:	6224      	str	r4, [r4, #32]
 8003ffe:	6263      	str	r3, [r4, #36]	; 0x24
 8004000:	4b0c      	ldr	r3, [pc, #48]	; (8004034 <std+0x5c>)
 8004002:	62a3      	str	r3, [r4, #40]	; 0x28
 8004004:	4b0c      	ldr	r3, [pc, #48]	; (8004038 <std+0x60>)
 8004006:	62e3      	str	r3, [r4, #44]	; 0x2c
 8004008:	4b0c      	ldr	r3, [pc, #48]	; (800403c <std+0x64>)
 800400a:	6323      	str	r3, [r4, #48]	; 0x30
 800400c:	4b0c      	ldr	r3, [pc, #48]	; (8004040 <std+0x68>)
 800400e:	429c      	cmp	r4, r3
 8004010:	d006      	beq.n	8004020 <std+0x48>
 8004012:	f103 0268 	add.w	r2, r3, #104	; 0x68
 8004016:	4294      	cmp	r4, r2
 8004018:	d002      	beq.n	8004020 <std+0x48>
 800401a:	33d0      	adds	r3, #208	; 0xd0
 800401c:	429c      	cmp	r4, r3
 800401e:	d105      	bne.n	800402c <std+0x54>
 8004020:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8004024:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8004028:	f000 bf90 	b.w	8004f4c <__retarget_lock_init_recursive>
 800402c:	bd10      	pop	{r4, pc}
 800402e:	bf00      	nop
 8004030:	08007481 	.word	0x08007481
 8004034:	080074a3 	.word	0x080074a3
 8004038:	080074db 	.word	0x080074db
 800403c:	080074ff 	.word	0x080074ff
 8004040:	200002a8 	.word	0x200002a8

08004044 <stdio_exit_handler>:
 8004044:	4a02      	ldr	r2, [pc, #8]	; (8004050 <stdio_exit_handler+0xc>)
 8004046:	4903      	ldr	r1, [pc, #12]	; (8004054 <stdio_exit_handler+0x10>)
 8004048:	4803      	ldr	r0, [pc, #12]	; (8004058 <stdio_exit_handler+0x14>)
 800404a:	f000 bf07 	b.w	8004e5c <_fwalk_sglue>
 800404e:	bf00      	nop
 8004050:	20000000 	.word	0x20000000
 8004054:	08006ae1 	.word	0x08006ae1
 8004058:	20000178 	.word	0x20000178

0800405c <cleanup_stdio>:
 800405c:	6841      	ldr	r1, [r0, #4]
 800405e:	4b0c      	ldr	r3, [pc, #48]	; (8004090 <cleanup_stdio+0x34>)
 8004060:	b510      	push	{r4, lr}
 8004062:	4299      	cmp	r1, r3
 8004064:	4604      	mov	r4, r0
 8004066:	d001      	beq.n	800406c <cleanup_stdio+0x10>
 8004068:	f002 fd3a 	bl	8006ae0 <_fflush_r>
 800406c:	68a1      	ldr	r1, [r4, #8]
 800406e:	4b09      	ldr	r3, [pc, #36]	; (8004094 <cleanup_stdio+0x38>)
 8004070:	4299      	cmp	r1, r3
 8004072:	d002      	beq.n	800407a <cleanup_stdio+0x1e>
 8004074:	4620      	mov	r0, r4
 8004076:	f002 fd33 	bl	8006ae0 <_fflush_r>
 800407a:	68e1      	ldr	r1, [r4, #12]
 800407c:	4b06      	ldr	r3, [pc, #24]	; (8004098 <cleanup_stdio+0x3c>)
 800407e:	4299      	cmp	r1, r3
 8004080:	d004      	beq.n	800408c <cleanup_stdio+0x30>
 8004082:	4620      	mov	r0, r4
 8004084:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8004088:	f002 bd2a 	b.w	8006ae0 <_fflush_r>
 800408c:	bd10      	pop	{r4, pc}
 800408e:	bf00      	nop
 8004090:	200002a8 	.word	0x200002a8
 8004094:	20000310 	.word	0x20000310
 8004098:	20000378 	.word	0x20000378

0800409c <global_stdio_init.part.0>:
 800409c:	b510      	push	{r4, lr}
 800409e:	4b0b      	ldr	r3, [pc, #44]	; (80040cc <global_stdio_init.part.0+0x30>)
 80040a0:	4c0b      	ldr	r4, [pc, #44]	; (80040d0 <global_stdio_init.part.0+0x34>)
 80040a2:	4a0c      	ldr	r2, [pc, #48]	; (80040d4 <global_stdio_init.part.0+0x38>)
 80040a4:	4620      	mov	r0, r4
 80040a6:	601a      	str	r2, [r3, #0]
 80040a8:	2104      	movs	r1, #4
 80040aa:	2200      	movs	r2, #0
 80040ac:	f7ff ff94 	bl	8003fd8 <std>
 80040b0:	f104 0068 	add.w	r0, r4, #104	; 0x68
 80040b4:	2201      	movs	r2, #1
 80040b6:	2109      	movs	r1, #9
 80040b8:	f7ff ff8e 	bl	8003fd8 <std>
 80040bc:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 80040c0:	2202      	movs	r2, #2
 80040c2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80040c6:	2112      	movs	r1, #18
 80040c8:	f7ff bf86 	b.w	8003fd8 <std>
 80040cc:	200003e0 	.word	0x200003e0
 80040d0:	200002a8 	.word	0x200002a8
 80040d4:	08004045 	.word	0x08004045

080040d8 <__sfp_lock_acquire>:
 80040d8:	4801      	ldr	r0, [pc, #4]	; (80040e0 <__sfp_lock_acquire+0x8>)
 80040da:	f000 bf38 	b.w	8004f4e <__retarget_lock_acquire_recursive>
 80040de:	bf00      	nop
 80040e0:	200003e5 	.word	0x200003e5

080040e4 <__sfp_lock_release>:
 80040e4:	4801      	ldr	r0, [pc, #4]	; (80040ec <__sfp_lock_release+0x8>)
 80040e6:	f000 bf33 	b.w	8004f50 <__retarget_lock_release_recursive>
 80040ea:	bf00      	nop
 80040ec:	200003e5 	.word	0x200003e5

080040f0 <__sinit>:
 80040f0:	b510      	push	{r4, lr}
 80040f2:	4604      	mov	r4, r0
 80040f4:	f7ff fff0 	bl	80040d8 <__sfp_lock_acquire>
 80040f8:	6a23      	ldr	r3, [r4, #32]
 80040fa:	b11b      	cbz	r3, 8004104 <__sinit+0x14>
 80040fc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8004100:	f7ff bff0 	b.w	80040e4 <__sfp_lock_release>
 8004104:	4b04      	ldr	r3, [pc, #16]	; (8004118 <__sinit+0x28>)
 8004106:	6223      	str	r3, [r4, #32]
 8004108:	4b04      	ldr	r3, [pc, #16]	; (800411c <__sinit+0x2c>)
 800410a:	681b      	ldr	r3, [r3, #0]
 800410c:	2b00      	cmp	r3, #0
 800410e:	d1f5      	bne.n	80040fc <__sinit+0xc>
 8004110:	f7ff ffc4 	bl	800409c <global_stdio_init.part.0>
 8004114:	e7f2      	b.n	80040fc <__sinit+0xc>
 8004116:	bf00      	nop
 8004118:	0800405d 	.word	0x0800405d
 800411c:	200003e0 	.word	0x200003e0

08004120 <sulp>:
 8004120:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004124:	460f      	mov	r7, r1
 8004126:	4690      	mov	r8, r2
 8004128:	f003 f87a 	bl	8007220 <__ulp>
 800412c:	4604      	mov	r4, r0
 800412e:	460d      	mov	r5, r1
 8004130:	f1b8 0f00 	cmp.w	r8, #0
 8004134:	d011      	beq.n	800415a <sulp+0x3a>
 8004136:	f3c7 530a 	ubfx	r3, r7, #20, #11
 800413a:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 800413e:	2b00      	cmp	r3, #0
 8004140:	dd0b      	ble.n	800415a <sulp+0x3a>
 8004142:	2400      	movs	r4, #0
 8004144:	051b      	lsls	r3, r3, #20
 8004146:	f103 557f 	add.w	r5, r3, #1069547520	; 0x3fc00000
 800414a:	f505 1540 	add.w	r5, r5, #3145728	; 0x300000
 800414e:	4622      	mov	r2, r4
 8004150:	462b      	mov	r3, r5
 8004152:	f7fc f9d1 	bl	80004f8 <__aeabi_dmul>
 8004156:	4604      	mov	r4, r0
 8004158:	460d      	mov	r5, r1
 800415a:	4620      	mov	r0, r4
 800415c:	4629      	mov	r1, r5
 800415e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004162:	0000      	movs	r0, r0
 8004164:	0000      	movs	r0, r0
	...

08004168 <_strtod_l>:
 8004168:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800416c:	b09f      	sub	sp, #124	; 0x7c
 800416e:	9217      	str	r2, [sp, #92]	; 0x5c
 8004170:	2200      	movs	r2, #0
 8004172:	4604      	mov	r4, r0
 8004174:	921a      	str	r2, [sp, #104]	; 0x68
 8004176:	460d      	mov	r5, r1
 8004178:	f04f 0800 	mov.w	r8, #0
 800417c:	f04f 0900 	mov.w	r9, #0
 8004180:	460a      	mov	r2, r1
 8004182:	9219      	str	r2, [sp, #100]	; 0x64
 8004184:	7811      	ldrb	r1, [r2, #0]
 8004186:	292b      	cmp	r1, #43	; 0x2b
 8004188:	d04a      	beq.n	8004220 <_strtod_l+0xb8>
 800418a:	d838      	bhi.n	80041fe <_strtod_l+0x96>
 800418c:	290d      	cmp	r1, #13
 800418e:	d832      	bhi.n	80041f6 <_strtod_l+0x8e>
 8004190:	2908      	cmp	r1, #8
 8004192:	d832      	bhi.n	80041fa <_strtod_l+0x92>
 8004194:	2900      	cmp	r1, #0
 8004196:	d03b      	beq.n	8004210 <_strtod_l+0xa8>
 8004198:	2200      	movs	r2, #0
 800419a:	920e      	str	r2, [sp, #56]	; 0x38
 800419c:	9e19      	ldr	r6, [sp, #100]	; 0x64
 800419e:	7832      	ldrb	r2, [r6, #0]
 80041a0:	2a30      	cmp	r2, #48	; 0x30
 80041a2:	f040 80b2 	bne.w	800430a <_strtod_l+0x1a2>
 80041a6:	7872      	ldrb	r2, [r6, #1]
 80041a8:	f002 02df 	and.w	r2, r2, #223	; 0xdf
 80041ac:	2a58      	cmp	r2, #88	; 0x58
 80041ae:	d16e      	bne.n	800428e <_strtod_l+0x126>
 80041b0:	9302      	str	r3, [sp, #8]
 80041b2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80041b4:	4620      	mov	r0, r4
 80041b6:	9301      	str	r3, [sp, #4]
 80041b8:	ab1a      	add	r3, sp, #104	; 0x68
 80041ba:	9300      	str	r3, [sp, #0]
 80041bc:	4a8c      	ldr	r2, [pc, #560]	; (80043f0 <_strtod_l+0x288>)
 80041be:	ab1b      	add	r3, sp, #108	; 0x6c
 80041c0:	a919      	add	r1, sp, #100	; 0x64
 80041c2:	f001 fdc5 	bl	8005d50 <__gethex>
 80041c6:	f010 070f 	ands.w	r7, r0, #15
 80041ca:	4605      	mov	r5, r0
 80041cc:	d005      	beq.n	80041da <_strtod_l+0x72>
 80041ce:	2f06      	cmp	r7, #6
 80041d0:	d128      	bne.n	8004224 <_strtod_l+0xbc>
 80041d2:	2300      	movs	r3, #0
 80041d4:	3601      	adds	r6, #1
 80041d6:	9619      	str	r6, [sp, #100]	; 0x64
 80041d8:	930e      	str	r3, [sp, #56]	; 0x38
 80041da:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80041dc:	2b00      	cmp	r3, #0
 80041de:	f040 85a0 	bne.w	8004d22 <_strtod_l+0xbba>
 80041e2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80041e4:	b1cb      	cbz	r3, 800421a <_strtod_l+0xb2>
 80041e6:	4642      	mov	r2, r8
 80041e8:	f109 4300 	add.w	r3, r9, #2147483648	; 0x80000000
 80041ec:	4610      	mov	r0, r2
 80041ee:	4619      	mov	r1, r3
 80041f0:	b01f      	add	sp, #124	; 0x7c
 80041f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80041f6:	2920      	cmp	r1, #32
 80041f8:	d1ce      	bne.n	8004198 <_strtod_l+0x30>
 80041fa:	3201      	adds	r2, #1
 80041fc:	e7c1      	b.n	8004182 <_strtod_l+0x1a>
 80041fe:	292d      	cmp	r1, #45	; 0x2d
 8004200:	d1ca      	bne.n	8004198 <_strtod_l+0x30>
 8004202:	2101      	movs	r1, #1
 8004204:	910e      	str	r1, [sp, #56]	; 0x38
 8004206:	1c51      	adds	r1, r2, #1
 8004208:	9119      	str	r1, [sp, #100]	; 0x64
 800420a:	7852      	ldrb	r2, [r2, #1]
 800420c:	2a00      	cmp	r2, #0
 800420e:	d1c5      	bne.n	800419c <_strtod_l+0x34>
 8004210:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8004212:	9519      	str	r5, [sp, #100]	; 0x64
 8004214:	2b00      	cmp	r3, #0
 8004216:	f040 8582 	bne.w	8004d1e <_strtod_l+0xbb6>
 800421a:	4642      	mov	r2, r8
 800421c:	464b      	mov	r3, r9
 800421e:	e7e5      	b.n	80041ec <_strtod_l+0x84>
 8004220:	2100      	movs	r1, #0
 8004222:	e7ef      	b.n	8004204 <_strtod_l+0x9c>
 8004224:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8004226:	b13a      	cbz	r2, 8004238 <_strtod_l+0xd0>
 8004228:	2135      	movs	r1, #53	; 0x35
 800422a:	a81c      	add	r0, sp, #112	; 0x70
 800422c:	f003 f8e4 	bl	80073f8 <__copybits>
 8004230:	4620      	mov	r0, r4
 8004232:	991a      	ldr	r1, [sp, #104]	; 0x68
 8004234:	f002 fcc8 	bl	8006bc8 <_Bfree>
 8004238:	3f01      	subs	r7, #1
 800423a:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 800423c:	2f04      	cmp	r7, #4
 800423e:	d806      	bhi.n	800424e <_strtod_l+0xe6>
 8004240:	e8df f007 	tbb	[pc, r7]
 8004244:	201d0314 	.word	0x201d0314
 8004248:	14          	.byte	0x14
 8004249:	00          	.byte	0x00
 800424a:	e9dd 891c 	ldrd	r8, r9, [sp, #112]	; 0x70
 800424e:	05e9      	lsls	r1, r5, #23
 8004250:	bf48      	it	mi
 8004252:	f049 4900 	orrmi.w	r9, r9, #2147483648	; 0x80000000
 8004256:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 800425a:	0d1b      	lsrs	r3, r3, #20
 800425c:	051b      	lsls	r3, r3, #20
 800425e:	2b00      	cmp	r3, #0
 8004260:	d1bb      	bne.n	80041da <_strtod_l+0x72>
 8004262:	f000 fe49 	bl	8004ef8 <__errno>
 8004266:	2322      	movs	r3, #34	; 0x22
 8004268:	6003      	str	r3, [r0, #0]
 800426a:	e7b6      	b.n	80041da <_strtod_l+0x72>
 800426c:	f202 4233 	addw	r2, r2, #1075	; 0x433
 8004270:	e9dd 831c 	ldrd	r8, r3, [sp, #112]	; 0x70
 8004274:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 8004278:	ea43 5902 	orr.w	r9, r3, r2, lsl #20
 800427c:	e7e7      	b.n	800424e <_strtod_l+0xe6>
 800427e:	f8df 9174 	ldr.w	r9, [pc, #372]	; 80043f4 <_strtod_l+0x28c>
 8004282:	e7e4      	b.n	800424e <_strtod_l+0xe6>
 8004284:	f06f 4900 	mvn.w	r9, #2147483648	; 0x80000000
 8004288:	f04f 38ff 	mov.w	r8, #4294967295	; 0xffffffff
 800428c:	e7df      	b.n	800424e <_strtod_l+0xe6>
 800428e:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8004290:	1c5a      	adds	r2, r3, #1
 8004292:	9219      	str	r2, [sp, #100]	; 0x64
 8004294:	785b      	ldrb	r3, [r3, #1]
 8004296:	2b30      	cmp	r3, #48	; 0x30
 8004298:	d0f9      	beq.n	800428e <_strtod_l+0x126>
 800429a:	2b00      	cmp	r3, #0
 800429c:	d09d      	beq.n	80041da <_strtod_l+0x72>
 800429e:	2301      	movs	r3, #1
 80042a0:	f04f 0a00 	mov.w	sl, #0
 80042a4:	220a      	movs	r2, #10
 80042a6:	46d3      	mov	fp, sl
 80042a8:	9305      	str	r3, [sp, #20]
 80042aa:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80042ac:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 80042b0:	930b      	str	r3, [sp, #44]	; 0x2c
 80042b2:	9819      	ldr	r0, [sp, #100]	; 0x64
 80042b4:	7806      	ldrb	r6, [r0, #0]
 80042b6:	f1a6 0330 	sub.w	r3, r6, #48	; 0x30
 80042ba:	b2d9      	uxtb	r1, r3
 80042bc:	2909      	cmp	r1, #9
 80042be:	d926      	bls.n	800430e <_strtod_l+0x1a6>
 80042c0:	2201      	movs	r2, #1
 80042c2:	494d      	ldr	r1, [pc, #308]	; (80043f8 <_strtod_l+0x290>)
 80042c4:	f000 fdfa 	bl	8004ebc <strncmp>
 80042c8:	2800      	cmp	r0, #0
 80042ca:	d030      	beq.n	800432e <_strtod_l+0x1c6>
 80042cc:	2000      	movs	r0, #0
 80042ce:	4632      	mov	r2, r6
 80042d0:	4603      	mov	r3, r0
 80042d2:	465e      	mov	r6, fp
 80042d4:	9008      	str	r0, [sp, #32]
 80042d6:	2a65      	cmp	r2, #101	; 0x65
 80042d8:	d001      	beq.n	80042de <_strtod_l+0x176>
 80042da:	2a45      	cmp	r2, #69	; 0x45
 80042dc:	d113      	bne.n	8004306 <_strtod_l+0x19e>
 80042de:	b91e      	cbnz	r6, 80042e8 <_strtod_l+0x180>
 80042e0:	9a05      	ldr	r2, [sp, #20]
 80042e2:	4302      	orrs	r2, r0
 80042e4:	d094      	beq.n	8004210 <_strtod_l+0xa8>
 80042e6:	2600      	movs	r6, #0
 80042e8:	9d19      	ldr	r5, [sp, #100]	; 0x64
 80042ea:	1c6a      	adds	r2, r5, #1
 80042ec:	9219      	str	r2, [sp, #100]	; 0x64
 80042ee:	786a      	ldrb	r2, [r5, #1]
 80042f0:	2a2b      	cmp	r2, #43	; 0x2b
 80042f2:	d074      	beq.n	80043de <_strtod_l+0x276>
 80042f4:	2a2d      	cmp	r2, #45	; 0x2d
 80042f6:	d078      	beq.n	80043ea <_strtod_l+0x282>
 80042f8:	f04f 0c00 	mov.w	ip, #0
 80042fc:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
 8004300:	2909      	cmp	r1, #9
 8004302:	d97f      	bls.n	8004404 <_strtod_l+0x29c>
 8004304:	9519      	str	r5, [sp, #100]	; 0x64
 8004306:	2700      	movs	r7, #0
 8004308:	e09e      	b.n	8004448 <_strtod_l+0x2e0>
 800430a:	2300      	movs	r3, #0
 800430c:	e7c8      	b.n	80042a0 <_strtod_l+0x138>
 800430e:	f1bb 0f08 	cmp.w	fp, #8
 8004312:	bfd8      	it	le
 8004314:	990a      	ldrle	r1, [sp, #40]	; 0x28
 8004316:	f100 0001 	add.w	r0, r0, #1
 800431a:	bfd6      	itet	le
 800431c:	fb02 3301 	mlale	r3, r2, r1, r3
 8004320:	fb02 3a0a 	mlagt	sl, r2, sl, r3
 8004324:	930a      	strle	r3, [sp, #40]	; 0x28
 8004326:	f10b 0b01 	add.w	fp, fp, #1
 800432a:	9019      	str	r0, [sp, #100]	; 0x64
 800432c:	e7c1      	b.n	80042b2 <_strtod_l+0x14a>
 800432e:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8004330:	1c5a      	adds	r2, r3, #1
 8004332:	9219      	str	r2, [sp, #100]	; 0x64
 8004334:	785a      	ldrb	r2, [r3, #1]
 8004336:	f1bb 0f00 	cmp.w	fp, #0
 800433a:	d037      	beq.n	80043ac <_strtod_l+0x244>
 800433c:	465e      	mov	r6, fp
 800433e:	9008      	str	r0, [sp, #32]
 8004340:	f1a2 0330 	sub.w	r3, r2, #48	; 0x30
 8004344:	2b09      	cmp	r3, #9
 8004346:	d912      	bls.n	800436e <_strtod_l+0x206>
 8004348:	2301      	movs	r3, #1
 800434a:	e7c4      	b.n	80042d6 <_strtod_l+0x16e>
 800434c:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800434e:	3001      	adds	r0, #1
 8004350:	1c5a      	adds	r2, r3, #1
 8004352:	9219      	str	r2, [sp, #100]	; 0x64
 8004354:	785a      	ldrb	r2, [r3, #1]
 8004356:	2a30      	cmp	r2, #48	; 0x30
 8004358:	d0f8      	beq.n	800434c <_strtod_l+0x1e4>
 800435a:	f1a2 0331 	sub.w	r3, r2, #49	; 0x31
 800435e:	2b08      	cmp	r3, #8
 8004360:	f200 84e4 	bhi.w	8004d2c <_strtod_l+0xbc4>
 8004364:	9008      	str	r0, [sp, #32]
 8004366:	2000      	movs	r0, #0
 8004368:	4606      	mov	r6, r0
 800436a:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800436c:	930b      	str	r3, [sp, #44]	; 0x2c
 800436e:	3a30      	subs	r2, #48	; 0x30
 8004370:	f100 0301 	add.w	r3, r0, #1
 8004374:	d014      	beq.n	80043a0 <_strtod_l+0x238>
 8004376:	9908      	ldr	r1, [sp, #32]
 8004378:	eb00 0c06 	add.w	ip, r0, r6
 800437c:	4419      	add	r1, r3
 800437e:	9108      	str	r1, [sp, #32]
 8004380:	4633      	mov	r3, r6
 8004382:	210a      	movs	r1, #10
 8004384:	4563      	cmp	r3, ip
 8004386:	d113      	bne.n	80043b0 <_strtod_l+0x248>
 8004388:	1833      	adds	r3, r6, r0
 800438a:	2b08      	cmp	r3, #8
 800438c:	f106 0601 	add.w	r6, r6, #1
 8004390:	4406      	add	r6, r0
 8004392:	dc1a      	bgt.n	80043ca <_strtod_l+0x262>
 8004394:	230a      	movs	r3, #10
 8004396:	990a      	ldr	r1, [sp, #40]	; 0x28
 8004398:	fb03 2301 	mla	r3, r3, r1, r2
 800439c:	930a      	str	r3, [sp, #40]	; 0x28
 800439e:	2300      	movs	r3, #0
 80043a0:	9a19      	ldr	r2, [sp, #100]	; 0x64
 80043a2:	4618      	mov	r0, r3
 80043a4:	1c51      	adds	r1, r2, #1
 80043a6:	9119      	str	r1, [sp, #100]	; 0x64
 80043a8:	7852      	ldrb	r2, [r2, #1]
 80043aa:	e7c9      	b.n	8004340 <_strtod_l+0x1d8>
 80043ac:	4658      	mov	r0, fp
 80043ae:	e7d2      	b.n	8004356 <_strtod_l+0x1ee>
 80043b0:	2b08      	cmp	r3, #8
 80043b2:	f103 0301 	add.w	r3, r3, #1
 80043b6:	dc03      	bgt.n	80043c0 <_strtod_l+0x258>
 80043b8:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 80043ba:	434f      	muls	r7, r1
 80043bc:	970a      	str	r7, [sp, #40]	; 0x28
 80043be:	e7e1      	b.n	8004384 <_strtod_l+0x21c>
 80043c0:	2b10      	cmp	r3, #16
 80043c2:	bfd8      	it	le
 80043c4:	fb01 fa0a 	mulle.w	sl, r1, sl
 80043c8:	e7dc      	b.n	8004384 <_strtod_l+0x21c>
 80043ca:	2e10      	cmp	r6, #16
 80043cc:	bfdc      	itt	le
 80043ce:	230a      	movle	r3, #10
 80043d0:	fb03 2a0a 	mlale	sl, r3, sl, r2
 80043d4:	e7e3      	b.n	800439e <_strtod_l+0x236>
 80043d6:	2300      	movs	r3, #0
 80043d8:	9308      	str	r3, [sp, #32]
 80043da:	2301      	movs	r3, #1
 80043dc:	e780      	b.n	80042e0 <_strtod_l+0x178>
 80043de:	f04f 0c00 	mov.w	ip, #0
 80043e2:	1caa      	adds	r2, r5, #2
 80043e4:	9219      	str	r2, [sp, #100]	; 0x64
 80043e6:	78aa      	ldrb	r2, [r5, #2]
 80043e8:	e788      	b.n	80042fc <_strtod_l+0x194>
 80043ea:	f04f 0c01 	mov.w	ip, #1
 80043ee:	e7f8      	b.n	80043e2 <_strtod_l+0x27a>
 80043f0:	0800945c 	.word	0x0800945c
 80043f4:	7ff00000 	.word	0x7ff00000
 80043f8:	08009459 	.word	0x08009459
 80043fc:	9a19      	ldr	r2, [sp, #100]	; 0x64
 80043fe:	1c51      	adds	r1, r2, #1
 8004400:	9119      	str	r1, [sp, #100]	; 0x64
 8004402:	7852      	ldrb	r2, [r2, #1]
 8004404:	2a30      	cmp	r2, #48	; 0x30
 8004406:	d0f9      	beq.n	80043fc <_strtod_l+0x294>
 8004408:	f1a2 0131 	sub.w	r1, r2, #49	; 0x31
 800440c:	2908      	cmp	r1, #8
 800440e:	f63f af7a 	bhi.w	8004306 <_strtod_l+0x19e>
 8004412:	3a30      	subs	r2, #48	; 0x30
 8004414:	9209      	str	r2, [sp, #36]	; 0x24
 8004416:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8004418:	920c      	str	r2, [sp, #48]	; 0x30
 800441a:	9a19      	ldr	r2, [sp, #100]	; 0x64
 800441c:	1c57      	adds	r7, r2, #1
 800441e:	9719      	str	r7, [sp, #100]	; 0x64
 8004420:	7852      	ldrb	r2, [r2, #1]
 8004422:	f1a2 0e30 	sub.w	lr, r2, #48	; 0x30
 8004426:	f1be 0f09 	cmp.w	lr, #9
 800442a:	d938      	bls.n	800449e <_strtod_l+0x336>
 800442c:	990c      	ldr	r1, [sp, #48]	; 0x30
 800442e:	1a7f      	subs	r7, r7, r1
 8004430:	2f08      	cmp	r7, #8
 8004432:	f644 671f 	movw	r7, #19999	; 0x4e1f
 8004436:	dc03      	bgt.n	8004440 <_strtod_l+0x2d8>
 8004438:	9909      	ldr	r1, [sp, #36]	; 0x24
 800443a:	428f      	cmp	r7, r1
 800443c:	bfa8      	it	ge
 800443e:	460f      	movge	r7, r1
 8004440:	f1bc 0f00 	cmp.w	ip, #0
 8004444:	d000      	beq.n	8004448 <_strtod_l+0x2e0>
 8004446:	427f      	negs	r7, r7
 8004448:	2e00      	cmp	r6, #0
 800444a:	d14f      	bne.n	80044ec <_strtod_l+0x384>
 800444c:	9905      	ldr	r1, [sp, #20]
 800444e:	4301      	orrs	r1, r0
 8004450:	f47f aec3 	bne.w	80041da <_strtod_l+0x72>
 8004454:	2b00      	cmp	r3, #0
 8004456:	f47f aedb 	bne.w	8004210 <_strtod_l+0xa8>
 800445a:	2a69      	cmp	r2, #105	; 0x69
 800445c:	d029      	beq.n	80044b2 <_strtod_l+0x34a>
 800445e:	dc26      	bgt.n	80044ae <_strtod_l+0x346>
 8004460:	2a49      	cmp	r2, #73	; 0x49
 8004462:	d026      	beq.n	80044b2 <_strtod_l+0x34a>
 8004464:	2a4e      	cmp	r2, #78	; 0x4e
 8004466:	f47f aed3 	bne.w	8004210 <_strtod_l+0xa8>
 800446a:	499a      	ldr	r1, [pc, #616]	; (80046d4 <_strtod_l+0x56c>)
 800446c:	a819      	add	r0, sp, #100	; 0x64
 800446e:	f001 feb1 	bl	80061d4 <__match>
 8004472:	2800      	cmp	r0, #0
 8004474:	f43f aecc 	beq.w	8004210 <_strtod_l+0xa8>
 8004478:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800447a:	781b      	ldrb	r3, [r3, #0]
 800447c:	2b28      	cmp	r3, #40	; 0x28
 800447e:	d12f      	bne.n	80044e0 <_strtod_l+0x378>
 8004480:	4995      	ldr	r1, [pc, #596]	; (80046d8 <_strtod_l+0x570>)
 8004482:	aa1c      	add	r2, sp, #112	; 0x70
 8004484:	a819      	add	r0, sp, #100	; 0x64
 8004486:	f001 feb9 	bl	80061fc <__hexnan>
 800448a:	2805      	cmp	r0, #5
 800448c:	d128      	bne.n	80044e0 <_strtod_l+0x378>
 800448e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8004490:	f8dd 8070 	ldr.w	r8, [sp, #112]	; 0x70
 8004494:	f043 49ff 	orr.w	r9, r3, #2139095040	; 0x7f800000
 8004498:	f449 09e0 	orr.w	r9, r9, #7340032	; 0x700000
 800449c:	e69d      	b.n	80041da <_strtod_l+0x72>
 800449e:	210a      	movs	r1, #10
 80044a0:	9f09      	ldr	r7, [sp, #36]	; 0x24
 80044a2:	fb01 2107 	mla	r1, r1, r7, r2
 80044a6:	f1a1 0230 	sub.w	r2, r1, #48	; 0x30
 80044aa:	9209      	str	r2, [sp, #36]	; 0x24
 80044ac:	e7b5      	b.n	800441a <_strtod_l+0x2b2>
 80044ae:	2a6e      	cmp	r2, #110	; 0x6e
 80044b0:	e7d9      	b.n	8004466 <_strtod_l+0x2fe>
 80044b2:	498a      	ldr	r1, [pc, #552]	; (80046dc <_strtod_l+0x574>)
 80044b4:	a819      	add	r0, sp, #100	; 0x64
 80044b6:	f001 fe8d 	bl	80061d4 <__match>
 80044ba:	2800      	cmp	r0, #0
 80044bc:	f43f aea8 	beq.w	8004210 <_strtod_l+0xa8>
 80044c0:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80044c2:	4987      	ldr	r1, [pc, #540]	; (80046e0 <_strtod_l+0x578>)
 80044c4:	3b01      	subs	r3, #1
 80044c6:	a819      	add	r0, sp, #100	; 0x64
 80044c8:	9319      	str	r3, [sp, #100]	; 0x64
 80044ca:	f001 fe83 	bl	80061d4 <__match>
 80044ce:	b910      	cbnz	r0, 80044d6 <_strtod_l+0x36e>
 80044d0:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80044d2:	3301      	adds	r3, #1
 80044d4:	9319      	str	r3, [sp, #100]	; 0x64
 80044d6:	f04f 0800 	mov.w	r8, #0
 80044da:	f8df 9208 	ldr.w	r9, [pc, #520]	; 80046e4 <_strtod_l+0x57c>
 80044de:	e67c      	b.n	80041da <_strtod_l+0x72>
 80044e0:	4881      	ldr	r0, [pc, #516]	; (80046e8 <_strtod_l+0x580>)
 80044e2:	f000 fd53 	bl	8004f8c <nan>
 80044e6:	4680      	mov	r8, r0
 80044e8:	4689      	mov	r9, r1
 80044ea:	e676      	b.n	80041da <_strtod_l+0x72>
 80044ec:	9b08      	ldr	r3, [sp, #32]
 80044ee:	f1bb 0f00 	cmp.w	fp, #0
 80044f2:	bf08      	it	eq
 80044f4:	46b3      	moveq	fp, r6
 80044f6:	1afb      	subs	r3, r7, r3
 80044f8:	2e10      	cmp	r6, #16
 80044fa:	980a      	ldr	r0, [sp, #40]	; 0x28
 80044fc:	4635      	mov	r5, r6
 80044fe:	9309      	str	r3, [sp, #36]	; 0x24
 8004500:	bfa8      	it	ge
 8004502:	2510      	movge	r5, #16
 8004504:	f7fb ff7e 	bl	8000404 <__aeabi_ui2d>
 8004508:	2e09      	cmp	r6, #9
 800450a:	4680      	mov	r8, r0
 800450c:	4689      	mov	r9, r1
 800450e:	dd13      	ble.n	8004538 <_strtod_l+0x3d0>
 8004510:	4b76      	ldr	r3, [pc, #472]	; (80046ec <_strtod_l+0x584>)
 8004512:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8004516:	e953 2312 	ldrd	r2, r3, [r3, #-72]	; 0x48
 800451a:	f7fb ffed 	bl	80004f8 <__aeabi_dmul>
 800451e:	4680      	mov	r8, r0
 8004520:	4650      	mov	r0, sl
 8004522:	4689      	mov	r9, r1
 8004524:	f7fb ff6e 	bl	8000404 <__aeabi_ui2d>
 8004528:	4602      	mov	r2, r0
 800452a:	460b      	mov	r3, r1
 800452c:	4640      	mov	r0, r8
 800452e:	4649      	mov	r1, r9
 8004530:	f7fb fe2c 	bl	800018c <__adddf3>
 8004534:	4680      	mov	r8, r0
 8004536:	4689      	mov	r9, r1
 8004538:	2e0f      	cmp	r6, #15
 800453a:	dc36      	bgt.n	80045aa <_strtod_l+0x442>
 800453c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800453e:	2b00      	cmp	r3, #0
 8004540:	f43f ae4b 	beq.w	80041da <_strtod_l+0x72>
 8004544:	dd22      	ble.n	800458c <_strtod_l+0x424>
 8004546:	2b16      	cmp	r3, #22
 8004548:	dc09      	bgt.n	800455e <_strtod_l+0x3f6>
 800454a:	4968      	ldr	r1, [pc, #416]	; (80046ec <_strtod_l+0x584>)
 800454c:	4642      	mov	r2, r8
 800454e:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 8004552:	464b      	mov	r3, r9
 8004554:	e9d1 0100 	ldrd	r0, r1, [r1]
 8004558:	f7fb ffce 	bl	80004f8 <__aeabi_dmul>
 800455c:	e7c3      	b.n	80044e6 <_strtod_l+0x37e>
 800455e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8004560:	f1c6 0325 	rsb	r3, r6, #37	; 0x25
 8004564:	4293      	cmp	r3, r2
 8004566:	db20      	blt.n	80045aa <_strtod_l+0x442>
 8004568:	4c60      	ldr	r4, [pc, #384]	; (80046ec <_strtod_l+0x584>)
 800456a:	f1c6 060f 	rsb	r6, r6, #15
 800456e:	eb04 01c6 	add.w	r1, r4, r6, lsl #3
 8004572:	4642      	mov	r2, r8
 8004574:	e9d1 0100 	ldrd	r0, r1, [r1]
 8004578:	464b      	mov	r3, r9
 800457a:	f7fb ffbd 	bl	80004f8 <__aeabi_dmul>
 800457e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004580:	1b9e      	subs	r6, r3, r6
 8004582:	eb04 04c6 	add.w	r4, r4, r6, lsl #3
 8004586:	e9d4 2300 	ldrd	r2, r3, [r4]
 800458a:	e7e5      	b.n	8004558 <_strtod_l+0x3f0>
 800458c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800458e:	3316      	adds	r3, #22
 8004590:	db0b      	blt.n	80045aa <_strtod_l+0x442>
 8004592:	9b08      	ldr	r3, [sp, #32]
 8004594:	4640      	mov	r0, r8
 8004596:	1bdf      	subs	r7, r3, r7
 8004598:	4b54      	ldr	r3, [pc, #336]	; (80046ec <_strtod_l+0x584>)
 800459a:	4649      	mov	r1, r9
 800459c:	eb03 07c7 	add.w	r7, r3, r7, lsl #3
 80045a0:	e9d7 2300 	ldrd	r2, r3, [r7]
 80045a4:	f7fc f8d2 	bl	800074c <__aeabi_ddiv>
 80045a8:	e79d      	b.n	80044e6 <_strtod_l+0x37e>
 80045aa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80045ac:	1b75      	subs	r5, r6, r5
 80045ae:	441d      	add	r5, r3
 80045b0:	2d00      	cmp	r5, #0
 80045b2:	dd70      	ble.n	8004696 <_strtod_l+0x52e>
 80045b4:	f015 030f 	ands.w	r3, r5, #15
 80045b8:	d00a      	beq.n	80045d0 <_strtod_l+0x468>
 80045ba:	494c      	ldr	r1, [pc, #304]	; (80046ec <_strtod_l+0x584>)
 80045bc:	4642      	mov	r2, r8
 80045be:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 80045c2:	e9d1 0100 	ldrd	r0, r1, [r1]
 80045c6:	464b      	mov	r3, r9
 80045c8:	f7fb ff96 	bl	80004f8 <__aeabi_dmul>
 80045cc:	4680      	mov	r8, r0
 80045ce:	4689      	mov	r9, r1
 80045d0:	f035 050f 	bics.w	r5, r5, #15
 80045d4:	d04d      	beq.n	8004672 <_strtod_l+0x50a>
 80045d6:	f5b5 7f9a 	cmp.w	r5, #308	; 0x134
 80045da:	dd22      	ble.n	8004622 <_strtod_l+0x4ba>
 80045dc:	2600      	movs	r6, #0
 80045de:	46b3      	mov	fp, r6
 80045e0:	960b      	str	r6, [sp, #44]	; 0x2c
 80045e2:	9608      	str	r6, [sp, #32]
 80045e4:	2322      	movs	r3, #34	; 0x22
 80045e6:	f04f 0800 	mov.w	r8, #0
 80045ea:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 80046e4 <_strtod_l+0x57c>
 80045ee:	6023      	str	r3, [r4, #0]
 80045f0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80045f2:	2b00      	cmp	r3, #0
 80045f4:	f43f adf1 	beq.w	80041da <_strtod_l+0x72>
 80045f8:	4620      	mov	r0, r4
 80045fa:	991a      	ldr	r1, [sp, #104]	; 0x68
 80045fc:	f002 fae4 	bl	8006bc8 <_Bfree>
 8004600:	4620      	mov	r0, r4
 8004602:	9908      	ldr	r1, [sp, #32]
 8004604:	f002 fae0 	bl	8006bc8 <_Bfree>
 8004608:	4659      	mov	r1, fp
 800460a:	4620      	mov	r0, r4
 800460c:	f002 fadc 	bl	8006bc8 <_Bfree>
 8004610:	4620      	mov	r0, r4
 8004612:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8004614:	f002 fad8 	bl	8006bc8 <_Bfree>
 8004618:	4631      	mov	r1, r6
 800461a:	4620      	mov	r0, r4
 800461c:	f002 fad4 	bl	8006bc8 <_Bfree>
 8004620:	e5db      	b.n	80041da <_strtod_l+0x72>
 8004622:	4b33      	ldr	r3, [pc, #204]	; (80046f0 <_strtod_l+0x588>)
 8004624:	4640      	mov	r0, r8
 8004626:	9305      	str	r3, [sp, #20]
 8004628:	2300      	movs	r3, #0
 800462a:	4649      	mov	r1, r9
 800462c:	469a      	mov	sl, r3
 800462e:	112d      	asrs	r5, r5, #4
 8004630:	2d01      	cmp	r5, #1
 8004632:	dc21      	bgt.n	8004678 <_strtod_l+0x510>
 8004634:	b10b      	cbz	r3, 800463a <_strtod_l+0x4d2>
 8004636:	4680      	mov	r8, r0
 8004638:	4689      	mov	r9, r1
 800463a:	492d      	ldr	r1, [pc, #180]	; (80046f0 <_strtod_l+0x588>)
 800463c:	f1a9 7954 	sub.w	r9, r9, #55574528	; 0x3500000
 8004640:	eb01 01ca 	add.w	r1, r1, sl, lsl #3
 8004644:	4642      	mov	r2, r8
 8004646:	e9d1 0100 	ldrd	r0, r1, [r1]
 800464a:	464b      	mov	r3, r9
 800464c:	f7fb ff54 	bl	80004f8 <__aeabi_dmul>
 8004650:	4b24      	ldr	r3, [pc, #144]	; (80046e4 <_strtod_l+0x57c>)
 8004652:	460a      	mov	r2, r1
 8004654:	400b      	ands	r3, r1
 8004656:	4927      	ldr	r1, [pc, #156]	; (80046f4 <_strtod_l+0x58c>)
 8004658:	4680      	mov	r8, r0
 800465a:	428b      	cmp	r3, r1
 800465c:	d8be      	bhi.n	80045dc <_strtod_l+0x474>
 800465e:	f5a1 1180 	sub.w	r1, r1, #1048576	; 0x100000
 8004662:	428b      	cmp	r3, r1
 8004664:	bf86      	itte	hi
 8004666:	f04f 38ff 	movhi.w	r8, #4294967295	; 0xffffffff
 800466a:	f8df 908c 	ldrhi.w	r9, [pc, #140]	; 80046f8 <_strtod_l+0x590>
 800466e:	f102 7954 	addls.w	r9, r2, #55574528	; 0x3500000
 8004672:	2300      	movs	r3, #0
 8004674:	9305      	str	r3, [sp, #20]
 8004676:	e07b      	b.n	8004770 <_strtod_l+0x608>
 8004678:	07ea      	lsls	r2, r5, #31
 800467a:	d505      	bpl.n	8004688 <_strtod_l+0x520>
 800467c:	9b05      	ldr	r3, [sp, #20]
 800467e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004682:	f7fb ff39 	bl	80004f8 <__aeabi_dmul>
 8004686:	2301      	movs	r3, #1
 8004688:	9a05      	ldr	r2, [sp, #20]
 800468a:	f10a 0a01 	add.w	sl, sl, #1
 800468e:	3208      	adds	r2, #8
 8004690:	106d      	asrs	r5, r5, #1
 8004692:	9205      	str	r2, [sp, #20]
 8004694:	e7cc      	b.n	8004630 <_strtod_l+0x4c8>
 8004696:	d0ec      	beq.n	8004672 <_strtod_l+0x50a>
 8004698:	426d      	negs	r5, r5
 800469a:	f015 020f 	ands.w	r2, r5, #15
 800469e:	d00a      	beq.n	80046b6 <_strtod_l+0x54e>
 80046a0:	4b12      	ldr	r3, [pc, #72]	; (80046ec <_strtod_l+0x584>)
 80046a2:	4640      	mov	r0, r8
 80046a4:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80046a8:	4649      	mov	r1, r9
 80046aa:	e9d3 2300 	ldrd	r2, r3, [r3]
 80046ae:	f7fc f84d 	bl	800074c <__aeabi_ddiv>
 80046b2:	4680      	mov	r8, r0
 80046b4:	4689      	mov	r9, r1
 80046b6:	112d      	asrs	r5, r5, #4
 80046b8:	d0db      	beq.n	8004672 <_strtod_l+0x50a>
 80046ba:	2d1f      	cmp	r5, #31
 80046bc:	dd1e      	ble.n	80046fc <_strtod_l+0x594>
 80046be:	2600      	movs	r6, #0
 80046c0:	46b3      	mov	fp, r6
 80046c2:	960b      	str	r6, [sp, #44]	; 0x2c
 80046c4:	9608      	str	r6, [sp, #32]
 80046c6:	2322      	movs	r3, #34	; 0x22
 80046c8:	f04f 0800 	mov.w	r8, #0
 80046cc:	f04f 0900 	mov.w	r9, #0
 80046d0:	6023      	str	r3, [r4, #0]
 80046d2:	e78d      	b.n	80045f0 <_strtod_l+0x488>
 80046d4:	0800942d 	.word	0x0800942d
 80046d8:	08009470 	.word	0x08009470
 80046dc:	08009425 	.word	0x08009425
 80046e0:	080095bc 	.word	0x080095bc
 80046e4:	7ff00000 	.word	0x7ff00000
 80046e8:	08009847 	.word	0x08009847
 80046ec:	08009738 	.word	0x08009738
 80046f0:	08009710 	.word	0x08009710
 80046f4:	7ca00000 	.word	0x7ca00000
 80046f8:	7fefffff 	.word	0x7fefffff
 80046fc:	f015 0310 	ands.w	r3, r5, #16
 8004700:	bf18      	it	ne
 8004702:	236a      	movne	r3, #106	; 0x6a
 8004704:	4640      	mov	r0, r8
 8004706:	9305      	str	r3, [sp, #20]
 8004708:	4649      	mov	r1, r9
 800470a:	2300      	movs	r3, #0
 800470c:	f8df a2c8 	ldr.w	sl, [pc, #712]	; 80049d8 <_strtod_l+0x870>
 8004710:	07ea      	lsls	r2, r5, #31
 8004712:	d504      	bpl.n	800471e <_strtod_l+0x5b6>
 8004714:	e9da 2300 	ldrd	r2, r3, [sl]
 8004718:	f7fb feee 	bl	80004f8 <__aeabi_dmul>
 800471c:	2301      	movs	r3, #1
 800471e:	106d      	asrs	r5, r5, #1
 8004720:	f10a 0a08 	add.w	sl, sl, #8
 8004724:	d1f4      	bne.n	8004710 <_strtod_l+0x5a8>
 8004726:	b10b      	cbz	r3, 800472c <_strtod_l+0x5c4>
 8004728:	4680      	mov	r8, r0
 800472a:	4689      	mov	r9, r1
 800472c:	9b05      	ldr	r3, [sp, #20]
 800472e:	b1bb      	cbz	r3, 8004760 <_strtod_l+0x5f8>
 8004730:	f3c9 520a 	ubfx	r2, r9, #20, #11
 8004734:	f1c2 036b 	rsb	r3, r2, #107	; 0x6b
 8004738:	2b00      	cmp	r3, #0
 800473a:	4649      	mov	r1, r9
 800473c:	dd10      	ble.n	8004760 <_strtod_l+0x5f8>
 800473e:	2b1f      	cmp	r3, #31
 8004740:	f340 8128 	ble.w	8004994 <_strtod_l+0x82c>
 8004744:	2b34      	cmp	r3, #52	; 0x34
 8004746:	bfd8      	it	le
 8004748:	f04f 33ff 	movle.w	r3, #4294967295	; 0xffffffff
 800474c:	f04f 0800 	mov.w	r8, #0
 8004750:	bfcf      	iteee	gt
 8004752:	f04f 795c 	movgt.w	r9, #57671680	; 0x3700000
 8004756:	f1c2 024b 	rsble	r2, r2, #75	; 0x4b
 800475a:	4093      	lslle	r3, r2
 800475c:	ea03 0901 	andle.w	r9, r3, r1
 8004760:	2200      	movs	r2, #0
 8004762:	2300      	movs	r3, #0
 8004764:	4640      	mov	r0, r8
 8004766:	4649      	mov	r1, r9
 8004768:	f7fc f92e 	bl	80009c8 <__aeabi_dcmpeq>
 800476c:	2800      	cmp	r0, #0
 800476e:	d1a6      	bne.n	80046be <_strtod_l+0x556>
 8004770:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004772:	465a      	mov	r2, fp
 8004774:	9300      	str	r3, [sp, #0]
 8004776:	4620      	mov	r0, r4
 8004778:	4633      	mov	r3, r6
 800477a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800477c:	f002 fa8c 	bl	8006c98 <__s2b>
 8004780:	900b      	str	r0, [sp, #44]	; 0x2c
 8004782:	2800      	cmp	r0, #0
 8004784:	f43f af2a 	beq.w	80045dc <_strtod_l+0x474>
 8004788:	2600      	movs	r6, #0
 800478a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800478c:	9b08      	ldr	r3, [sp, #32]
 800478e:	2a00      	cmp	r2, #0
 8004790:	eba3 0307 	sub.w	r3, r3, r7
 8004794:	bfa8      	it	ge
 8004796:	2300      	movge	r3, #0
 8004798:	46b3      	mov	fp, r6
 800479a:	9312      	str	r3, [sp, #72]	; 0x48
 800479c:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
 80047a0:	9316      	str	r3, [sp, #88]	; 0x58
 80047a2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80047a4:	4620      	mov	r0, r4
 80047a6:	6859      	ldr	r1, [r3, #4]
 80047a8:	f002 f9ce 	bl	8006b48 <_Balloc>
 80047ac:	9008      	str	r0, [sp, #32]
 80047ae:	2800      	cmp	r0, #0
 80047b0:	f43f af18 	beq.w	80045e4 <_strtod_l+0x47c>
 80047b4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80047b6:	300c      	adds	r0, #12
 80047b8:	691a      	ldr	r2, [r3, #16]
 80047ba:	f103 010c 	add.w	r1, r3, #12
 80047be:	3202      	adds	r2, #2
 80047c0:	0092      	lsls	r2, r2, #2
 80047c2:	f000 fbd4 	bl	8004f6e <memcpy>
 80047c6:	ab1c      	add	r3, sp, #112	; 0x70
 80047c8:	9301      	str	r3, [sp, #4]
 80047ca:	ab1b      	add	r3, sp, #108	; 0x6c
 80047cc:	9300      	str	r3, [sp, #0]
 80047ce:	4642      	mov	r2, r8
 80047d0:	464b      	mov	r3, r9
 80047d2:	4620      	mov	r0, r4
 80047d4:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
 80047d8:	f8cd 903c 	str.w	r9, [sp, #60]	; 0x3c
 80047dc:	f002 fd88 	bl	80072f0 <__d2b>
 80047e0:	901a      	str	r0, [sp, #104]	; 0x68
 80047e2:	2800      	cmp	r0, #0
 80047e4:	f43f aefe 	beq.w	80045e4 <_strtod_l+0x47c>
 80047e8:	2101      	movs	r1, #1
 80047ea:	4620      	mov	r0, r4
 80047ec:	f002 faec 	bl	8006dc8 <__i2b>
 80047f0:	4683      	mov	fp, r0
 80047f2:	2800      	cmp	r0, #0
 80047f4:	f43f aef6 	beq.w	80045e4 <_strtod_l+0x47c>
 80047f8:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 80047fa:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 80047fc:	2f00      	cmp	r7, #0
 80047fe:	bfab      	itete	ge
 8004800:	9b12      	ldrge	r3, [sp, #72]	; 0x48
 8004802:	9b16      	ldrlt	r3, [sp, #88]	; 0x58
 8004804:	eb07 0a03 	addge.w	sl, r7, r3
 8004808:	1bdd      	sublt	r5, r3, r7
 800480a:	9b05      	ldr	r3, [sp, #20]
 800480c:	bfa8      	it	ge
 800480e:	9d16      	ldrge	r5, [sp, #88]	; 0x58
 8004810:	eba7 0703 	sub.w	r7, r7, r3
 8004814:	4417      	add	r7, r2
 8004816:	4b71      	ldr	r3, [pc, #452]	; (80049dc <_strtod_l+0x874>)
 8004818:	f107 37ff 	add.w	r7, r7, #4294967295	; 0xffffffff
 800481c:	bfb8      	it	lt
 800481e:	f8dd a048 	ldrlt.w	sl, [sp, #72]	; 0x48
 8004822:	429f      	cmp	r7, r3
 8004824:	f1c2 0236 	rsb	r2, r2, #54	; 0x36
 8004828:	f280 80c7 	bge.w	80049ba <_strtod_l+0x852>
 800482c:	1bdb      	subs	r3, r3, r7
 800482e:	2b1f      	cmp	r3, #31
 8004830:	f04f 0101 	mov.w	r1, #1
 8004834:	eba2 0203 	sub.w	r2, r2, r3
 8004838:	f300 80b3 	bgt.w	80049a2 <_strtod_l+0x83a>
 800483c:	fa01 f303 	lsl.w	r3, r1, r3
 8004840:	9313      	str	r3, [sp, #76]	; 0x4c
 8004842:	2300      	movs	r3, #0
 8004844:	9310      	str	r3, [sp, #64]	; 0x40
 8004846:	eb0a 0702 	add.w	r7, sl, r2
 800484a:	9b05      	ldr	r3, [sp, #20]
 800484c:	45ba      	cmp	sl, r7
 800484e:	4415      	add	r5, r2
 8004850:	441d      	add	r5, r3
 8004852:	4653      	mov	r3, sl
 8004854:	bfa8      	it	ge
 8004856:	463b      	movge	r3, r7
 8004858:	42ab      	cmp	r3, r5
 800485a:	bfa8      	it	ge
 800485c:	462b      	movge	r3, r5
 800485e:	2b00      	cmp	r3, #0
 8004860:	bfc2      	ittt	gt
 8004862:	1aff      	subgt	r7, r7, r3
 8004864:	1aed      	subgt	r5, r5, r3
 8004866:	ebaa 0a03 	subgt.w	sl, sl, r3
 800486a:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800486c:	2b00      	cmp	r3, #0
 800486e:	dd17      	ble.n	80048a0 <_strtod_l+0x738>
 8004870:	4659      	mov	r1, fp
 8004872:	461a      	mov	r2, r3
 8004874:	4620      	mov	r0, r4
 8004876:	f002 fb65 	bl	8006f44 <__pow5mult>
 800487a:	4683      	mov	fp, r0
 800487c:	2800      	cmp	r0, #0
 800487e:	f43f aeb1 	beq.w	80045e4 <_strtod_l+0x47c>
 8004882:	4601      	mov	r1, r0
 8004884:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8004886:	4620      	mov	r0, r4
 8004888:	f002 fab4 	bl	8006df4 <__multiply>
 800488c:	900a      	str	r0, [sp, #40]	; 0x28
 800488e:	2800      	cmp	r0, #0
 8004890:	f43f aea8 	beq.w	80045e4 <_strtod_l+0x47c>
 8004894:	4620      	mov	r0, r4
 8004896:	991a      	ldr	r1, [sp, #104]	; 0x68
 8004898:	f002 f996 	bl	8006bc8 <_Bfree>
 800489c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800489e:	931a      	str	r3, [sp, #104]	; 0x68
 80048a0:	2f00      	cmp	r7, #0
 80048a2:	f300 808f 	bgt.w	80049c4 <_strtod_l+0x85c>
 80048a6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80048a8:	2b00      	cmp	r3, #0
 80048aa:	dd08      	ble.n	80048be <_strtod_l+0x756>
 80048ac:	4620      	mov	r0, r4
 80048ae:	9a16      	ldr	r2, [sp, #88]	; 0x58
 80048b0:	9908      	ldr	r1, [sp, #32]
 80048b2:	f002 fb47 	bl	8006f44 <__pow5mult>
 80048b6:	9008      	str	r0, [sp, #32]
 80048b8:	2800      	cmp	r0, #0
 80048ba:	f43f ae93 	beq.w	80045e4 <_strtod_l+0x47c>
 80048be:	2d00      	cmp	r5, #0
 80048c0:	dd08      	ble.n	80048d4 <_strtod_l+0x76c>
 80048c2:	462a      	mov	r2, r5
 80048c4:	4620      	mov	r0, r4
 80048c6:	9908      	ldr	r1, [sp, #32]
 80048c8:	f002 fb96 	bl	8006ff8 <__lshift>
 80048cc:	9008      	str	r0, [sp, #32]
 80048ce:	2800      	cmp	r0, #0
 80048d0:	f43f ae88 	beq.w	80045e4 <_strtod_l+0x47c>
 80048d4:	f1ba 0f00 	cmp.w	sl, #0
 80048d8:	dd08      	ble.n	80048ec <_strtod_l+0x784>
 80048da:	4659      	mov	r1, fp
 80048dc:	4652      	mov	r2, sl
 80048de:	4620      	mov	r0, r4
 80048e0:	f002 fb8a 	bl	8006ff8 <__lshift>
 80048e4:	4683      	mov	fp, r0
 80048e6:	2800      	cmp	r0, #0
 80048e8:	f43f ae7c 	beq.w	80045e4 <_strtod_l+0x47c>
 80048ec:	4620      	mov	r0, r4
 80048ee:	9a08      	ldr	r2, [sp, #32]
 80048f0:	991a      	ldr	r1, [sp, #104]	; 0x68
 80048f2:	f002 fc09 	bl	8007108 <__mdiff>
 80048f6:	4606      	mov	r6, r0
 80048f8:	2800      	cmp	r0, #0
 80048fa:	f43f ae73 	beq.w	80045e4 <_strtod_l+0x47c>
 80048fe:	2500      	movs	r5, #0
 8004900:	68c3      	ldr	r3, [r0, #12]
 8004902:	4659      	mov	r1, fp
 8004904:	60c5      	str	r5, [r0, #12]
 8004906:	930a      	str	r3, [sp, #40]	; 0x28
 8004908:	f002 fbe2 	bl	80070d0 <__mcmp>
 800490c:	42a8      	cmp	r0, r5
 800490e:	da6b      	bge.n	80049e8 <_strtod_l+0x880>
 8004910:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004912:	ea53 0308 	orrs.w	r3, r3, r8
 8004916:	f040 808f 	bne.w	8004a38 <_strtod_l+0x8d0>
 800491a:	f3c9 0313 	ubfx	r3, r9, #0, #20
 800491e:	2b00      	cmp	r3, #0
 8004920:	f040 808a 	bne.w	8004a38 <_strtod_l+0x8d0>
 8004924:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 8004928:	0d1b      	lsrs	r3, r3, #20
 800492a:	051b      	lsls	r3, r3, #20
 800492c:	f1b3 6fd6 	cmp.w	r3, #112197632	; 0x6b00000
 8004930:	f240 8082 	bls.w	8004a38 <_strtod_l+0x8d0>
 8004934:	6973      	ldr	r3, [r6, #20]
 8004936:	b913      	cbnz	r3, 800493e <_strtod_l+0x7d6>
 8004938:	6933      	ldr	r3, [r6, #16]
 800493a:	2b01      	cmp	r3, #1
 800493c:	dd7c      	ble.n	8004a38 <_strtod_l+0x8d0>
 800493e:	4631      	mov	r1, r6
 8004940:	2201      	movs	r2, #1
 8004942:	4620      	mov	r0, r4
 8004944:	f002 fb58 	bl	8006ff8 <__lshift>
 8004948:	4659      	mov	r1, fp
 800494a:	4606      	mov	r6, r0
 800494c:	f002 fbc0 	bl	80070d0 <__mcmp>
 8004950:	2800      	cmp	r0, #0
 8004952:	dd71      	ble.n	8004a38 <_strtod_l+0x8d0>
 8004954:	9905      	ldr	r1, [sp, #20]
 8004956:	464b      	mov	r3, r9
 8004958:	4a21      	ldr	r2, [pc, #132]	; (80049e0 <_strtod_l+0x878>)
 800495a:	2900      	cmp	r1, #0
 800495c:	f000 808d 	beq.w	8004a7a <_strtod_l+0x912>
 8004960:	ea02 0109 	and.w	r1, r2, r9
 8004964:	f1b1 6fd6 	cmp.w	r1, #112197632	; 0x6b00000
 8004968:	f300 8087 	bgt.w	8004a7a <_strtod_l+0x912>
 800496c:	f1b1 7f5c 	cmp.w	r1, #57671680	; 0x3700000
 8004970:	f77f aea9 	ble.w	80046c6 <_strtod_l+0x55e>
 8004974:	4640      	mov	r0, r8
 8004976:	4649      	mov	r1, r9
 8004978:	4b1a      	ldr	r3, [pc, #104]	; (80049e4 <_strtod_l+0x87c>)
 800497a:	2200      	movs	r2, #0
 800497c:	f7fb fdbc 	bl	80004f8 <__aeabi_dmul>
 8004980:	4b17      	ldr	r3, [pc, #92]	; (80049e0 <_strtod_l+0x878>)
 8004982:	4680      	mov	r8, r0
 8004984:	400b      	ands	r3, r1
 8004986:	4689      	mov	r9, r1
 8004988:	2b00      	cmp	r3, #0
 800498a:	f47f ae35 	bne.w	80045f8 <_strtod_l+0x490>
 800498e:	2322      	movs	r3, #34	; 0x22
 8004990:	6023      	str	r3, [r4, #0]
 8004992:	e631      	b.n	80045f8 <_strtod_l+0x490>
 8004994:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8004998:	fa02 f303 	lsl.w	r3, r2, r3
 800499c:	ea03 0808 	and.w	r8, r3, r8
 80049a0:	e6de      	b.n	8004760 <_strtod_l+0x5f8>
 80049a2:	f1c7 477f 	rsb	r7, r7, #4278190080	; 0xff000000
 80049a6:	f507 077f 	add.w	r7, r7, #16711680	; 0xff0000
 80049aa:	f507 477b 	add.w	r7, r7, #64256	; 0xfb00
 80049ae:	37e2      	adds	r7, #226	; 0xe2
 80049b0:	fa01 f307 	lsl.w	r3, r1, r7
 80049b4:	9310      	str	r3, [sp, #64]	; 0x40
 80049b6:	9113      	str	r1, [sp, #76]	; 0x4c
 80049b8:	e745      	b.n	8004846 <_strtod_l+0x6de>
 80049ba:	2300      	movs	r3, #0
 80049bc:	9310      	str	r3, [sp, #64]	; 0x40
 80049be:	2301      	movs	r3, #1
 80049c0:	9313      	str	r3, [sp, #76]	; 0x4c
 80049c2:	e740      	b.n	8004846 <_strtod_l+0x6de>
 80049c4:	463a      	mov	r2, r7
 80049c6:	4620      	mov	r0, r4
 80049c8:	991a      	ldr	r1, [sp, #104]	; 0x68
 80049ca:	f002 fb15 	bl	8006ff8 <__lshift>
 80049ce:	901a      	str	r0, [sp, #104]	; 0x68
 80049d0:	2800      	cmp	r0, #0
 80049d2:	f47f af68 	bne.w	80048a6 <_strtod_l+0x73e>
 80049d6:	e605      	b.n	80045e4 <_strtod_l+0x47c>
 80049d8:	08009488 	.word	0x08009488
 80049dc:	fffffc02 	.word	0xfffffc02
 80049e0:	7ff00000 	.word	0x7ff00000
 80049e4:	39500000 	.word	0x39500000
 80049e8:	46ca      	mov	sl, r9
 80049ea:	d165      	bne.n	8004ab8 <_strtod_l+0x950>
 80049ec:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80049ee:	f3c9 0313 	ubfx	r3, r9, #0, #20
 80049f2:	b352      	cbz	r2, 8004a4a <_strtod_l+0x8e2>
 80049f4:	4a9e      	ldr	r2, [pc, #632]	; (8004c70 <_strtod_l+0xb08>)
 80049f6:	4293      	cmp	r3, r2
 80049f8:	d12a      	bne.n	8004a50 <_strtod_l+0x8e8>
 80049fa:	9b05      	ldr	r3, [sp, #20]
 80049fc:	4641      	mov	r1, r8
 80049fe:	b1fb      	cbz	r3, 8004a40 <_strtod_l+0x8d8>
 8004a00:	4b9c      	ldr	r3, [pc, #624]	; (8004c74 <_strtod_l+0xb0c>)
 8004a02:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8004a06:	ea09 0303 	and.w	r3, r9, r3
 8004a0a:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
 8004a0e:	d81a      	bhi.n	8004a46 <_strtod_l+0x8de>
 8004a10:	0d1b      	lsrs	r3, r3, #20
 8004a12:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 8004a16:	fa02 f303 	lsl.w	r3, r2, r3
 8004a1a:	4299      	cmp	r1, r3
 8004a1c:	d118      	bne.n	8004a50 <_strtod_l+0x8e8>
 8004a1e:	4b96      	ldr	r3, [pc, #600]	; (8004c78 <_strtod_l+0xb10>)
 8004a20:	459a      	cmp	sl, r3
 8004a22:	d102      	bne.n	8004a2a <_strtod_l+0x8c2>
 8004a24:	3101      	adds	r1, #1
 8004a26:	f43f addd 	beq.w	80045e4 <_strtod_l+0x47c>
 8004a2a:	f04f 0800 	mov.w	r8, #0
 8004a2e:	4b91      	ldr	r3, [pc, #580]	; (8004c74 <_strtod_l+0xb0c>)
 8004a30:	ea0a 0303 	and.w	r3, sl, r3
 8004a34:	f503 1980 	add.w	r9, r3, #1048576	; 0x100000
 8004a38:	9b05      	ldr	r3, [sp, #20]
 8004a3a:	2b00      	cmp	r3, #0
 8004a3c:	d19a      	bne.n	8004974 <_strtod_l+0x80c>
 8004a3e:	e5db      	b.n	80045f8 <_strtod_l+0x490>
 8004a40:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8004a44:	e7e9      	b.n	8004a1a <_strtod_l+0x8b2>
 8004a46:	4613      	mov	r3, r2
 8004a48:	e7e7      	b.n	8004a1a <_strtod_l+0x8b2>
 8004a4a:	ea53 0308 	orrs.w	r3, r3, r8
 8004a4e:	d081      	beq.n	8004954 <_strtod_l+0x7ec>
 8004a50:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8004a52:	b1e3      	cbz	r3, 8004a8e <_strtod_l+0x926>
 8004a54:	ea13 0f0a 	tst.w	r3, sl
 8004a58:	d0ee      	beq.n	8004a38 <_strtod_l+0x8d0>
 8004a5a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004a5c:	4640      	mov	r0, r8
 8004a5e:	4649      	mov	r1, r9
 8004a60:	9a05      	ldr	r2, [sp, #20]
 8004a62:	b1c3      	cbz	r3, 8004a96 <_strtod_l+0x92e>
 8004a64:	f7ff fb5c 	bl	8004120 <sulp>
 8004a68:	4602      	mov	r2, r0
 8004a6a:	460b      	mov	r3, r1
 8004a6c:	980c      	ldr	r0, [sp, #48]	; 0x30
 8004a6e:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8004a70:	f7fb fb8c 	bl	800018c <__adddf3>
 8004a74:	4680      	mov	r8, r0
 8004a76:	4689      	mov	r9, r1
 8004a78:	e7de      	b.n	8004a38 <_strtod_l+0x8d0>
 8004a7a:	4013      	ands	r3, r2
 8004a7c:	f5a3 1380 	sub.w	r3, r3, #1048576	; 0x100000
 8004a80:	ea6f 5913 	mvn.w	r9, r3, lsr #20
 8004a84:	f04f 38ff 	mov.w	r8, #4294967295	; 0xffffffff
 8004a88:	ea6f 5909 	mvn.w	r9, r9, lsl #20
 8004a8c:	e7d4      	b.n	8004a38 <_strtod_l+0x8d0>
 8004a8e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8004a90:	ea13 0f08 	tst.w	r3, r8
 8004a94:	e7e0      	b.n	8004a58 <_strtod_l+0x8f0>
 8004a96:	f7ff fb43 	bl	8004120 <sulp>
 8004a9a:	4602      	mov	r2, r0
 8004a9c:	460b      	mov	r3, r1
 8004a9e:	980c      	ldr	r0, [sp, #48]	; 0x30
 8004aa0:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8004aa2:	f7fb fb71 	bl	8000188 <__aeabi_dsub>
 8004aa6:	2200      	movs	r2, #0
 8004aa8:	2300      	movs	r3, #0
 8004aaa:	4680      	mov	r8, r0
 8004aac:	4689      	mov	r9, r1
 8004aae:	f7fb ff8b 	bl	80009c8 <__aeabi_dcmpeq>
 8004ab2:	2800      	cmp	r0, #0
 8004ab4:	d0c0      	beq.n	8004a38 <_strtod_l+0x8d0>
 8004ab6:	e606      	b.n	80046c6 <_strtod_l+0x55e>
 8004ab8:	4659      	mov	r1, fp
 8004aba:	4630      	mov	r0, r6
 8004abc:	f002 fc6e 	bl	800739c <__ratio>
 8004ac0:	4602      	mov	r2, r0
 8004ac2:	460b      	mov	r3, r1
 8004ac4:	e9cd 2310 	strd	r2, r3, [sp, #64]	; 0x40
 8004ac8:	2200      	movs	r2, #0
 8004aca:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8004ace:	f7fb ff8f 	bl	80009f0 <__aeabi_dcmple>
 8004ad2:	2800      	cmp	r0, #0
 8004ad4:	d06f      	beq.n	8004bb6 <_strtod_l+0xa4e>
 8004ad6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004ad8:	2b00      	cmp	r3, #0
 8004ada:	d17c      	bne.n	8004bd6 <_strtod_l+0xa6e>
 8004adc:	f1b8 0f00 	cmp.w	r8, #0
 8004ae0:	d159      	bne.n	8004b96 <_strtod_l+0xa2e>
 8004ae2:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8004ae6:	2b00      	cmp	r3, #0
 8004ae8:	d17b      	bne.n	8004be2 <_strtod_l+0xa7a>
 8004aea:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 8004aee:	2200      	movs	r2, #0
 8004af0:	4b62      	ldr	r3, [pc, #392]	; (8004c7c <_strtod_l+0xb14>)
 8004af2:	f7fb ff73 	bl	80009dc <__aeabi_dcmplt>
 8004af6:	2800      	cmp	r0, #0
 8004af8:	d15a      	bne.n	8004bb0 <_strtod_l+0xa48>
 8004afa:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 8004afe:	2200      	movs	r2, #0
 8004b00:	4b5f      	ldr	r3, [pc, #380]	; (8004c80 <_strtod_l+0xb18>)
 8004b02:	f7fb fcf9 	bl	80004f8 <__aeabi_dmul>
 8004b06:	4605      	mov	r5, r0
 8004b08:	460f      	mov	r7, r1
 8004b0a:	f107 4300 	add.w	r3, r7, #2147483648	; 0x80000000
 8004b0e:	9506      	str	r5, [sp, #24]
 8004b10:	9307      	str	r3, [sp, #28]
 8004b12:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8004b16:	e9cd 2310 	strd	r2, r3, [sp, #64]	; 0x40
 8004b1a:	4b56      	ldr	r3, [pc, #344]	; (8004c74 <_strtod_l+0xb0c>)
 8004b1c:	4a55      	ldr	r2, [pc, #340]	; (8004c74 <_strtod_l+0xb0c>)
 8004b1e:	ea0a 0303 	and.w	r3, sl, r3
 8004b22:	9313      	str	r3, [sp, #76]	; 0x4c
 8004b24:	4b57      	ldr	r3, [pc, #348]	; (8004c84 <_strtod_l+0xb1c>)
 8004b26:	ea0a 0202 	and.w	r2, sl, r2
 8004b2a:	429a      	cmp	r2, r3
 8004b2c:	f040 80b0 	bne.w	8004c90 <_strtod_l+0xb28>
 8004b30:	f1aa 7954 	sub.w	r9, sl, #55574528	; 0x3500000
 8004b34:	4640      	mov	r0, r8
 8004b36:	4649      	mov	r1, r9
 8004b38:	f002 fb72 	bl	8007220 <__ulp>
 8004b3c:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8004b40:	f7fb fcda 	bl	80004f8 <__aeabi_dmul>
 8004b44:	4642      	mov	r2, r8
 8004b46:	464b      	mov	r3, r9
 8004b48:	f7fb fb20 	bl	800018c <__adddf3>
 8004b4c:	f8df a124 	ldr.w	sl, [pc, #292]	; 8004c74 <_strtod_l+0xb0c>
 8004b50:	4a4d      	ldr	r2, [pc, #308]	; (8004c88 <_strtod_l+0xb20>)
 8004b52:	ea01 0a0a 	and.w	sl, r1, sl
 8004b56:	4592      	cmp	sl, r2
 8004b58:	4680      	mov	r8, r0
 8004b5a:	d948      	bls.n	8004bee <_strtod_l+0xa86>
 8004b5c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8004b5e:	4b46      	ldr	r3, [pc, #280]	; (8004c78 <_strtod_l+0xb10>)
 8004b60:	429a      	cmp	r2, r3
 8004b62:	d103      	bne.n	8004b6c <_strtod_l+0xa04>
 8004b64:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8004b66:	3301      	adds	r3, #1
 8004b68:	f43f ad3c 	beq.w	80045e4 <_strtod_l+0x47c>
 8004b6c:	f04f 38ff 	mov.w	r8, #4294967295	; 0xffffffff
 8004b70:	f8df 9104 	ldr.w	r9, [pc, #260]	; 8004c78 <_strtod_l+0xb10>
 8004b74:	4620      	mov	r0, r4
 8004b76:	991a      	ldr	r1, [sp, #104]	; 0x68
 8004b78:	f002 f826 	bl	8006bc8 <_Bfree>
 8004b7c:	4620      	mov	r0, r4
 8004b7e:	9908      	ldr	r1, [sp, #32]
 8004b80:	f002 f822 	bl	8006bc8 <_Bfree>
 8004b84:	4659      	mov	r1, fp
 8004b86:	4620      	mov	r0, r4
 8004b88:	f002 f81e 	bl	8006bc8 <_Bfree>
 8004b8c:	4631      	mov	r1, r6
 8004b8e:	4620      	mov	r0, r4
 8004b90:	f002 f81a 	bl	8006bc8 <_Bfree>
 8004b94:	e605      	b.n	80047a2 <_strtod_l+0x63a>
 8004b96:	f1b8 0f01 	cmp.w	r8, #1
 8004b9a:	d103      	bne.n	8004ba4 <_strtod_l+0xa3c>
 8004b9c:	f1b9 0f00 	cmp.w	r9, #0
 8004ba0:	f43f ad91 	beq.w	80046c6 <_strtod_l+0x55e>
 8004ba4:	2200      	movs	r2, #0
 8004ba6:	4b39      	ldr	r3, [pc, #228]	; (8004c8c <_strtod_l+0xb24>)
 8004ba8:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8004baa:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8004bae:	e016      	b.n	8004bde <_strtod_l+0xa76>
 8004bb0:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8004bb2:	4f33      	ldr	r7, [pc, #204]	; (8004c80 <_strtod_l+0xb18>)
 8004bb4:	e7a9      	b.n	8004b0a <_strtod_l+0x9a2>
 8004bb6:	4b32      	ldr	r3, [pc, #200]	; (8004c80 <_strtod_l+0xb18>)
 8004bb8:	2200      	movs	r2, #0
 8004bba:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 8004bbe:	f7fb fc9b 	bl	80004f8 <__aeabi_dmul>
 8004bc2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004bc4:	4605      	mov	r5, r0
 8004bc6:	460f      	mov	r7, r1
 8004bc8:	2b00      	cmp	r3, #0
 8004bca:	d09e      	beq.n	8004b0a <_strtod_l+0x9a2>
 8004bcc:	4602      	mov	r2, r0
 8004bce:	460b      	mov	r3, r1
 8004bd0:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8004bd4:	e79d      	b.n	8004b12 <_strtod_l+0x9aa>
 8004bd6:	2200      	movs	r2, #0
 8004bd8:	4b28      	ldr	r3, [pc, #160]	; (8004c7c <_strtod_l+0xb14>)
 8004bda:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8004bde:	4f27      	ldr	r7, [pc, #156]	; (8004c7c <_strtod_l+0xb14>)
 8004be0:	e797      	b.n	8004b12 <_strtod_l+0x9aa>
 8004be2:	2200      	movs	r2, #0
 8004be4:	4b29      	ldr	r3, [pc, #164]	; (8004c8c <_strtod_l+0xb24>)
 8004be6:	4645      	mov	r5, r8
 8004be8:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8004bec:	e7f7      	b.n	8004bde <_strtod_l+0xa76>
 8004bee:	f101 7954 	add.w	r9, r1, #55574528	; 0x3500000
 8004bf2:	9b05      	ldr	r3, [sp, #20]
 8004bf4:	46ca      	mov	sl, r9
 8004bf6:	2b00      	cmp	r3, #0
 8004bf8:	d1bc      	bne.n	8004b74 <_strtod_l+0xa0c>
 8004bfa:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 8004bfe:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8004c00:	0d1b      	lsrs	r3, r3, #20
 8004c02:	051b      	lsls	r3, r3, #20
 8004c04:	429a      	cmp	r2, r3
 8004c06:	d1b5      	bne.n	8004b74 <_strtod_l+0xa0c>
 8004c08:	4628      	mov	r0, r5
 8004c0a:	4639      	mov	r1, r7
 8004c0c:	f7fc fa1a 	bl	8001044 <__aeabi_d2lz>
 8004c10:	f7fb fc44 	bl	800049c <__aeabi_l2d>
 8004c14:	4602      	mov	r2, r0
 8004c16:	460b      	mov	r3, r1
 8004c18:	4628      	mov	r0, r5
 8004c1a:	4639      	mov	r1, r7
 8004c1c:	f7fb fab4 	bl	8000188 <__aeabi_dsub>
 8004c20:	460b      	mov	r3, r1
 8004c22:	4602      	mov	r2, r0
 8004c24:	f3c9 0a13 	ubfx	sl, r9, #0, #20
 8004c28:	e9cd 230c 	strd	r2, r3, [sp, #48]	; 0x30
 8004c2c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004c2e:	ea4a 0a08 	orr.w	sl, sl, r8
 8004c32:	ea5a 0a03 	orrs.w	sl, sl, r3
 8004c36:	d06c      	beq.n	8004d12 <_strtod_l+0xbaa>
 8004c38:	a309      	add	r3, pc, #36	; (adr r3, 8004c60 <_strtod_l+0xaf8>)
 8004c3a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004c3e:	f7fb fecd 	bl	80009dc <__aeabi_dcmplt>
 8004c42:	2800      	cmp	r0, #0
 8004c44:	f47f acd8 	bne.w	80045f8 <_strtod_l+0x490>
 8004c48:	a307      	add	r3, pc, #28	; (adr r3, 8004c68 <_strtod_l+0xb00>)
 8004c4a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004c4e:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8004c52:	f7fb fee1 	bl	8000a18 <__aeabi_dcmpgt>
 8004c56:	2800      	cmp	r0, #0
 8004c58:	d08c      	beq.n	8004b74 <_strtod_l+0xa0c>
 8004c5a:	e4cd      	b.n	80045f8 <_strtod_l+0x490>
 8004c5c:	f3af 8000 	nop.w
 8004c60:	94a03595 	.word	0x94a03595
 8004c64:	3fdfffff 	.word	0x3fdfffff
 8004c68:	35afe535 	.word	0x35afe535
 8004c6c:	3fe00000 	.word	0x3fe00000
 8004c70:	000fffff 	.word	0x000fffff
 8004c74:	7ff00000 	.word	0x7ff00000
 8004c78:	7fefffff 	.word	0x7fefffff
 8004c7c:	3ff00000 	.word	0x3ff00000
 8004c80:	3fe00000 	.word	0x3fe00000
 8004c84:	7fe00000 	.word	0x7fe00000
 8004c88:	7c9fffff 	.word	0x7c9fffff
 8004c8c:	bff00000 	.word	0xbff00000
 8004c90:	9b05      	ldr	r3, [sp, #20]
 8004c92:	b333      	cbz	r3, 8004ce2 <_strtod_l+0xb7a>
 8004c94:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8004c96:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
 8004c9a:	d822      	bhi.n	8004ce2 <_strtod_l+0xb7a>
 8004c9c:	a328      	add	r3, pc, #160	; (adr r3, 8004d40 <_strtod_l+0xbd8>)
 8004c9e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004ca2:	4628      	mov	r0, r5
 8004ca4:	4639      	mov	r1, r7
 8004ca6:	f7fb fea3 	bl	80009f0 <__aeabi_dcmple>
 8004caa:	b1a0      	cbz	r0, 8004cd6 <_strtod_l+0xb6e>
 8004cac:	4639      	mov	r1, r7
 8004cae:	4628      	mov	r0, r5
 8004cb0:	f7fb fefa 	bl	8000aa8 <__aeabi_d2uiz>
 8004cb4:	2801      	cmp	r0, #1
 8004cb6:	bf38      	it	cc
 8004cb8:	2001      	movcc	r0, #1
 8004cba:	f7fb fba3 	bl	8000404 <__aeabi_ui2d>
 8004cbe:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004cc0:	4605      	mov	r5, r0
 8004cc2:	460f      	mov	r7, r1
 8004cc4:	bb03      	cbnz	r3, 8004d08 <_strtod_l+0xba0>
 8004cc6:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8004cca:	9014      	str	r0, [sp, #80]	; 0x50
 8004ccc:	9315      	str	r3, [sp, #84]	; 0x54
 8004cce:	e9dd 2314 	ldrd	r2, r3, [sp, #80]	; 0x50
 8004cd2:	e9cd 2310 	strd	r2, r3, [sp, #64]	; 0x40
 8004cd6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8004cd8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8004cda:	f103 63d6 	add.w	r3, r3, #112197632	; 0x6b00000
 8004cde:	1a9b      	subs	r3, r3, r2
 8004ce0:	9311      	str	r3, [sp, #68]	; 0x44
 8004ce2:	980c      	ldr	r0, [sp, #48]	; 0x30
 8004ce4:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8004ce6:	e9dd 8910 	ldrd	r8, r9, [sp, #64]	; 0x40
 8004cea:	f002 fa99 	bl	8007220 <__ulp>
 8004cee:	4602      	mov	r2, r0
 8004cf0:	460b      	mov	r3, r1
 8004cf2:	4640      	mov	r0, r8
 8004cf4:	4649      	mov	r1, r9
 8004cf6:	f7fb fbff 	bl	80004f8 <__aeabi_dmul>
 8004cfa:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8004cfc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8004cfe:	f7fb fa45 	bl	800018c <__adddf3>
 8004d02:	4680      	mov	r8, r0
 8004d04:	4689      	mov	r9, r1
 8004d06:	e774      	b.n	8004bf2 <_strtod_l+0xa8a>
 8004d08:	4602      	mov	r2, r0
 8004d0a:	460b      	mov	r3, r1
 8004d0c:	e9cd 2314 	strd	r2, r3, [sp, #80]	; 0x50
 8004d10:	e7dd      	b.n	8004cce <_strtod_l+0xb66>
 8004d12:	a30d      	add	r3, pc, #52	; (adr r3, 8004d48 <_strtod_l+0xbe0>)
 8004d14:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004d18:	f7fb fe60 	bl	80009dc <__aeabi_dcmplt>
 8004d1c:	e79b      	b.n	8004c56 <_strtod_l+0xaee>
 8004d1e:	2300      	movs	r3, #0
 8004d20:	930e      	str	r3, [sp, #56]	; 0x38
 8004d22:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8004d24:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 8004d26:	6013      	str	r3, [r2, #0]
 8004d28:	f7ff ba5b 	b.w	80041e2 <_strtod_l+0x7a>
 8004d2c:	2a65      	cmp	r2, #101	; 0x65
 8004d2e:	f43f ab52 	beq.w	80043d6 <_strtod_l+0x26e>
 8004d32:	2a45      	cmp	r2, #69	; 0x45
 8004d34:	f43f ab4f 	beq.w	80043d6 <_strtod_l+0x26e>
 8004d38:	2301      	movs	r3, #1
 8004d3a:	f7ff bb87 	b.w	800444c <_strtod_l+0x2e4>
 8004d3e:	bf00      	nop
 8004d40:	ffc00000 	.word	0xffc00000
 8004d44:	41dfffff 	.word	0x41dfffff
 8004d48:	94a03595 	.word	0x94a03595
 8004d4c:	3fcfffff 	.word	0x3fcfffff

08004d50 <_strtod_r>:
 8004d50:	4b01      	ldr	r3, [pc, #4]	; (8004d58 <_strtod_r+0x8>)
 8004d52:	f7ff ba09 	b.w	8004168 <_strtod_l>
 8004d56:	bf00      	nop
 8004d58:	2000000c 	.word	0x2000000c

08004d5c <_strtol_l.constprop.0>:
 8004d5c:	2b01      	cmp	r3, #1
 8004d5e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004d62:	4686      	mov	lr, r0
 8004d64:	4690      	mov	r8, r2
 8004d66:	d001      	beq.n	8004d6c <_strtol_l.constprop.0+0x10>
 8004d68:	2b24      	cmp	r3, #36	; 0x24
 8004d6a:	d906      	bls.n	8004d7a <_strtol_l.constprop.0+0x1e>
 8004d6c:	f000 f8c4 	bl	8004ef8 <__errno>
 8004d70:	2316      	movs	r3, #22
 8004d72:	6003      	str	r3, [r0, #0]
 8004d74:	2000      	movs	r0, #0
 8004d76:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004d7a:	460d      	mov	r5, r1
 8004d7c:	4835      	ldr	r0, [pc, #212]	; (8004e54 <_strtol_l.constprop.0+0xf8>)
 8004d7e:	462a      	mov	r2, r5
 8004d80:	f815 4b01 	ldrb.w	r4, [r5], #1
 8004d84:	5d06      	ldrb	r6, [r0, r4]
 8004d86:	f016 0608 	ands.w	r6, r6, #8
 8004d8a:	d1f8      	bne.n	8004d7e <_strtol_l.constprop.0+0x22>
 8004d8c:	2c2d      	cmp	r4, #45	; 0x2d
 8004d8e:	d12e      	bne.n	8004dee <_strtol_l.constprop.0+0x92>
 8004d90:	2601      	movs	r6, #1
 8004d92:	782c      	ldrb	r4, [r5, #0]
 8004d94:	1c95      	adds	r5, r2, #2
 8004d96:	2b00      	cmp	r3, #0
 8004d98:	d057      	beq.n	8004e4a <_strtol_l.constprop.0+0xee>
 8004d9a:	2b10      	cmp	r3, #16
 8004d9c:	d109      	bne.n	8004db2 <_strtol_l.constprop.0+0x56>
 8004d9e:	2c30      	cmp	r4, #48	; 0x30
 8004da0:	d107      	bne.n	8004db2 <_strtol_l.constprop.0+0x56>
 8004da2:	782a      	ldrb	r2, [r5, #0]
 8004da4:	f002 02df 	and.w	r2, r2, #223	; 0xdf
 8004da8:	2a58      	cmp	r2, #88	; 0x58
 8004daa:	d149      	bne.n	8004e40 <_strtol_l.constprop.0+0xe4>
 8004dac:	2310      	movs	r3, #16
 8004dae:	786c      	ldrb	r4, [r5, #1]
 8004db0:	3502      	adds	r5, #2
 8004db2:	2200      	movs	r2, #0
 8004db4:	f106 4c00 	add.w	ip, r6, #2147483648	; 0x80000000
 8004db8:	f10c 3cff 	add.w	ip, ip, #4294967295	; 0xffffffff
 8004dbc:	fbbc f9f3 	udiv	r9, ip, r3
 8004dc0:	4610      	mov	r0, r2
 8004dc2:	fb03 ca19 	mls	sl, r3, r9, ip
 8004dc6:	f1a4 0730 	sub.w	r7, r4, #48	; 0x30
 8004dca:	2f09      	cmp	r7, #9
 8004dcc:	d814      	bhi.n	8004df8 <_strtol_l.constprop.0+0x9c>
 8004dce:	463c      	mov	r4, r7
 8004dd0:	42a3      	cmp	r3, r4
 8004dd2:	dd20      	ble.n	8004e16 <_strtol_l.constprop.0+0xba>
 8004dd4:	1c57      	adds	r7, r2, #1
 8004dd6:	d007      	beq.n	8004de8 <_strtol_l.constprop.0+0x8c>
 8004dd8:	4581      	cmp	r9, r0
 8004dda:	d319      	bcc.n	8004e10 <_strtol_l.constprop.0+0xb4>
 8004ddc:	d101      	bne.n	8004de2 <_strtol_l.constprop.0+0x86>
 8004dde:	45a2      	cmp	sl, r4
 8004de0:	db16      	blt.n	8004e10 <_strtol_l.constprop.0+0xb4>
 8004de2:	2201      	movs	r2, #1
 8004de4:	fb00 4003 	mla	r0, r0, r3, r4
 8004de8:	f815 4b01 	ldrb.w	r4, [r5], #1
 8004dec:	e7eb      	b.n	8004dc6 <_strtol_l.constprop.0+0x6a>
 8004dee:	2c2b      	cmp	r4, #43	; 0x2b
 8004df0:	bf04      	itt	eq
 8004df2:	782c      	ldrbeq	r4, [r5, #0]
 8004df4:	1c95      	addeq	r5, r2, #2
 8004df6:	e7ce      	b.n	8004d96 <_strtol_l.constprop.0+0x3a>
 8004df8:	f1a4 0741 	sub.w	r7, r4, #65	; 0x41
 8004dfc:	2f19      	cmp	r7, #25
 8004dfe:	d801      	bhi.n	8004e04 <_strtol_l.constprop.0+0xa8>
 8004e00:	3c37      	subs	r4, #55	; 0x37
 8004e02:	e7e5      	b.n	8004dd0 <_strtol_l.constprop.0+0x74>
 8004e04:	f1a4 0761 	sub.w	r7, r4, #97	; 0x61
 8004e08:	2f19      	cmp	r7, #25
 8004e0a:	d804      	bhi.n	8004e16 <_strtol_l.constprop.0+0xba>
 8004e0c:	3c57      	subs	r4, #87	; 0x57
 8004e0e:	e7df      	b.n	8004dd0 <_strtol_l.constprop.0+0x74>
 8004e10:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8004e14:	e7e8      	b.n	8004de8 <_strtol_l.constprop.0+0x8c>
 8004e16:	1c53      	adds	r3, r2, #1
 8004e18:	d108      	bne.n	8004e2c <_strtol_l.constprop.0+0xd0>
 8004e1a:	2322      	movs	r3, #34	; 0x22
 8004e1c:	4660      	mov	r0, ip
 8004e1e:	f8ce 3000 	str.w	r3, [lr]
 8004e22:	f1b8 0f00 	cmp.w	r8, #0
 8004e26:	d0a6      	beq.n	8004d76 <_strtol_l.constprop.0+0x1a>
 8004e28:	1e69      	subs	r1, r5, #1
 8004e2a:	e006      	b.n	8004e3a <_strtol_l.constprop.0+0xde>
 8004e2c:	b106      	cbz	r6, 8004e30 <_strtol_l.constprop.0+0xd4>
 8004e2e:	4240      	negs	r0, r0
 8004e30:	f1b8 0f00 	cmp.w	r8, #0
 8004e34:	d09f      	beq.n	8004d76 <_strtol_l.constprop.0+0x1a>
 8004e36:	2a00      	cmp	r2, #0
 8004e38:	d1f6      	bne.n	8004e28 <_strtol_l.constprop.0+0xcc>
 8004e3a:	f8c8 1000 	str.w	r1, [r8]
 8004e3e:	e79a      	b.n	8004d76 <_strtol_l.constprop.0+0x1a>
 8004e40:	2430      	movs	r4, #48	; 0x30
 8004e42:	2b00      	cmp	r3, #0
 8004e44:	d1b5      	bne.n	8004db2 <_strtol_l.constprop.0+0x56>
 8004e46:	2308      	movs	r3, #8
 8004e48:	e7b3      	b.n	8004db2 <_strtol_l.constprop.0+0x56>
 8004e4a:	2c30      	cmp	r4, #48	; 0x30
 8004e4c:	d0a9      	beq.n	8004da2 <_strtol_l.constprop.0+0x46>
 8004e4e:	230a      	movs	r3, #10
 8004e50:	e7af      	b.n	8004db2 <_strtol_l.constprop.0+0x56>
 8004e52:	bf00      	nop
 8004e54:	080094b9 	.word	0x080094b9

08004e58 <_strtol_r>:
 8004e58:	f7ff bf80 	b.w	8004d5c <_strtol_l.constprop.0>

08004e5c <_fwalk_sglue>:
 8004e5c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8004e60:	4607      	mov	r7, r0
 8004e62:	4688      	mov	r8, r1
 8004e64:	4614      	mov	r4, r2
 8004e66:	2600      	movs	r6, #0
 8004e68:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8004e6c:	f1b9 0901 	subs.w	r9, r9, #1
 8004e70:	d505      	bpl.n	8004e7e <_fwalk_sglue+0x22>
 8004e72:	6824      	ldr	r4, [r4, #0]
 8004e74:	2c00      	cmp	r4, #0
 8004e76:	d1f7      	bne.n	8004e68 <_fwalk_sglue+0xc>
 8004e78:	4630      	mov	r0, r6
 8004e7a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8004e7e:	89ab      	ldrh	r3, [r5, #12]
 8004e80:	2b01      	cmp	r3, #1
 8004e82:	d907      	bls.n	8004e94 <_fwalk_sglue+0x38>
 8004e84:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8004e88:	3301      	adds	r3, #1
 8004e8a:	d003      	beq.n	8004e94 <_fwalk_sglue+0x38>
 8004e8c:	4629      	mov	r1, r5
 8004e8e:	4638      	mov	r0, r7
 8004e90:	47c0      	blx	r8
 8004e92:	4306      	orrs	r6, r0
 8004e94:	3568      	adds	r5, #104	; 0x68
 8004e96:	e7e9      	b.n	8004e6c <_fwalk_sglue+0x10>

08004e98 <iprintf>:
 8004e98:	b40f      	push	{r0, r1, r2, r3}
 8004e9a:	b507      	push	{r0, r1, r2, lr}
 8004e9c:	4906      	ldr	r1, [pc, #24]	; (8004eb8 <iprintf+0x20>)
 8004e9e:	ab04      	add	r3, sp, #16
 8004ea0:	6808      	ldr	r0, [r1, #0]
 8004ea2:	f853 2b04 	ldr.w	r2, [r3], #4
 8004ea6:	6881      	ldr	r1, [r0, #8]
 8004ea8:	9301      	str	r3, [sp, #4]
 8004eaa:	f001 fbc3 	bl	8006634 <_vfiprintf_r>
 8004eae:	b003      	add	sp, #12
 8004eb0:	f85d eb04 	ldr.w	lr, [sp], #4
 8004eb4:	b004      	add	sp, #16
 8004eb6:	4770      	bx	lr
 8004eb8:	200001c4 	.word	0x200001c4

08004ebc <strncmp>:
 8004ebc:	b510      	push	{r4, lr}
 8004ebe:	b16a      	cbz	r2, 8004edc <strncmp+0x20>
 8004ec0:	3901      	subs	r1, #1
 8004ec2:	1884      	adds	r4, r0, r2
 8004ec4:	f810 2b01 	ldrb.w	r2, [r0], #1
 8004ec8:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 8004ecc:	429a      	cmp	r2, r3
 8004ece:	d103      	bne.n	8004ed8 <strncmp+0x1c>
 8004ed0:	42a0      	cmp	r0, r4
 8004ed2:	d001      	beq.n	8004ed8 <strncmp+0x1c>
 8004ed4:	2a00      	cmp	r2, #0
 8004ed6:	d1f5      	bne.n	8004ec4 <strncmp+0x8>
 8004ed8:	1ad0      	subs	r0, r2, r3
 8004eda:	bd10      	pop	{r4, pc}
 8004edc:	4610      	mov	r0, r2
 8004ede:	e7fc      	b.n	8004eda <strncmp+0x1e>

08004ee0 <memset>:
 8004ee0:	4603      	mov	r3, r0
 8004ee2:	4402      	add	r2, r0
 8004ee4:	4293      	cmp	r3, r2
 8004ee6:	d100      	bne.n	8004eea <memset+0xa>
 8004ee8:	4770      	bx	lr
 8004eea:	f803 1b01 	strb.w	r1, [r3], #1
 8004eee:	e7f9      	b.n	8004ee4 <memset+0x4>

08004ef0 <_localeconv_r>:
 8004ef0:	4800      	ldr	r0, [pc, #0]	; (8004ef4 <_localeconv_r+0x4>)
 8004ef2:	4770      	bx	lr
 8004ef4:	200000fc 	.word	0x200000fc

08004ef8 <__errno>:
 8004ef8:	4b01      	ldr	r3, [pc, #4]	; (8004f00 <__errno+0x8>)
 8004efa:	6818      	ldr	r0, [r3, #0]
 8004efc:	4770      	bx	lr
 8004efe:	bf00      	nop
 8004f00:	200001c4 	.word	0x200001c4

08004f04 <__libc_init_array>:
 8004f04:	b570      	push	{r4, r5, r6, lr}
 8004f06:	2600      	movs	r6, #0
 8004f08:	4d0c      	ldr	r5, [pc, #48]	; (8004f3c <__libc_init_array+0x38>)
 8004f0a:	4c0d      	ldr	r4, [pc, #52]	; (8004f40 <__libc_init_array+0x3c>)
 8004f0c:	1b64      	subs	r4, r4, r5
 8004f0e:	10a4      	asrs	r4, r4, #2
 8004f10:	42a6      	cmp	r6, r4
 8004f12:	d109      	bne.n	8004f28 <__libc_init_array+0x24>
 8004f14:	f003 fe12 	bl	8008b3c <_init>
 8004f18:	2600      	movs	r6, #0
 8004f1a:	4d0a      	ldr	r5, [pc, #40]	; (8004f44 <__libc_init_array+0x40>)
 8004f1c:	4c0a      	ldr	r4, [pc, #40]	; (8004f48 <__libc_init_array+0x44>)
 8004f1e:	1b64      	subs	r4, r4, r5
 8004f20:	10a4      	asrs	r4, r4, #2
 8004f22:	42a6      	cmp	r6, r4
 8004f24:	d105      	bne.n	8004f32 <__libc_init_array+0x2e>
 8004f26:	bd70      	pop	{r4, r5, r6, pc}
 8004f28:	f855 3b04 	ldr.w	r3, [r5], #4
 8004f2c:	4798      	blx	r3
 8004f2e:	3601      	adds	r6, #1
 8004f30:	e7ee      	b.n	8004f10 <__libc_init_array+0xc>
 8004f32:	f855 3b04 	ldr.w	r3, [r5], #4
 8004f36:	4798      	blx	r3
 8004f38:	3601      	adds	r6, #1
 8004f3a:	e7f2      	b.n	8004f22 <__libc_init_array+0x1e>
 8004f3c:	08009878 	.word	0x08009878
 8004f40:	08009878 	.word	0x08009878
 8004f44:	08009878 	.word	0x08009878
 8004f48:	0800987c 	.word	0x0800987c

08004f4c <__retarget_lock_init_recursive>:
 8004f4c:	4770      	bx	lr

08004f4e <__retarget_lock_acquire_recursive>:
 8004f4e:	4770      	bx	lr

08004f50 <__retarget_lock_release_recursive>:
 8004f50:	4770      	bx	lr

08004f52 <memchr>:
 8004f52:	4603      	mov	r3, r0
 8004f54:	b510      	push	{r4, lr}
 8004f56:	b2c9      	uxtb	r1, r1
 8004f58:	4402      	add	r2, r0
 8004f5a:	4293      	cmp	r3, r2
 8004f5c:	4618      	mov	r0, r3
 8004f5e:	d101      	bne.n	8004f64 <memchr+0x12>
 8004f60:	2000      	movs	r0, #0
 8004f62:	e003      	b.n	8004f6c <memchr+0x1a>
 8004f64:	7804      	ldrb	r4, [r0, #0]
 8004f66:	3301      	adds	r3, #1
 8004f68:	428c      	cmp	r4, r1
 8004f6a:	d1f6      	bne.n	8004f5a <memchr+0x8>
 8004f6c:	bd10      	pop	{r4, pc}

08004f6e <memcpy>:
 8004f6e:	440a      	add	r2, r1
 8004f70:	4291      	cmp	r1, r2
 8004f72:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
 8004f76:	d100      	bne.n	8004f7a <memcpy+0xc>
 8004f78:	4770      	bx	lr
 8004f7a:	b510      	push	{r4, lr}
 8004f7c:	f811 4b01 	ldrb.w	r4, [r1], #1
 8004f80:	4291      	cmp	r1, r2
 8004f82:	f803 4f01 	strb.w	r4, [r3, #1]!
 8004f86:	d1f9      	bne.n	8004f7c <memcpy+0xe>
 8004f88:	bd10      	pop	{r4, pc}
	...

08004f8c <nan>:
 8004f8c:	2000      	movs	r0, #0
 8004f8e:	4901      	ldr	r1, [pc, #4]	; (8004f94 <nan+0x8>)
 8004f90:	4770      	bx	lr
 8004f92:	bf00      	nop
 8004f94:	7ff80000 	.word	0x7ff80000

08004f98 <nanf>:
 8004f98:	4800      	ldr	r0, [pc, #0]	; (8004f9c <nanf+0x4>)
 8004f9a:	4770      	bx	lr
 8004f9c:	7fc00000 	.word	0x7fc00000

08004fa0 <quorem>:
 8004fa0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004fa4:	6903      	ldr	r3, [r0, #16]
 8004fa6:	690c      	ldr	r4, [r1, #16]
 8004fa8:	4607      	mov	r7, r0
 8004faa:	42a3      	cmp	r3, r4
 8004fac:	db7f      	blt.n	80050ae <quorem+0x10e>
 8004fae:	3c01      	subs	r4, #1
 8004fb0:	f100 0514 	add.w	r5, r0, #20
 8004fb4:	f101 0814 	add.w	r8, r1, #20
 8004fb8:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8004fbc:	9301      	str	r3, [sp, #4]
 8004fbe:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 8004fc2:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8004fc6:	3301      	adds	r3, #1
 8004fc8:	429a      	cmp	r2, r3
 8004fca:	fbb2 f6f3 	udiv	r6, r2, r3
 8004fce:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 8004fd2:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 8004fd6:	d331      	bcc.n	800503c <quorem+0x9c>
 8004fd8:	f04f 0e00 	mov.w	lr, #0
 8004fdc:	4640      	mov	r0, r8
 8004fde:	46ac      	mov	ip, r5
 8004fe0:	46f2      	mov	sl, lr
 8004fe2:	f850 2b04 	ldr.w	r2, [r0], #4
 8004fe6:	b293      	uxth	r3, r2
 8004fe8:	fb06 e303 	mla	r3, r6, r3, lr
 8004fec:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 8004ff0:	0c1a      	lsrs	r2, r3, #16
 8004ff2:	b29b      	uxth	r3, r3
 8004ff4:	fb06 220e 	mla	r2, r6, lr, r2
 8004ff8:	ebaa 0303 	sub.w	r3, sl, r3
 8004ffc:	f8dc a000 	ldr.w	sl, [ip]
 8005000:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 8005004:	fa1f fa8a 	uxth.w	sl, sl
 8005008:	4453      	add	r3, sl
 800500a:	f8dc a000 	ldr.w	sl, [ip]
 800500e:	b292      	uxth	r2, r2
 8005010:	ebc2 421a 	rsb	r2, r2, sl, lsr #16
 8005014:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8005018:	b29b      	uxth	r3, r3
 800501a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800501e:	4581      	cmp	r9, r0
 8005020:	ea4f 4a22 	mov.w	sl, r2, asr #16
 8005024:	f84c 3b04 	str.w	r3, [ip], #4
 8005028:	d2db      	bcs.n	8004fe2 <quorem+0x42>
 800502a:	f855 300b 	ldr.w	r3, [r5, fp]
 800502e:	b92b      	cbnz	r3, 800503c <quorem+0x9c>
 8005030:	9b01      	ldr	r3, [sp, #4]
 8005032:	3b04      	subs	r3, #4
 8005034:	429d      	cmp	r5, r3
 8005036:	461a      	mov	r2, r3
 8005038:	d32d      	bcc.n	8005096 <quorem+0xf6>
 800503a:	613c      	str	r4, [r7, #16]
 800503c:	4638      	mov	r0, r7
 800503e:	f002 f847 	bl	80070d0 <__mcmp>
 8005042:	2800      	cmp	r0, #0
 8005044:	db23      	blt.n	800508e <quorem+0xee>
 8005046:	4629      	mov	r1, r5
 8005048:	2000      	movs	r0, #0
 800504a:	3601      	adds	r6, #1
 800504c:	f858 2b04 	ldr.w	r2, [r8], #4
 8005050:	f8d1 c000 	ldr.w	ip, [r1]
 8005054:	b293      	uxth	r3, r2
 8005056:	1ac3      	subs	r3, r0, r3
 8005058:	0c12      	lsrs	r2, r2, #16
 800505a:	fa1f f08c 	uxth.w	r0, ip
 800505e:	4403      	add	r3, r0
 8005060:	ebc2 421c 	rsb	r2, r2, ip, lsr #16
 8005064:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8005068:	b29b      	uxth	r3, r3
 800506a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800506e:	45c1      	cmp	r9, r8
 8005070:	ea4f 4022 	mov.w	r0, r2, asr #16
 8005074:	f841 3b04 	str.w	r3, [r1], #4
 8005078:	d2e8      	bcs.n	800504c <quorem+0xac>
 800507a:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 800507e:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8005082:	b922      	cbnz	r2, 800508e <quorem+0xee>
 8005084:	3b04      	subs	r3, #4
 8005086:	429d      	cmp	r5, r3
 8005088:	461a      	mov	r2, r3
 800508a:	d30a      	bcc.n	80050a2 <quorem+0x102>
 800508c:	613c      	str	r4, [r7, #16]
 800508e:	4630      	mov	r0, r6
 8005090:	b003      	add	sp, #12
 8005092:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005096:	6812      	ldr	r2, [r2, #0]
 8005098:	3b04      	subs	r3, #4
 800509a:	2a00      	cmp	r2, #0
 800509c:	d1cd      	bne.n	800503a <quorem+0x9a>
 800509e:	3c01      	subs	r4, #1
 80050a0:	e7c8      	b.n	8005034 <quorem+0x94>
 80050a2:	6812      	ldr	r2, [r2, #0]
 80050a4:	3b04      	subs	r3, #4
 80050a6:	2a00      	cmp	r2, #0
 80050a8:	d1f0      	bne.n	800508c <quorem+0xec>
 80050aa:	3c01      	subs	r4, #1
 80050ac:	e7eb      	b.n	8005086 <quorem+0xe6>
 80050ae:	2000      	movs	r0, #0
 80050b0:	e7ee      	b.n	8005090 <quorem+0xf0>
 80050b2:	0000      	movs	r0, r0
 80050b4:	0000      	movs	r0, r0
	...

080050b8 <_dtoa_r>:
 80050b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80050bc:	4616      	mov	r6, r2
 80050be:	461f      	mov	r7, r3
 80050c0:	69c4      	ldr	r4, [r0, #28]
 80050c2:	b099      	sub	sp, #100	; 0x64
 80050c4:	4605      	mov	r5, r0
 80050c6:	e9cd 6704 	strd	r6, r7, [sp, #16]
 80050ca:	f8dd 8094 	ldr.w	r8, [sp, #148]	; 0x94
 80050ce:	b974      	cbnz	r4, 80050ee <_dtoa_r+0x36>
 80050d0:	2010      	movs	r0, #16
 80050d2:	f001 fbc9 	bl	8006868 <malloc>
 80050d6:	4602      	mov	r2, r0
 80050d8:	61e8      	str	r0, [r5, #28]
 80050da:	b920      	cbnz	r0, 80050e6 <_dtoa_r+0x2e>
 80050dc:	21ef      	movs	r1, #239	; 0xef
 80050de:	4bac      	ldr	r3, [pc, #688]	; (8005390 <_dtoa_r+0x2d8>)
 80050e0:	48ac      	ldr	r0, [pc, #688]	; (8005394 <_dtoa_r+0x2dc>)
 80050e2:	f002 fbd5 	bl	8007890 <__assert_func>
 80050e6:	e9c0 4401 	strd	r4, r4, [r0, #4]
 80050ea:	6004      	str	r4, [r0, #0]
 80050ec:	60c4      	str	r4, [r0, #12]
 80050ee:	69eb      	ldr	r3, [r5, #28]
 80050f0:	6819      	ldr	r1, [r3, #0]
 80050f2:	b151      	cbz	r1, 800510a <_dtoa_r+0x52>
 80050f4:	685a      	ldr	r2, [r3, #4]
 80050f6:	2301      	movs	r3, #1
 80050f8:	4093      	lsls	r3, r2
 80050fa:	604a      	str	r2, [r1, #4]
 80050fc:	608b      	str	r3, [r1, #8]
 80050fe:	4628      	mov	r0, r5
 8005100:	f001 fd62 	bl	8006bc8 <_Bfree>
 8005104:	2200      	movs	r2, #0
 8005106:	69eb      	ldr	r3, [r5, #28]
 8005108:	601a      	str	r2, [r3, #0]
 800510a:	1e3b      	subs	r3, r7, #0
 800510c:	bfaf      	iteee	ge
 800510e:	2300      	movge	r3, #0
 8005110:	2201      	movlt	r2, #1
 8005112:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
 8005116:	9305      	strlt	r3, [sp, #20]
 8005118:	bfa8      	it	ge
 800511a:	f8c8 3000 	strge.w	r3, [r8]
 800511e:	f8dd 9014 	ldr.w	r9, [sp, #20]
 8005122:	4b9d      	ldr	r3, [pc, #628]	; (8005398 <_dtoa_r+0x2e0>)
 8005124:	bfb8      	it	lt
 8005126:	f8c8 2000 	strlt.w	r2, [r8]
 800512a:	ea33 0309 	bics.w	r3, r3, r9
 800512e:	d119      	bne.n	8005164 <_dtoa_r+0xac>
 8005130:	f242 730f 	movw	r3, #9999	; 0x270f
 8005134:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8005136:	6013      	str	r3, [r2, #0]
 8005138:	f3c9 0313 	ubfx	r3, r9, #0, #20
 800513c:	4333      	orrs	r3, r6
 800513e:	f000 8589 	beq.w	8005c54 <_dtoa_r+0xb9c>
 8005142:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8005144:	b953      	cbnz	r3, 800515c <_dtoa_r+0xa4>
 8005146:	4b95      	ldr	r3, [pc, #596]	; (800539c <_dtoa_r+0x2e4>)
 8005148:	e023      	b.n	8005192 <_dtoa_r+0xda>
 800514a:	4b95      	ldr	r3, [pc, #596]	; (80053a0 <_dtoa_r+0x2e8>)
 800514c:	9303      	str	r3, [sp, #12]
 800514e:	3308      	adds	r3, #8
 8005150:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8005152:	6013      	str	r3, [r2, #0]
 8005154:	9803      	ldr	r0, [sp, #12]
 8005156:	b019      	add	sp, #100	; 0x64
 8005158:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800515c:	4b8f      	ldr	r3, [pc, #572]	; (800539c <_dtoa_r+0x2e4>)
 800515e:	9303      	str	r3, [sp, #12]
 8005160:	3303      	adds	r3, #3
 8005162:	e7f5      	b.n	8005150 <_dtoa_r+0x98>
 8005164:	e9dd 3404 	ldrd	r3, r4, [sp, #16]
 8005168:	e9cd 340c 	strd	r3, r4, [sp, #48]	; 0x30
 800516c:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8005170:	2200      	movs	r2, #0
 8005172:	2300      	movs	r3, #0
 8005174:	f7fb fc28 	bl	80009c8 <__aeabi_dcmpeq>
 8005178:	4680      	mov	r8, r0
 800517a:	b160      	cbz	r0, 8005196 <_dtoa_r+0xde>
 800517c:	2301      	movs	r3, #1
 800517e:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8005180:	6013      	str	r3, [r2, #0]
 8005182:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8005184:	2b00      	cmp	r3, #0
 8005186:	f000 8562 	beq.w	8005c4e <_dtoa_r+0xb96>
 800518a:	4b86      	ldr	r3, [pc, #536]	; (80053a4 <_dtoa_r+0x2ec>)
 800518c:	9a26      	ldr	r2, [sp, #152]	; 0x98
 800518e:	6013      	str	r3, [r2, #0]
 8005190:	3b01      	subs	r3, #1
 8005192:	9303      	str	r3, [sp, #12]
 8005194:	e7de      	b.n	8005154 <_dtoa_r+0x9c>
 8005196:	ab16      	add	r3, sp, #88	; 0x58
 8005198:	9301      	str	r3, [sp, #4]
 800519a:	ab17      	add	r3, sp, #92	; 0x5c
 800519c:	9300      	str	r3, [sp, #0]
 800519e:	4628      	mov	r0, r5
 80051a0:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
 80051a4:	f002 f8a4 	bl	80072f0 <__d2b>
 80051a8:	f3c9 540a 	ubfx	r4, r9, #20, #11
 80051ac:	4682      	mov	sl, r0
 80051ae:	2c00      	cmp	r4, #0
 80051b0:	d07e      	beq.n	80052b0 <_dtoa_r+0x1f8>
 80051b2:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 80051b6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80051b8:	f2a4 34ff 	subw	r4, r4, #1023	; 0x3ff
 80051bc:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80051c0:	f043 537f 	orr.w	r3, r3, #1069547520	; 0x3fc00000
 80051c4:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
 80051c8:	f8cd 804c 	str.w	r8, [sp, #76]	; 0x4c
 80051cc:	4619      	mov	r1, r3
 80051ce:	2200      	movs	r2, #0
 80051d0:	4b75      	ldr	r3, [pc, #468]	; (80053a8 <_dtoa_r+0x2f0>)
 80051d2:	f7fa ffd9 	bl	8000188 <__aeabi_dsub>
 80051d6:	a368      	add	r3, pc, #416	; (adr r3, 8005378 <_dtoa_r+0x2c0>)
 80051d8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80051dc:	f7fb f98c 	bl	80004f8 <__aeabi_dmul>
 80051e0:	a367      	add	r3, pc, #412	; (adr r3, 8005380 <_dtoa_r+0x2c8>)
 80051e2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80051e6:	f7fa ffd1 	bl	800018c <__adddf3>
 80051ea:	4606      	mov	r6, r0
 80051ec:	4620      	mov	r0, r4
 80051ee:	460f      	mov	r7, r1
 80051f0:	f7fb f918 	bl	8000424 <__aeabi_i2d>
 80051f4:	a364      	add	r3, pc, #400	; (adr r3, 8005388 <_dtoa_r+0x2d0>)
 80051f6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80051fa:	f7fb f97d 	bl	80004f8 <__aeabi_dmul>
 80051fe:	4602      	mov	r2, r0
 8005200:	460b      	mov	r3, r1
 8005202:	4630      	mov	r0, r6
 8005204:	4639      	mov	r1, r7
 8005206:	f7fa ffc1 	bl	800018c <__adddf3>
 800520a:	4606      	mov	r6, r0
 800520c:	460f      	mov	r7, r1
 800520e:	f7fb fc23 	bl	8000a58 <__aeabi_d2iz>
 8005212:	2200      	movs	r2, #0
 8005214:	4683      	mov	fp, r0
 8005216:	2300      	movs	r3, #0
 8005218:	4630      	mov	r0, r6
 800521a:	4639      	mov	r1, r7
 800521c:	f7fb fbde 	bl	80009dc <__aeabi_dcmplt>
 8005220:	b148      	cbz	r0, 8005236 <_dtoa_r+0x17e>
 8005222:	4658      	mov	r0, fp
 8005224:	f7fb f8fe 	bl	8000424 <__aeabi_i2d>
 8005228:	4632      	mov	r2, r6
 800522a:	463b      	mov	r3, r7
 800522c:	f7fb fbcc 	bl	80009c8 <__aeabi_dcmpeq>
 8005230:	b908      	cbnz	r0, 8005236 <_dtoa_r+0x17e>
 8005232:	f10b 3bff 	add.w	fp, fp, #4294967295	; 0xffffffff
 8005236:	f1bb 0f16 	cmp.w	fp, #22
 800523a:	d857      	bhi.n	80052ec <_dtoa_r+0x234>
 800523c:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8005240:	4b5a      	ldr	r3, [pc, #360]	; (80053ac <_dtoa_r+0x2f4>)
 8005242:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 8005246:	e9d3 2300 	ldrd	r2, r3, [r3]
 800524a:	f7fb fbc7 	bl	80009dc <__aeabi_dcmplt>
 800524e:	2800      	cmp	r0, #0
 8005250:	d04e      	beq.n	80052f0 <_dtoa_r+0x238>
 8005252:	2300      	movs	r3, #0
 8005254:	f10b 3bff 	add.w	fp, fp, #4294967295	; 0xffffffff
 8005258:	930f      	str	r3, [sp, #60]	; 0x3c
 800525a:	9b16      	ldr	r3, [sp, #88]	; 0x58
 800525c:	1b1b      	subs	r3, r3, r4
 800525e:	1e5a      	subs	r2, r3, #1
 8005260:	bf46      	itte	mi
 8005262:	f1c3 0901 	rsbmi	r9, r3, #1
 8005266:	2300      	movmi	r3, #0
 8005268:	f04f 0900 	movpl.w	r9, #0
 800526c:	9209      	str	r2, [sp, #36]	; 0x24
 800526e:	bf48      	it	mi
 8005270:	9309      	strmi	r3, [sp, #36]	; 0x24
 8005272:	f1bb 0f00 	cmp.w	fp, #0
 8005276:	db3d      	blt.n	80052f4 <_dtoa_r+0x23c>
 8005278:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800527a:	f8cd b038 	str.w	fp, [sp, #56]	; 0x38
 800527e:	445b      	add	r3, fp
 8005280:	9309      	str	r3, [sp, #36]	; 0x24
 8005282:	2300      	movs	r3, #0
 8005284:	930a      	str	r3, [sp, #40]	; 0x28
 8005286:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8005288:	2b09      	cmp	r3, #9
 800528a:	d867      	bhi.n	800535c <_dtoa_r+0x2a4>
 800528c:	2b05      	cmp	r3, #5
 800528e:	bfc4      	itt	gt
 8005290:	3b04      	subgt	r3, #4
 8005292:	9322      	strgt	r3, [sp, #136]	; 0x88
 8005294:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8005296:	bfc8      	it	gt
 8005298:	2400      	movgt	r4, #0
 800529a:	f1a3 0302 	sub.w	r3, r3, #2
 800529e:	bfd8      	it	le
 80052a0:	2401      	movle	r4, #1
 80052a2:	2b03      	cmp	r3, #3
 80052a4:	f200 8086 	bhi.w	80053b4 <_dtoa_r+0x2fc>
 80052a8:	e8df f003 	tbb	[pc, r3]
 80052ac:	5637392c 	.word	0x5637392c
 80052b0:	e9dd 4316 	ldrd	r4, r3, [sp, #88]	; 0x58
 80052b4:	441c      	add	r4, r3
 80052b6:	f204 4332 	addw	r3, r4, #1074	; 0x432
 80052ba:	2b20      	cmp	r3, #32
 80052bc:	bfc1      	itttt	gt
 80052be:	f1c3 0340 	rsbgt	r3, r3, #64	; 0x40
 80052c2:	fa09 f903 	lslgt.w	r9, r9, r3
 80052c6:	f204 4312 	addwgt	r3, r4, #1042	; 0x412
 80052ca:	fa26 f303 	lsrgt.w	r3, r6, r3
 80052ce:	bfd6      	itet	le
 80052d0:	f1c3 0320 	rsble	r3, r3, #32
 80052d4:	ea49 0003 	orrgt.w	r0, r9, r3
 80052d8:	fa06 f003 	lslle.w	r0, r6, r3
 80052dc:	f7fb f892 	bl	8000404 <__aeabi_ui2d>
 80052e0:	2201      	movs	r2, #1
 80052e2:	f1a1 73f8 	sub.w	r3, r1, #32505856	; 0x1f00000
 80052e6:	3c01      	subs	r4, #1
 80052e8:	9213      	str	r2, [sp, #76]	; 0x4c
 80052ea:	e76f      	b.n	80051cc <_dtoa_r+0x114>
 80052ec:	2301      	movs	r3, #1
 80052ee:	e7b3      	b.n	8005258 <_dtoa_r+0x1a0>
 80052f0:	900f      	str	r0, [sp, #60]	; 0x3c
 80052f2:	e7b2      	b.n	800525a <_dtoa_r+0x1a2>
 80052f4:	f1cb 0300 	rsb	r3, fp, #0
 80052f8:	930a      	str	r3, [sp, #40]	; 0x28
 80052fa:	2300      	movs	r3, #0
 80052fc:	eba9 090b 	sub.w	r9, r9, fp
 8005300:	930e      	str	r3, [sp, #56]	; 0x38
 8005302:	e7c0      	b.n	8005286 <_dtoa_r+0x1ce>
 8005304:	2300      	movs	r3, #0
 8005306:	930b      	str	r3, [sp, #44]	; 0x2c
 8005308:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800530a:	2b00      	cmp	r3, #0
 800530c:	dc55      	bgt.n	80053ba <_dtoa_r+0x302>
 800530e:	2301      	movs	r3, #1
 8005310:	461a      	mov	r2, r3
 8005312:	9306      	str	r3, [sp, #24]
 8005314:	9308      	str	r3, [sp, #32]
 8005316:	9223      	str	r2, [sp, #140]	; 0x8c
 8005318:	e00b      	b.n	8005332 <_dtoa_r+0x27a>
 800531a:	2301      	movs	r3, #1
 800531c:	e7f3      	b.n	8005306 <_dtoa_r+0x24e>
 800531e:	2300      	movs	r3, #0
 8005320:	930b      	str	r3, [sp, #44]	; 0x2c
 8005322:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8005324:	445b      	add	r3, fp
 8005326:	9306      	str	r3, [sp, #24]
 8005328:	3301      	adds	r3, #1
 800532a:	2b01      	cmp	r3, #1
 800532c:	9308      	str	r3, [sp, #32]
 800532e:	bfb8      	it	lt
 8005330:	2301      	movlt	r3, #1
 8005332:	2100      	movs	r1, #0
 8005334:	2204      	movs	r2, #4
 8005336:	69e8      	ldr	r0, [r5, #28]
 8005338:	f102 0614 	add.w	r6, r2, #20
 800533c:	429e      	cmp	r6, r3
 800533e:	d940      	bls.n	80053c2 <_dtoa_r+0x30a>
 8005340:	6041      	str	r1, [r0, #4]
 8005342:	4628      	mov	r0, r5
 8005344:	f001 fc00 	bl	8006b48 <_Balloc>
 8005348:	9003      	str	r0, [sp, #12]
 800534a:	2800      	cmp	r0, #0
 800534c:	d13c      	bne.n	80053c8 <_dtoa_r+0x310>
 800534e:	4602      	mov	r2, r0
 8005350:	f240 11af 	movw	r1, #431	; 0x1af
 8005354:	4b16      	ldr	r3, [pc, #88]	; (80053b0 <_dtoa_r+0x2f8>)
 8005356:	e6c3      	b.n	80050e0 <_dtoa_r+0x28>
 8005358:	2301      	movs	r3, #1
 800535a:	e7e1      	b.n	8005320 <_dtoa_r+0x268>
 800535c:	2401      	movs	r4, #1
 800535e:	2300      	movs	r3, #0
 8005360:	940b      	str	r4, [sp, #44]	; 0x2c
 8005362:	9322      	str	r3, [sp, #136]	; 0x88
 8005364:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8005368:	2200      	movs	r2, #0
 800536a:	9306      	str	r3, [sp, #24]
 800536c:	9308      	str	r3, [sp, #32]
 800536e:	2312      	movs	r3, #18
 8005370:	e7d1      	b.n	8005316 <_dtoa_r+0x25e>
 8005372:	bf00      	nop
 8005374:	f3af 8000 	nop.w
 8005378:	636f4361 	.word	0x636f4361
 800537c:	3fd287a7 	.word	0x3fd287a7
 8005380:	8b60c8b3 	.word	0x8b60c8b3
 8005384:	3fc68a28 	.word	0x3fc68a28
 8005388:	509f79fb 	.word	0x509f79fb
 800538c:	3fd34413 	.word	0x3fd34413
 8005390:	080095c6 	.word	0x080095c6
 8005394:	080095dd 	.word	0x080095dd
 8005398:	7ff00000 	.word	0x7ff00000
 800539c:	080095c2 	.word	0x080095c2
 80053a0:	080095b9 	.word	0x080095b9
 80053a4:	08009431 	.word	0x08009431
 80053a8:	3ff80000 	.word	0x3ff80000
 80053ac:	08009738 	.word	0x08009738
 80053b0:	08009635 	.word	0x08009635
 80053b4:	2301      	movs	r3, #1
 80053b6:	930b      	str	r3, [sp, #44]	; 0x2c
 80053b8:	e7d4      	b.n	8005364 <_dtoa_r+0x2ac>
 80053ba:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80053bc:	9306      	str	r3, [sp, #24]
 80053be:	9308      	str	r3, [sp, #32]
 80053c0:	e7b7      	b.n	8005332 <_dtoa_r+0x27a>
 80053c2:	3101      	adds	r1, #1
 80053c4:	0052      	lsls	r2, r2, #1
 80053c6:	e7b7      	b.n	8005338 <_dtoa_r+0x280>
 80053c8:	69eb      	ldr	r3, [r5, #28]
 80053ca:	9a03      	ldr	r2, [sp, #12]
 80053cc:	601a      	str	r2, [r3, #0]
 80053ce:	9b08      	ldr	r3, [sp, #32]
 80053d0:	2b0e      	cmp	r3, #14
 80053d2:	f200 80a8 	bhi.w	8005526 <_dtoa_r+0x46e>
 80053d6:	2c00      	cmp	r4, #0
 80053d8:	f000 80a5 	beq.w	8005526 <_dtoa_r+0x46e>
 80053dc:	f1bb 0f00 	cmp.w	fp, #0
 80053e0:	dd34      	ble.n	800544c <_dtoa_r+0x394>
 80053e2:	4b9a      	ldr	r3, [pc, #616]	; (800564c <_dtoa_r+0x594>)
 80053e4:	f00b 020f 	and.w	r2, fp, #15
 80053e8:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80053ec:	f41b 7f80 	tst.w	fp, #256	; 0x100
 80053f0:	e9d3 3400 	ldrd	r3, r4, [r3]
 80053f4:	e9cd 3410 	strd	r3, r4, [sp, #64]	; 0x40
 80053f8:	ea4f 142b 	mov.w	r4, fp, asr #4
 80053fc:	d016      	beq.n	800542c <_dtoa_r+0x374>
 80053fe:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8005402:	4b93      	ldr	r3, [pc, #588]	; (8005650 <_dtoa_r+0x598>)
 8005404:	2703      	movs	r7, #3
 8005406:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 800540a:	f7fb f99f 	bl	800074c <__aeabi_ddiv>
 800540e:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8005412:	f004 040f 	and.w	r4, r4, #15
 8005416:	4e8e      	ldr	r6, [pc, #568]	; (8005650 <_dtoa_r+0x598>)
 8005418:	b954      	cbnz	r4, 8005430 <_dtoa_r+0x378>
 800541a:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 800541e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8005422:	f7fb f993 	bl	800074c <__aeabi_ddiv>
 8005426:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800542a:	e029      	b.n	8005480 <_dtoa_r+0x3c8>
 800542c:	2702      	movs	r7, #2
 800542e:	e7f2      	b.n	8005416 <_dtoa_r+0x35e>
 8005430:	07e1      	lsls	r1, r4, #31
 8005432:	d508      	bpl.n	8005446 <_dtoa_r+0x38e>
 8005434:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 8005438:	e9d6 2300 	ldrd	r2, r3, [r6]
 800543c:	f7fb f85c 	bl	80004f8 <__aeabi_dmul>
 8005440:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 8005444:	3701      	adds	r7, #1
 8005446:	1064      	asrs	r4, r4, #1
 8005448:	3608      	adds	r6, #8
 800544a:	e7e5      	b.n	8005418 <_dtoa_r+0x360>
 800544c:	f000 80a5 	beq.w	800559a <_dtoa_r+0x4e2>
 8005450:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8005454:	f1cb 0400 	rsb	r4, fp, #0
 8005458:	4b7c      	ldr	r3, [pc, #496]	; (800564c <_dtoa_r+0x594>)
 800545a:	f004 020f 	and.w	r2, r4, #15
 800545e:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8005462:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005466:	f7fb f847 	bl	80004f8 <__aeabi_dmul>
 800546a:	2702      	movs	r7, #2
 800546c:	2300      	movs	r3, #0
 800546e:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8005472:	4e77      	ldr	r6, [pc, #476]	; (8005650 <_dtoa_r+0x598>)
 8005474:	1124      	asrs	r4, r4, #4
 8005476:	2c00      	cmp	r4, #0
 8005478:	f040 8084 	bne.w	8005584 <_dtoa_r+0x4cc>
 800547c:	2b00      	cmp	r3, #0
 800547e:	d1d2      	bne.n	8005426 <_dtoa_r+0x36e>
 8005480:	e9dd 3404 	ldrd	r3, r4, [sp, #16]
 8005484:	e9cd 3410 	strd	r3, r4, [sp, #64]	; 0x40
 8005488:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800548a:	2b00      	cmp	r3, #0
 800548c:	f000 8087 	beq.w	800559e <_dtoa_r+0x4e6>
 8005490:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 8005494:	2200      	movs	r2, #0
 8005496:	4b6f      	ldr	r3, [pc, #444]	; (8005654 <_dtoa_r+0x59c>)
 8005498:	f7fb faa0 	bl	80009dc <__aeabi_dcmplt>
 800549c:	2800      	cmp	r0, #0
 800549e:	d07e      	beq.n	800559e <_dtoa_r+0x4e6>
 80054a0:	9b08      	ldr	r3, [sp, #32]
 80054a2:	2b00      	cmp	r3, #0
 80054a4:	d07b      	beq.n	800559e <_dtoa_r+0x4e6>
 80054a6:	9b06      	ldr	r3, [sp, #24]
 80054a8:	2b00      	cmp	r3, #0
 80054aa:	dd38      	ble.n	800551e <_dtoa_r+0x466>
 80054ac:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 80054b0:	2200      	movs	r2, #0
 80054b2:	4b69      	ldr	r3, [pc, #420]	; (8005658 <_dtoa_r+0x5a0>)
 80054b4:	f7fb f820 	bl	80004f8 <__aeabi_dmul>
 80054b8:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80054bc:	9c06      	ldr	r4, [sp, #24]
 80054be:	f10b 38ff 	add.w	r8, fp, #4294967295	; 0xffffffff
 80054c2:	3701      	adds	r7, #1
 80054c4:	4638      	mov	r0, r7
 80054c6:	f7fa ffad 	bl	8000424 <__aeabi_i2d>
 80054ca:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80054ce:	f7fb f813 	bl	80004f8 <__aeabi_dmul>
 80054d2:	2200      	movs	r2, #0
 80054d4:	4b61      	ldr	r3, [pc, #388]	; (800565c <_dtoa_r+0x5a4>)
 80054d6:	f7fa fe59 	bl	800018c <__adddf3>
 80054da:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
 80054de:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 80054e2:	9611      	str	r6, [sp, #68]	; 0x44
 80054e4:	2c00      	cmp	r4, #0
 80054e6:	d15d      	bne.n	80055a4 <_dtoa_r+0x4ec>
 80054e8:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80054ec:	2200      	movs	r2, #0
 80054ee:	4b5c      	ldr	r3, [pc, #368]	; (8005660 <_dtoa_r+0x5a8>)
 80054f0:	f7fa fe4a 	bl	8000188 <__aeabi_dsub>
 80054f4:	4602      	mov	r2, r0
 80054f6:	460b      	mov	r3, r1
 80054f8:	e9cd 2304 	strd	r2, r3, [sp, #16]
 80054fc:	4633      	mov	r3, r6
 80054fe:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8005500:	f7fb fa8a 	bl	8000a18 <__aeabi_dcmpgt>
 8005504:	2800      	cmp	r0, #0
 8005506:	f040 8295 	bne.w	8005a34 <_dtoa_r+0x97c>
 800550a:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800550e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8005510:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
 8005514:	f7fb fa62 	bl	80009dc <__aeabi_dcmplt>
 8005518:	2800      	cmp	r0, #0
 800551a:	f040 8289 	bne.w	8005a30 <_dtoa_r+0x978>
 800551e:	e9dd 340c 	ldrd	r3, r4, [sp, #48]	; 0x30
 8005522:	e9cd 3404 	strd	r3, r4, [sp, #16]
 8005526:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8005528:	2b00      	cmp	r3, #0
 800552a:	f2c0 8151 	blt.w	80057d0 <_dtoa_r+0x718>
 800552e:	f1bb 0f0e 	cmp.w	fp, #14
 8005532:	f300 814d 	bgt.w	80057d0 <_dtoa_r+0x718>
 8005536:	4b45      	ldr	r3, [pc, #276]	; (800564c <_dtoa_r+0x594>)
 8005538:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 800553c:	e9d3 3400 	ldrd	r3, r4, [r3]
 8005540:	e9cd 3406 	strd	r3, r4, [sp, #24]
 8005544:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8005546:	2b00      	cmp	r3, #0
 8005548:	f280 80da 	bge.w	8005700 <_dtoa_r+0x648>
 800554c:	9b08      	ldr	r3, [sp, #32]
 800554e:	2b00      	cmp	r3, #0
 8005550:	f300 80d6 	bgt.w	8005700 <_dtoa_r+0x648>
 8005554:	f040 826b 	bne.w	8005a2e <_dtoa_r+0x976>
 8005558:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800555c:	2200      	movs	r2, #0
 800555e:	4b40      	ldr	r3, [pc, #256]	; (8005660 <_dtoa_r+0x5a8>)
 8005560:	f7fa ffca 	bl	80004f8 <__aeabi_dmul>
 8005564:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8005568:	f7fb fa4c 	bl	8000a04 <__aeabi_dcmpge>
 800556c:	9c08      	ldr	r4, [sp, #32]
 800556e:	4626      	mov	r6, r4
 8005570:	2800      	cmp	r0, #0
 8005572:	f040 8241 	bne.w	80059f8 <_dtoa_r+0x940>
 8005576:	2331      	movs	r3, #49	; 0x31
 8005578:	9f03      	ldr	r7, [sp, #12]
 800557a:	f10b 0b01 	add.w	fp, fp, #1
 800557e:	f807 3b01 	strb.w	r3, [r7], #1
 8005582:	e23d      	b.n	8005a00 <_dtoa_r+0x948>
 8005584:	07e2      	lsls	r2, r4, #31
 8005586:	d505      	bpl.n	8005594 <_dtoa_r+0x4dc>
 8005588:	e9d6 2300 	ldrd	r2, r3, [r6]
 800558c:	f7fa ffb4 	bl	80004f8 <__aeabi_dmul>
 8005590:	2301      	movs	r3, #1
 8005592:	3701      	adds	r7, #1
 8005594:	1064      	asrs	r4, r4, #1
 8005596:	3608      	adds	r6, #8
 8005598:	e76d      	b.n	8005476 <_dtoa_r+0x3be>
 800559a:	2702      	movs	r7, #2
 800559c:	e770      	b.n	8005480 <_dtoa_r+0x3c8>
 800559e:	46d8      	mov	r8, fp
 80055a0:	9c08      	ldr	r4, [sp, #32]
 80055a2:	e78f      	b.n	80054c4 <_dtoa_r+0x40c>
 80055a4:	9903      	ldr	r1, [sp, #12]
 80055a6:	4b29      	ldr	r3, [pc, #164]	; (800564c <_dtoa_r+0x594>)
 80055a8:	4421      	add	r1, r4
 80055aa:	9112      	str	r1, [sp, #72]	; 0x48
 80055ac:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80055ae:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 80055b2:	e9dd 6710 	ldrd	r6, r7, [sp, #64]	; 0x40
 80055b6:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 80055ba:	2900      	cmp	r1, #0
 80055bc:	d054      	beq.n	8005668 <_dtoa_r+0x5b0>
 80055be:	2000      	movs	r0, #0
 80055c0:	4928      	ldr	r1, [pc, #160]	; (8005664 <_dtoa_r+0x5ac>)
 80055c2:	f7fb f8c3 	bl	800074c <__aeabi_ddiv>
 80055c6:	463b      	mov	r3, r7
 80055c8:	4632      	mov	r2, r6
 80055ca:	f7fa fddd 	bl	8000188 <__aeabi_dsub>
 80055ce:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 80055d2:	9f03      	ldr	r7, [sp, #12]
 80055d4:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80055d8:	f7fb fa3e 	bl	8000a58 <__aeabi_d2iz>
 80055dc:	4604      	mov	r4, r0
 80055de:	f7fa ff21 	bl	8000424 <__aeabi_i2d>
 80055e2:	4602      	mov	r2, r0
 80055e4:	460b      	mov	r3, r1
 80055e6:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80055ea:	f7fa fdcd 	bl	8000188 <__aeabi_dsub>
 80055ee:	4602      	mov	r2, r0
 80055f0:	460b      	mov	r3, r1
 80055f2:	3430      	adds	r4, #48	; 0x30
 80055f4:	e9cd 2304 	strd	r2, r3, [sp, #16]
 80055f8:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 80055fc:	f807 4b01 	strb.w	r4, [r7], #1
 8005600:	f7fb f9ec 	bl	80009dc <__aeabi_dcmplt>
 8005604:	2800      	cmp	r0, #0
 8005606:	d173      	bne.n	80056f0 <_dtoa_r+0x638>
 8005608:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800560c:	2000      	movs	r0, #0
 800560e:	4911      	ldr	r1, [pc, #68]	; (8005654 <_dtoa_r+0x59c>)
 8005610:	f7fa fdba 	bl	8000188 <__aeabi_dsub>
 8005614:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 8005618:	f7fb f9e0 	bl	80009dc <__aeabi_dcmplt>
 800561c:	2800      	cmp	r0, #0
 800561e:	f040 80b6 	bne.w	800578e <_dtoa_r+0x6d6>
 8005622:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8005624:	429f      	cmp	r7, r3
 8005626:	f43f af7a 	beq.w	800551e <_dtoa_r+0x466>
 800562a:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 800562e:	2200      	movs	r2, #0
 8005630:	4b09      	ldr	r3, [pc, #36]	; (8005658 <_dtoa_r+0x5a0>)
 8005632:	f7fa ff61 	bl	80004f8 <__aeabi_dmul>
 8005636:	2200      	movs	r2, #0
 8005638:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 800563c:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8005640:	4b05      	ldr	r3, [pc, #20]	; (8005658 <_dtoa_r+0x5a0>)
 8005642:	f7fa ff59 	bl	80004f8 <__aeabi_dmul>
 8005646:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800564a:	e7c3      	b.n	80055d4 <_dtoa_r+0x51c>
 800564c:	08009738 	.word	0x08009738
 8005650:	08009710 	.word	0x08009710
 8005654:	3ff00000 	.word	0x3ff00000
 8005658:	40240000 	.word	0x40240000
 800565c:	401c0000 	.word	0x401c0000
 8005660:	40140000 	.word	0x40140000
 8005664:	3fe00000 	.word	0x3fe00000
 8005668:	4630      	mov	r0, r6
 800566a:	4639      	mov	r1, r7
 800566c:	f7fa ff44 	bl	80004f8 <__aeabi_dmul>
 8005670:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8005672:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 8005676:	9c03      	ldr	r4, [sp, #12]
 8005678:	9314      	str	r3, [sp, #80]	; 0x50
 800567a:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800567e:	f7fb f9eb 	bl	8000a58 <__aeabi_d2iz>
 8005682:	9015      	str	r0, [sp, #84]	; 0x54
 8005684:	f7fa fece 	bl	8000424 <__aeabi_i2d>
 8005688:	4602      	mov	r2, r0
 800568a:	460b      	mov	r3, r1
 800568c:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8005690:	f7fa fd7a 	bl	8000188 <__aeabi_dsub>
 8005694:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8005696:	4606      	mov	r6, r0
 8005698:	3330      	adds	r3, #48	; 0x30
 800569a:	f804 3b01 	strb.w	r3, [r4], #1
 800569e:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80056a0:	460f      	mov	r7, r1
 80056a2:	429c      	cmp	r4, r3
 80056a4:	f04f 0200 	mov.w	r2, #0
 80056a8:	d124      	bne.n	80056f4 <_dtoa_r+0x63c>
 80056aa:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 80056ae:	4baf      	ldr	r3, [pc, #700]	; (800596c <_dtoa_r+0x8b4>)
 80056b0:	f7fa fd6c 	bl	800018c <__adddf3>
 80056b4:	4602      	mov	r2, r0
 80056b6:	460b      	mov	r3, r1
 80056b8:	4630      	mov	r0, r6
 80056ba:	4639      	mov	r1, r7
 80056bc:	f7fb f9ac 	bl	8000a18 <__aeabi_dcmpgt>
 80056c0:	2800      	cmp	r0, #0
 80056c2:	d163      	bne.n	800578c <_dtoa_r+0x6d4>
 80056c4:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 80056c8:	2000      	movs	r0, #0
 80056ca:	49a8      	ldr	r1, [pc, #672]	; (800596c <_dtoa_r+0x8b4>)
 80056cc:	f7fa fd5c 	bl	8000188 <__aeabi_dsub>
 80056d0:	4602      	mov	r2, r0
 80056d2:	460b      	mov	r3, r1
 80056d4:	4630      	mov	r0, r6
 80056d6:	4639      	mov	r1, r7
 80056d8:	f7fb f980 	bl	80009dc <__aeabi_dcmplt>
 80056dc:	2800      	cmp	r0, #0
 80056de:	f43f af1e 	beq.w	800551e <_dtoa_r+0x466>
 80056e2:	9f14      	ldr	r7, [sp, #80]	; 0x50
 80056e4:	1e7b      	subs	r3, r7, #1
 80056e6:	9314      	str	r3, [sp, #80]	; 0x50
 80056e8:	f817 3c01 	ldrb.w	r3, [r7, #-1]
 80056ec:	2b30      	cmp	r3, #48	; 0x30
 80056ee:	d0f8      	beq.n	80056e2 <_dtoa_r+0x62a>
 80056f0:	46c3      	mov	fp, r8
 80056f2:	e03b      	b.n	800576c <_dtoa_r+0x6b4>
 80056f4:	4b9e      	ldr	r3, [pc, #632]	; (8005970 <_dtoa_r+0x8b8>)
 80056f6:	f7fa feff 	bl	80004f8 <__aeabi_dmul>
 80056fa:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80056fe:	e7bc      	b.n	800567a <_dtoa_r+0x5c2>
 8005700:	9f03      	ldr	r7, [sp, #12]
 8005702:	e9dd 8904 	ldrd	r8, r9, [sp, #16]
 8005706:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800570a:	4640      	mov	r0, r8
 800570c:	4649      	mov	r1, r9
 800570e:	f7fb f81d 	bl	800074c <__aeabi_ddiv>
 8005712:	f7fb f9a1 	bl	8000a58 <__aeabi_d2iz>
 8005716:	4604      	mov	r4, r0
 8005718:	f7fa fe84 	bl	8000424 <__aeabi_i2d>
 800571c:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8005720:	f7fa feea 	bl	80004f8 <__aeabi_dmul>
 8005724:	4602      	mov	r2, r0
 8005726:	460b      	mov	r3, r1
 8005728:	4640      	mov	r0, r8
 800572a:	4649      	mov	r1, r9
 800572c:	f7fa fd2c 	bl	8000188 <__aeabi_dsub>
 8005730:	f104 0630 	add.w	r6, r4, #48	; 0x30
 8005734:	f807 6b01 	strb.w	r6, [r7], #1
 8005738:	9e03      	ldr	r6, [sp, #12]
 800573a:	f8dd c020 	ldr.w	ip, [sp, #32]
 800573e:	1bbe      	subs	r6, r7, r6
 8005740:	45b4      	cmp	ip, r6
 8005742:	4602      	mov	r2, r0
 8005744:	460b      	mov	r3, r1
 8005746:	d136      	bne.n	80057b6 <_dtoa_r+0x6fe>
 8005748:	f7fa fd20 	bl	800018c <__adddf3>
 800574c:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8005750:	4680      	mov	r8, r0
 8005752:	4689      	mov	r9, r1
 8005754:	f7fb f960 	bl	8000a18 <__aeabi_dcmpgt>
 8005758:	bb58      	cbnz	r0, 80057b2 <_dtoa_r+0x6fa>
 800575a:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800575e:	4640      	mov	r0, r8
 8005760:	4649      	mov	r1, r9
 8005762:	f7fb f931 	bl	80009c8 <__aeabi_dcmpeq>
 8005766:	b108      	cbz	r0, 800576c <_dtoa_r+0x6b4>
 8005768:	07e3      	lsls	r3, r4, #31
 800576a:	d422      	bmi.n	80057b2 <_dtoa_r+0x6fa>
 800576c:	4651      	mov	r1, sl
 800576e:	4628      	mov	r0, r5
 8005770:	f001 fa2a 	bl	8006bc8 <_Bfree>
 8005774:	2300      	movs	r3, #0
 8005776:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8005778:	703b      	strb	r3, [r7, #0]
 800577a:	f10b 0301 	add.w	r3, fp, #1
 800577e:	6013      	str	r3, [r2, #0]
 8005780:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8005782:	2b00      	cmp	r3, #0
 8005784:	f43f ace6 	beq.w	8005154 <_dtoa_r+0x9c>
 8005788:	601f      	str	r7, [r3, #0]
 800578a:	e4e3      	b.n	8005154 <_dtoa_r+0x9c>
 800578c:	4627      	mov	r7, r4
 800578e:	463b      	mov	r3, r7
 8005790:	461f      	mov	r7, r3
 8005792:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8005796:	2a39      	cmp	r2, #57	; 0x39
 8005798:	d107      	bne.n	80057aa <_dtoa_r+0x6f2>
 800579a:	9a03      	ldr	r2, [sp, #12]
 800579c:	429a      	cmp	r2, r3
 800579e:	d1f7      	bne.n	8005790 <_dtoa_r+0x6d8>
 80057a0:	2230      	movs	r2, #48	; 0x30
 80057a2:	9903      	ldr	r1, [sp, #12]
 80057a4:	f108 0801 	add.w	r8, r8, #1
 80057a8:	700a      	strb	r2, [r1, #0]
 80057aa:	781a      	ldrb	r2, [r3, #0]
 80057ac:	3201      	adds	r2, #1
 80057ae:	701a      	strb	r2, [r3, #0]
 80057b0:	e79e      	b.n	80056f0 <_dtoa_r+0x638>
 80057b2:	46d8      	mov	r8, fp
 80057b4:	e7eb      	b.n	800578e <_dtoa_r+0x6d6>
 80057b6:	2200      	movs	r2, #0
 80057b8:	4b6d      	ldr	r3, [pc, #436]	; (8005970 <_dtoa_r+0x8b8>)
 80057ba:	f7fa fe9d 	bl	80004f8 <__aeabi_dmul>
 80057be:	2200      	movs	r2, #0
 80057c0:	2300      	movs	r3, #0
 80057c2:	4680      	mov	r8, r0
 80057c4:	4689      	mov	r9, r1
 80057c6:	f7fb f8ff 	bl	80009c8 <__aeabi_dcmpeq>
 80057ca:	2800      	cmp	r0, #0
 80057cc:	d09b      	beq.n	8005706 <_dtoa_r+0x64e>
 80057ce:	e7cd      	b.n	800576c <_dtoa_r+0x6b4>
 80057d0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80057d2:	2a00      	cmp	r2, #0
 80057d4:	f000 80c4 	beq.w	8005960 <_dtoa_r+0x8a8>
 80057d8:	9a22      	ldr	r2, [sp, #136]	; 0x88
 80057da:	2a01      	cmp	r2, #1
 80057dc:	f300 80a8 	bgt.w	8005930 <_dtoa_r+0x878>
 80057e0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80057e2:	2a00      	cmp	r2, #0
 80057e4:	f000 80a0 	beq.w	8005928 <_dtoa_r+0x870>
 80057e8:	f203 4333 	addw	r3, r3, #1075	; 0x433
 80057ec:	464f      	mov	r7, r9
 80057ee:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80057f0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80057f2:	2101      	movs	r1, #1
 80057f4:	441a      	add	r2, r3
 80057f6:	4628      	mov	r0, r5
 80057f8:	4499      	add	r9, r3
 80057fa:	9209      	str	r2, [sp, #36]	; 0x24
 80057fc:	f001 fae4 	bl	8006dc8 <__i2b>
 8005800:	4606      	mov	r6, r0
 8005802:	b15f      	cbz	r7, 800581c <_dtoa_r+0x764>
 8005804:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005806:	2b00      	cmp	r3, #0
 8005808:	dd08      	ble.n	800581c <_dtoa_r+0x764>
 800580a:	42bb      	cmp	r3, r7
 800580c:	bfa8      	it	ge
 800580e:	463b      	movge	r3, r7
 8005810:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8005812:	eba9 0903 	sub.w	r9, r9, r3
 8005816:	1aff      	subs	r7, r7, r3
 8005818:	1ad3      	subs	r3, r2, r3
 800581a:	9309      	str	r3, [sp, #36]	; 0x24
 800581c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800581e:	b1f3      	cbz	r3, 800585e <_dtoa_r+0x7a6>
 8005820:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8005822:	2b00      	cmp	r3, #0
 8005824:	f000 80a0 	beq.w	8005968 <_dtoa_r+0x8b0>
 8005828:	2c00      	cmp	r4, #0
 800582a:	dd10      	ble.n	800584e <_dtoa_r+0x796>
 800582c:	4631      	mov	r1, r6
 800582e:	4622      	mov	r2, r4
 8005830:	4628      	mov	r0, r5
 8005832:	f001 fb87 	bl	8006f44 <__pow5mult>
 8005836:	4652      	mov	r2, sl
 8005838:	4601      	mov	r1, r0
 800583a:	4606      	mov	r6, r0
 800583c:	4628      	mov	r0, r5
 800583e:	f001 fad9 	bl	8006df4 <__multiply>
 8005842:	4680      	mov	r8, r0
 8005844:	4651      	mov	r1, sl
 8005846:	4628      	mov	r0, r5
 8005848:	f001 f9be 	bl	8006bc8 <_Bfree>
 800584c:	46c2      	mov	sl, r8
 800584e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005850:	1b1a      	subs	r2, r3, r4
 8005852:	d004      	beq.n	800585e <_dtoa_r+0x7a6>
 8005854:	4651      	mov	r1, sl
 8005856:	4628      	mov	r0, r5
 8005858:	f001 fb74 	bl	8006f44 <__pow5mult>
 800585c:	4682      	mov	sl, r0
 800585e:	2101      	movs	r1, #1
 8005860:	4628      	mov	r0, r5
 8005862:	f001 fab1 	bl	8006dc8 <__i2b>
 8005866:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8005868:	4604      	mov	r4, r0
 800586a:	2b00      	cmp	r3, #0
 800586c:	f340 8082 	ble.w	8005974 <_dtoa_r+0x8bc>
 8005870:	461a      	mov	r2, r3
 8005872:	4601      	mov	r1, r0
 8005874:	4628      	mov	r0, r5
 8005876:	f001 fb65 	bl	8006f44 <__pow5mult>
 800587a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800587c:	4604      	mov	r4, r0
 800587e:	2b01      	cmp	r3, #1
 8005880:	dd7b      	ble.n	800597a <_dtoa_r+0x8c2>
 8005882:	f04f 0800 	mov.w	r8, #0
 8005886:	6923      	ldr	r3, [r4, #16]
 8005888:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 800588c:	6918      	ldr	r0, [r3, #16]
 800588e:	f001 fa4d 	bl	8006d2c <__hi0bits>
 8005892:	f1c0 0020 	rsb	r0, r0, #32
 8005896:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005898:	4418      	add	r0, r3
 800589a:	f010 001f 	ands.w	r0, r0, #31
 800589e:	f000 8092 	beq.w	80059c6 <_dtoa_r+0x90e>
 80058a2:	f1c0 0320 	rsb	r3, r0, #32
 80058a6:	2b04      	cmp	r3, #4
 80058a8:	f340 8085 	ble.w	80059b6 <_dtoa_r+0x8fe>
 80058ac:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80058ae:	f1c0 001c 	rsb	r0, r0, #28
 80058b2:	4403      	add	r3, r0
 80058b4:	4481      	add	r9, r0
 80058b6:	4407      	add	r7, r0
 80058b8:	9309      	str	r3, [sp, #36]	; 0x24
 80058ba:	f1b9 0f00 	cmp.w	r9, #0
 80058be:	dd05      	ble.n	80058cc <_dtoa_r+0x814>
 80058c0:	4651      	mov	r1, sl
 80058c2:	464a      	mov	r2, r9
 80058c4:	4628      	mov	r0, r5
 80058c6:	f001 fb97 	bl	8006ff8 <__lshift>
 80058ca:	4682      	mov	sl, r0
 80058cc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80058ce:	2b00      	cmp	r3, #0
 80058d0:	dd05      	ble.n	80058de <_dtoa_r+0x826>
 80058d2:	4621      	mov	r1, r4
 80058d4:	461a      	mov	r2, r3
 80058d6:	4628      	mov	r0, r5
 80058d8:	f001 fb8e 	bl	8006ff8 <__lshift>
 80058dc:	4604      	mov	r4, r0
 80058de:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80058e0:	2b00      	cmp	r3, #0
 80058e2:	d072      	beq.n	80059ca <_dtoa_r+0x912>
 80058e4:	4621      	mov	r1, r4
 80058e6:	4650      	mov	r0, sl
 80058e8:	f001 fbf2 	bl	80070d0 <__mcmp>
 80058ec:	2800      	cmp	r0, #0
 80058ee:	da6c      	bge.n	80059ca <_dtoa_r+0x912>
 80058f0:	2300      	movs	r3, #0
 80058f2:	4651      	mov	r1, sl
 80058f4:	220a      	movs	r2, #10
 80058f6:	4628      	mov	r0, r5
 80058f8:	f001 f988 	bl	8006c0c <__multadd>
 80058fc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80058fe:	4682      	mov	sl, r0
 8005900:	f10b 3bff 	add.w	fp, fp, #4294967295	; 0xffffffff
 8005904:	2b00      	cmp	r3, #0
 8005906:	f000 81ac 	beq.w	8005c62 <_dtoa_r+0xbaa>
 800590a:	2300      	movs	r3, #0
 800590c:	4631      	mov	r1, r6
 800590e:	220a      	movs	r2, #10
 8005910:	4628      	mov	r0, r5
 8005912:	f001 f97b 	bl	8006c0c <__multadd>
 8005916:	9b06      	ldr	r3, [sp, #24]
 8005918:	4606      	mov	r6, r0
 800591a:	2b00      	cmp	r3, #0
 800591c:	f300 8093 	bgt.w	8005a46 <_dtoa_r+0x98e>
 8005920:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8005922:	2b02      	cmp	r3, #2
 8005924:	dc59      	bgt.n	80059da <_dtoa_r+0x922>
 8005926:	e08e      	b.n	8005a46 <_dtoa_r+0x98e>
 8005928:	9b16      	ldr	r3, [sp, #88]	; 0x58
 800592a:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 800592e:	e75d      	b.n	80057ec <_dtoa_r+0x734>
 8005930:	9b08      	ldr	r3, [sp, #32]
 8005932:	1e5c      	subs	r4, r3, #1
 8005934:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005936:	42a3      	cmp	r3, r4
 8005938:	bfbf      	itttt	lt
 800593a:	9b0a      	ldrlt	r3, [sp, #40]	; 0x28
 800593c:	9a0e      	ldrlt	r2, [sp, #56]	; 0x38
 800593e:	1ae3      	sublt	r3, r4, r3
 8005940:	18d2      	addlt	r2, r2, r3
 8005942:	bfa8      	it	ge
 8005944:	1b1c      	subge	r4, r3, r4
 8005946:	9b08      	ldr	r3, [sp, #32]
 8005948:	bfbe      	ittt	lt
 800594a:	940a      	strlt	r4, [sp, #40]	; 0x28
 800594c:	920e      	strlt	r2, [sp, #56]	; 0x38
 800594e:	2400      	movlt	r4, #0
 8005950:	2b00      	cmp	r3, #0
 8005952:	bfb5      	itete	lt
 8005954:	eba9 0703 	sublt.w	r7, r9, r3
 8005958:	464f      	movge	r7, r9
 800595a:	2300      	movlt	r3, #0
 800595c:	9b08      	ldrge	r3, [sp, #32]
 800595e:	e747      	b.n	80057f0 <_dtoa_r+0x738>
 8005960:	464f      	mov	r7, r9
 8005962:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8005964:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8005966:	e74c      	b.n	8005802 <_dtoa_r+0x74a>
 8005968:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800596a:	e773      	b.n	8005854 <_dtoa_r+0x79c>
 800596c:	3fe00000 	.word	0x3fe00000
 8005970:	40240000 	.word	0x40240000
 8005974:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8005976:	2b01      	cmp	r3, #1
 8005978:	dc18      	bgt.n	80059ac <_dtoa_r+0x8f4>
 800597a:	9b04      	ldr	r3, [sp, #16]
 800597c:	b9b3      	cbnz	r3, 80059ac <_dtoa_r+0x8f4>
 800597e:	9b05      	ldr	r3, [sp, #20]
 8005980:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8005984:	b993      	cbnz	r3, 80059ac <_dtoa_r+0x8f4>
 8005986:	9b05      	ldr	r3, [sp, #20]
 8005988:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 800598c:	0d1b      	lsrs	r3, r3, #20
 800598e:	051b      	lsls	r3, r3, #20
 8005990:	b17b      	cbz	r3, 80059b2 <_dtoa_r+0x8fa>
 8005992:	f04f 0801 	mov.w	r8, #1
 8005996:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005998:	f109 0901 	add.w	r9, r9, #1
 800599c:	3301      	adds	r3, #1
 800599e:	9309      	str	r3, [sp, #36]	; 0x24
 80059a0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80059a2:	2b00      	cmp	r3, #0
 80059a4:	f47f af6f 	bne.w	8005886 <_dtoa_r+0x7ce>
 80059a8:	2001      	movs	r0, #1
 80059aa:	e774      	b.n	8005896 <_dtoa_r+0x7de>
 80059ac:	f04f 0800 	mov.w	r8, #0
 80059b0:	e7f6      	b.n	80059a0 <_dtoa_r+0x8e8>
 80059b2:	4698      	mov	r8, r3
 80059b4:	e7f4      	b.n	80059a0 <_dtoa_r+0x8e8>
 80059b6:	d080      	beq.n	80058ba <_dtoa_r+0x802>
 80059b8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80059ba:	331c      	adds	r3, #28
 80059bc:	441a      	add	r2, r3
 80059be:	4499      	add	r9, r3
 80059c0:	441f      	add	r7, r3
 80059c2:	9209      	str	r2, [sp, #36]	; 0x24
 80059c4:	e779      	b.n	80058ba <_dtoa_r+0x802>
 80059c6:	4603      	mov	r3, r0
 80059c8:	e7f6      	b.n	80059b8 <_dtoa_r+0x900>
 80059ca:	9b08      	ldr	r3, [sp, #32]
 80059cc:	2b00      	cmp	r3, #0
 80059ce:	dc34      	bgt.n	8005a3a <_dtoa_r+0x982>
 80059d0:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80059d2:	2b02      	cmp	r3, #2
 80059d4:	dd31      	ble.n	8005a3a <_dtoa_r+0x982>
 80059d6:	9b08      	ldr	r3, [sp, #32]
 80059d8:	9306      	str	r3, [sp, #24]
 80059da:	9b06      	ldr	r3, [sp, #24]
 80059dc:	b963      	cbnz	r3, 80059f8 <_dtoa_r+0x940>
 80059de:	4621      	mov	r1, r4
 80059e0:	2205      	movs	r2, #5
 80059e2:	4628      	mov	r0, r5
 80059e4:	f001 f912 	bl	8006c0c <__multadd>
 80059e8:	4601      	mov	r1, r0
 80059ea:	4604      	mov	r4, r0
 80059ec:	4650      	mov	r0, sl
 80059ee:	f001 fb6f 	bl	80070d0 <__mcmp>
 80059f2:	2800      	cmp	r0, #0
 80059f4:	f73f adbf 	bgt.w	8005576 <_dtoa_r+0x4be>
 80059f8:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80059fa:	9f03      	ldr	r7, [sp, #12]
 80059fc:	ea6f 0b03 	mvn.w	fp, r3
 8005a00:	f04f 0800 	mov.w	r8, #0
 8005a04:	4621      	mov	r1, r4
 8005a06:	4628      	mov	r0, r5
 8005a08:	f001 f8de 	bl	8006bc8 <_Bfree>
 8005a0c:	2e00      	cmp	r6, #0
 8005a0e:	f43f aead 	beq.w	800576c <_dtoa_r+0x6b4>
 8005a12:	f1b8 0f00 	cmp.w	r8, #0
 8005a16:	d005      	beq.n	8005a24 <_dtoa_r+0x96c>
 8005a18:	45b0      	cmp	r8, r6
 8005a1a:	d003      	beq.n	8005a24 <_dtoa_r+0x96c>
 8005a1c:	4641      	mov	r1, r8
 8005a1e:	4628      	mov	r0, r5
 8005a20:	f001 f8d2 	bl	8006bc8 <_Bfree>
 8005a24:	4631      	mov	r1, r6
 8005a26:	4628      	mov	r0, r5
 8005a28:	f001 f8ce 	bl	8006bc8 <_Bfree>
 8005a2c:	e69e      	b.n	800576c <_dtoa_r+0x6b4>
 8005a2e:	2400      	movs	r4, #0
 8005a30:	4626      	mov	r6, r4
 8005a32:	e7e1      	b.n	80059f8 <_dtoa_r+0x940>
 8005a34:	46c3      	mov	fp, r8
 8005a36:	4626      	mov	r6, r4
 8005a38:	e59d      	b.n	8005576 <_dtoa_r+0x4be>
 8005a3a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8005a3c:	2b00      	cmp	r3, #0
 8005a3e:	f000 80c8 	beq.w	8005bd2 <_dtoa_r+0xb1a>
 8005a42:	9b08      	ldr	r3, [sp, #32]
 8005a44:	9306      	str	r3, [sp, #24]
 8005a46:	2f00      	cmp	r7, #0
 8005a48:	dd05      	ble.n	8005a56 <_dtoa_r+0x99e>
 8005a4a:	4631      	mov	r1, r6
 8005a4c:	463a      	mov	r2, r7
 8005a4e:	4628      	mov	r0, r5
 8005a50:	f001 fad2 	bl	8006ff8 <__lshift>
 8005a54:	4606      	mov	r6, r0
 8005a56:	f1b8 0f00 	cmp.w	r8, #0
 8005a5a:	d05b      	beq.n	8005b14 <_dtoa_r+0xa5c>
 8005a5c:	4628      	mov	r0, r5
 8005a5e:	6871      	ldr	r1, [r6, #4]
 8005a60:	f001 f872 	bl	8006b48 <_Balloc>
 8005a64:	4607      	mov	r7, r0
 8005a66:	b928      	cbnz	r0, 8005a74 <_dtoa_r+0x9bc>
 8005a68:	4602      	mov	r2, r0
 8005a6a:	f240 21ef 	movw	r1, #751	; 0x2ef
 8005a6e:	4b81      	ldr	r3, [pc, #516]	; (8005c74 <_dtoa_r+0xbbc>)
 8005a70:	f7ff bb36 	b.w	80050e0 <_dtoa_r+0x28>
 8005a74:	6932      	ldr	r2, [r6, #16]
 8005a76:	f106 010c 	add.w	r1, r6, #12
 8005a7a:	3202      	adds	r2, #2
 8005a7c:	0092      	lsls	r2, r2, #2
 8005a7e:	300c      	adds	r0, #12
 8005a80:	f7ff fa75 	bl	8004f6e <memcpy>
 8005a84:	2201      	movs	r2, #1
 8005a86:	4639      	mov	r1, r7
 8005a88:	4628      	mov	r0, r5
 8005a8a:	f001 fab5 	bl	8006ff8 <__lshift>
 8005a8e:	46b0      	mov	r8, r6
 8005a90:	4606      	mov	r6, r0
 8005a92:	9b03      	ldr	r3, [sp, #12]
 8005a94:	9a03      	ldr	r2, [sp, #12]
 8005a96:	3301      	adds	r3, #1
 8005a98:	9308      	str	r3, [sp, #32]
 8005a9a:	9b06      	ldr	r3, [sp, #24]
 8005a9c:	4413      	add	r3, r2
 8005a9e:	930b      	str	r3, [sp, #44]	; 0x2c
 8005aa0:	9b04      	ldr	r3, [sp, #16]
 8005aa2:	f003 0301 	and.w	r3, r3, #1
 8005aa6:	930a      	str	r3, [sp, #40]	; 0x28
 8005aa8:	9b08      	ldr	r3, [sp, #32]
 8005aaa:	4621      	mov	r1, r4
 8005aac:	3b01      	subs	r3, #1
 8005aae:	4650      	mov	r0, sl
 8005ab0:	9304      	str	r3, [sp, #16]
 8005ab2:	f7ff fa75 	bl	8004fa0 <quorem>
 8005ab6:	4641      	mov	r1, r8
 8005ab8:	9006      	str	r0, [sp, #24]
 8005aba:	f100 0930 	add.w	r9, r0, #48	; 0x30
 8005abe:	4650      	mov	r0, sl
 8005ac0:	f001 fb06 	bl	80070d0 <__mcmp>
 8005ac4:	4632      	mov	r2, r6
 8005ac6:	9009      	str	r0, [sp, #36]	; 0x24
 8005ac8:	4621      	mov	r1, r4
 8005aca:	4628      	mov	r0, r5
 8005acc:	f001 fb1c 	bl	8007108 <__mdiff>
 8005ad0:	68c2      	ldr	r2, [r0, #12]
 8005ad2:	4607      	mov	r7, r0
 8005ad4:	bb02      	cbnz	r2, 8005b18 <_dtoa_r+0xa60>
 8005ad6:	4601      	mov	r1, r0
 8005ad8:	4650      	mov	r0, sl
 8005ada:	f001 faf9 	bl	80070d0 <__mcmp>
 8005ade:	4602      	mov	r2, r0
 8005ae0:	4639      	mov	r1, r7
 8005ae2:	4628      	mov	r0, r5
 8005ae4:	920c      	str	r2, [sp, #48]	; 0x30
 8005ae6:	f001 f86f 	bl	8006bc8 <_Bfree>
 8005aea:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8005aec:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8005aee:	9f08      	ldr	r7, [sp, #32]
 8005af0:	ea43 0102 	orr.w	r1, r3, r2
 8005af4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005af6:	4319      	orrs	r1, r3
 8005af8:	d110      	bne.n	8005b1c <_dtoa_r+0xa64>
 8005afa:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 8005afe:	d029      	beq.n	8005b54 <_dtoa_r+0xa9c>
 8005b00:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005b02:	2b00      	cmp	r3, #0
 8005b04:	dd02      	ble.n	8005b0c <_dtoa_r+0xa54>
 8005b06:	9b06      	ldr	r3, [sp, #24]
 8005b08:	f103 0931 	add.w	r9, r3, #49	; 0x31
 8005b0c:	9b04      	ldr	r3, [sp, #16]
 8005b0e:	f883 9000 	strb.w	r9, [r3]
 8005b12:	e777      	b.n	8005a04 <_dtoa_r+0x94c>
 8005b14:	4630      	mov	r0, r6
 8005b16:	e7ba      	b.n	8005a8e <_dtoa_r+0x9d6>
 8005b18:	2201      	movs	r2, #1
 8005b1a:	e7e1      	b.n	8005ae0 <_dtoa_r+0xa28>
 8005b1c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005b1e:	2b00      	cmp	r3, #0
 8005b20:	db04      	blt.n	8005b2c <_dtoa_r+0xa74>
 8005b22:	9922      	ldr	r1, [sp, #136]	; 0x88
 8005b24:	430b      	orrs	r3, r1
 8005b26:	990a      	ldr	r1, [sp, #40]	; 0x28
 8005b28:	430b      	orrs	r3, r1
 8005b2a:	d120      	bne.n	8005b6e <_dtoa_r+0xab6>
 8005b2c:	2a00      	cmp	r2, #0
 8005b2e:	dded      	ble.n	8005b0c <_dtoa_r+0xa54>
 8005b30:	4651      	mov	r1, sl
 8005b32:	2201      	movs	r2, #1
 8005b34:	4628      	mov	r0, r5
 8005b36:	f001 fa5f 	bl	8006ff8 <__lshift>
 8005b3a:	4621      	mov	r1, r4
 8005b3c:	4682      	mov	sl, r0
 8005b3e:	f001 fac7 	bl	80070d0 <__mcmp>
 8005b42:	2800      	cmp	r0, #0
 8005b44:	dc03      	bgt.n	8005b4e <_dtoa_r+0xa96>
 8005b46:	d1e1      	bne.n	8005b0c <_dtoa_r+0xa54>
 8005b48:	f019 0f01 	tst.w	r9, #1
 8005b4c:	d0de      	beq.n	8005b0c <_dtoa_r+0xa54>
 8005b4e:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 8005b52:	d1d8      	bne.n	8005b06 <_dtoa_r+0xa4e>
 8005b54:	2339      	movs	r3, #57	; 0x39
 8005b56:	9a04      	ldr	r2, [sp, #16]
 8005b58:	7013      	strb	r3, [r2, #0]
 8005b5a:	463b      	mov	r3, r7
 8005b5c:	461f      	mov	r7, r3
 8005b5e:	f817 2c01 	ldrb.w	r2, [r7, #-1]
 8005b62:	3b01      	subs	r3, #1
 8005b64:	2a39      	cmp	r2, #57	; 0x39
 8005b66:	d06b      	beq.n	8005c40 <_dtoa_r+0xb88>
 8005b68:	3201      	adds	r2, #1
 8005b6a:	701a      	strb	r2, [r3, #0]
 8005b6c:	e74a      	b.n	8005a04 <_dtoa_r+0x94c>
 8005b6e:	2a00      	cmp	r2, #0
 8005b70:	dd07      	ble.n	8005b82 <_dtoa_r+0xaca>
 8005b72:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 8005b76:	d0ed      	beq.n	8005b54 <_dtoa_r+0xa9c>
 8005b78:	9a04      	ldr	r2, [sp, #16]
 8005b7a:	f109 0301 	add.w	r3, r9, #1
 8005b7e:	7013      	strb	r3, [r2, #0]
 8005b80:	e740      	b.n	8005a04 <_dtoa_r+0x94c>
 8005b82:	9b08      	ldr	r3, [sp, #32]
 8005b84:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8005b86:	f803 9c01 	strb.w	r9, [r3, #-1]
 8005b8a:	4293      	cmp	r3, r2
 8005b8c:	d042      	beq.n	8005c14 <_dtoa_r+0xb5c>
 8005b8e:	4651      	mov	r1, sl
 8005b90:	2300      	movs	r3, #0
 8005b92:	220a      	movs	r2, #10
 8005b94:	4628      	mov	r0, r5
 8005b96:	f001 f839 	bl	8006c0c <__multadd>
 8005b9a:	45b0      	cmp	r8, r6
 8005b9c:	4682      	mov	sl, r0
 8005b9e:	f04f 0300 	mov.w	r3, #0
 8005ba2:	f04f 020a 	mov.w	r2, #10
 8005ba6:	4641      	mov	r1, r8
 8005ba8:	4628      	mov	r0, r5
 8005baa:	d107      	bne.n	8005bbc <_dtoa_r+0xb04>
 8005bac:	f001 f82e 	bl	8006c0c <__multadd>
 8005bb0:	4680      	mov	r8, r0
 8005bb2:	4606      	mov	r6, r0
 8005bb4:	9b08      	ldr	r3, [sp, #32]
 8005bb6:	3301      	adds	r3, #1
 8005bb8:	9308      	str	r3, [sp, #32]
 8005bba:	e775      	b.n	8005aa8 <_dtoa_r+0x9f0>
 8005bbc:	f001 f826 	bl	8006c0c <__multadd>
 8005bc0:	4631      	mov	r1, r6
 8005bc2:	4680      	mov	r8, r0
 8005bc4:	2300      	movs	r3, #0
 8005bc6:	220a      	movs	r2, #10
 8005bc8:	4628      	mov	r0, r5
 8005bca:	f001 f81f 	bl	8006c0c <__multadd>
 8005bce:	4606      	mov	r6, r0
 8005bd0:	e7f0      	b.n	8005bb4 <_dtoa_r+0xafc>
 8005bd2:	9b08      	ldr	r3, [sp, #32]
 8005bd4:	9306      	str	r3, [sp, #24]
 8005bd6:	9f03      	ldr	r7, [sp, #12]
 8005bd8:	4621      	mov	r1, r4
 8005bda:	4650      	mov	r0, sl
 8005bdc:	f7ff f9e0 	bl	8004fa0 <quorem>
 8005be0:	9b03      	ldr	r3, [sp, #12]
 8005be2:	f100 0930 	add.w	r9, r0, #48	; 0x30
 8005be6:	f807 9b01 	strb.w	r9, [r7], #1
 8005bea:	1afa      	subs	r2, r7, r3
 8005bec:	9b06      	ldr	r3, [sp, #24]
 8005bee:	4293      	cmp	r3, r2
 8005bf0:	dd07      	ble.n	8005c02 <_dtoa_r+0xb4a>
 8005bf2:	4651      	mov	r1, sl
 8005bf4:	2300      	movs	r3, #0
 8005bf6:	220a      	movs	r2, #10
 8005bf8:	4628      	mov	r0, r5
 8005bfa:	f001 f807 	bl	8006c0c <__multadd>
 8005bfe:	4682      	mov	sl, r0
 8005c00:	e7ea      	b.n	8005bd8 <_dtoa_r+0xb20>
 8005c02:	9b06      	ldr	r3, [sp, #24]
 8005c04:	f04f 0800 	mov.w	r8, #0
 8005c08:	2b00      	cmp	r3, #0
 8005c0a:	bfcc      	ite	gt
 8005c0c:	461f      	movgt	r7, r3
 8005c0e:	2701      	movle	r7, #1
 8005c10:	9b03      	ldr	r3, [sp, #12]
 8005c12:	441f      	add	r7, r3
 8005c14:	4651      	mov	r1, sl
 8005c16:	2201      	movs	r2, #1
 8005c18:	4628      	mov	r0, r5
 8005c1a:	f001 f9ed 	bl	8006ff8 <__lshift>
 8005c1e:	4621      	mov	r1, r4
 8005c20:	4682      	mov	sl, r0
 8005c22:	f001 fa55 	bl	80070d0 <__mcmp>
 8005c26:	2800      	cmp	r0, #0
 8005c28:	dc97      	bgt.n	8005b5a <_dtoa_r+0xaa2>
 8005c2a:	d102      	bne.n	8005c32 <_dtoa_r+0xb7a>
 8005c2c:	f019 0f01 	tst.w	r9, #1
 8005c30:	d193      	bne.n	8005b5a <_dtoa_r+0xaa2>
 8005c32:	463b      	mov	r3, r7
 8005c34:	461f      	mov	r7, r3
 8005c36:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8005c3a:	2a30      	cmp	r2, #48	; 0x30
 8005c3c:	d0fa      	beq.n	8005c34 <_dtoa_r+0xb7c>
 8005c3e:	e6e1      	b.n	8005a04 <_dtoa_r+0x94c>
 8005c40:	9a03      	ldr	r2, [sp, #12]
 8005c42:	429a      	cmp	r2, r3
 8005c44:	d18a      	bne.n	8005b5c <_dtoa_r+0xaa4>
 8005c46:	2331      	movs	r3, #49	; 0x31
 8005c48:	f10b 0b01 	add.w	fp, fp, #1
 8005c4c:	e797      	b.n	8005b7e <_dtoa_r+0xac6>
 8005c4e:	4b0a      	ldr	r3, [pc, #40]	; (8005c78 <_dtoa_r+0xbc0>)
 8005c50:	f7ff ba9f 	b.w	8005192 <_dtoa_r+0xda>
 8005c54:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8005c56:	2b00      	cmp	r3, #0
 8005c58:	f47f aa77 	bne.w	800514a <_dtoa_r+0x92>
 8005c5c:	4b07      	ldr	r3, [pc, #28]	; (8005c7c <_dtoa_r+0xbc4>)
 8005c5e:	f7ff ba98 	b.w	8005192 <_dtoa_r+0xda>
 8005c62:	9b06      	ldr	r3, [sp, #24]
 8005c64:	2b00      	cmp	r3, #0
 8005c66:	dcb6      	bgt.n	8005bd6 <_dtoa_r+0xb1e>
 8005c68:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8005c6a:	2b02      	cmp	r3, #2
 8005c6c:	f73f aeb5 	bgt.w	80059da <_dtoa_r+0x922>
 8005c70:	e7b1      	b.n	8005bd6 <_dtoa_r+0xb1e>
 8005c72:	bf00      	nop
 8005c74:	08009635 	.word	0x08009635
 8005c78:	08009430 	.word	0x08009430
 8005c7c:	080095b9 	.word	0x080095b9

08005c80 <rshift>:
 8005c80:	6903      	ldr	r3, [r0, #16]
 8005c82:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8005c86:	ebb3 1f61 	cmp.w	r3, r1, asr #5
 8005c8a:	f100 0414 	add.w	r4, r0, #20
 8005c8e:	ea4f 1261 	mov.w	r2, r1, asr #5
 8005c92:	dd46      	ble.n	8005d22 <rshift+0xa2>
 8005c94:	f011 011f 	ands.w	r1, r1, #31
 8005c98:	eb04 0683 	add.w	r6, r4, r3, lsl #2
 8005c9c:	eb04 0582 	add.w	r5, r4, r2, lsl #2
 8005ca0:	d10c      	bne.n	8005cbc <rshift+0x3c>
 8005ca2:	4629      	mov	r1, r5
 8005ca4:	f100 0710 	add.w	r7, r0, #16
 8005ca8:	42b1      	cmp	r1, r6
 8005caa:	d335      	bcc.n	8005d18 <rshift+0x98>
 8005cac:	1a9b      	subs	r3, r3, r2
 8005cae:	009b      	lsls	r3, r3, #2
 8005cb0:	1eea      	subs	r2, r5, #3
 8005cb2:	4296      	cmp	r6, r2
 8005cb4:	bf38      	it	cc
 8005cb6:	2300      	movcc	r3, #0
 8005cb8:	4423      	add	r3, r4
 8005cba:	e015      	b.n	8005ce8 <rshift+0x68>
 8005cbc:	46a1      	mov	r9, r4
 8005cbe:	f854 7022 	ldr.w	r7, [r4, r2, lsl #2]
 8005cc2:	f1c1 0820 	rsb	r8, r1, #32
 8005cc6:	40cf      	lsrs	r7, r1
 8005cc8:	f105 0e04 	add.w	lr, r5, #4
 8005ccc:	4576      	cmp	r6, lr
 8005cce:	46f4      	mov	ip, lr
 8005cd0:	d816      	bhi.n	8005d00 <rshift+0x80>
 8005cd2:	1a9a      	subs	r2, r3, r2
 8005cd4:	0092      	lsls	r2, r2, #2
 8005cd6:	3a04      	subs	r2, #4
 8005cd8:	3501      	adds	r5, #1
 8005cda:	42ae      	cmp	r6, r5
 8005cdc:	bf38      	it	cc
 8005cde:	2200      	movcc	r2, #0
 8005ce0:	18a3      	adds	r3, r4, r2
 8005ce2:	50a7      	str	r7, [r4, r2]
 8005ce4:	b107      	cbz	r7, 8005ce8 <rshift+0x68>
 8005ce6:	3304      	adds	r3, #4
 8005ce8:	42a3      	cmp	r3, r4
 8005cea:	eba3 0204 	sub.w	r2, r3, r4
 8005cee:	bf08      	it	eq
 8005cf0:	2300      	moveq	r3, #0
 8005cf2:	ea4f 02a2 	mov.w	r2, r2, asr #2
 8005cf6:	6102      	str	r2, [r0, #16]
 8005cf8:	bf08      	it	eq
 8005cfa:	6143      	streq	r3, [r0, #20]
 8005cfc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8005d00:	f8dc c000 	ldr.w	ip, [ip]
 8005d04:	fa0c fc08 	lsl.w	ip, ip, r8
 8005d08:	ea4c 0707 	orr.w	r7, ip, r7
 8005d0c:	f849 7b04 	str.w	r7, [r9], #4
 8005d10:	f85e 7b04 	ldr.w	r7, [lr], #4
 8005d14:	40cf      	lsrs	r7, r1
 8005d16:	e7d9      	b.n	8005ccc <rshift+0x4c>
 8005d18:	f851 cb04 	ldr.w	ip, [r1], #4
 8005d1c:	f847 cf04 	str.w	ip, [r7, #4]!
 8005d20:	e7c2      	b.n	8005ca8 <rshift+0x28>
 8005d22:	4623      	mov	r3, r4
 8005d24:	e7e0      	b.n	8005ce8 <rshift+0x68>

08005d26 <__hexdig_fun>:
 8005d26:	f1a0 0330 	sub.w	r3, r0, #48	; 0x30
 8005d2a:	2b09      	cmp	r3, #9
 8005d2c:	d802      	bhi.n	8005d34 <__hexdig_fun+0xe>
 8005d2e:	3820      	subs	r0, #32
 8005d30:	b2c0      	uxtb	r0, r0
 8005d32:	4770      	bx	lr
 8005d34:	f1a0 0361 	sub.w	r3, r0, #97	; 0x61
 8005d38:	2b05      	cmp	r3, #5
 8005d3a:	d801      	bhi.n	8005d40 <__hexdig_fun+0x1a>
 8005d3c:	3847      	subs	r0, #71	; 0x47
 8005d3e:	e7f7      	b.n	8005d30 <__hexdig_fun+0xa>
 8005d40:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
 8005d44:	2b05      	cmp	r3, #5
 8005d46:	d801      	bhi.n	8005d4c <__hexdig_fun+0x26>
 8005d48:	3827      	subs	r0, #39	; 0x27
 8005d4a:	e7f1      	b.n	8005d30 <__hexdig_fun+0xa>
 8005d4c:	2000      	movs	r0, #0
 8005d4e:	4770      	bx	lr

08005d50 <__gethex>:
 8005d50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005d54:	4681      	mov	r9, r0
 8005d56:	468a      	mov	sl, r1
 8005d58:	4617      	mov	r7, r2
 8005d5a:	680a      	ldr	r2, [r1, #0]
 8005d5c:	b085      	sub	sp, #20
 8005d5e:	f102 0b02 	add.w	fp, r2, #2
 8005d62:	f1c2 22ff 	rsb	r2, r2, #4278255360	; 0xff00ff00
 8005d66:	f502 027f 	add.w	r2, r2, #16711680	; 0xff0000
 8005d6a:	9302      	str	r3, [sp, #8]
 8005d6c:	32fe      	adds	r2, #254	; 0xfe
 8005d6e:	eb02 030b 	add.w	r3, r2, fp
 8005d72:	46d8      	mov	r8, fp
 8005d74:	f81b 0b01 	ldrb.w	r0, [fp], #1
 8005d78:	9301      	str	r3, [sp, #4]
 8005d7a:	2830      	cmp	r0, #48	; 0x30
 8005d7c:	d0f7      	beq.n	8005d6e <__gethex+0x1e>
 8005d7e:	f7ff ffd2 	bl	8005d26 <__hexdig_fun>
 8005d82:	4604      	mov	r4, r0
 8005d84:	2800      	cmp	r0, #0
 8005d86:	d138      	bne.n	8005dfa <__gethex+0xaa>
 8005d88:	2201      	movs	r2, #1
 8005d8a:	4640      	mov	r0, r8
 8005d8c:	49a7      	ldr	r1, [pc, #668]	; (800602c <__gethex+0x2dc>)
 8005d8e:	f7ff f895 	bl	8004ebc <strncmp>
 8005d92:	4606      	mov	r6, r0
 8005d94:	2800      	cmp	r0, #0
 8005d96:	d169      	bne.n	8005e6c <__gethex+0x11c>
 8005d98:	f898 0001 	ldrb.w	r0, [r8, #1]
 8005d9c:	465d      	mov	r5, fp
 8005d9e:	f7ff ffc2 	bl	8005d26 <__hexdig_fun>
 8005da2:	2800      	cmp	r0, #0
 8005da4:	d064      	beq.n	8005e70 <__gethex+0x120>
 8005da6:	465a      	mov	r2, fp
 8005da8:	7810      	ldrb	r0, [r2, #0]
 8005daa:	4690      	mov	r8, r2
 8005dac:	2830      	cmp	r0, #48	; 0x30
 8005dae:	f102 0201 	add.w	r2, r2, #1
 8005db2:	d0f9      	beq.n	8005da8 <__gethex+0x58>
 8005db4:	f7ff ffb7 	bl	8005d26 <__hexdig_fun>
 8005db8:	2301      	movs	r3, #1
 8005dba:	fab0 f480 	clz	r4, r0
 8005dbe:	465e      	mov	r6, fp
 8005dc0:	0964      	lsrs	r4, r4, #5
 8005dc2:	9301      	str	r3, [sp, #4]
 8005dc4:	4642      	mov	r2, r8
 8005dc6:	4615      	mov	r5, r2
 8005dc8:	7828      	ldrb	r0, [r5, #0]
 8005dca:	3201      	adds	r2, #1
 8005dcc:	f7ff ffab 	bl	8005d26 <__hexdig_fun>
 8005dd0:	2800      	cmp	r0, #0
 8005dd2:	d1f8      	bne.n	8005dc6 <__gethex+0x76>
 8005dd4:	2201      	movs	r2, #1
 8005dd6:	4628      	mov	r0, r5
 8005dd8:	4994      	ldr	r1, [pc, #592]	; (800602c <__gethex+0x2dc>)
 8005dda:	f7ff f86f 	bl	8004ebc <strncmp>
 8005dde:	b978      	cbnz	r0, 8005e00 <__gethex+0xb0>
 8005de0:	b946      	cbnz	r6, 8005df4 <__gethex+0xa4>
 8005de2:	1c6e      	adds	r6, r5, #1
 8005de4:	4632      	mov	r2, r6
 8005de6:	4615      	mov	r5, r2
 8005de8:	7828      	ldrb	r0, [r5, #0]
 8005dea:	3201      	adds	r2, #1
 8005dec:	f7ff ff9b 	bl	8005d26 <__hexdig_fun>
 8005df0:	2800      	cmp	r0, #0
 8005df2:	d1f8      	bne.n	8005de6 <__gethex+0x96>
 8005df4:	1b73      	subs	r3, r6, r5
 8005df6:	009e      	lsls	r6, r3, #2
 8005df8:	e004      	b.n	8005e04 <__gethex+0xb4>
 8005dfa:	2400      	movs	r4, #0
 8005dfc:	4626      	mov	r6, r4
 8005dfe:	e7e1      	b.n	8005dc4 <__gethex+0x74>
 8005e00:	2e00      	cmp	r6, #0
 8005e02:	d1f7      	bne.n	8005df4 <__gethex+0xa4>
 8005e04:	782b      	ldrb	r3, [r5, #0]
 8005e06:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 8005e0a:	2b50      	cmp	r3, #80	; 0x50
 8005e0c:	d13d      	bne.n	8005e8a <__gethex+0x13a>
 8005e0e:	786b      	ldrb	r3, [r5, #1]
 8005e10:	2b2b      	cmp	r3, #43	; 0x2b
 8005e12:	d02f      	beq.n	8005e74 <__gethex+0x124>
 8005e14:	2b2d      	cmp	r3, #45	; 0x2d
 8005e16:	d031      	beq.n	8005e7c <__gethex+0x12c>
 8005e18:	f04f 0b00 	mov.w	fp, #0
 8005e1c:	1c69      	adds	r1, r5, #1
 8005e1e:	7808      	ldrb	r0, [r1, #0]
 8005e20:	f7ff ff81 	bl	8005d26 <__hexdig_fun>
 8005e24:	1e42      	subs	r2, r0, #1
 8005e26:	b2d2      	uxtb	r2, r2
 8005e28:	2a18      	cmp	r2, #24
 8005e2a:	d82e      	bhi.n	8005e8a <__gethex+0x13a>
 8005e2c:	f1a0 0210 	sub.w	r2, r0, #16
 8005e30:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 8005e34:	f7ff ff77 	bl	8005d26 <__hexdig_fun>
 8005e38:	f100 3cff 	add.w	ip, r0, #4294967295	; 0xffffffff
 8005e3c:	fa5f fc8c 	uxtb.w	ip, ip
 8005e40:	f1bc 0f18 	cmp.w	ip, #24
 8005e44:	d91d      	bls.n	8005e82 <__gethex+0x132>
 8005e46:	f1bb 0f00 	cmp.w	fp, #0
 8005e4a:	d000      	beq.n	8005e4e <__gethex+0xfe>
 8005e4c:	4252      	negs	r2, r2
 8005e4e:	4416      	add	r6, r2
 8005e50:	f8ca 1000 	str.w	r1, [sl]
 8005e54:	b1dc      	cbz	r4, 8005e8e <__gethex+0x13e>
 8005e56:	9b01      	ldr	r3, [sp, #4]
 8005e58:	2b00      	cmp	r3, #0
 8005e5a:	bf14      	ite	ne
 8005e5c:	f04f 0800 	movne.w	r8, #0
 8005e60:	f04f 0806 	moveq.w	r8, #6
 8005e64:	4640      	mov	r0, r8
 8005e66:	b005      	add	sp, #20
 8005e68:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005e6c:	4645      	mov	r5, r8
 8005e6e:	4626      	mov	r6, r4
 8005e70:	2401      	movs	r4, #1
 8005e72:	e7c7      	b.n	8005e04 <__gethex+0xb4>
 8005e74:	f04f 0b00 	mov.w	fp, #0
 8005e78:	1ca9      	adds	r1, r5, #2
 8005e7a:	e7d0      	b.n	8005e1e <__gethex+0xce>
 8005e7c:	f04f 0b01 	mov.w	fp, #1
 8005e80:	e7fa      	b.n	8005e78 <__gethex+0x128>
 8005e82:	230a      	movs	r3, #10
 8005e84:	fb03 0002 	mla	r0, r3, r2, r0
 8005e88:	e7d0      	b.n	8005e2c <__gethex+0xdc>
 8005e8a:	4629      	mov	r1, r5
 8005e8c:	e7e0      	b.n	8005e50 <__gethex+0x100>
 8005e8e:	4621      	mov	r1, r4
 8005e90:	eba5 0308 	sub.w	r3, r5, r8
 8005e94:	3b01      	subs	r3, #1
 8005e96:	2b07      	cmp	r3, #7
 8005e98:	dc0a      	bgt.n	8005eb0 <__gethex+0x160>
 8005e9a:	4648      	mov	r0, r9
 8005e9c:	f000 fe54 	bl	8006b48 <_Balloc>
 8005ea0:	4604      	mov	r4, r0
 8005ea2:	b940      	cbnz	r0, 8005eb6 <__gethex+0x166>
 8005ea4:	4602      	mov	r2, r0
 8005ea6:	21e4      	movs	r1, #228	; 0xe4
 8005ea8:	4b61      	ldr	r3, [pc, #388]	; (8006030 <__gethex+0x2e0>)
 8005eaa:	4862      	ldr	r0, [pc, #392]	; (8006034 <__gethex+0x2e4>)
 8005eac:	f001 fcf0 	bl	8007890 <__assert_func>
 8005eb0:	3101      	adds	r1, #1
 8005eb2:	105b      	asrs	r3, r3, #1
 8005eb4:	e7ef      	b.n	8005e96 <__gethex+0x146>
 8005eb6:	2300      	movs	r3, #0
 8005eb8:	469b      	mov	fp, r3
 8005eba:	f100 0a14 	add.w	sl, r0, #20
 8005ebe:	f8cd a004 	str.w	sl, [sp, #4]
 8005ec2:	45a8      	cmp	r8, r5
 8005ec4:	d344      	bcc.n	8005f50 <__gethex+0x200>
 8005ec6:	f8dd 8004 	ldr.w	r8, [sp, #4]
 8005eca:	4658      	mov	r0, fp
 8005ecc:	f848 bb04 	str.w	fp, [r8], #4
 8005ed0:	eba8 080a 	sub.w	r8, r8, sl
 8005ed4:	ea4f 02a8 	mov.w	r2, r8, asr #2
 8005ed8:	6122      	str	r2, [r4, #16]
 8005eda:	ea4f 1842 	mov.w	r8, r2, lsl #5
 8005ede:	f000 ff25 	bl	8006d2c <__hi0bits>
 8005ee2:	683d      	ldr	r5, [r7, #0]
 8005ee4:	eba8 0800 	sub.w	r8, r8, r0
 8005ee8:	45a8      	cmp	r8, r5
 8005eea:	dd59      	ble.n	8005fa0 <__gethex+0x250>
 8005eec:	eba8 0805 	sub.w	r8, r8, r5
 8005ef0:	4641      	mov	r1, r8
 8005ef2:	4620      	mov	r0, r4
 8005ef4:	f001 faa3 	bl	800743e <__any_on>
 8005ef8:	4683      	mov	fp, r0
 8005efa:	b1b8      	cbz	r0, 8005f2c <__gethex+0x1dc>
 8005efc:	f04f 0b01 	mov.w	fp, #1
 8005f00:	f108 33ff 	add.w	r3, r8, #4294967295	; 0xffffffff
 8005f04:	1159      	asrs	r1, r3, #5
 8005f06:	f85a 1021 	ldr.w	r1, [sl, r1, lsl #2]
 8005f0a:	f003 021f 	and.w	r2, r3, #31
 8005f0e:	fa0b f202 	lsl.w	r2, fp, r2
 8005f12:	420a      	tst	r2, r1
 8005f14:	d00a      	beq.n	8005f2c <__gethex+0x1dc>
 8005f16:	455b      	cmp	r3, fp
 8005f18:	dd06      	ble.n	8005f28 <__gethex+0x1d8>
 8005f1a:	4620      	mov	r0, r4
 8005f1c:	f1a8 0102 	sub.w	r1, r8, #2
 8005f20:	f001 fa8d 	bl	800743e <__any_on>
 8005f24:	2800      	cmp	r0, #0
 8005f26:	d138      	bne.n	8005f9a <__gethex+0x24a>
 8005f28:	f04f 0b02 	mov.w	fp, #2
 8005f2c:	4641      	mov	r1, r8
 8005f2e:	4620      	mov	r0, r4
 8005f30:	f7ff fea6 	bl	8005c80 <rshift>
 8005f34:	4446      	add	r6, r8
 8005f36:	68bb      	ldr	r3, [r7, #8]
 8005f38:	42b3      	cmp	r3, r6
 8005f3a:	da41      	bge.n	8005fc0 <__gethex+0x270>
 8005f3c:	4621      	mov	r1, r4
 8005f3e:	4648      	mov	r0, r9
 8005f40:	f000 fe42 	bl	8006bc8 <_Bfree>
 8005f44:	2300      	movs	r3, #0
 8005f46:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8005f48:	f04f 08a3 	mov.w	r8, #163	; 0xa3
 8005f4c:	6013      	str	r3, [r2, #0]
 8005f4e:	e789      	b.n	8005e64 <__gethex+0x114>
 8005f50:	f815 2d01 	ldrb.w	r2, [r5, #-1]!
 8005f54:	2a2e      	cmp	r2, #46	; 0x2e
 8005f56:	d014      	beq.n	8005f82 <__gethex+0x232>
 8005f58:	2b20      	cmp	r3, #32
 8005f5a:	d106      	bne.n	8005f6a <__gethex+0x21a>
 8005f5c:	9b01      	ldr	r3, [sp, #4]
 8005f5e:	f843 bb04 	str.w	fp, [r3], #4
 8005f62:	f04f 0b00 	mov.w	fp, #0
 8005f66:	9301      	str	r3, [sp, #4]
 8005f68:	465b      	mov	r3, fp
 8005f6a:	7828      	ldrb	r0, [r5, #0]
 8005f6c:	9303      	str	r3, [sp, #12]
 8005f6e:	f7ff feda 	bl	8005d26 <__hexdig_fun>
 8005f72:	9b03      	ldr	r3, [sp, #12]
 8005f74:	f000 000f 	and.w	r0, r0, #15
 8005f78:	4098      	lsls	r0, r3
 8005f7a:	ea4b 0b00 	orr.w	fp, fp, r0
 8005f7e:	3304      	adds	r3, #4
 8005f80:	e79f      	b.n	8005ec2 <__gethex+0x172>
 8005f82:	45a8      	cmp	r8, r5
 8005f84:	d8e8      	bhi.n	8005f58 <__gethex+0x208>
 8005f86:	2201      	movs	r2, #1
 8005f88:	4628      	mov	r0, r5
 8005f8a:	4928      	ldr	r1, [pc, #160]	; (800602c <__gethex+0x2dc>)
 8005f8c:	9303      	str	r3, [sp, #12]
 8005f8e:	f7fe ff95 	bl	8004ebc <strncmp>
 8005f92:	9b03      	ldr	r3, [sp, #12]
 8005f94:	2800      	cmp	r0, #0
 8005f96:	d1df      	bne.n	8005f58 <__gethex+0x208>
 8005f98:	e793      	b.n	8005ec2 <__gethex+0x172>
 8005f9a:	f04f 0b03 	mov.w	fp, #3
 8005f9e:	e7c5      	b.n	8005f2c <__gethex+0x1dc>
 8005fa0:	da0b      	bge.n	8005fba <__gethex+0x26a>
 8005fa2:	eba5 0808 	sub.w	r8, r5, r8
 8005fa6:	4621      	mov	r1, r4
 8005fa8:	4642      	mov	r2, r8
 8005faa:	4648      	mov	r0, r9
 8005fac:	f001 f824 	bl	8006ff8 <__lshift>
 8005fb0:	4604      	mov	r4, r0
 8005fb2:	eba6 0608 	sub.w	r6, r6, r8
 8005fb6:	f100 0a14 	add.w	sl, r0, #20
 8005fba:	f04f 0b00 	mov.w	fp, #0
 8005fbe:	e7ba      	b.n	8005f36 <__gethex+0x1e6>
 8005fc0:	687b      	ldr	r3, [r7, #4]
 8005fc2:	42b3      	cmp	r3, r6
 8005fc4:	dd74      	ble.n	80060b0 <__gethex+0x360>
 8005fc6:	1b9e      	subs	r6, r3, r6
 8005fc8:	42b5      	cmp	r5, r6
 8005fca:	dc35      	bgt.n	8006038 <__gethex+0x2e8>
 8005fcc:	68fb      	ldr	r3, [r7, #12]
 8005fce:	2b02      	cmp	r3, #2
 8005fd0:	d023      	beq.n	800601a <__gethex+0x2ca>
 8005fd2:	2b03      	cmp	r3, #3
 8005fd4:	d025      	beq.n	8006022 <__gethex+0x2d2>
 8005fd6:	2b01      	cmp	r3, #1
 8005fd8:	d115      	bne.n	8006006 <__gethex+0x2b6>
 8005fda:	42b5      	cmp	r5, r6
 8005fdc:	d113      	bne.n	8006006 <__gethex+0x2b6>
 8005fde:	2d01      	cmp	r5, #1
 8005fe0:	d10b      	bne.n	8005ffa <__gethex+0x2aa>
 8005fe2:	687b      	ldr	r3, [r7, #4]
 8005fe4:	9a02      	ldr	r2, [sp, #8]
 8005fe6:	f04f 0862 	mov.w	r8, #98	; 0x62
 8005fea:	6013      	str	r3, [r2, #0]
 8005fec:	2301      	movs	r3, #1
 8005fee:	6123      	str	r3, [r4, #16]
 8005ff0:	f8ca 3000 	str.w	r3, [sl]
 8005ff4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8005ff6:	601c      	str	r4, [r3, #0]
 8005ff8:	e734      	b.n	8005e64 <__gethex+0x114>
 8005ffa:	4620      	mov	r0, r4
 8005ffc:	1e69      	subs	r1, r5, #1
 8005ffe:	f001 fa1e 	bl	800743e <__any_on>
 8006002:	2800      	cmp	r0, #0
 8006004:	d1ed      	bne.n	8005fe2 <__gethex+0x292>
 8006006:	4621      	mov	r1, r4
 8006008:	4648      	mov	r0, r9
 800600a:	f000 fddd 	bl	8006bc8 <_Bfree>
 800600e:	2300      	movs	r3, #0
 8006010:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8006012:	f04f 0850 	mov.w	r8, #80	; 0x50
 8006016:	6013      	str	r3, [r2, #0]
 8006018:	e724      	b.n	8005e64 <__gethex+0x114>
 800601a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800601c:	2b00      	cmp	r3, #0
 800601e:	d1f2      	bne.n	8006006 <__gethex+0x2b6>
 8006020:	e7df      	b.n	8005fe2 <__gethex+0x292>
 8006022:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8006024:	2b00      	cmp	r3, #0
 8006026:	d1dc      	bne.n	8005fe2 <__gethex+0x292>
 8006028:	e7ed      	b.n	8006006 <__gethex+0x2b6>
 800602a:	bf00      	nop
 800602c:	08009459 	.word	0x08009459
 8006030:	08009635 	.word	0x08009635
 8006034:	08009646 	.word	0x08009646
 8006038:	f106 38ff 	add.w	r8, r6, #4294967295	; 0xffffffff
 800603c:	f1bb 0f00 	cmp.w	fp, #0
 8006040:	d133      	bne.n	80060aa <__gethex+0x35a>
 8006042:	f1b8 0f00 	cmp.w	r8, #0
 8006046:	d004      	beq.n	8006052 <__gethex+0x302>
 8006048:	4641      	mov	r1, r8
 800604a:	4620      	mov	r0, r4
 800604c:	f001 f9f7 	bl	800743e <__any_on>
 8006050:	4683      	mov	fp, r0
 8006052:	2301      	movs	r3, #1
 8006054:	ea4f 1268 	mov.w	r2, r8, asr #5
 8006058:	f008 081f 	and.w	r8, r8, #31
 800605c:	fa03 f308 	lsl.w	r3, r3, r8
 8006060:	f04f 0802 	mov.w	r8, #2
 8006064:	f85a 2022 	ldr.w	r2, [sl, r2, lsl #2]
 8006068:	4631      	mov	r1, r6
 800606a:	4213      	tst	r3, r2
 800606c:	4620      	mov	r0, r4
 800606e:	bf18      	it	ne
 8006070:	f04b 0b02 	orrne.w	fp, fp, #2
 8006074:	1bad      	subs	r5, r5, r6
 8006076:	f7ff fe03 	bl	8005c80 <rshift>
 800607a:	687e      	ldr	r6, [r7, #4]
 800607c:	f1bb 0f00 	cmp.w	fp, #0
 8006080:	d04a      	beq.n	8006118 <__gethex+0x3c8>
 8006082:	68fb      	ldr	r3, [r7, #12]
 8006084:	2b02      	cmp	r3, #2
 8006086:	d016      	beq.n	80060b6 <__gethex+0x366>
 8006088:	2b03      	cmp	r3, #3
 800608a:	d018      	beq.n	80060be <__gethex+0x36e>
 800608c:	2b01      	cmp	r3, #1
 800608e:	d109      	bne.n	80060a4 <__gethex+0x354>
 8006090:	f01b 0f02 	tst.w	fp, #2
 8006094:	d006      	beq.n	80060a4 <__gethex+0x354>
 8006096:	f8da 3000 	ldr.w	r3, [sl]
 800609a:	ea4b 0b03 	orr.w	fp, fp, r3
 800609e:	f01b 0f01 	tst.w	fp, #1
 80060a2:	d10f      	bne.n	80060c4 <__gethex+0x374>
 80060a4:	f048 0810 	orr.w	r8, r8, #16
 80060a8:	e036      	b.n	8006118 <__gethex+0x3c8>
 80060aa:	f04f 0b01 	mov.w	fp, #1
 80060ae:	e7d0      	b.n	8006052 <__gethex+0x302>
 80060b0:	f04f 0801 	mov.w	r8, #1
 80060b4:	e7e2      	b.n	800607c <__gethex+0x32c>
 80060b6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80060b8:	f1c3 0301 	rsb	r3, r3, #1
 80060bc:	930f      	str	r3, [sp, #60]	; 0x3c
 80060be:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80060c0:	2b00      	cmp	r3, #0
 80060c2:	d0ef      	beq.n	80060a4 <__gethex+0x354>
 80060c4:	f8d4 b010 	ldr.w	fp, [r4, #16]
 80060c8:	f104 0214 	add.w	r2, r4, #20
 80060cc:	ea4f 038b 	mov.w	r3, fp, lsl #2
 80060d0:	9301      	str	r3, [sp, #4]
 80060d2:	2300      	movs	r3, #0
 80060d4:	eb02 008b 	add.w	r0, r2, fp, lsl #2
 80060d8:	4694      	mov	ip, r2
 80060da:	f852 1b04 	ldr.w	r1, [r2], #4
 80060de:	f1b1 3fff 	cmp.w	r1, #4294967295	; 0xffffffff
 80060e2:	d01e      	beq.n	8006122 <__gethex+0x3d2>
 80060e4:	3101      	adds	r1, #1
 80060e6:	f8cc 1000 	str.w	r1, [ip]
 80060ea:	f1b8 0f02 	cmp.w	r8, #2
 80060ee:	f104 0214 	add.w	r2, r4, #20
 80060f2:	d13d      	bne.n	8006170 <__gethex+0x420>
 80060f4:	683b      	ldr	r3, [r7, #0]
 80060f6:	3b01      	subs	r3, #1
 80060f8:	42ab      	cmp	r3, r5
 80060fa:	d10b      	bne.n	8006114 <__gethex+0x3c4>
 80060fc:	2301      	movs	r3, #1
 80060fe:	1169      	asrs	r1, r5, #5
 8006100:	f005 051f 	and.w	r5, r5, #31
 8006104:	fa03 f505 	lsl.w	r5, r3, r5
 8006108:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 800610c:	421d      	tst	r5, r3
 800610e:	bf18      	it	ne
 8006110:	f04f 0801 	movne.w	r8, #1
 8006114:	f048 0820 	orr.w	r8, r8, #32
 8006118:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800611a:	601c      	str	r4, [r3, #0]
 800611c:	9b02      	ldr	r3, [sp, #8]
 800611e:	601e      	str	r6, [r3, #0]
 8006120:	e6a0      	b.n	8005e64 <__gethex+0x114>
 8006122:	4290      	cmp	r0, r2
 8006124:	f842 3c04 	str.w	r3, [r2, #-4]
 8006128:	d8d6      	bhi.n	80060d8 <__gethex+0x388>
 800612a:	68a2      	ldr	r2, [r4, #8]
 800612c:	4593      	cmp	fp, r2
 800612e:	db17      	blt.n	8006160 <__gethex+0x410>
 8006130:	6861      	ldr	r1, [r4, #4]
 8006132:	4648      	mov	r0, r9
 8006134:	3101      	adds	r1, #1
 8006136:	f000 fd07 	bl	8006b48 <_Balloc>
 800613a:	4682      	mov	sl, r0
 800613c:	b918      	cbnz	r0, 8006146 <__gethex+0x3f6>
 800613e:	4602      	mov	r2, r0
 8006140:	2184      	movs	r1, #132	; 0x84
 8006142:	4b1a      	ldr	r3, [pc, #104]	; (80061ac <__gethex+0x45c>)
 8006144:	e6b1      	b.n	8005eaa <__gethex+0x15a>
 8006146:	6922      	ldr	r2, [r4, #16]
 8006148:	f104 010c 	add.w	r1, r4, #12
 800614c:	3202      	adds	r2, #2
 800614e:	0092      	lsls	r2, r2, #2
 8006150:	300c      	adds	r0, #12
 8006152:	f7fe ff0c 	bl	8004f6e <memcpy>
 8006156:	4621      	mov	r1, r4
 8006158:	4648      	mov	r0, r9
 800615a:	f000 fd35 	bl	8006bc8 <_Bfree>
 800615e:	4654      	mov	r4, sl
 8006160:	6922      	ldr	r2, [r4, #16]
 8006162:	1c51      	adds	r1, r2, #1
 8006164:	6121      	str	r1, [r4, #16]
 8006166:	2101      	movs	r1, #1
 8006168:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 800616c:	6151      	str	r1, [r2, #20]
 800616e:	e7bc      	b.n	80060ea <__gethex+0x39a>
 8006170:	6921      	ldr	r1, [r4, #16]
 8006172:	4559      	cmp	r1, fp
 8006174:	dd0b      	ble.n	800618e <__gethex+0x43e>
 8006176:	2101      	movs	r1, #1
 8006178:	4620      	mov	r0, r4
 800617a:	f7ff fd81 	bl	8005c80 <rshift>
 800617e:	68bb      	ldr	r3, [r7, #8]
 8006180:	3601      	adds	r6, #1
 8006182:	42b3      	cmp	r3, r6
 8006184:	f6ff aeda 	blt.w	8005f3c <__gethex+0x1ec>
 8006188:	f04f 0801 	mov.w	r8, #1
 800618c:	e7c2      	b.n	8006114 <__gethex+0x3c4>
 800618e:	f015 051f 	ands.w	r5, r5, #31
 8006192:	d0f9      	beq.n	8006188 <__gethex+0x438>
 8006194:	9b01      	ldr	r3, [sp, #4]
 8006196:	f1c5 0520 	rsb	r5, r5, #32
 800619a:	441a      	add	r2, r3
 800619c:	f852 0c04 	ldr.w	r0, [r2, #-4]
 80061a0:	f000 fdc4 	bl	8006d2c <__hi0bits>
 80061a4:	42a8      	cmp	r0, r5
 80061a6:	dbe6      	blt.n	8006176 <__gethex+0x426>
 80061a8:	e7ee      	b.n	8006188 <__gethex+0x438>
 80061aa:	bf00      	nop
 80061ac:	08009635 	.word	0x08009635

080061b0 <L_shift>:
 80061b0:	f1c2 0208 	rsb	r2, r2, #8
 80061b4:	0092      	lsls	r2, r2, #2
 80061b6:	b570      	push	{r4, r5, r6, lr}
 80061b8:	f1c2 0620 	rsb	r6, r2, #32
 80061bc:	6843      	ldr	r3, [r0, #4]
 80061be:	6804      	ldr	r4, [r0, #0]
 80061c0:	fa03 f506 	lsl.w	r5, r3, r6
 80061c4:	432c      	orrs	r4, r5
 80061c6:	40d3      	lsrs	r3, r2
 80061c8:	6004      	str	r4, [r0, #0]
 80061ca:	f840 3f04 	str.w	r3, [r0, #4]!
 80061ce:	4288      	cmp	r0, r1
 80061d0:	d3f4      	bcc.n	80061bc <L_shift+0xc>
 80061d2:	bd70      	pop	{r4, r5, r6, pc}

080061d4 <__match>:
 80061d4:	b530      	push	{r4, r5, lr}
 80061d6:	6803      	ldr	r3, [r0, #0]
 80061d8:	3301      	adds	r3, #1
 80061da:	f811 4b01 	ldrb.w	r4, [r1], #1
 80061de:	b914      	cbnz	r4, 80061e6 <__match+0x12>
 80061e0:	6003      	str	r3, [r0, #0]
 80061e2:	2001      	movs	r0, #1
 80061e4:	bd30      	pop	{r4, r5, pc}
 80061e6:	f813 2b01 	ldrb.w	r2, [r3], #1
 80061ea:	f1a2 0541 	sub.w	r5, r2, #65	; 0x41
 80061ee:	2d19      	cmp	r5, #25
 80061f0:	bf98      	it	ls
 80061f2:	3220      	addls	r2, #32
 80061f4:	42a2      	cmp	r2, r4
 80061f6:	d0f0      	beq.n	80061da <__match+0x6>
 80061f8:	2000      	movs	r0, #0
 80061fa:	e7f3      	b.n	80061e4 <__match+0x10>

080061fc <__hexnan>:
 80061fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006200:	2500      	movs	r5, #0
 8006202:	680b      	ldr	r3, [r1, #0]
 8006204:	4682      	mov	sl, r0
 8006206:	115e      	asrs	r6, r3, #5
 8006208:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 800620c:	f013 031f 	ands.w	r3, r3, #31
 8006210:	bf18      	it	ne
 8006212:	3604      	addne	r6, #4
 8006214:	1f37      	subs	r7, r6, #4
 8006216:	4690      	mov	r8, r2
 8006218:	46b9      	mov	r9, r7
 800621a:	463c      	mov	r4, r7
 800621c:	46ab      	mov	fp, r5
 800621e:	b087      	sub	sp, #28
 8006220:	6801      	ldr	r1, [r0, #0]
 8006222:	9301      	str	r3, [sp, #4]
 8006224:	f846 5c04 	str.w	r5, [r6, #-4]
 8006228:	9502      	str	r5, [sp, #8]
 800622a:	784a      	ldrb	r2, [r1, #1]
 800622c:	1c4b      	adds	r3, r1, #1
 800622e:	9303      	str	r3, [sp, #12]
 8006230:	b342      	cbz	r2, 8006284 <__hexnan+0x88>
 8006232:	4610      	mov	r0, r2
 8006234:	9105      	str	r1, [sp, #20]
 8006236:	9204      	str	r2, [sp, #16]
 8006238:	f7ff fd75 	bl	8005d26 <__hexdig_fun>
 800623c:	2800      	cmp	r0, #0
 800623e:	d14f      	bne.n	80062e0 <__hexnan+0xe4>
 8006240:	9a04      	ldr	r2, [sp, #16]
 8006242:	9905      	ldr	r1, [sp, #20]
 8006244:	2a20      	cmp	r2, #32
 8006246:	d818      	bhi.n	800627a <__hexnan+0x7e>
 8006248:	9b02      	ldr	r3, [sp, #8]
 800624a:	459b      	cmp	fp, r3
 800624c:	dd13      	ble.n	8006276 <__hexnan+0x7a>
 800624e:	454c      	cmp	r4, r9
 8006250:	d206      	bcs.n	8006260 <__hexnan+0x64>
 8006252:	2d07      	cmp	r5, #7
 8006254:	dc04      	bgt.n	8006260 <__hexnan+0x64>
 8006256:	462a      	mov	r2, r5
 8006258:	4649      	mov	r1, r9
 800625a:	4620      	mov	r0, r4
 800625c:	f7ff ffa8 	bl	80061b0 <L_shift>
 8006260:	4544      	cmp	r4, r8
 8006262:	d950      	bls.n	8006306 <__hexnan+0x10a>
 8006264:	2300      	movs	r3, #0
 8006266:	f1a4 0904 	sub.w	r9, r4, #4
 800626a:	f844 3c04 	str.w	r3, [r4, #-4]
 800626e:	461d      	mov	r5, r3
 8006270:	464c      	mov	r4, r9
 8006272:	f8cd b008 	str.w	fp, [sp, #8]
 8006276:	9903      	ldr	r1, [sp, #12]
 8006278:	e7d7      	b.n	800622a <__hexnan+0x2e>
 800627a:	2a29      	cmp	r2, #41	; 0x29
 800627c:	d155      	bne.n	800632a <__hexnan+0x12e>
 800627e:	3102      	adds	r1, #2
 8006280:	f8ca 1000 	str.w	r1, [sl]
 8006284:	f1bb 0f00 	cmp.w	fp, #0
 8006288:	d04f      	beq.n	800632a <__hexnan+0x12e>
 800628a:	454c      	cmp	r4, r9
 800628c:	d206      	bcs.n	800629c <__hexnan+0xa0>
 800628e:	2d07      	cmp	r5, #7
 8006290:	dc04      	bgt.n	800629c <__hexnan+0xa0>
 8006292:	462a      	mov	r2, r5
 8006294:	4649      	mov	r1, r9
 8006296:	4620      	mov	r0, r4
 8006298:	f7ff ff8a 	bl	80061b0 <L_shift>
 800629c:	4544      	cmp	r4, r8
 800629e:	d934      	bls.n	800630a <__hexnan+0x10e>
 80062a0:	4623      	mov	r3, r4
 80062a2:	f1a8 0204 	sub.w	r2, r8, #4
 80062a6:	f853 1b04 	ldr.w	r1, [r3], #4
 80062aa:	429f      	cmp	r7, r3
 80062ac:	f842 1f04 	str.w	r1, [r2, #4]!
 80062b0:	d2f9      	bcs.n	80062a6 <__hexnan+0xaa>
 80062b2:	1b3b      	subs	r3, r7, r4
 80062b4:	f023 0303 	bic.w	r3, r3, #3
 80062b8:	3304      	adds	r3, #4
 80062ba:	3e03      	subs	r6, #3
 80062bc:	3401      	adds	r4, #1
 80062be:	42a6      	cmp	r6, r4
 80062c0:	bf38      	it	cc
 80062c2:	2304      	movcc	r3, #4
 80062c4:	2200      	movs	r2, #0
 80062c6:	4443      	add	r3, r8
 80062c8:	f843 2b04 	str.w	r2, [r3], #4
 80062cc:	429f      	cmp	r7, r3
 80062ce:	d2fb      	bcs.n	80062c8 <__hexnan+0xcc>
 80062d0:	683b      	ldr	r3, [r7, #0]
 80062d2:	b91b      	cbnz	r3, 80062dc <__hexnan+0xe0>
 80062d4:	4547      	cmp	r7, r8
 80062d6:	d126      	bne.n	8006326 <__hexnan+0x12a>
 80062d8:	2301      	movs	r3, #1
 80062da:	603b      	str	r3, [r7, #0]
 80062dc:	2005      	movs	r0, #5
 80062de:	e025      	b.n	800632c <__hexnan+0x130>
 80062e0:	3501      	adds	r5, #1
 80062e2:	2d08      	cmp	r5, #8
 80062e4:	f10b 0b01 	add.w	fp, fp, #1
 80062e8:	dd06      	ble.n	80062f8 <__hexnan+0xfc>
 80062ea:	4544      	cmp	r4, r8
 80062ec:	d9c3      	bls.n	8006276 <__hexnan+0x7a>
 80062ee:	2300      	movs	r3, #0
 80062f0:	2501      	movs	r5, #1
 80062f2:	f844 3c04 	str.w	r3, [r4, #-4]
 80062f6:	3c04      	subs	r4, #4
 80062f8:	6822      	ldr	r2, [r4, #0]
 80062fa:	f000 000f 	and.w	r0, r0, #15
 80062fe:	ea40 1002 	orr.w	r0, r0, r2, lsl #4
 8006302:	6020      	str	r0, [r4, #0]
 8006304:	e7b7      	b.n	8006276 <__hexnan+0x7a>
 8006306:	2508      	movs	r5, #8
 8006308:	e7b5      	b.n	8006276 <__hexnan+0x7a>
 800630a:	9b01      	ldr	r3, [sp, #4]
 800630c:	2b00      	cmp	r3, #0
 800630e:	d0df      	beq.n	80062d0 <__hexnan+0xd4>
 8006310:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8006314:	f1c3 0320 	rsb	r3, r3, #32
 8006318:	40da      	lsrs	r2, r3
 800631a:	f856 3c04 	ldr.w	r3, [r6, #-4]
 800631e:	4013      	ands	r3, r2
 8006320:	f846 3c04 	str.w	r3, [r6, #-4]
 8006324:	e7d4      	b.n	80062d0 <__hexnan+0xd4>
 8006326:	3f04      	subs	r7, #4
 8006328:	e7d2      	b.n	80062d0 <__hexnan+0xd4>
 800632a:	2004      	movs	r0, #4
 800632c:	b007      	add	sp, #28
 800632e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08006332 <__ssputs_r>:
 8006332:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8006336:	461f      	mov	r7, r3
 8006338:	688e      	ldr	r6, [r1, #8]
 800633a:	4682      	mov	sl, r0
 800633c:	42be      	cmp	r6, r7
 800633e:	460c      	mov	r4, r1
 8006340:	4690      	mov	r8, r2
 8006342:	680b      	ldr	r3, [r1, #0]
 8006344:	d82c      	bhi.n	80063a0 <__ssputs_r+0x6e>
 8006346:	898a      	ldrh	r2, [r1, #12]
 8006348:	f412 6f90 	tst.w	r2, #1152	; 0x480
 800634c:	d026      	beq.n	800639c <__ssputs_r+0x6a>
 800634e:	6965      	ldr	r5, [r4, #20]
 8006350:	6909      	ldr	r1, [r1, #16]
 8006352:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8006356:	eba3 0901 	sub.w	r9, r3, r1
 800635a:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 800635e:	1c7b      	adds	r3, r7, #1
 8006360:	444b      	add	r3, r9
 8006362:	106d      	asrs	r5, r5, #1
 8006364:	429d      	cmp	r5, r3
 8006366:	bf38      	it	cc
 8006368:	461d      	movcc	r5, r3
 800636a:	0553      	lsls	r3, r2, #21
 800636c:	d527      	bpl.n	80063be <__ssputs_r+0x8c>
 800636e:	4629      	mov	r1, r5
 8006370:	f000 faa2 	bl	80068b8 <_malloc_r>
 8006374:	4606      	mov	r6, r0
 8006376:	b360      	cbz	r0, 80063d2 <__ssputs_r+0xa0>
 8006378:	464a      	mov	r2, r9
 800637a:	6921      	ldr	r1, [r4, #16]
 800637c:	f7fe fdf7 	bl	8004f6e <memcpy>
 8006380:	89a3      	ldrh	r3, [r4, #12]
 8006382:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 8006386:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800638a:	81a3      	strh	r3, [r4, #12]
 800638c:	6126      	str	r6, [r4, #16]
 800638e:	444e      	add	r6, r9
 8006390:	6026      	str	r6, [r4, #0]
 8006392:	463e      	mov	r6, r7
 8006394:	6165      	str	r5, [r4, #20]
 8006396:	eba5 0509 	sub.w	r5, r5, r9
 800639a:	60a5      	str	r5, [r4, #8]
 800639c:	42be      	cmp	r6, r7
 800639e:	d900      	bls.n	80063a2 <__ssputs_r+0x70>
 80063a0:	463e      	mov	r6, r7
 80063a2:	4632      	mov	r2, r6
 80063a4:	4641      	mov	r1, r8
 80063a6:	6820      	ldr	r0, [r4, #0]
 80063a8:	f001 f9e0 	bl	800776c <memmove>
 80063ac:	2000      	movs	r0, #0
 80063ae:	68a3      	ldr	r3, [r4, #8]
 80063b0:	1b9b      	subs	r3, r3, r6
 80063b2:	60a3      	str	r3, [r4, #8]
 80063b4:	6823      	ldr	r3, [r4, #0]
 80063b6:	4433      	add	r3, r6
 80063b8:	6023      	str	r3, [r4, #0]
 80063ba:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80063be:	462a      	mov	r2, r5
 80063c0:	f001 f8a1 	bl	8007506 <_realloc_r>
 80063c4:	4606      	mov	r6, r0
 80063c6:	2800      	cmp	r0, #0
 80063c8:	d1e0      	bne.n	800638c <__ssputs_r+0x5a>
 80063ca:	4650      	mov	r0, sl
 80063cc:	6921      	ldr	r1, [r4, #16]
 80063ce:	f001 fa91 	bl	80078f4 <_free_r>
 80063d2:	230c      	movs	r3, #12
 80063d4:	f8ca 3000 	str.w	r3, [sl]
 80063d8:	89a3      	ldrh	r3, [r4, #12]
 80063da:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80063de:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80063e2:	81a3      	strh	r3, [r4, #12]
 80063e4:	e7e9      	b.n	80063ba <__ssputs_r+0x88>
	...

080063e8 <_svfiprintf_r>:
 80063e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80063ec:	4698      	mov	r8, r3
 80063ee:	898b      	ldrh	r3, [r1, #12]
 80063f0:	4607      	mov	r7, r0
 80063f2:	061b      	lsls	r3, r3, #24
 80063f4:	460d      	mov	r5, r1
 80063f6:	4614      	mov	r4, r2
 80063f8:	b09d      	sub	sp, #116	; 0x74
 80063fa:	d50e      	bpl.n	800641a <_svfiprintf_r+0x32>
 80063fc:	690b      	ldr	r3, [r1, #16]
 80063fe:	b963      	cbnz	r3, 800641a <_svfiprintf_r+0x32>
 8006400:	2140      	movs	r1, #64	; 0x40
 8006402:	f000 fa59 	bl	80068b8 <_malloc_r>
 8006406:	6028      	str	r0, [r5, #0]
 8006408:	6128      	str	r0, [r5, #16]
 800640a:	b920      	cbnz	r0, 8006416 <_svfiprintf_r+0x2e>
 800640c:	230c      	movs	r3, #12
 800640e:	603b      	str	r3, [r7, #0]
 8006410:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8006414:	e0d0      	b.n	80065b8 <_svfiprintf_r+0x1d0>
 8006416:	2340      	movs	r3, #64	; 0x40
 8006418:	616b      	str	r3, [r5, #20]
 800641a:	2300      	movs	r3, #0
 800641c:	9309      	str	r3, [sp, #36]	; 0x24
 800641e:	2320      	movs	r3, #32
 8006420:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8006424:	2330      	movs	r3, #48	; 0x30
 8006426:	f04f 0901 	mov.w	r9, #1
 800642a:	f8cd 800c 	str.w	r8, [sp, #12]
 800642e:	f8df 81a0 	ldr.w	r8, [pc, #416]	; 80065d0 <_svfiprintf_r+0x1e8>
 8006432:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8006436:	4623      	mov	r3, r4
 8006438:	469a      	mov	sl, r3
 800643a:	f813 2b01 	ldrb.w	r2, [r3], #1
 800643e:	b10a      	cbz	r2, 8006444 <_svfiprintf_r+0x5c>
 8006440:	2a25      	cmp	r2, #37	; 0x25
 8006442:	d1f9      	bne.n	8006438 <_svfiprintf_r+0x50>
 8006444:	ebba 0b04 	subs.w	fp, sl, r4
 8006448:	d00b      	beq.n	8006462 <_svfiprintf_r+0x7a>
 800644a:	465b      	mov	r3, fp
 800644c:	4622      	mov	r2, r4
 800644e:	4629      	mov	r1, r5
 8006450:	4638      	mov	r0, r7
 8006452:	f7ff ff6e 	bl	8006332 <__ssputs_r>
 8006456:	3001      	adds	r0, #1
 8006458:	f000 80a9 	beq.w	80065ae <_svfiprintf_r+0x1c6>
 800645c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800645e:	445a      	add	r2, fp
 8006460:	9209      	str	r2, [sp, #36]	; 0x24
 8006462:	f89a 3000 	ldrb.w	r3, [sl]
 8006466:	2b00      	cmp	r3, #0
 8006468:	f000 80a1 	beq.w	80065ae <_svfiprintf_r+0x1c6>
 800646c:	2300      	movs	r3, #0
 800646e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8006472:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8006476:	f10a 0a01 	add.w	sl, sl, #1
 800647a:	9304      	str	r3, [sp, #16]
 800647c:	9307      	str	r3, [sp, #28]
 800647e:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8006482:	931a      	str	r3, [sp, #104]	; 0x68
 8006484:	4654      	mov	r4, sl
 8006486:	2205      	movs	r2, #5
 8006488:	f814 1b01 	ldrb.w	r1, [r4], #1
 800648c:	4850      	ldr	r0, [pc, #320]	; (80065d0 <_svfiprintf_r+0x1e8>)
 800648e:	f7fe fd60 	bl	8004f52 <memchr>
 8006492:	9a04      	ldr	r2, [sp, #16]
 8006494:	b9d8      	cbnz	r0, 80064ce <_svfiprintf_r+0xe6>
 8006496:	06d0      	lsls	r0, r2, #27
 8006498:	bf44      	itt	mi
 800649a:	2320      	movmi	r3, #32
 800649c:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80064a0:	0711      	lsls	r1, r2, #28
 80064a2:	bf44      	itt	mi
 80064a4:	232b      	movmi	r3, #43	; 0x2b
 80064a6:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80064aa:	f89a 3000 	ldrb.w	r3, [sl]
 80064ae:	2b2a      	cmp	r3, #42	; 0x2a
 80064b0:	d015      	beq.n	80064de <_svfiprintf_r+0xf6>
 80064b2:	4654      	mov	r4, sl
 80064b4:	2000      	movs	r0, #0
 80064b6:	f04f 0c0a 	mov.w	ip, #10
 80064ba:	9a07      	ldr	r2, [sp, #28]
 80064bc:	4621      	mov	r1, r4
 80064be:	f811 3b01 	ldrb.w	r3, [r1], #1
 80064c2:	3b30      	subs	r3, #48	; 0x30
 80064c4:	2b09      	cmp	r3, #9
 80064c6:	d94d      	bls.n	8006564 <_svfiprintf_r+0x17c>
 80064c8:	b1b0      	cbz	r0, 80064f8 <_svfiprintf_r+0x110>
 80064ca:	9207      	str	r2, [sp, #28]
 80064cc:	e014      	b.n	80064f8 <_svfiprintf_r+0x110>
 80064ce:	eba0 0308 	sub.w	r3, r0, r8
 80064d2:	fa09 f303 	lsl.w	r3, r9, r3
 80064d6:	4313      	orrs	r3, r2
 80064d8:	46a2      	mov	sl, r4
 80064da:	9304      	str	r3, [sp, #16]
 80064dc:	e7d2      	b.n	8006484 <_svfiprintf_r+0x9c>
 80064de:	9b03      	ldr	r3, [sp, #12]
 80064e0:	1d19      	adds	r1, r3, #4
 80064e2:	681b      	ldr	r3, [r3, #0]
 80064e4:	9103      	str	r1, [sp, #12]
 80064e6:	2b00      	cmp	r3, #0
 80064e8:	bfbb      	ittet	lt
 80064ea:	425b      	neglt	r3, r3
 80064ec:	f042 0202 	orrlt.w	r2, r2, #2
 80064f0:	9307      	strge	r3, [sp, #28]
 80064f2:	9307      	strlt	r3, [sp, #28]
 80064f4:	bfb8      	it	lt
 80064f6:	9204      	strlt	r2, [sp, #16]
 80064f8:	7823      	ldrb	r3, [r4, #0]
 80064fa:	2b2e      	cmp	r3, #46	; 0x2e
 80064fc:	d10c      	bne.n	8006518 <_svfiprintf_r+0x130>
 80064fe:	7863      	ldrb	r3, [r4, #1]
 8006500:	2b2a      	cmp	r3, #42	; 0x2a
 8006502:	d134      	bne.n	800656e <_svfiprintf_r+0x186>
 8006504:	9b03      	ldr	r3, [sp, #12]
 8006506:	3402      	adds	r4, #2
 8006508:	1d1a      	adds	r2, r3, #4
 800650a:	681b      	ldr	r3, [r3, #0]
 800650c:	9203      	str	r2, [sp, #12]
 800650e:	2b00      	cmp	r3, #0
 8006510:	bfb8      	it	lt
 8006512:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 8006516:	9305      	str	r3, [sp, #20]
 8006518:	f8df a0b8 	ldr.w	sl, [pc, #184]	; 80065d4 <_svfiprintf_r+0x1ec>
 800651c:	2203      	movs	r2, #3
 800651e:	4650      	mov	r0, sl
 8006520:	7821      	ldrb	r1, [r4, #0]
 8006522:	f7fe fd16 	bl	8004f52 <memchr>
 8006526:	b138      	cbz	r0, 8006538 <_svfiprintf_r+0x150>
 8006528:	2240      	movs	r2, #64	; 0x40
 800652a:	9b04      	ldr	r3, [sp, #16]
 800652c:	eba0 000a 	sub.w	r0, r0, sl
 8006530:	4082      	lsls	r2, r0
 8006532:	4313      	orrs	r3, r2
 8006534:	3401      	adds	r4, #1
 8006536:	9304      	str	r3, [sp, #16]
 8006538:	f814 1b01 	ldrb.w	r1, [r4], #1
 800653c:	2206      	movs	r2, #6
 800653e:	4826      	ldr	r0, [pc, #152]	; (80065d8 <_svfiprintf_r+0x1f0>)
 8006540:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8006544:	f7fe fd05 	bl	8004f52 <memchr>
 8006548:	2800      	cmp	r0, #0
 800654a:	d038      	beq.n	80065be <_svfiprintf_r+0x1d6>
 800654c:	4b23      	ldr	r3, [pc, #140]	; (80065dc <_svfiprintf_r+0x1f4>)
 800654e:	bb1b      	cbnz	r3, 8006598 <_svfiprintf_r+0x1b0>
 8006550:	9b03      	ldr	r3, [sp, #12]
 8006552:	3307      	adds	r3, #7
 8006554:	f023 0307 	bic.w	r3, r3, #7
 8006558:	3308      	adds	r3, #8
 800655a:	9303      	str	r3, [sp, #12]
 800655c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800655e:	4433      	add	r3, r6
 8006560:	9309      	str	r3, [sp, #36]	; 0x24
 8006562:	e768      	b.n	8006436 <_svfiprintf_r+0x4e>
 8006564:	460c      	mov	r4, r1
 8006566:	2001      	movs	r0, #1
 8006568:	fb0c 3202 	mla	r2, ip, r2, r3
 800656c:	e7a6      	b.n	80064bc <_svfiprintf_r+0xd4>
 800656e:	2300      	movs	r3, #0
 8006570:	f04f 0c0a 	mov.w	ip, #10
 8006574:	4619      	mov	r1, r3
 8006576:	3401      	adds	r4, #1
 8006578:	9305      	str	r3, [sp, #20]
 800657a:	4620      	mov	r0, r4
 800657c:	f810 2b01 	ldrb.w	r2, [r0], #1
 8006580:	3a30      	subs	r2, #48	; 0x30
 8006582:	2a09      	cmp	r2, #9
 8006584:	d903      	bls.n	800658e <_svfiprintf_r+0x1a6>
 8006586:	2b00      	cmp	r3, #0
 8006588:	d0c6      	beq.n	8006518 <_svfiprintf_r+0x130>
 800658a:	9105      	str	r1, [sp, #20]
 800658c:	e7c4      	b.n	8006518 <_svfiprintf_r+0x130>
 800658e:	4604      	mov	r4, r0
 8006590:	2301      	movs	r3, #1
 8006592:	fb0c 2101 	mla	r1, ip, r1, r2
 8006596:	e7f0      	b.n	800657a <_svfiprintf_r+0x192>
 8006598:	ab03      	add	r3, sp, #12
 800659a:	9300      	str	r3, [sp, #0]
 800659c:	462a      	mov	r2, r5
 800659e:	4638      	mov	r0, r7
 80065a0:	4b0f      	ldr	r3, [pc, #60]	; (80065e0 <_svfiprintf_r+0x1f8>)
 80065a2:	a904      	add	r1, sp, #16
 80065a4:	f7fc ff28 	bl	80033f8 <_printf_float>
 80065a8:	1c42      	adds	r2, r0, #1
 80065aa:	4606      	mov	r6, r0
 80065ac:	d1d6      	bne.n	800655c <_svfiprintf_r+0x174>
 80065ae:	89ab      	ldrh	r3, [r5, #12]
 80065b0:	065b      	lsls	r3, r3, #25
 80065b2:	f53f af2d 	bmi.w	8006410 <_svfiprintf_r+0x28>
 80065b6:	9809      	ldr	r0, [sp, #36]	; 0x24
 80065b8:	b01d      	add	sp, #116	; 0x74
 80065ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80065be:	ab03      	add	r3, sp, #12
 80065c0:	9300      	str	r3, [sp, #0]
 80065c2:	462a      	mov	r2, r5
 80065c4:	4638      	mov	r0, r7
 80065c6:	4b06      	ldr	r3, [pc, #24]	; (80065e0 <_svfiprintf_r+0x1f8>)
 80065c8:	a904      	add	r1, sp, #16
 80065ca:	f7fd f9b5 	bl	8003938 <_printf_i>
 80065ce:	e7eb      	b.n	80065a8 <_svfiprintf_r+0x1c0>
 80065d0:	080096a6 	.word	0x080096a6
 80065d4:	080096ac 	.word	0x080096ac
 80065d8:	080096b0 	.word	0x080096b0
 80065dc:	080033f9 	.word	0x080033f9
 80065e0:	08006333 	.word	0x08006333

080065e4 <__sfputc_r>:
 80065e4:	6893      	ldr	r3, [r2, #8]
 80065e6:	b410      	push	{r4}
 80065e8:	3b01      	subs	r3, #1
 80065ea:	2b00      	cmp	r3, #0
 80065ec:	6093      	str	r3, [r2, #8]
 80065ee:	da07      	bge.n	8006600 <__sfputc_r+0x1c>
 80065f0:	6994      	ldr	r4, [r2, #24]
 80065f2:	42a3      	cmp	r3, r4
 80065f4:	db01      	blt.n	80065fa <__sfputc_r+0x16>
 80065f6:	290a      	cmp	r1, #10
 80065f8:	d102      	bne.n	8006600 <__sfputc_r+0x1c>
 80065fa:	bc10      	pop	{r4}
 80065fc:	f000 bfb2 	b.w	8007564 <__swbuf_r>
 8006600:	6813      	ldr	r3, [r2, #0]
 8006602:	1c58      	adds	r0, r3, #1
 8006604:	6010      	str	r0, [r2, #0]
 8006606:	7019      	strb	r1, [r3, #0]
 8006608:	4608      	mov	r0, r1
 800660a:	bc10      	pop	{r4}
 800660c:	4770      	bx	lr

0800660e <__sfputs_r>:
 800660e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006610:	4606      	mov	r6, r0
 8006612:	460f      	mov	r7, r1
 8006614:	4614      	mov	r4, r2
 8006616:	18d5      	adds	r5, r2, r3
 8006618:	42ac      	cmp	r4, r5
 800661a:	d101      	bne.n	8006620 <__sfputs_r+0x12>
 800661c:	2000      	movs	r0, #0
 800661e:	e007      	b.n	8006630 <__sfputs_r+0x22>
 8006620:	463a      	mov	r2, r7
 8006622:	4630      	mov	r0, r6
 8006624:	f814 1b01 	ldrb.w	r1, [r4], #1
 8006628:	f7ff ffdc 	bl	80065e4 <__sfputc_r>
 800662c:	1c43      	adds	r3, r0, #1
 800662e:	d1f3      	bne.n	8006618 <__sfputs_r+0xa>
 8006630:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08006634 <_vfiprintf_r>:
 8006634:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006638:	460d      	mov	r5, r1
 800663a:	4614      	mov	r4, r2
 800663c:	4698      	mov	r8, r3
 800663e:	4606      	mov	r6, r0
 8006640:	b09d      	sub	sp, #116	; 0x74
 8006642:	b118      	cbz	r0, 800664c <_vfiprintf_r+0x18>
 8006644:	6a03      	ldr	r3, [r0, #32]
 8006646:	b90b      	cbnz	r3, 800664c <_vfiprintf_r+0x18>
 8006648:	f7fd fd52 	bl	80040f0 <__sinit>
 800664c:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800664e:	07d9      	lsls	r1, r3, #31
 8006650:	d405      	bmi.n	800665e <_vfiprintf_r+0x2a>
 8006652:	89ab      	ldrh	r3, [r5, #12]
 8006654:	059a      	lsls	r2, r3, #22
 8006656:	d402      	bmi.n	800665e <_vfiprintf_r+0x2a>
 8006658:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800665a:	f7fe fc78 	bl	8004f4e <__retarget_lock_acquire_recursive>
 800665e:	89ab      	ldrh	r3, [r5, #12]
 8006660:	071b      	lsls	r3, r3, #28
 8006662:	d501      	bpl.n	8006668 <_vfiprintf_r+0x34>
 8006664:	692b      	ldr	r3, [r5, #16]
 8006666:	b99b      	cbnz	r3, 8006690 <_vfiprintf_r+0x5c>
 8006668:	4629      	mov	r1, r5
 800666a:	4630      	mov	r0, r6
 800666c:	f000 ffb8 	bl	80075e0 <__swsetup_r>
 8006670:	b170      	cbz	r0, 8006690 <_vfiprintf_r+0x5c>
 8006672:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8006674:	07dc      	lsls	r4, r3, #31
 8006676:	d504      	bpl.n	8006682 <_vfiprintf_r+0x4e>
 8006678:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800667c:	b01d      	add	sp, #116	; 0x74
 800667e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006682:	89ab      	ldrh	r3, [r5, #12]
 8006684:	0598      	lsls	r0, r3, #22
 8006686:	d4f7      	bmi.n	8006678 <_vfiprintf_r+0x44>
 8006688:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800668a:	f7fe fc61 	bl	8004f50 <__retarget_lock_release_recursive>
 800668e:	e7f3      	b.n	8006678 <_vfiprintf_r+0x44>
 8006690:	2300      	movs	r3, #0
 8006692:	9309      	str	r3, [sp, #36]	; 0x24
 8006694:	2320      	movs	r3, #32
 8006696:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800669a:	2330      	movs	r3, #48	; 0x30
 800669c:	f04f 0901 	mov.w	r9, #1
 80066a0:	f8cd 800c 	str.w	r8, [sp, #12]
 80066a4:	f8df 81ac 	ldr.w	r8, [pc, #428]	; 8006854 <_vfiprintf_r+0x220>
 80066a8:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 80066ac:	4623      	mov	r3, r4
 80066ae:	469a      	mov	sl, r3
 80066b0:	f813 2b01 	ldrb.w	r2, [r3], #1
 80066b4:	b10a      	cbz	r2, 80066ba <_vfiprintf_r+0x86>
 80066b6:	2a25      	cmp	r2, #37	; 0x25
 80066b8:	d1f9      	bne.n	80066ae <_vfiprintf_r+0x7a>
 80066ba:	ebba 0b04 	subs.w	fp, sl, r4
 80066be:	d00b      	beq.n	80066d8 <_vfiprintf_r+0xa4>
 80066c0:	465b      	mov	r3, fp
 80066c2:	4622      	mov	r2, r4
 80066c4:	4629      	mov	r1, r5
 80066c6:	4630      	mov	r0, r6
 80066c8:	f7ff ffa1 	bl	800660e <__sfputs_r>
 80066cc:	3001      	adds	r0, #1
 80066ce:	f000 80a9 	beq.w	8006824 <_vfiprintf_r+0x1f0>
 80066d2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80066d4:	445a      	add	r2, fp
 80066d6:	9209      	str	r2, [sp, #36]	; 0x24
 80066d8:	f89a 3000 	ldrb.w	r3, [sl]
 80066dc:	2b00      	cmp	r3, #0
 80066de:	f000 80a1 	beq.w	8006824 <_vfiprintf_r+0x1f0>
 80066e2:	2300      	movs	r3, #0
 80066e4:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 80066e8:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80066ec:	f10a 0a01 	add.w	sl, sl, #1
 80066f0:	9304      	str	r3, [sp, #16]
 80066f2:	9307      	str	r3, [sp, #28]
 80066f4:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80066f8:	931a      	str	r3, [sp, #104]	; 0x68
 80066fa:	4654      	mov	r4, sl
 80066fc:	2205      	movs	r2, #5
 80066fe:	f814 1b01 	ldrb.w	r1, [r4], #1
 8006702:	4854      	ldr	r0, [pc, #336]	; (8006854 <_vfiprintf_r+0x220>)
 8006704:	f7fe fc25 	bl	8004f52 <memchr>
 8006708:	9a04      	ldr	r2, [sp, #16]
 800670a:	b9d8      	cbnz	r0, 8006744 <_vfiprintf_r+0x110>
 800670c:	06d1      	lsls	r1, r2, #27
 800670e:	bf44      	itt	mi
 8006710:	2320      	movmi	r3, #32
 8006712:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8006716:	0713      	lsls	r3, r2, #28
 8006718:	bf44      	itt	mi
 800671a:	232b      	movmi	r3, #43	; 0x2b
 800671c:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8006720:	f89a 3000 	ldrb.w	r3, [sl]
 8006724:	2b2a      	cmp	r3, #42	; 0x2a
 8006726:	d015      	beq.n	8006754 <_vfiprintf_r+0x120>
 8006728:	4654      	mov	r4, sl
 800672a:	2000      	movs	r0, #0
 800672c:	f04f 0c0a 	mov.w	ip, #10
 8006730:	9a07      	ldr	r2, [sp, #28]
 8006732:	4621      	mov	r1, r4
 8006734:	f811 3b01 	ldrb.w	r3, [r1], #1
 8006738:	3b30      	subs	r3, #48	; 0x30
 800673a:	2b09      	cmp	r3, #9
 800673c:	d94d      	bls.n	80067da <_vfiprintf_r+0x1a6>
 800673e:	b1b0      	cbz	r0, 800676e <_vfiprintf_r+0x13a>
 8006740:	9207      	str	r2, [sp, #28]
 8006742:	e014      	b.n	800676e <_vfiprintf_r+0x13a>
 8006744:	eba0 0308 	sub.w	r3, r0, r8
 8006748:	fa09 f303 	lsl.w	r3, r9, r3
 800674c:	4313      	orrs	r3, r2
 800674e:	46a2      	mov	sl, r4
 8006750:	9304      	str	r3, [sp, #16]
 8006752:	e7d2      	b.n	80066fa <_vfiprintf_r+0xc6>
 8006754:	9b03      	ldr	r3, [sp, #12]
 8006756:	1d19      	adds	r1, r3, #4
 8006758:	681b      	ldr	r3, [r3, #0]
 800675a:	9103      	str	r1, [sp, #12]
 800675c:	2b00      	cmp	r3, #0
 800675e:	bfbb      	ittet	lt
 8006760:	425b      	neglt	r3, r3
 8006762:	f042 0202 	orrlt.w	r2, r2, #2
 8006766:	9307      	strge	r3, [sp, #28]
 8006768:	9307      	strlt	r3, [sp, #28]
 800676a:	bfb8      	it	lt
 800676c:	9204      	strlt	r2, [sp, #16]
 800676e:	7823      	ldrb	r3, [r4, #0]
 8006770:	2b2e      	cmp	r3, #46	; 0x2e
 8006772:	d10c      	bne.n	800678e <_vfiprintf_r+0x15a>
 8006774:	7863      	ldrb	r3, [r4, #1]
 8006776:	2b2a      	cmp	r3, #42	; 0x2a
 8006778:	d134      	bne.n	80067e4 <_vfiprintf_r+0x1b0>
 800677a:	9b03      	ldr	r3, [sp, #12]
 800677c:	3402      	adds	r4, #2
 800677e:	1d1a      	adds	r2, r3, #4
 8006780:	681b      	ldr	r3, [r3, #0]
 8006782:	9203      	str	r2, [sp, #12]
 8006784:	2b00      	cmp	r3, #0
 8006786:	bfb8      	it	lt
 8006788:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 800678c:	9305      	str	r3, [sp, #20]
 800678e:	f8df a0c8 	ldr.w	sl, [pc, #200]	; 8006858 <_vfiprintf_r+0x224>
 8006792:	2203      	movs	r2, #3
 8006794:	4650      	mov	r0, sl
 8006796:	7821      	ldrb	r1, [r4, #0]
 8006798:	f7fe fbdb 	bl	8004f52 <memchr>
 800679c:	b138      	cbz	r0, 80067ae <_vfiprintf_r+0x17a>
 800679e:	2240      	movs	r2, #64	; 0x40
 80067a0:	9b04      	ldr	r3, [sp, #16]
 80067a2:	eba0 000a 	sub.w	r0, r0, sl
 80067a6:	4082      	lsls	r2, r0
 80067a8:	4313      	orrs	r3, r2
 80067aa:	3401      	adds	r4, #1
 80067ac:	9304      	str	r3, [sp, #16]
 80067ae:	f814 1b01 	ldrb.w	r1, [r4], #1
 80067b2:	2206      	movs	r2, #6
 80067b4:	4829      	ldr	r0, [pc, #164]	; (800685c <_vfiprintf_r+0x228>)
 80067b6:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 80067ba:	f7fe fbca 	bl	8004f52 <memchr>
 80067be:	2800      	cmp	r0, #0
 80067c0:	d03f      	beq.n	8006842 <_vfiprintf_r+0x20e>
 80067c2:	4b27      	ldr	r3, [pc, #156]	; (8006860 <_vfiprintf_r+0x22c>)
 80067c4:	bb1b      	cbnz	r3, 800680e <_vfiprintf_r+0x1da>
 80067c6:	9b03      	ldr	r3, [sp, #12]
 80067c8:	3307      	adds	r3, #7
 80067ca:	f023 0307 	bic.w	r3, r3, #7
 80067ce:	3308      	adds	r3, #8
 80067d0:	9303      	str	r3, [sp, #12]
 80067d2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80067d4:	443b      	add	r3, r7
 80067d6:	9309      	str	r3, [sp, #36]	; 0x24
 80067d8:	e768      	b.n	80066ac <_vfiprintf_r+0x78>
 80067da:	460c      	mov	r4, r1
 80067dc:	2001      	movs	r0, #1
 80067de:	fb0c 3202 	mla	r2, ip, r2, r3
 80067e2:	e7a6      	b.n	8006732 <_vfiprintf_r+0xfe>
 80067e4:	2300      	movs	r3, #0
 80067e6:	f04f 0c0a 	mov.w	ip, #10
 80067ea:	4619      	mov	r1, r3
 80067ec:	3401      	adds	r4, #1
 80067ee:	9305      	str	r3, [sp, #20]
 80067f0:	4620      	mov	r0, r4
 80067f2:	f810 2b01 	ldrb.w	r2, [r0], #1
 80067f6:	3a30      	subs	r2, #48	; 0x30
 80067f8:	2a09      	cmp	r2, #9
 80067fa:	d903      	bls.n	8006804 <_vfiprintf_r+0x1d0>
 80067fc:	2b00      	cmp	r3, #0
 80067fe:	d0c6      	beq.n	800678e <_vfiprintf_r+0x15a>
 8006800:	9105      	str	r1, [sp, #20]
 8006802:	e7c4      	b.n	800678e <_vfiprintf_r+0x15a>
 8006804:	4604      	mov	r4, r0
 8006806:	2301      	movs	r3, #1
 8006808:	fb0c 2101 	mla	r1, ip, r1, r2
 800680c:	e7f0      	b.n	80067f0 <_vfiprintf_r+0x1bc>
 800680e:	ab03      	add	r3, sp, #12
 8006810:	9300      	str	r3, [sp, #0]
 8006812:	462a      	mov	r2, r5
 8006814:	4630      	mov	r0, r6
 8006816:	4b13      	ldr	r3, [pc, #76]	; (8006864 <_vfiprintf_r+0x230>)
 8006818:	a904      	add	r1, sp, #16
 800681a:	f7fc fded 	bl	80033f8 <_printf_float>
 800681e:	4607      	mov	r7, r0
 8006820:	1c78      	adds	r0, r7, #1
 8006822:	d1d6      	bne.n	80067d2 <_vfiprintf_r+0x19e>
 8006824:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8006826:	07d9      	lsls	r1, r3, #31
 8006828:	d405      	bmi.n	8006836 <_vfiprintf_r+0x202>
 800682a:	89ab      	ldrh	r3, [r5, #12]
 800682c:	059a      	lsls	r2, r3, #22
 800682e:	d402      	bmi.n	8006836 <_vfiprintf_r+0x202>
 8006830:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8006832:	f7fe fb8d 	bl	8004f50 <__retarget_lock_release_recursive>
 8006836:	89ab      	ldrh	r3, [r5, #12]
 8006838:	065b      	lsls	r3, r3, #25
 800683a:	f53f af1d 	bmi.w	8006678 <_vfiprintf_r+0x44>
 800683e:	9809      	ldr	r0, [sp, #36]	; 0x24
 8006840:	e71c      	b.n	800667c <_vfiprintf_r+0x48>
 8006842:	ab03      	add	r3, sp, #12
 8006844:	9300      	str	r3, [sp, #0]
 8006846:	462a      	mov	r2, r5
 8006848:	4630      	mov	r0, r6
 800684a:	4b06      	ldr	r3, [pc, #24]	; (8006864 <_vfiprintf_r+0x230>)
 800684c:	a904      	add	r1, sp, #16
 800684e:	f7fd f873 	bl	8003938 <_printf_i>
 8006852:	e7e4      	b.n	800681e <_vfiprintf_r+0x1ea>
 8006854:	080096a6 	.word	0x080096a6
 8006858:	080096ac 	.word	0x080096ac
 800685c:	080096b0 	.word	0x080096b0
 8006860:	080033f9 	.word	0x080033f9
 8006864:	0800660f 	.word	0x0800660f

08006868 <malloc>:
 8006868:	4b02      	ldr	r3, [pc, #8]	; (8006874 <malloc+0xc>)
 800686a:	4601      	mov	r1, r0
 800686c:	6818      	ldr	r0, [r3, #0]
 800686e:	f000 b823 	b.w	80068b8 <_malloc_r>
 8006872:	bf00      	nop
 8006874:	200001c4 	.word	0x200001c4

08006878 <sbrk_aligned>:
 8006878:	b570      	push	{r4, r5, r6, lr}
 800687a:	4e0e      	ldr	r6, [pc, #56]	; (80068b4 <sbrk_aligned+0x3c>)
 800687c:	460c      	mov	r4, r1
 800687e:	6831      	ldr	r1, [r6, #0]
 8006880:	4605      	mov	r5, r0
 8006882:	b911      	cbnz	r1, 800688a <sbrk_aligned+0x12>
 8006884:	f000 ffe2 	bl	800784c <_sbrk_r>
 8006888:	6030      	str	r0, [r6, #0]
 800688a:	4621      	mov	r1, r4
 800688c:	4628      	mov	r0, r5
 800688e:	f000 ffdd 	bl	800784c <_sbrk_r>
 8006892:	1c43      	adds	r3, r0, #1
 8006894:	d00a      	beq.n	80068ac <sbrk_aligned+0x34>
 8006896:	1cc4      	adds	r4, r0, #3
 8006898:	f024 0403 	bic.w	r4, r4, #3
 800689c:	42a0      	cmp	r0, r4
 800689e:	d007      	beq.n	80068b0 <sbrk_aligned+0x38>
 80068a0:	1a21      	subs	r1, r4, r0
 80068a2:	4628      	mov	r0, r5
 80068a4:	f000 ffd2 	bl	800784c <_sbrk_r>
 80068a8:	3001      	adds	r0, #1
 80068aa:	d101      	bne.n	80068b0 <sbrk_aligned+0x38>
 80068ac:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 80068b0:	4620      	mov	r0, r4
 80068b2:	bd70      	pop	{r4, r5, r6, pc}
 80068b4:	200003ec 	.word	0x200003ec

080068b8 <_malloc_r>:
 80068b8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80068bc:	1ccd      	adds	r5, r1, #3
 80068be:	f025 0503 	bic.w	r5, r5, #3
 80068c2:	3508      	adds	r5, #8
 80068c4:	2d0c      	cmp	r5, #12
 80068c6:	bf38      	it	cc
 80068c8:	250c      	movcc	r5, #12
 80068ca:	2d00      	cmp	r5, #0
 80068cc:	4607      	mov	r7, r0
 80068ce:	db01      	blt.n	80068d4 <_malloc_r+0x1c>
 80068d0:	42a9      	cmp	r1, r5
 80068d2:	d905      	bls.n	80068e0 <_malloc_r+0x28>
 80068d4:	230c      	movs	r3, #12
 80068d6:	2600      	movs	r6, #0
 80068d8:	603b      	str	r3, [r7, #0]
 80068da:	4630      	mov	r0, r6
 80068dc:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80068e0:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 80069b4 <_malloc_r+0xfc>
 80068e4:	f000 f924 	bl	8006b30 <__malloc_lock>
 80068e8:	f8d8 3000 	ldr.w	r3, [r8]
 80068ec:	461c      	mov	r4, r3
 80068ee:	bb5c      	cbnz	r4, 8006948 <_malloc_r+0x90>
 80068f0:	4629      	mov	r1, r5
 80068f2:	4638      	mov	r0, r7
 80068f4:	f7ff ffc0 	bl	8006878 <sbrk_aligned>
 80068f8:	1c43      	adds	r3, r0, #1
 80068fa:	4604      	mov	r4, r0
 80068fc:	d155      	bne.n	80069aa <_malloc_r+0xf2>
 80068fe:	f8d8 4000 	ldr.w	r4, [r8]
 8006902:	4626      	mov	r6, r4
 8006904:	2e00      	cmp	r6, #0
 8006906:	d145      	bne.n	8006994 <_malloc_r+0xdc>
 8006908:	2c00      	cmp	r4, #0
 800690a:	d048      	beq.n	800699e <_malloc_r+0xe6>
 800690c:	6823      	ldr	r3, [r4, #0]
 800690e:	4631      	mov	r1, r6
 8006910:	4638      	mov	r0, r7
 8006912:	eb04 0903 	add.w	r9, r4, r3
 8006916:	f000 ff99 	bl	800784c <_sbrk_r>
 800691a:	4581      	cmp	r9, r0
 800691c:	d13f      	bne.n	800699e <_malloc_r+0xe6>
 800691e:	6821      	ldr	r1, [r4, #0]
 8006920:	4638      	mov	r0, r7
 8006922:	1a6d      	subs	r5, r5, r1
 8006924:	4629      	mov	r1, r5
 8006926:	f7ff ffa7 	bl	8006878 <sbrk_aligned>
 800692a:	3001      	adds	r0, #1
 800692c:	d037      	beq.n	800699e <_malloc_r+0xe6>
 800692e:	6823      	ldr	r3, [r4, #0]
 8006930:	442b      	add	r3, r5
 8006932:	6023      	str	r3, [r4, #0]
 8006934:	f8d8 3000 	ldr.w	r3, [r8]
 8006938:	2b00      	cmp	r3, #0
 800693a:	d038      	beq.n	80069ae <_malloc_r+0xf6>
 800693c:	685a      	ldr	r2, [r3, #4]
 800693e:	42a2      	cmp	r2, r4
 8006940:	d12b      	bne.n	800699a <_malloc_r+0xe2>
 8006942:	2200      	movs	r2, #0
 8006944:	605a      	str	r2, [r3, #4]
 8006946:	e00f      	b.n	8006968 <_malloc_r+0xb0>
 8006948:	6822      	ldr	r2, [r4, #0]
 800694a:	1b52      	subs	r2, r2, r5
 800694c:	d41f      	bmi.n	800698e <_malloc_r+0xd6>
 800694e:	2a0b      	cmp	r2, #11
 8006950:	d917      	bls.n	8006982 <_malloc_r+0xca>
 8006952:	1961      	adds	r1, r4, r5
 8006954:	42a3      	cmp	r3, r4
 8006956:	6025      	str	r5, [r4, #0]
 8006958:	bf18      	it	ne
 800695a:	6059      	strne	r1, [r3, #4]
 800695c:	6863      	ldr	r3, [r4, #4]
 800695e:	bf08      	it	eq
 8006960:	f8c8 1000 	streq.w	r1, [r8]
 8006964:	5162      	str	r2, [r4, r5]
 8006966:	604b      	str	r3, [r1, #4]
 8006968:	4638      	mov	r0, r7
 800696a:	f104 060b 	add.w	r6, r4, #11
 800696e:	f000 f8e5 	bl	8006b3c <__malloc_unlock>
 8006972:	f026 0607 	bic.w	r6, r6, #7
 8006976:	1d23      	adds	r3, r4, #4
 8006978:	1af2      	subs	r2, r6, r3
 800697a:	d0ae      	beq.n	80068da <_malloc_r+0x22>
 800697c:	1b9b      	subs	r3, r3, r6
 800697e:	50a3      	str	r3, [r4, r2]
 8006980:	e7ab      	b.n	80068da <_malloc_r+0x22>
 8006982:	42a3      	cmp	r3, r4
 8006984:	6862      	ldr	r2, [r4, #4]
 8006986:	d1dd      	bne.n	8006944 <_malloc_r+0x8c>
 8006988:	f8c8 2000 	str.w	r2, [r8]
 800698c:	e7ec      	b.n	8006968 <_malloc_r+0xb0>
 800698e:	4623      	mov	r3, r4
 8006990:	6864      	ldr	r4, [r4, #4]
 8006992:	e7ac      	b.n	80068ee <_malloc_r+0x36>
 8006994:	4634      	mov	r4, r6
 8006996:	6876      	ldr	r6, [r6, #4]
 8006998:	e7b4      	b.n	8006904 <_malloc_r+0x4c>
 800699a:	4613      	mov	r3, r2
 800699c:	e7cc      	b.n	8006938 <_malloc_r+0x80>
 800699e:	230c      	movs	r3, #12
 80069a0:	4638      	mov	r0, r7
 80069a2:	603b      	str	r3, [r7, #0]
 80069a4:	f000 f8ca 	bl	8006b3c <__malloc_unlock>
 80069a8:	e797      	b.n	80068da <_malloc_r+0x22>
 80069aa:	6025      	str	r5, [r4, #0]
 80069ac:	e7dc      	b.n	8006968 <_malloc_r+0xb0>
 80069ae:	605b      	str	r3, [r3, #4]
 80069b0:	deff      	udf	#255	; 0xff
 80069b2:	bf00      	nop
 80069b4:	200003e8 	.word	0x200003e8

080069b8 <__ascii_mbtowc>:
 80069b8:	b082      	sub	sp, #8
 80069ba:	b901      	cbnz	r1, 80069be <__ascii_mbtowc+0x6>
 80069bc:	a901      	add	r1, sp, #4
 80069be:	b142      	cbz	r2, 80069d2 <__ascii_mbtowc+0x1a>
 80069c0:	b14b      	cbz	r3, 80069d6 <__ascii_mbtowc+0x1e>
 80069c2:	7813      	ldrb	r3, [r2, #0]
 80069c4:	600b      	str	r3, [r1, #0]
 80069c6:	7812      	ldrb	r2, [r2, #0]
 80069c8:	1e10      	subs	r0, r2, #0
 80069ca:	bf18      	it	ne
 80069cc:	2001      	movne	r0, #1
 80069ce:	b002      	add	sp, #8
 80069d0:	4770      	bx	lr
 80069d2:	4610      	mov	r0, r2
 80069d4:	e7fb      	b.n	80069ce <__ascii_mbtowc+0x16>
 80069d6:	f06f 0001 	mvn.w	r0, #1
 80069da:	e7f8      	b.n	80069ce <__ascii_mbtowc+0x16>

080069dc <__sflush_r>:
 80069dc:	898a      	ldrh	r2, [r1, #12]
 80069de:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80069e0:	4605      	mov	r5, r0
 80069e2:	0710      	lsls	r0, r2, #28
 80069e4:	460c      	mov	r4, r1
 80069e6:	d457      	bmi.n	8006a98 <__sflush_r+0xbc>
 80069e8:	684b      	ldr	r3, [r1, #4]
 80069ea:	2b00      	cmp	r3, #0
 80069ec:	dc04      	bgt.n	80069f8 <__sflush_r+0x1c>
 80069ee:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 80069f0:	2b00      	cmp	r3, #0
 80069f2:	dc01      	bgt.n	80069f8 <__sflush_r+0x1c>
 80069f4:	2000      	movs	r0, #0
 80069f6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80069f8:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80069fa:	2e00      	cmp	r6, #0
 80069fc:	d0fa      	beq.n	80069f4 <__sflush_r+0x18>
 80069fe:	2300      	movs	r3, #0
 8006a00:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8006a04:	682f      	ldr	r7, [r5, #0]
 8006a06:	6a21      	ldr	r1, [r4, #32]
 8006a08:	602b      	str	r3, [r5, #0]
 8006a0a:	d032      	beq.n	8006a72 <__sflush_r+0x96>
 8006a0c:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8006a0e:	89a3      	ldrh	r3, [r4, #12]
 8006a10:	075a      	lsls	r2, r3, #29
 8006a12:	d505      	bpl.n	8006a20 <__sflush_r+0x44>
 8006a14:	6863      	ldr	r3, [r4, #4]
 8006a16:	1ac0      	subs	r0, r0, r3
 8006a18:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8006a1a:	b10b      	cbz	r3, 8006a20 <__sflush_r+0x44>
 8006a1c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8006a1e:	1ac0      	subs	r0, r0, r3
 8006a20:	2300      	movs	r3, #0
 8006a22:	4602      	mov	r2, r0
 8006a24:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8006a26:	4628      	mov	r0, r5
 8006a28:	6a21      	ldr	r1, [r4, #32]
 8006a2a:	47b0      	blx	r6
 8006a2c:	1c43      	adds	r3, r0, #1
 8006a2e:	89a3      	ldrh	r3, [r4, #12]
 8006a30:	d106      	bne.n	8006a40 <__sflush_r+0x64>
 8006a32:	6829      	ldr	r1, [r5, #0]
 8006a34:	291d      	cmp	r1, #29
 8006a36:	d82b      	bhi.n	8006a90 <__sflush_r+0xb4>
 8006a38:	4a28      	ldr	r2, [pc, #160]	; (8006adc <__sflush_r+0x100>)
 8006a3a:	410a      	asrs	r2, r1
 8006a3c:	07d6      	lsls	r6, r2, #31
 8006a3e:	d427      	bmi.n	8006a90 <__sflush_r+0xb4>
 8006a40:	2200      	movs	r2, #0
 8006a42:	6062      	str	r2, [r4, #4]
 8006a44:	6922      	ldr	r2, [r4, #16]
 8006a46:	04d9      	lsls	r1, r3, #19
 8006a48:	6022      	str	r2, [r4, #0]
 8006a4a:	d504      	bpl.n	8006a56 <__sflush_r+0x7a>
 8006a4c:	1c42      	adds	r2, r0, #1
 8006a4e:	d101      	bne.n	8006a54 <__sflush_r+0x78>
 8006a50:	682b      	ldr	r3, [r5, #0]
 8006a52:	b903      	cbnz	r3, 8006a56 <__sflush_r+0x7a>
 8006a54:	6560      	str	r0, [r4, #84]	; 0x54
 8006a56:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8006a58:	602f      	str	r7, [r5, #0]
 8006a5a:	2900      	cmp	r1, #0
 8006a5c:	d0ca      	beq.n	80069f4 <__sflush_r+0x18>
 8006a5e:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8006a62:	4299      	cmp	r1, r3
 8006a64:	d002      	beq.n	8006a6c <__sflush_r+0x90>
 8006a66:	4628      	mov	r0, r5
 8006a68:	f000 ff44 	bl	80078f4 <_free_r>
 8006a6c:	2000      	movs	r0, #0
 8006a6e:	6360      	str	r0, [r4, #52]	; 0x34
 8006a70:	e7c1      	b.n	80069f6 <__sflush_r+0x1a>
 8006a72:	2301      	movs	r3, #1
 8006a74:	4628      	mov	r0, r5
 8006a76:	47b0      	blx	r6
 8006a78:	1c41      	adds	r1, r0, #1
 8006a7a:	d1c8      	bne.n	8006a0e <__sflush_r+0x32>
 8006a7c:	682b      	ldr	r3, [r5, #0]
 8006a7e:	2b00      	cmp	r3, #0
 8006a80:	d0c5      	beq.n	8006a0e <__sflush_r+0x32>
 8006a82:	2b1d      	cmp	r3, #29
 8006a84:	d001      	beq.n	8006a8a <__sflush_r+0xae>
 8006a86:	2b16      	cmp	r3, #22
 8006a88:	d101      	bne.n	8006a8e <__sflush_r+0xb2>
 8006a8a:	602f      	str	r7, [r5, #0]
 8006a8c:	e7b2      	b.n	80069f4 <__sflush_r+0x18>
 8006a8e:	89a3      	ldrh	r3, [r4, #12]
 8006a90:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8006a94:	81a3      	strh	r3, [r4, #12]
 8006a96:	e7ae      	b.n	80069f6 <__sflush_r+0x1a>
 8006a98:	690f      	ldr	r7, [r1, #16]
 8006a9a:	2f00      	cmp	r7, #0
 8006a9c:	d0aa      	beq.n	80069f4 <__sflush_r+0x18>
 8006a9e:	0793      	lsls	r3, r2, #30
 8006aa0:	bf18      	it	ne
 8006aa2:	2300      	movne	r3, #0
 8006aa4:	680e      	ldr	r6, [r1, #0]
 8006aa6:	bf08      	it	eq
 8006aa8:	694b      	ldreq	r3, [r1, #20]
 8006aaa:	1bf6      	subs	r6, r6, r7
 8006aac:	600f      	str	r7, [r1, #0]
 8006aae:	608b      	str	r3, [r1, #8]
 8006ab0:	2e00      	cmp	r6, #0
 8006ab2:	dd9f      	ble.n	80069f4 <__sflush_r+0x18>
 8006ab4:	4633      	mov	r3, r6
 8006ab6:	463a      	mov	r2, r7
 8006ab8:	4628      	mov	r0, r5
 8006aba:	6a21      	ldr	r1, [r4, #32]
 8006abc:	f8d4 c028 	ldr.w	ip, [r4, #40]	; 0x28
 8006ac0:	47e0      	blx	ip
 8006ac2:	2800      	cmp	r0, #0
 8006ac4:	dc06      	bgt.n	8006ad4 <__sflush_r+0xf8>
 8006ac6:	89a3      	ldrh	r3, [r4, #12]
 8006ac8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8006acc:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8006ad0:	81a3      	strh	r3, [r4, #12]
 8006ad2:	e790      	b.n	80069f6 <__sflush_r+0x1a>
 8006ad4:	4407      	add	r7, r0
 8006ad6:	1a36      	subs	r6, r6, r0
 8006ad8:	e7ea      	b.n	8006ab0 <__sflush_r+0xd4>
 8006ada:	bf00      	nop
 8006adc:	dfbffffe 	.word	0xdfbffffe

08006ae0 <_fflush_r>:
 8006ae0:	b538      	push	{r3, r4, r5, lr}
 8006ae2:	690b      	ldr	r3, [r1, #16]
 8006ae4:	4605      	mov	r5, r0
 8006ae6:	460c      	mov	r4, r1
 8006ae8:	b913      	cbnz	r3, 8006af0 <_fflush_r+0x10>
 8006aea:	2500      	movs	r5, #0
 8006aec:	4628      	mov	r0, r5
 8006aee:	bd38      	pop	{r3, r4, r5, pc}
 8006af0:	b118      	cbz	r0, 8006afa <_fflush_r+0x1a>
 8006af2:	6a03      	ldr	r3, [r0, #32]
 8006af4:	b90b      	cbnz	r3, 8006afa <_fflush_r+0x1a>
 8006af6:	f7fd fafb 	bl	80040f0 <__sinit>
 8006afa:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8006afe:	2b00      	cmp	r3, #0
 8006b00:	d0f3      	beq.n	8006aea <_fflush_r+0xa>
 8006b02:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8006b04:	07d0      	lsls	r0, r2, #31
 8006b06:	d404      	bmi.n	8006b12 <_fflush_r+0x32>
 8006b08:	0599      	lsls	r1, r3, #22
 8006b0a:	d402      	bmi.n	8006b12 <_fflush_r+0x32>
 8006b0c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8006b0e:	f7fe fa1e 	bl	8004f4e <__retarget_lock_acquire_recursive>
 8006b12:	4628      	mov	r0, r5
 8006b14:	4621      	mov	r1, r4
 8006b16:	f7ff ff61 	bl	80069dc <__sflush_r>
 8006b1a:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8006b1c:	4605      	mov	r5, r0
 8006b1e:	07da      	lsls	r2, r3, #31
 8006b20:	d4e4      	bmi.n	8006aec <_fflush_r+0xc>
 8006b22:	89a3      	ldrh	r3, [r4, #12]
 8006b24:	059b      	lsls	r3, r3, #22
 8006b26:	d4e1      	bmi.n	8006aec <_fflush_r+0xc>
 8006b28:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8006b2a:	f7fe fa11 	bl	8004f50 <__retarget_lock_release_recursive>
 8006b2e:	e7dd      	b.n	8006aec <_fflush_r+0xc>

08006b30 <__malloc_lock>:
 8006b30:	4801      	ldr	r0, [pc, #4]	; (8006b38 <__malloc_lock+0x8>)
 8006b32:	f7fe ba0c 	b.w	8004f4e <__retarget_lock_acquire_recursive>
 8006b36:	bf00      	nop
 8006b38:	200003e4 	.word	0x200003e4

08006b3c <__malloc_unlock>:
 8006b3c:	4801      	ldr	r0, [pc, #4]	; (8006b44 <__malloc_unlock+0x8>)
 8006b3e:	f7fe ba07 	b.w	8004f50 <__retarget_lock_release_recursive>
 8006b42:	bf00      	nop
 8006b44:	200003e4 	.word	0x200003e4

08006b48 <_Balloc>:
 8006b48:	b570      	push	{r4, r5, r6, lr}
 8006b4a:	69c6      	ldr	r6, [r0, #28]
 8006b4c:	4604      	mov	r4, r0
 8006b4e:	460d      	mov	r5, r1
 8006b50:	b976      	cbnz	r6, 8006b70 <_Balloc+0x28>
 8006b52:	2010      	movs	r0, #16
 8006b54:	f7ff fe88 	bl	8006868 <malloc>
 8006b58:	4602      	mov	r2, r0
 8006b5a:	61e0      	str	r0, [r4, #28]
 8006b5c:	b920      	cbnz	r0, 8006b68 <_Balloc+0x20>
 8006b5e:	216b      	movs	r1, #107	; 0x6b
 8006b60:	4b17      	ldr	r3, [pc, #92]	; (8006bc0 <_Balloc+0x78>)
 8006b62:	4818      	ldr	r0, [pc, #96]	; (8006bc4 <_Balloc+0x7c>)
 8006b64:	f000 fe94 	bl	8007890 <__assert_func>
 8006b68:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8006b6c:	6006      	str	r6, [r0, #0]
 8006b6e:	60c6      	str	r6, [r0, #12]
 8006b70:	69e6      	ldr	r6, [r4, #28]
 8006b72:	68f3      	ldr	r3, [r6, #12]
 8006b74:	b183      	cbz	r3, 8006b98 <_Balloc+0x50>
 8006b76:	69e3      	ldr	r3, [r4, #28]
 8006b78:	68db      	ldr	r3, [r3, #12]
 8006b7a:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8006b7e:	b9b8      	cbnz	r0, 8006bb0 <_Balloc+0x68>
 8006b80:	2101      	movs	r1, #1
 8006b82:	fa01 f605 	lsl.w	r6, r1, r5
 8006b86:	1d72      	adds	r2, r6, #5
 8006b88:	4620      	mov	r0, r4
 8006b8a:	0092      	lsls	r2, r2, #2
 8006b8c:	f000 fe9e 	bl	80078cc <_calloc_r>
 8006b90:	b160      	cbz	r0, 8006bac <_Balloc+0x64>
 8006b92:	e9c0 5601 	strd	r5, r6, [r0, #4]
 8006b96:	e00e      	b.n	8006bb6 <_Balloc+0x6e>
 8006b98:	2221      	movs	r2, #33	; 0x21
 8006b9a:	2104      	movs	r1, #4
 8006b9c:	4620      	mov	r0, r4
 8006b9e:	f000 fe95 	bl	80078cc <_calloc_r>
 8006ba2:	69e3      	ldr	r3, [r4, #28]
 8006ba4:	60f0      	str	r0, [r6, #12]
 8006ba6:	68db      	ldr	r3, [r3, #12]
 8006ba8:	2b00      	cmp	r3, #0
 8006baa:	d1e4      	bne.n	8006b76 <_Balloc+0x2e>
 8006bac:	2000      	movs	r0, #0
 8006bae:	bd70      	pop	{r4, r5, r6, pc}
 8006bb0:	6802      	ldr	r2, [r0, #0]
 8006bb2:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 8006bb6:	2300      	movs	r3, #0
 8006bb8:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8006bbc:	e7f7      	b.n	8006bae <_Balloc+0x66>
 8006bbe:	bf00      	nop
 8006bc0:	080095c6 	.word	0x080095c6
 8006bc4:	080096b7 	.word	0x080096b7

08006bc8 <_Bfree>:
 8006bc8:	b570      	push	{r4, r5, r6, lr}
 8006bca:	69c6      	ldr	r6, [r0, #28]
 8006bcc:	4605      	mov	r5, r0
 8006bce:	460c      	mov	r4, r1
 8006bd0:	b976      	cbnz	r6, 8006bf0 <_Bfree+0x28>
 8006bd2:	2010      	movs	r0, #16
 8006bd4:	f7ff fe48 	bl	8006868 <malloc>
 8006bd8:	4602      	mov	r2, r0
 8006bda:	61e8      	str	r0, [r5, #28]
 8006bdc:	b920      	cbnz	r0, 8006be8 <_Bfree+0x20>
 8006bde:	218f      	movs	r1, #143	; 0x8f
 8006be0:	4b08      	ldr	r3, [pc, #32]	; (8006c04 <_Bfree+0x3c>)
 8006be2:	4809      	ldr	r0, [pc, #36]	; (8006c08 <_Bfree+0x40>)
 8006be4:	f000 fe54 	bl	8007890 <__assert_func>
 8006be8:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8006bec:	6006      	str	r6, [r0, #0]
 8006bee:	60c6      	str	r6, [r0, #12]
 8006bf0:	b13c      	cbz	r4, 8006c02 <_Bfree+0x3a>
 8006bf2:	69eb      	ldr	r3, [r5, #28]
 8006bf4:	6862      	ldr	r2, [r4, #4]
 8006bf6:	68db      	ldr	r3, [r3, #12]
 8006bf8:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8006bfc:	6021      	str	r1, [r4, #0]
 8006bfe:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 8006c02:	bd70      	pop	{r4, r5, r6, pc}
 8006c04:	080095c6 	.word	0x080095c6
 8006c08:	080096b7 	.word	0x080096b7

08006c0c <__multadd>:
 8006c0c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006c10:	4607      	mov	r7, r0
 8006c12:	460c      	mov	r4, r1
 8006c14:	461e      	mov	r6, r3
 8006c16:	2000      	movs	r0, #0
 8006c18:	690d      	ldr	r5, [r1, #16]
 8006c1a:	f101 0c14 	add.w	ip, r1, #20
 8006c1e:	f8dc 3000 	ldr.w	r3, [ip]
 8006c22:	3001      	adds	r0, #1
 8006c24:	b299      	uxth	r1, r3
 8006c26:	fb02 6101 	mla	r1, r2, r1, r6
 8006c2a:	0c1e      	lsrs	r6, r3, #16
 8006c2c:	0c0b      	lsrs	r3, r1, #16
 8006c2e:	fb02 3306 	mla	r3, r2, r6, r3
 8006c32:	b289      	uxth	r1, r1
 8006c34:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 8006c38:	4285      	cmp	r5, r0
 8006c3a:	ea4f 4613 	mov.w	r6, r3, lsr #16
 8006c3e:	f84c 1b04 	str.w	r1, [ip], #4
 8006c42:	dcec      	bgt.n	8006c1e <__multadd+0x12>
 8006c44:	b30e      	cbz	r6, 8006c8a <__multadd+0x7e>
 8006c46:	68a3      	ldr	r3, [r4, #8]
 8006c48:	42ab      	cmp	r3, r5
 8006c4a:	dc19      	bgt.n	8006c80 <__multadd+0x74>
 8006c4c:	6861      	ldr	r1, [r4, #4]
 8006c4e:	4638      	mov	r0, r7
 8006c50:	3101      	adds	r1, #1
 8006c52:	f7ff ff79 	bl	8006b48 <_Balloc>
 8006c56:	4680      	mov	r8, r0
 8006c58:	b928      	cbnz	r0, 8006c66 <__multadd+0x5a>
 8006c5a:	4602      	mov	r2, r0
 8006c5c:	21ba      	movs	r1, #186	; 0xba
 8006c5e:	4b0c      	ldr	r3, [pc, #48]	; (8006c90 <__multadd+0x84>)
 8006c60:	480c      	ldr	r0, [pc, #48]	; (8006c94 <__multadd+0x88>)
 8006c62:	f000 fe15 	bl	8007890 <__assert_func>
 8006c66:	6922      	ldr	r2, [r4, #16]
 8006c68:	f104 010c 	add.w	r1, r4, #12
 8006c6c:	3202      	adds	r2, #2
 8006c6e:	0092      	lsls	r2, r2, #2
 8006c70:	300c      	adds	r0, #12
 8006c72:	f7fe f97c 	bl	8004f6e <memcpy>
 8006c76:	4621      	mov	r1, r4
 8006c78:	4638      	mov	r0, r7
 8006c7a:	f7ff ffa5 	bl	8006bc8 <_Bfree>
 8006c7e:	4644      	mov	r4, r8
 8006c80:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 8006c84:	3501      	adds	r5, #1
 8006c86:	615e      	str	r6, [r3, #20]
 8006c88:	6125      	str	r5, [r4, #16]
 8006c8a:	4620      	mov	r0, r4
 8006c8c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006c90:	08009635 	.word	0x08009635
 8006c94:	080096b7 	.word	0x080096b7

08006c98 <__s2b>:
 8006c98:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8006c9c:	4615      	mov	r5, r2
 8006c9e:	2209      	movs	r2, #9
 8006ca0:	461f      	mov	r7, r3
 8006ca2:	3308      	adds	r3, #8
 8006ca4:	460c      	mov	r4, r1
 8006ca6:	fb93 f3f2 	sdiv	r3, r3, r2
 8006caa:	4606      	mov	r6, r0
 8006cac:	2201      	movs	r2, #1
 8006cae:	2100      	movs	r1, #0
 8006cb0:	429a      	cmp	r2, r3
 8006cb2:	db09      	blt.n	8006cc8 <__s2b+0x30>
 8006cb4:	4630      	mov	r0, r6
 8006cb6:	f7ff ff47 	bl	8006b48 <_Balloc>
 8006cba:	b940      	cbnz	r0, 8006cce <__s2b+0x36>
 8006cbc:	4602      	mov	r2, r0
 8006cbe:	21d3      	movs	r1, #211	; 0xd3
 8006cc0:	4b18      	ldr	r3, [pc, #96]	; (8006d24 <__s2b+0x8c>)
 8006cc2:	4819      	ldr	r0, [pc, #100]	; (8006d28 <__s2b+0x90>)
 8006cc4:	f000 fde4 	bl	8007890 <__assert_func>
 8006cc8:	0052      	lsls	r2, r2, #1
 8006cca:	3101      	adds	r1, #1
 8006ccc:	e7f0      	b.n	8006cb0 <__s2b+0x18>
 8006cce:	9b08      	ldr	r3, [sp, #32]
 8006cd0:	2d09      	cmp	r5, #9
 8006cd2:	6143      	str	r3, [r0, #20]
 8006cd4:	f04f 0301 	mov.w	r3, #1
 8006cd8:	6103      	str	r3, [r0, #16]
 8006cda:	dd16      	ble.n	8006d0a <__s2b+0x72>
 8006cdc:	f104 0909 	add.w	r9, r4, #9
 8006ce0:	46c8      	mov	r8, r9
 8006ce2:	442c      	add	r4, r5
 8006ce4:	f818 3b01 	ldrb.w	r3, [r8], #1
 8006ce8:	4601      	mov	r1, r0
 8006cea:	220a      	movs	r2, #10
 8006cec:	4630      	mov	r0, r6
 8006cee:	3b30      	subs	r3, #48	; 0x30
 8006cf0:	f7ff ff8c 	bl	8006c0c <__multadd>
 8006cf4:	45a0      	cmp	r8, r4
 8006cf6:	d1f5      	bne.n	8006ce4 <__s2b+0x4c>
 8006cf8:	f1a5 0408 	sub.w	r4, r5, #8
 8006cfc:	444c      	add	r4, r9
 8006cfe:	1b2d      	subs	r5, r5, r4
 8006d00:	1963      	adds	r3, r4, r5
 8006d02:	42bb      	cmp	r3, r7
 8006d04:	db04      	blt.n	8006d10 <__s2b+0x78>
 8006d06:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8006d0a:	2509      	movs	r5, #9
 8006d0c:	340a      	adds	r4, #10
 8006d0e:	e7f6      	b.n	8006cfe <__s2b+0x66>
 8006d10:	f814 3b01 	ldrb.w	r3, [r4], #1
 8006d14:	4601      	mov	r1, r0
 8006d16:	220a      	movs	r2, #10
 8006d18:	4630      	mov	r0, r6
 8006d1a:	3b30      	subs	r3, #48	; 0x30
 8006d1c:	f7ff ff76 	bl	8006c0c <__multadd>
 8006d20:	e7ee      	b.n	8006d00 <__s2b+0x68>
 8006d22:	bf00      	nop
 8006d24:	08009635 	.word	0x08009635
 8006d28:	080096b7 	.word	0x080096b7

08006d2c <__hi0bits>:
 8006d2c:	0c02      	lsrs	r2, r0, #16
 8006d2e:	0412      	lsls	r2, r2, #16
 8006d30:	4603      	mov	r3, r0
 8006d32:	b9ca      	cbnz	r2, 8006d68 <__hi0bits+0x3c>
 8006d34:	0403      	lsls	r3, r0, #16
 8006d36:	2010      	movs	r0, #16
 8006d38:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8006d3c:	bf04      	itt	eq
 8006d3e:	021b      	lsleq	r3, r3, #8
 8006d40:	3008      	addeq	r0, #8
 8006d42:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8006d46:	bf04      	itt	eq
 8006d48:	011b      	lsleq	r3, r3, #4
 8006d4a:	3004      	addeq	r0, #4
 8006d4c:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8006d50:	bf04      	itt	eq
 8006d52:	009b      	lsleq	r3, r3, #2
 8006d54:	3002      	addeq	r0, #2
 8006d56:	2b00      	cmp	r3, #0
 8006d58:	db05      	blt.n	8006d66 <__hi0bits+0x3a>
 8006d5a:	f013 4f80 	tst.w	r3, #1073741824	; 0x40000000
 8006d5e:	f100 0001 	add.w	r0, r0, #1
 8006d62:	bf08      	it	eq
 8006d64:	2020      	moveq	r0, #32
 8006d66:	4770      	bx	lr
 8006d68:	2000      	movs	r0, #0
 8006d6a:	e7e5      	b.n	8006d38 <__hi0bits+0xc>

08006d6c <__lo0bits>:
 8006d6c:	6803      	ldr	r3, [r0, #0]
 8006d6e:	4602      	mov	r2, r0
 8006d70:	f013 0007 	ands.w	r0, r3, #7
 8006d74:	d00b      	beq.n	8006d8e <__lo0bits+0x22>
 8006d76:	07d9      	lsls	r1, r3, #31
 8006d78:	d421      	bmi.n	8006dbe <__lo0bits+0x52>
 8006d7a:	0798      	lsls	r0, r3, #30
 8006d7c:	bf49      	itett	mi
 8006d7e:	085b      	lsrmi	r3, r3, #1
 8006d80:	089b      	lsrpl	r3, r3, #2
 8006d82:	2001      	movmi	r0, #1
 8006d84:	6013      	strmi	r3, [r2, #0]
 8006d86:	bf5c      	itt	pl
 8006d88:	2002      	movpl	r0, #2
 8006d8a:	6013      	strpl	r3, [r2, #0]
 8006d8c:	4770      	bx	lr
 8006d8e:	b299      	uxth	r1, r3
 8006d90:	b909      	cbnz	r1, 8006d96 <__lo0bits+0x2a>
 8006d92:	2010      	movs	r0, #16
 8006d94:	0c1b      	lsrs	r3, r3, #16
 8006d96:	b2d9      	uxtb	r1, r3
 8006d98:	b909      	cbnz	r1, 8006d9e <__lo0bits+0x32>
 8006d9a:	3008      	adds	r0, #8
 8006d9c:	0a1b      	lsrs	r3, r3, #8
 8006d9e:	0719      	lsls	r1, r3, #28
 8006da0:	bf04      	itt	eq
 8006da2:	091b      	lsreq	r3, r3, #4
 8006da4:	3004      	addeq	r0, #4
 8006da6:	0799      	lsls	r1, r3, #30
 8006da8:	bf04      	itt	eq
 8006daa:	089b      	lsreq	r3, r3, #2
 8006dac:	3002      	addeq	r0, #2
 8006dae:	07d9      	lsls	r1, r3, #31
 8006db0:	d403      	bmi.n	8006dba <__lo0bits+0x4e>
 8006db2:	085b      	lsrs	r3, r3, #1
 8006db4:	f100 0001 	add.w	r0, r0, #1
 8006db8:	d003      	beq.n	8006dc2 <__lo0bits+0x56>
 8006dba:	6013      	str	r3, [r2, #0]
 8006dbc:	4770      	bx	lr
 8006dbe:	2000      	movs	r0, #0
 8006dc0:	4770      	bx	lr
 8006dc2:	2020      	movs	r0, #32
 8006dc4:	4770      	bx	lr
	...

08006dc8 <__i2b>:
 8006dc8:	b510      	push	{r4, lr}
 8006dca:	460c      	mov	r4, r1
 8006dcc:	2101      	movs	r1, #1
 8006dce:	f7ff febb 	bl	8006b48 <_Balloc>
 8006dd2:	4602      	mov	r2, r0
 8006dd4:	b928      	cbnz	r0, 8006de2 <__i2b+0x1a>
 8006dd6:	f240 1145 	movw	r1, #325	; 0x145
 8006dda:	4b04      	ldr	r3, [pc, #16]	; (8006dec <__i2b+0x24>)
 8006ddc:	4804      	ldr	r0, [pc, #16]	; (8006df0 <__i2b+0x28>)
 8006dde:	f000 fd57 	bl	8007890 <__assert_func>
 8006de2:	2301      	movs	r3, #1
 8006de4:	6144      	str	r4, [r0, #20]
 8006de6:	6103      	str	r3, [r0, #16]
 8006de8:	bd10      	pop	{r4, pc}
 8006dea:	bf00      	nop
 8006dec:	08009635 	.word	0x08009635
 8006df0:	080096b7 	.word	0x080096b7

08006df4 <__multiply>:
 8006df4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006df8:	4691      	mov	r9, r2
 8006dfa:	690a      	ldr	r2, [r1, #16]
 8006dfc:	f8d9 3010 	ldr.w	r3, [r9, #16]
 8006e00:	460c      	mov	r4, r1
 8006e02:	429a      	cmp	r2, r3
 8006e04:	bfbe      	ittt	lt
 8006e06:	460b      	movlt	r3, r1
 8006e08:	464c      	movlt	r4, r9
 8006e0a:	4699      	movlt	r9, r3
 8006e0c:	6927      	ldr	r7, [r4, #16]
 8006e0e:	f8d9 a010 	ldr.w	sl, [r9, #16]
 8006e12:	68a3      	ldr	r3, [r4, #8]
 8006e14:	6861      	ldr	r1, [r4, #4]
 8006e16:	eb07 060a 	add.w	r6, r7, sl
 8006e1a:	42b3      	cmp	r3, r6
 8006e1c:	b085      	sub	sp, #20
 8006e1e:	bfb8      	it	lt
 8006e20:	3101      	addlt	r1, #1
 8006e22:	f7ff fe91 	bl	8006b48 <_Balloc>
 8006e26:	b930      	cbnz	r0, 8006e36 <__multiply+0x42>
 8006e28:	4602      	mov	r2, r0
 8006e2a:	f44f 71b1 	mov.w	r1, #354	; 0x162
 8006e2e:	4b43      	ldr	r3, [pc, #268]	; (8006f3c <__multiply+0x148>)
 8006e30:	4843      	ldr	r0, [pc, #268]	; (8006f40 <__multiply+0x14c>)
 8006e32:	f000 fd2d 	bl	8007890 <__assert_func>
 8006e36:	f100 0514 	add.w	r5, r0, #20
 8006e3a:	462b      	mov	r3, r5
 8006e3c:	2200      	movs	r2, #0
 8006e3e:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 8006e42:	4543      	cmp	r3, r8
 8006e44:	d321      	bcc.n	8006e8a <__multiply+0x96>
 8006e46:	f104 0314 	add.w	r3, r4, #20
 8006e4a:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 8006e4e:	f109 0314 	add.w	r3, r9, #20
 8006e52:	eb03 028a 	add.w	r2, r3, sl, lsl #2
 8006e56:	9202      	str	r2, [sp, #8]
 8006e58:	1b3a      	subs	r2, r7, r4
 8006e5a:	3a15      	subs	r2, #21
 8006e5c:	f022 0203 	bic.w	r2, r2, #3
 8006e60:	3204      	adds	r2, #4
 8006e62:	f104 0115 	add.w	r1, r4, #21
 8006e66:	428f      	cmp	r7, r1
 8006e68:	bf38      	it	cc
 8006e6a:	2204      	movcc	r2, #4
 8006e6c:	9201      	str	r2, [sp, #4]
 8006e6e:	9a02      	ldr	r2, [sp, #8]
 8006e70:	9303      	str	r3, [sp, #12]
 8006e72:	429a      	cmp	r2, r3
 8006e74:	d80c      	bhi.n	8006e90 <__multiply+0x9c>
 8006e76:	2e00      	cmp	r6, #0
 8006e78:	dd03      	ble.n	8006e82 <__multiply+0x8e>
 8006e7a:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 8006e7e:	2b00      	cmp	r3, #0
 8006e80:	d05a      	beq.n	8006f38 <__multiply+0x144>
 8006e82:	6106      	str	r6, [r0, #16]
 8006e84:	b005      	add	sp, #20
 8006e86:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006e8a:	f843 2b04 	str.w	r2, [r3], #4
 8006e8e:	e7d8      	b.n	8006e42 <__multiply+0x4e>
 8006e90:	f8b3 a000 	ldrh.w	sl, [r3]
 8006e94:	f1ba 0f00 	cmp.w	sl, #0
 8006e98:	d023      	beq.n	8006ee2 <__multiply+0xee>
 8006e9a:	46a9      	mov	r9, r5
 8006e9c:	f04f 0c00 	mov.w	ip, #0
 8006ea0:	f104 0e14 	add.w	lr, r4, #20
 8006ea4:	f85e 2b04 	ldr.w	r2, [lr], #4
 8006ea8:	f8d9 1000 	ldr.w	r1, [r9]
 8006eac:	fa1f fb82 	uxth.w	fp, r2
 8006eb0:	b289      	uxth	r1, r1
 8006eb2:	fb0a 110b 	mla	r1, sl, fp, r1
 8006eb6:	4461      	add	r1, ip
 8006eb8:	f8d9 c000 	ldr.w	ip, [r9]
 8006ebc:	0c12      	lsrs	r2, r2, #16
 8006ebe:	ea4f 4c1c 	mov.w	ip, ip, lsr #16
 8006ec2:	fb0a c202 	mla	r2, sl, r2, ip
 8006ec6:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 8006eca:	b289      	uxth	r1, r1
 8006ecc:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 8006ed0:	4577      	cmp	r7, lr
 8006ed2:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 8006ed6:	f849 1b04 	str.w	r1, [r9], #4
 8006eda:	d8e3      	bhi.n	8006ea4 <__multiply+0xb0>
 8006edc:	9a01      	ldr	r2, [sp, #4]
 8006ede:	f845 c002 	str.w	ip, [r5, r2]
 8006ee2:	9a03      	ldr	r2, [sp, #12]
 8006ee4:	3304      	adds	r3, #4
 8006ee6:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 8006eea:	f1b9 0f00 	cmp.w	r9, #0
 8006eee:	d021      	beq.n	8006f34 <__multiply+0x140>
 8006ef0:	46ae      	mov	lr, r5
 8006ef2:	f04f 0a00 	mov.w	sl, #0
 8006ef6:	6829      	ldr	r1, [r5, #0]
 8006ef8:	f104 0c14 	add.w	ip, r4, #20
 8006efc:	f8bc b000 	ldrh.w	fp, [ip]
 8006f00:	f8be 2002 	ldrh.w	r2, [lr, #2]
 8006f04:	b289      	uxth	r1, r1
 8006f06:	fb09 220b 	mla	r2, r9, fp, r2
 8006f0a:	4452      	add	r2, sl
 8006f0c:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 8006f10:	f84e 1b04 	str.w	r1, [lr], #4
 8006f14:	f85c 1b04 	ldr.w	r1, [ip], #4
 8006f18:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 8006f1c:	f8be 1000 	ldrh.w	r1, [lr]
 8006f20:	4567      	cmp	r7, ip
 8006f22:	fb09 110a 	mla	r1, r9, sl, r1
 8006f26:	eb01 4112 	add.w	r1, r1, r2, lsr #16
 8006f2a:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 8006f2e:	d8e5      	bhi.n	8006efc <__multiply+0x108>
 8006f30:	9a01      	ldr	r2, [sp, #4]
 8006f32:	50a9      	str	r1, [r5, r2]
 8006f34:	3504      	adds	r5, #4
 8006f36:	e79a      	b.n	8006e6e <__multiply+0x7a>
 8006f38:	3e01      	subs	r6, #1
 8006f3a:	e79c      	b.n	8006e76 <__multiply+0x82>
 8006f3c:	08009635 	.word	0x08009635
 8006f40:	080096b7 	.word	0x080096b7

08006f44 <__pow5mult>:
 8006f44:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8006f48:	4615      	mov	r5, r2
 8006f4a:	f012 0203 	ands.w	r2, r2, #3
 8006f4e:	4606      	mov	r6, r0
 8006f50:	460f      	mov	r7, r1
 8006f52:	d007      	beq.n	8006f64 <__pow5mult+0x20>
 8006f54:	4c25      	ldr	r4, [pc, #148]	; (8006fec <__pow5mult+0xa8>)
 8006f56:	3a01      	subs	r2, #1
 8006f58:	2300      	movs	r3, #0
 8006f5a:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8006f5e:	f7ff fe55 	bl	8006c0c <__multadd>
 8006f62:	4607      	mov	r7, r0
 8006f64:	10ad      	asrs	r5, r5, #2
 8006f66:	d03d      	beq.n	8006fe4 <__pow5mult+0xa0>
 8006f68:	69f4      	ldr	r4, [r6, #28]
 8006f6a:	b97c      	cbnz	r4, 8006f8c <__pow5mult+0x48>
 8006f6c:	2010      	movs	r0, #16
 8006f6e:	f7ff fc7b 	bl	8006868 <malloc>
 8006f72:	4602      	mov	r2, r0
 8006f74:	61f0      	str	r0, [r6, #28]
 8006f76:	b928      	cbnz	r0, 8006f84 <__pow5mult+0x40>
 8006f78:	f240 11b3 	movw	r1, #435	; 0x1b3
 8006f7c:	4b1c      	ldr	r3, [pc, #112]	; (8006ff0 <__pow5mult+0xac>)
 8006f7e:	481d      	ldr	r0, [pc, #116]	; (8006ff4 <__pow5mult+0xb0>)
 8006f80:	f000 fc86 	bl	8007890 <__assert_func>
 8006f84:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8006f88:	6004      	str	r4, [r0, #0]
 8006f8a:	60c4      	str	r4, [r0, #12]
 8006f8c:	f8d6 801c 	ldr.w	r8, [r6, #28]
 8006f90:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8006f94:	b94c      	cbnz	r4, 8006faa <__pow5mult+0x66>
 8006f96:	f240 2171 	movw	r1, #625	; 0x271
 8006f9a:	4630      	mov	r0, r6
 8006f9c:	f7ff ff14 	bl	8006dc8 <__i2b>
 8006fa0:	2300      	movs	r3, #0
 8006fa2:	4604      	mov	r4, r0
 8006fa4:	f8c8 0008 	str.w	r0, [r8, #8]
 8006fa8:	6003      	str	r3, [r0, #0]
 8006faa:	f04f 0900 	mov.w	r9, #0
 8006fae:	07eb      	lsls	r3, r5, #31
 8006fb0:	d50a      	bpl.n	8006fc8 <__pow5mult+0x84>
 8006fb2:	4639      	mov	r1, r7
 8006fb4:	4622      	mov	r2, r4
 8006fb6:	4630      	mov	r0, r6
 8006fb8:	f7ff ff1c 	bl	8006df4 <__multiply>
 8006fbc:	4680      	mov	r8, r0
 8006fbe:	4639      	mov	r1, r7
 8006fc0:	4630      	mov	r0, r6
 8006fc2:	f7ff fe01 	bl	8006bc8 <_Bfree>
 8006fc6:	4647      	mov	r7, r8
 8006fc8:	106d      	asrs	r5, r5, #1
 8006fca:	d00b      	beq.n	8006fe4 <__pow5mult+0xa0>
 8006fcc:	6820      	ldr	r0, [r4, #0]
 8006fce:	b938      	cbnz	r0, 8006fe0 <__pow5mult+0x9c>
 8006fd0:	4622      	mov	r2, r4
 8006fd2:	4621      	mov	r1, r4
 8006fd4:	4630      	mov	r0, r6
 8006fd6:	f7ff ff0d 	bl	8006df4 <__multiply>
 8006fda:	6020      	str	r0, [r4, #0]
 8006fdc:	f8c0 9000 	str.w	r9, [r0]
 8006fe0:	4604      	mov	r4, r0
 8006fe2:	e7e4      	b.n	8006fae <__pow5mult+0x6a>
 8006fe4:	4638      	mov	r0, r7
 8006fe6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8006fea:	bf00      	nop
 8006fec:	08009800 	.word	0x08009800
 8006ff0:	080095c6 	.word	0x080095c6
 8006ff4:	080096b7 	.word	0x080096b7

08006ff8 <__lshift>:
 8006ff8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8006ffc:	460c      	mov	r4, r1
 8006ffe:	4607      	mov	r7, r0
 8007000:	4691      	mov	r9, r2
 8007002:	6923      	ldr	r3, [r4, #16]
 8007004:	6849      	ldr	r1, [r1, #4]
 8007006:	eb03 1862 	add.w	r8, r3, r2, asr #5
 800700a:	68a3      	ldr	r3, [r4, #8]
 800700c:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8007010:	f108 0601 	add.w	r6, r8, #1
 8007014:	42b3      	cmp	r3, r6
 8007016:	db0b      	blt.n	8007030 <__lshift+0x38>
 8007018:	4638      	mov	r0, r7
 800701a:	f7ff fd95 	bl	8006b48 <_Balloc>
 800701e:	4605      	mov	r5, r0
 8007020:	b948      	cbnz	r0, 8007036 <__lshift+0x3e>
 8007022:	4602      	mov	r2, r0
 8007024:	f44f 71ef 	mov.w	r1, #478	; 0x1de
 8007028:	4b27      	ldr	r3, [pc, #156]	; (80070c8 <__lshift+0xd0>)
 800702a:	4828      	ldr	r0, [pc, #160]	; (80070cc <__lshift+0xd4>)
 800702c:	f000 fc30 	bl	8007890 <__assert_func>
 8007030:	3101      	adds	r1, #1
 8007032:	005b      	lsls	r3, r3, #1
 8007034:	e7ee      	b.n	8007014 <__lshift+0x1c>
 8007036:	2300      	movs	r3, #0
 8007038:	f100 0114 	add.w	r1, r0, #20
 800703c:	f100 0210 	add.w	r2, r0, #16
 8007040:	4618      	mov	r0, r3
 8007042:	4553      	cmp	r3, sl
 8007044:	db33      	blt.n	80070ae <__lshift+0xb6>
 8007046:	6920      	ldr	r0, [r4, #16]
 8007048:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 800704c:	f104 0314 	add.w	r3, r4, #20
 8007050:	f019 091f 	ands.w	r9, r9, #31
 8007054:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8007058:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 800705c:	d02b      	beq.n	80070b6 <__lshift+0xbe>
 800705e:	468a      	mov	sl, r1
 8007060:	2200      	movs	r2, #0
 8007062:	f1c9 0e20 	rsb	lr, r9, #32
 8007066:	6818      	ldr	r0, [r3, #0]
 8007068:	fa00 f009 	lsl.w	r0, r0, r9
 800706c:	4310      	orrs	r0, r2
 800706e:	f84a 0b04 	str.w	r0, [sl], #4
 8007072:	f853 2b04 	ldr.w	r2, [r3], #4
 8007076:	459c      	cmp	ip, r3
 8007078:	fa22 f20e 	lsr.w	r2, r2, lr
 800707c:	d8f3      	bhi.n	8007066 <__lshift+0x6e>
 800707e:	ebac 0304 	sub.w	r3, ip, r4
 8007082:	3b15      	subs	r3, #21
 8007084:	f023 0303 	bic.w	r3, r3, #3
 8007088:	3304      	adds	r3, #4
 800708a:	f104 0015 	add.w	r0, r4, #21
 800708e:	4584      	cmp	ip, r0
 8007090:	bf38      	it	cc
 8007092:	2304      	movcc	r3, #4
 8007094:	50ca      	str	r2, [r1, r3]
 8007096:	b10a      	cbz	r2, 800709c <__lshift+0xa4>
 8007098:	f108 0602 	add.w	r6, r8, #2
 800709c:	3e01      	subs	r6, #1
 800709e:	4638      	mov	r0, r7
 80070a0:	4621      	mov	r1, r4
 80070a2:	612e      	str	r6, [r5, #16]
 80070a4:	f7ff fd90 	bl	8006bc8 <_Bfree>
 80070a8:	4628      	mov	r0, r5
 80070aa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80070ae:	f842 0f04 	str.w	r0, [r2, #4]!
 80070b2:	3301      	adds	r3, #1
 80070b4:	e7c5      	b.n	8007042 <__lshift+0x4a>
 80070b6:	3904      	subs	r1, #4
 80070b8:	f853 2b04 	ldr.w	r2, [r3], #4
 80070bc:	459c      	cmp	ip, r3
 80070be:	f841 2f04 	str.w	r2, [r1, #4]!
 80070c2:	d8f9      	bhi.n	80070b8 <__lshift+0xc0>
 80070c4:	e7ea      	b.n	800709c <__lshift+0xa4>
 80070c6:	bf00      	nop
 80070c8:	08009635 	.word	0x08009635
 80070cc:	080096b7 	.word	0x080096b7

080070d0 <__mcmp>:
 80070d0:	4603      	mov	r3, r0
 80070d2:	690a      	ldr	r2, [r1, #16]
 80070d4:	6900      	ldr	r0, [r0, #16]
 80070d6:	b530      	push	{r4, r5, lr}
 80070d8:	1a80      	subs	r0, r0, r2
 80070da:	d10d      	bne.n	80070f8 <__mcmp+0x28>
 80070dc:	3314      	adds	r3, #20
 80070de:	3114      	adds	r1, #20
 80070e0:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 80070e4:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 80070e8:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 80070ec:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 80070f0:	4295      	cmp	r5, r2
 80070f2:	d002      	beq.n	80070fa <__mcmp+0x2a>
 80070f4:	d304      	bcc.n	8007100 <__mcmp+0x30>
 80070f6:	2001      	movs	r0, #1
 80070f8:	bd30      	pop	{r4, r5, pc}
 80070fa:	42a3      	cmp	r3, r4
 80070fc:	d3f4      	bcc.n	80070e8 <__mcmp+0x18>
 80070fe:	e7fb      	b.n	80070f8 <__mcmp+0x28>
 8007100:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8007104:	e7f8      	b.n	80070f8 <__mcmp+0x28>
	...

08007108 <__mdiff>:
 8007108:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800710c:	460d      	mov	r5, r1
 800710e:	4607      	mov	r7, r0
 8007110:	4611      	mov	r1, r2
 8007112:	4628      	mov	r0, r5
 8007114:	4614      	mov	r4, r2
 8007116:	f7ff ffdb 	bl	80070d0 <__mcmp>
 800711a:	1e06      	subs	r6, r0, #0
 800711c:	d111      	bne.n	8007142 <__mdiff+0x3a>
 800711e:	4631      	mov	r1, r6
 8007120:	4638      	mov	r0, r7
 8007122:	f7ff fd11 	bl	8006b48 <_Balloc>
 8007126:	4602      	mov	r2, r0
 8007128:	b928      	cbnz	r0, 8007136 <__mdiff+0x2e>
 800712a:	f240 2137 	movw	r1, #567	; 0x237
 800712e:	4b3a      	ldr	r3, [pc, #232]	; (8007218 <__mdiff+0x110>)
 8007130:	483a      	ldr	r0, [pc, #232]	; (800721c <__mdiff+0x114>)
 8007132:	f000 fbad 	bl	8007890 <__assert_func>
 8007136:	2301      	movs	r3, #1
 8007138:	e9c0 3604 	strd	r3, r6, [r0, #16]
 800713c:	4610      	mov	r0, r2
 800713e:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007142:	bfa4      	itt	ge
 8007144:	4623      	movge	r3, r4
 8007146:	462c      	movge	r4, r5
 8007148:	4638      	mov	r0, r7
 800714a:	6861      	ldr	r1, [r4, #4]
 800714c:	bfa6      	itte	ge
 800714e:	461d      	movge	r5, r3
 8007150:	2600      	movge	r6, #0
 8007152:	2601      	movlt	r6, #1
 8007154:	f7ff fcf8 	bl	8006b48 <_Balloc>
 8007158:	4602      	mov	r2, r0
 800715a:	b918      	cbnz	r0, 8007164 <__mdiff+0x5c>
 800715c:	f240 2145 	movw	r1, #581	; 0x245
 8007160:	4b2d      	ldr	r3, [pc, #180]	; (8007218 <__mdiff+0x110>)
 8007162:	e7e5      	b.n	8007130 <__mdiff+0x28>
 8007164:	f102 0814 	add.w	r8, r2, #20
 8007168:	46c2      	mov	sl, r8
 800716a:	f04f 0c00 	mov.w	ip, #0
 800716e:	6927      	ldr	r7, [r4, #16]
 8007170:	60c6      	str	r6, [r0, #12]
 8007172:	692e      	ldr	r6, [r5, #16]
 8007174:	f104 0014 	add.w	r0, r4, #20
 8007178:	f105 0914 	add.w	r9, r5, #20
 800717c:	eb00 0e87 	add.w	lr, r0, r7, lsl #2
 8007180:	eb09 0686 	add.w	r6, r9, r6, lsl #2
 8007184:	3410      	adds	r4, #16
 8007186:	f854 bf04 	ldr.w	fp, [r4, #4]!
 800718a:	f859 3b04 	ldr.w	r3, [r9], #4
 800718e:	fa1f f18b 	uxth.w	r1, fp
 8007192:	4461      	add	r1, ip
 8007194:	fa1f fc83 	uxth.w	ip, r3
 8007198:	0c1b      	lsrs	r3, r3, #16
 800719a:	eba1 010c 	sub.w	r1, r1, ip
 800719e:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 80071a2:	eb03 4321 	add.w	r3, r3, r1, asr #16
 80071a6:	b289      	uxth	r1, r1
 80071a8:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 80071ac:	454e      	cmp	r6, r9
 80071ae:	ea4f 4c23 	mov.w	ip, r3, asr #16
 80071b2:	f84a 1b04 	str.w	r1, [sl], #4
 80071b6:	d8e6      	bhi.n	8007186 <__mdiff+0x7e>
 80071b8:	1b73      	subs	r3, r6, r5
 80071ba:	3b15      	subs	r3, #21
 80071bc:	f023 0303 	bic.w	r3, r3, #3
 80071c0:	3515      	adds	r5, #21
 80071c2:	3304      	adds	r3, #4
 80071c4:	42ae      	cmp	r6, r5
 80071c6:	bf38      	it	cc
 80071c8:	2304      	movcc	r3, #4
 80071ca:	4418      	add	r0, r3
 80071cc:	4443      	add	r3, r8
 80071ce:	461e      	mov	r6, r3
 80071d0:	4605      	mov	r5, r0
 80071d2:	4575      	cmp	r5, lr
 80071d4:	d30e      	bcc.n	80071f4 <__mdiff+0xec>
 80071d6:	f10e 0103 	add.w	r1, lr, #3
 80071da:	1a09      	subs	r1, r1, r0
 80071dc:	f021 0103 	bic.w	r1, r1, #3
 80071e0:	3803      	subs	r0, #3
 80071e2:	4586      	cmp	lr, r0
 80071e4:	bf38      	it	cc
 80071e6:	2100      	movcc	r1, #0
 80071e8:	440b      	add	r3, r1
 80071ea:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 80071ee:	b189      	cbz	r1, 8007214 <__mdiff+0x10c>
 80071f0:	6117      	str	r7, [r2, #16]
 80071f2:	e7a3      	b.n	800713c <__mdiff+0x34>
 80071f4:	f855 8b04 	ldr.w	r8, [r5], #4
 80071f8:	fa1f f188 	uxth.w	r1, r8
 80071fc:	4461      	add	r1, ip
 80071fe:	140c      	asrs	r4, r1, #16
 8007200:	eb04 4418 	add.w	r4, r4, r8, lsr #16
 8007204:	b289      	uxth	r1, r1
 8007206:	ea41 4104 	orr.w	r1, r1, r4, lsl #16
 800720a:	ea4f 4c24 	mov.w	ip, r4, asr #16
 800720e:	f846 1b04 	str.w	r1, [r6], #4
 8007212:	e7de      	b.n	80071d2 <__mdiff+0xca>
 8007214:	3f01      	subs	r7, #1
 8007216:	e7e8      	b.n	80071ea <__mdiff+0xe2>
 8007218:	08009635 	.word	0x08009635
 800721c:	080096b7 	.word	0x080096b7

08007220 <__ulp>:
 8007220:	4b0e      	ldr	r3, [pc, #56]	; (800725c <__ulp+0x3c>)
 8007222:	400b      	ands	r3, r1
 8007224:	f1a3 7350 	sub.w	r3, r3, #54525952	; 0x3400000
 8007228:	2b00      	cmp	r3, #0
 800722a:	dc08      	bgt.n	800723e <__ulp+0x1e>
 800722c:	425b      	negs	r3, r3
 800722e:	f1b3 7fa0 	cmp.w	r3, #20971520	; 0x1400000
 8007232:	ea4f 5223 	mov.w	r2, r3, asr #20
 8007236:	da04      	bge.n	8007242 <__ulp+0x22>
 8007238:	f44f 2300 	mov.w	r3, #524288	; 0x80000
 800723c:	4113      	asrs	r3, r2
 800723e:	2200      	movs	r2, #0
 8007240:	e008      	b.n	8007254 <__ulp+0x34>
 8007242:	f1a2 0314 	sub.w	r3, r2, #20
 8007246:	2b1e      	cmp	r3, #30
 8007248:	bfd6      	itet	le
 800724a:	f04f 4200 	movle.w	r2, #2147483648	; 0x80000000
 800724e:	2201      	movgt	r2, #1
 8007250:	40da      	lsrle	r2, r3
 8007252:	2300      	movs	r3, #0
 8007254:	4619      	mov	r1, r3
 8007256:	4610      	mov	r0, r2
 8007258:	4770      	bx	lr
 800725a:	bf00      	nop
 800725c:	7ff00000 	.word	0x7ff00000

08007260 <__b2d>:
 8007260:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007262:	6905      	ldr	r5, [r0, #16]
 8007264:	f100 0714 	add.w	r7, r0, #20
 8007268:	eb07 0585 	add.w	r5, r7, r5, lsl #2
 800726c:	f855 4c04 	ldr.w	r4, [r5, #-4]
 8007270:	1f2e      	subs	r6, r5, #4
 8007272:	4620      	mov	r0, r4
 8007274:	f7ff fd5a 	bl	8006d2c <__hi0bits>
 8007278:	f1c0 0220 	rsb	r2, r0, #32
 800727c:	280a      	cmp	r0, #10
 800727e:	4603      	mov	r3, r0
 8007280:	f8df c068 	ldr.w	ip, [pc, #104]	; 80072ec <__b2d+0x8c>
 8007284:	600a      	str	r2, [r1, #0]
 8007286:	dc12      	bgt.n	80072ae <__b2d+0x4e>
 8007288:	f1c0 0e0b 	rsb	lr, r0, #11
 800728c:	fa24 f20e 	lsr.w	r2, r4, lr
 8007290:	42b7      	cmp	r7, r6
 8007292:	ea42 010c 	orr.w	r1, r2, ip
 8007296:	bf2c      	ite	cs
 8007298:	2200      	movcs	r2, #0
 800729a:	f855 2c08 	ldrcc.w	r2, [r5, #-8]
 800729e:	3315      	adds	r3, #21
 80072a0:	fa04 f303 	lsl.w	r3, r4, r3
 80072a4:	fa22 f20e 	lsr.w	r2, r2, lr
 80072a8:	431a      	orrs	r2, r3
 80072aa:	4610      	mov	r0, r2
 80072ac:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80072ae:	42b7      	cmp	r7, r6
 80072b0:	bf2e      	itee	cs
 80072b2:	2200      	movcs	r2, #0
 80072b4:	f855 2c08 	ldrcc.w	r2, [r5, #-8]
 80072b8:	f1a5 0608 	subcc.w	r6, r5, #8
 80072bc:	3b0b      	subs	r3, #11
 80072be:	d012      	beq.n	80072e6 <__b2d+0x86>
 80072c0:	f1c3 0520 	rsb	r5, r3, #32
 80072c4:	fa22 f105 	lsr.w	r1, r2, r5
 80072c8:	409c      	lsls	r4, r3
 80072ca:	430c      	orrs	r4, r1
 80072cc:	42be      	cmp	r6, r7
 80072ce:	f044 517f 	orr.w	r1, r4, #1069547520	; 0x3fc00000
 80072d2:	bf94      	ite	ls
 80072d4:	2400      	movls	r4, #0
 80072d6:	f856 4c04 	ldrhi.w	r4, [r6, #-4]
 80072da:	409a      	lsls	r2, r3
 80072dc:	40ec      	lsrs	r4, r5
 80072de:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
 80072e2:	4322      	orrs	r2, r4
 80072e4:	e7e1      	b.n	80072aa <__b2d+0x4a>
 80072e6:	ea44 010c 	orr.w	r1, r4, ip
 80072ea:	e7de      	b.n	80072aa <__b2d+0x4a>
 80072ec:	3ff00000 	.word	0x3ff00000

080072f0 <__d2b>:
 80072f0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80072f2:	2101      	movs	r1, #1
 80072f4:	4617      	mov	r7, r2
 80072f6:	461c      	mov	r4, r3
 80072f8:	9e08      	ldr	r6, [sp, #32]
 80072fa:	f7ff fc25 	bl	8006b48 <_Balloc>
 80072fe:	4605      	mov	r5, r0
 8007300:	b930      	cbnz	r0, 8007310 <__d2b+0x20>
 8007302:	4602      	mov	r2, r0
 8007304:	f240 310f 	movw	r1, #783	; 0x30f
 8007308:	4b22      	ldr	r3, [pc, #136]	; (8007394 <__d2b+0xa4>)
 800730a:	4823      	ldr	r0, [pc, #140]	; (8007398 <__d2b+0xa8>)
 800730c:	f000 fac0 	bl	8007890 <__assert_func>
 8007310:	f3c4 0313 	ubfx	r3, r4, #0, #20
 8007314:	f3c4 540a 	ubfx	r4, r4, #20, #11
 8007318:	bb24      	cbnz	r4, 8007364 <__d2b+0x74>
 800731a:	2f00      	cmp	r7, #0
 800731c:	9301      	str	r3, [sp, #4]
 800731e:	d026      	beq.n	800736e <__d2b+0x7e>
 8007320:	4668      	mov	r0, sp
 8007322:	9700      	str	r7, [sp, #0]
 8007324:	f7ff fd22 	bl	8006d6c <__lo0bits>
 8007328:	e9dd 1200 	ldrd	r1, r2, [sp]
 800732c:	b1e8      	cbz	r0, 800736a <__d2b+0x7a>
 800732e:	f1c0 0320 	rsb	r3, r0, #32
 8007332:	fa02 f303 	lsl.w	r3, r2, r3
 8007336:	430b      	orrs	r3, r1
 8007338:	40c2      	lsrs	r2, r0
 800733a:	616b      	str	r3, [r5, #20]
 800733c:	9201      	str	r2, [sp, #4]
 800733e:	9b01      	ldr	r3, [sp, #4]
 8007340:	2b00      	cmp	r3, #0
 8007342:	bf14      	ite	ne
 8007344:	2102      	movne	r1, #2
 8007346:	2101      	moveq	r1, #1
 8007348:	61ab      	str	r3, [r5, #24]
 800734a:	6129      	str	r1, [r5, #16]
 800734c:	b1bc      	cbz	r4, 800737e <__d2b+0x8e>
 800734e:	f2a4 4433 	subw	r4, r4, #1075	; 0x433
 8007352:	4404      	add	r4, r0
 8007354:	6034      	str	r4, [r6, #0]
 8007356:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 800735a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800735c:	6018      	str	r0, [r3, #0]
 800735e:	4628      	mov	r0, r5
 8007360:	b003      	add	sp, #12
 8007362:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8007364:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8007368:	e7d7      	b.n	800731a <__d2b+0x2a>
 800736a:	6169      	str	r1, [r5, #20]
 800736c:	e7e7      	b.n	800733e <__d2b+0x4e>
 800736e:	a801      	add	r0, sp, #4
 8007370:	f7ff fcfc 	bl	8006d6c <__lo0bits>
 8007374:	9b01      	ldr	r3, [sp, #4]
 8007376:	2101      	movs	r1, #1
 8007378:	616b      	str	r3, [r5, #20]
 800737a:	3020      	adds	r0, #32
 800737c:	e7e5      	b.n	800734a <__d2b+0x5a>
 800737e:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 8007382:	eb05 0381 	add.w	r3, r5, r1, lsl #2
 8007386:	6030      	str	r0, [r6, #0]
 8007388:	6918      	ldr	r0, [r3, #16]
 800738a:	f7ff fccf 	bl	8006d2c <__hi0bits>
 800738e:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
 8007392:	e7e2      	b.n	800735a <__d2b+0x6a>
 8007394:	08009635 	.word	0x08009635
 8007398:	080096b7 	.word	0x080096b7

0800739c <__ratio>:
 800739c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80073a0:	4688      	mov	r8, r1
 80073a2:	4669      	mov	r1, sp
 80073a4:	4681      	mov	r9, r0
 80073a6:	f7ff ff5b 	bl	8007260 <__b2d>
 80073aa:	460f      	mov	r7, r1
 80073ac:	4604      	mov	r4, r0
 80073ae:	460d      	mov	r5, r1
 80073b0:	4640      	mov	r0, r8
 80073b2:	a901      	add	r1, sp, #4
 80073b4:	f7ff ff54 	bl	8007260 <__b2d>
 80073b8:	f8d9 3010 	ldr.w	r3, [r9, #16]
 80073bc:	f8d8 2010 	ldr.w	r2, [r8, #16]
 80073c0:	468b      	mov	fp, r1
 80073c2:	eba3 0c02 	sub.w	ip, r3, r2
 80073c6:	e9dd 3200 	ldrd	r3, r2, [sp]
 80073ca:	1a9b      	subs	r3, r3, r2
 80073cc:	eb03 134c 	add.w	r3, r3, ip, lsl #5
 80073d0:	2b00      	cmp	r3, #0
 80073d2:	bfd5      	itete	le
 80073d4:	460a      	movle	r2, r1
 80073d6:	462a      	movgt	r2, r5
 80073d8:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
 80073dc:	eb02 5703 	addgt.w	r7, r2, r3, lsl #20
 80073e0:	bfd8      	it	le
 80073e2:	eb02 5b03 	addle.w	fp, r2, r3, lsl #20
 80073e6:	465b      	mov	r3, fp
 80073e8:	4602      	mov	r2, r0
 80073ea:	4639      	mov	r1, r7
 80073ec:	4620      	mov	r0, r4
 80073ee:	f7f9 f9ad 	bl	800074c <__aeabi_ddiv>
 80073f2:	b003      	add	sp, #12
 80073f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080073f8 <__copybits>:
 80073f8:	3901      	subs	r1, #1
 80073fa:	b570      	push	{r4, r5, r6, lr}
 80073fc:	1149      	asrs	r1, r1, #5
 80073fe:	6914      	ldr	r4, [r2, #16]
 8007400:	3101      	adds	r1, #1
 8007402:	f102 0314 	add.w	r3, r2, #20
 8007406:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 800740a:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 800740e:	1f05      	subs	r5, r0, #4
 8007410:	42a3      	cmp	r3, r4
 8007412:	d30c      	bcc.n	800742e <__copybits+0x36>
 8007414:	1aa3      	subs	r3, r4, r2
 8007416:	3b11      	subs	r3, #17
 8007418:	f023 0303 	bic.w	r3, r3, #3
 800741c:	3211      	adds	r2, #17
 800741e:	42a2      	cmp	r2, r4
 8007420:	bf88      	it	hi
 8007422:	2300      	movhi	r3, #0
 8007424:	4418      	add	r0, r3
 8007426:	2300      	movs	r3, #0
 8007428:	4288      	cmp	r0, r1
 800742a:	d305      	bcc.n	8007438 <__copybits+0x40>
 800742c:	bd70      	pop	{r4, r5, r6, pc}
 800742e:	f853 6b04 	ldr.w	r6, [r3], #4
 8007432:	f845 6f04 	str.w	r6, [r5, #4]!
 8007436:	e7eb      	b.n	8007410 <__copybits+0x18>
 8007438:	f840 3b04 	str.w	r3, [r0], #4
 800743c:	e7f4      	b.n	8007428 <__copybits+0x30>

0800743e <__any_on>:
 800743e:	f100 0214 	add.w	r2, r0, #20
 8007442:	6900      	ldr	r0, [r0, #16]
 8007444:	114b      	asrs	r3, r1, #5
 8007446:	4298      	cmp	r0, r3
 8007448:	b510      	push	{r4, lr}
 800744a:	db11      	blt.n	8007470 <__any_on+0x32>
 800744c:	dd0a      	ble.n	8007464 <__any_on+0x26>
 800744e:	f011 011f 	ands.w	r1, r1, #31
 8007452:	d007      	beq.n	8007464 <__any_on+0x26>
 8007454:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 8007458:	fa24 f001 	lsr.w	r0, r4, r1
 800745c:	fa00 f101 	lsl.w	r1, r0, r1
 8007460:	428c      	cmp	r4, r1
 8007462:	d10b      	bne.n	800747c <__any_on+0x3e>
 8007464:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8007468:	4293      	cmp	r3, r2
 800746a:	d803      	bhi.n	8007474 <__any_on+0x36>
 800746c:	2000      	movs	r0, #0
 800746e:	bd10      	pop	{r4, pc}
 8007470:	4603      	mov	r3, r0
 8007472:	e7f7      	b.n	8007464 <__any_on+0x26>
 8007474:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 8007478:	2900      	cmp	r1, #0
 800747a:	d0f5      	beq.n	8007468 <__any_on+0x2a>
 800747c:	2001      	movs	r0, #1
 800747e:	e7f6      	b.n	800746e <__any_on+0x30>

08007480 <__sread>:
 8007480:	b510      	push	{r4, lr}
 8007482:	460c      	mov	r4, r1
 8007484:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8007488:	f000 f9ce 	bl	8007828 <_read_r>
 800748c:	2800      	cmp	r0, #0
 800748e:	bfab      	itete	ge
 8007490:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8007492:	89a3      	ldrhlt	r3, [r4, #12]
 8007494:	181b      	addge	r3, r3, r0
 8007496:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 800749a:	bfac      	ite	ge
 800749c:	6563      	strge	r3, [r4, #84]	; 0x54
 800749e:	81a3      	strhlt	r3, [r4, #12]
 80074a0:	bd10      	pop	{r4, pc}

080074a2 <__swrite>:
 80074a2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80074a6:	461f      	mov	r7, r3
 80074a8:	898b      	ldrh	r3, [r1, #12]
 80074aa:	4605      	mov	r5, r0
 80074ac:	05db      	lsls	r3, r3, #23
 80074ae:	460c      	mov	r4, r1
 80074b0:	4616      	mov	r6, r2
 80074b2:	d505      	bpl.n	80074c0 <__swrite+0x1e>
 80074b4:	2302      	movs	r3, #2
 80074b6:	2200      	movs	r2, #0
 80074b8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80074bc:	f000 f9a2 	bl	8007804 <_lseek_r>
 80074c0:	89a3      	ldrh	r3, [r4, #12]
 80074c2:	4632      	mov	r2, r6
 80074c4:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80074c8:	81a3      	strh	r3, [r4, #12]
 80074ca:	4628      	mov	r0, r5
 80074cc:	463b      	mov	r3, r7
 80074ce:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80074d2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80074d6:	f000 b9c9 	b.w	800786c <_write_r>

080074da <__sseek>:
 80074da:	b510      	push	{r4, lr}
 80074dc:	460c      	mov	r4, r1
 80074de:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80074e2:	f000 f98f 	bl	8007804 <_lseek_r>
 80074e6:	1c43      	adds	r3, r0, #1
 80074e8:	89a3      	ldrh	r3, [r4, #12]
 80074ea:	bf15      	itete	ne
 80074ec:	6560      	strne	r0, [r4, #84]	; 0x54
 80074ee:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 80074f2:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 80074f6:	81a3      	strheq	r3, [r4, #12]
 80074f8:	bf18      	it	ne
 80074fa:	81a3      	strhne	r3, [r4, #12]
 80074fc:	bd10      	pop	{r4, pc}

080074fe <__sclose>:
 80074fe:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8007502:	f000 b94d 	b.w	80077a0 <_close_r>

08007506 <_realloc_r>:
 8007506:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800750a:	4680      	mov	r8, r0
 800750c:	4614      	mov	r4, r2
 800750e:	460e      	mov	r6, r1
 8007510:	b921      	cbnz	r1, 800751c <_realloc_r+0x16>
 8007512:	4611      	mov	r1, r2
 8007514:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8007518:	f7ff b9ce 	b.w	80068b8 <_malloc_r>
 800751c:	b92a      	cbnz	r2, 800752a <_realloc_r+0x24>
 800751e:	f000 f9e9 	bl	80078f4 <_free_r>
 8007522:	4625      	mov	r5, r4
 8007524:	4628      	mov	r0, r5
 8007526:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800752a:	f000 fa2b 	bl	8007984 <_malloc_usable_size_r>
 800752e:	4284      	cmp	r4, r0
 8007530:	4607      	mov	r7, r0
 8007532:	d802      	bhi.n	800753a <_realloc_r+0x34>
 8007534:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 8007538:	d812      	bhi.n	8007560 <_realloc_r+0x5a>
 800753a:	4621      	mov	r1, r4
 800753c:	4640      	mov	r0, r8
 800753e:	f7ff f9bb 	bl	80068b8 <_malloc_r>
 8007542:	4605      	mov	r5, r0
 8007544:	2800      	cmp	r0, #0
 8007546:	d0ed      	beq.n	8007524 <_realloc_r+0x1e>
 8007548:	42bc      	cmp	r4, r7
 800754a:	4622      	mov	r2, r4
 800754c:	4631      	mov	r1, r6
 800754e:	bf28      	it	cs
 8007550:	463a      	movcs	r2, r7
 8007552:	f7fd fd0c 	bl	8004f6e <memcpy>
 8007556:	4631      	mov	r1, r6
 8007558:	4640      	mov	r0, r8
 800755a:	f000 f9cb 	bl	80078f4 <_free_r>
 800755e:	e7e1      	b.n	8007524 <_realloc_r+0x1e>
 8007560:	4635      	mov	r5, r6
 8007562:	e7df      	b.n	8007524 <_realloc_r+0x1e>

08007564 <__swbuf_r>:
 8007564:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007566:	460e      	mov	r6, r1
 8007568:	4614      	mov	r4, r2
 800756a:	4605      	mov	r5, r0
 800756c:	b118      	cbz	r0, 8007576 <__swbuf_r+0x12>
 800756e:	6a03      	ldr	r3, [r0, #32]
 8007570:	b90b      	cbnz	r3, 8007576 <__swbuf_r+0x12>
 8007572:	f7fc fdbd 	bl	80040f0 <__sinit>
 8007576:	69a3      	ldr	r3, [r4, #24]
 8007578:	60a3      	str	r3, [r4, #8]
 800757a:	89a3      	ldrh	r3, [r4, #12]
 800757c:	071a      	lsls	r2, r3, #28
 800757e:	d525      	bpl.n	80075cc <__swbuf_r+0x68>
 8007580:	6923      	ldr	r3, [r4, #16]
 8007582:	b31b      	cbz	r3, 80075cc <__swbuf_r+0x68>
 8007584:	6823      	ldr	r3, [r4, #0]
 8007586:	6922      	ldr	r2, [r4, #16]
 8007588:	b2f6      	uxtb	r6, r6
 800758a:	1a98      	subs	r0, r3, r2
 800758c:	6963      	ldr	r3, [r4, #20]
 800758e:	4637      	mov	r7, r6
 8007590:	4283      	cmp	r3, r0
 8007592:	dc04      	bgt.n	800759e <__swbuf_r+0x3a>
 8007594:	4621      	mov	r1, r4
 8007596:	4628      	mov	r0, r5
 8007598:	f7ff faa2 	bl	8006ae0 <_fflush_r>
 800759c:	b9e0      	cbnz	r0, 80075d8 <__swbuf_r+0x74>
 800759e:	68a3      	ldr	r3, [r4, #8]
 80075a0:	3b01      	subs	r3, #1
 80075a2:	60a3      	str	r3, [r4, #8]
 80075a4:	6823      	ldr	r3, [r4, #0]
 80075a6:	1c5a      	adds	r2, r3, #1
 80075a8:	6022      	str	r2, [r4, #0]
 80075aa:	701e      	strb	r6, [r3, #0]
 80075ac:	6962      	ldr	r2, [r4, #20]
 80075ae:	1c43      	adds	r3, r0, #1
 80075b0:	429a      	cmp	r2, r3
 80075b2:	d004      	beq.n	80075be <__swbuf_r+0x5a>
 80075b4:	89a3      	ldrh	r3, [r4, #12]
 80075b6:	07db      	lsls	r3, r3, #31
 80075b8:	d506      	bpl.n	80075c8 <__swbuf_r+0x64>
 80075ba:	2e0a      	cmp	r6, #10
 80075bc:	d104      	bne.n	80075c8 <__swbuf_r+0x64>
 80075be:	4621      	mov	r1, r4
 80075c0:	4628      	mov	r0, r5
 80075c2:	f7ff fa8d 	bl	8006ae0 <_fflush_r>
 80075c6:	b938      	cbnz	r0, 80075d8 <__swbuf_r+0x74>
 80075c8:	4638      	mov	r0, r7
 80075ca:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80075cc:	4621      	mov	r1, r4
 80075ce:	4628      	mov	r0, r5
 80075d0:	f000 f806 	bl	80075e0 <__swsetup_r>
 80075d4:	2800      	cmp	r0, #0
 80075d6:	d0d5      	beq.n	8007584 <__swbuf_r+0x20>
 80075d8:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
 80075dc:	e7f4      	b.n	80075c8 <__swbuf_r+0x64>
	...

080075e0 <__swsetup_r>:
 80075e0:	b538      	push	{r3, r4, r5, lr}
 80075e2:	4b2a      	ldr	r3, [pc, #168]	; (800768c <__swsetup_r+0xac>)
 80075e4:	4605      	mov	r5, r0
 80075e6:	6818      	ldr	r0, [r3, #0]
 80075e8:	460c      	mov	r4, r1
 80075ea:	b118      	cbz	r0, 80075f4 <__swsetup_r+0x14>
 80075ec:	6a03      	ldr	r3, [r0, #32]
 80075ee:	b90b      	cbnz	r3, 80075f4 <__swsetup_r+0x14>
 80075f0:	f7fc fd7e 	bl	80040f0 <__sinit>
 80075f4:	89a3      	ldrh	r3, [r4, #12]
 80075f6:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80075fa:	0718      	lsls	r0, r3, #28
 80075fc:	d422      	bmi.n	8007644 <__swsetup_r+0x64>
 80075fe:	06d9      	lsls	r1, r3, #27
 8007600:	d407      	bmi.n	8007612 <__swsetup_r+0x32>
 8007602:	2309      	movs	r3, #9
 8007604:	602b      	str	r3, [r5, #0]
 8007606:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 800760a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800760e:	81a3      	strh	r3, [r4, #12]
 8007610:	e034      	b.n	800767c <__swsetup_r+0x9c>
 8007612:	0758      	lsls	r0, r3, #29
 8007614:	d512      	bpl.n	800763c <__swsetup_r+0x5c>
 8007616:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8007618:	b141      	cbz	r1, 800762c <__swsetup_r+0x4c>
 800761a:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800761e:	4299      	cmp	r1, r3
 8007620:	d002      	beq.n	8007628 <__swsetup_r+0x48>
 8007622:	4628      	mov	r0, r5
 8007624:	f000 f966 	bl	80078f4 <_free_r>
 8007628:	2300      	movs	r3, #0
 800762a:	6363      	str	r3, [r4, #52]	; 0x34
 800762c:	89a3      	ldrh	r3, [r4, #12]
 800762e:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8007632:	81a3      	strh	r3, [r4, #12]
 8007634:	2300      	movs	r3, #0
 8007636:	6063      	str	r3, [r4, #4]
 8007638:	6923      	ldr	r3, [r4, #16]
 800763a:	6023      	str	r3, [r4, #0]
 800763c:	89a3      	ldrh	r3, [r4, #12]
 800763e:	f043 0308 	orr.w	r3, r3, #8
 8007642:	81a3      	strh	r3, [r4, #12]
 8007644:	6923      	ldr	r3, [r4, #16]
 8007646:	b94b      	cbnz	r3, 800765c <__swsetup_r+0x7c>
 8007648:	89a3      	ldrh	r3, [r4, #12]
 800764a:	f403 7320 	and.w	r3, r3, #640	; 0x280
 800764e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8007652:	d003      	beq.n	800765c <__swsetup_r+0x7c>
 8007654:	4621      	mov	r1, r4
 8007656:	4628      	mov	r0, r5
 8007658:	f000 f84c 	bl	80076f4 <__smakebuf_r>
 800765c:	89a0      	ldrh	r0, [r4, #12]
 800765e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8007662:	f010 0301 	ands.w	r3, r0, #1
 8007666:	d00a      	beq.n	800767e <__swsetup_r+0x9e>
 8007668:	2300      	movs	r3, #0
 800766a:	60a3      	str	r3, [r4, #8]
 800766c:	6963      	ldr	r3, [r4, #20]
 800766e:	425b      	negs	r3, r3
 8007670:	61a3      	str	r3, [r4, #24]
 8007672:	6923      	ldr	r3, [r4, #16]
 8007674:	b943      	cbnz	r3, 8007688 <__swsetup_r+0xa8>
 8007676:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 800767a:	d1c4      	bne.n	8007606 <__swsetup_r+0x26>
 800767c:	bd38      	pop	{r3, r4, r5, pc}
 800767e:	0781      	lsls	r1, r0, #30
 8007680:	bf58      	it	pl
 8007682:	6963      	ldrpl	r3, [r4, #20]
 8007684:	60a3      	str	r3, [r4, #8]
 8007686:	e7f4      	b.n	8007672 <__swsetup_r+0x92>
 8007688:	2000      	movs	r0, #0
 800768a:	e7f7      	b.n	800767c <__swsetup_r+0x9c>
 800768c:	200001c4 	.word	0x200001c4

08007690 <__ascii_wctomb>:
 8007690:	4603      	mov	r3, r0
 8007692:	4608      	mov	r0, r1
 8007694:	b141      	cbz	r1, 80076a8 <__ascii_wctomb+0x18>
 8007696:	2aff      	cmp	r2, #255	; 0xff
 8007698:	d904      	bls.n	80076a4 <__ascii_wctomb+0x14>
 800769a:	228a      	movs	r2, #138	; 0x8a
 800769c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80076a0:	601a      	str	r2, [r3, #0]
 80076a2:	4770      	bx	lr
 80076a4:	2001      	movs	r0, #1
 80076a6:	700a      	strb	r2, [r1, #0]
 80076a8:	4770      	bx	lr

080076aa <__swhatbuf_r>:
 80076aa:	b570      	push	{r4, r5, r6, lr}
 80076ac:	460c      	mov	r4, r1
 80076ae:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80076b2:	4615      	mov	r5, r2
 80076b4:	2900      	cmp	r1, #0
 80076b6:	461e      	mov	r6, r3
 80076b8:	b096      	sub	sp, #88	; 0x58
 80076ba:	da0c      	bge.n	80076d6 <__swhatbuf_r+0x2c>
 80076bc:	89a3      	ldrh	r3, [r4, #12]
 80076be:	2100      	movs	r1, #0
 80076c0:	f013 0f80 	tst.w	r3, #128	; 0x80
 80076c4:	bf0c      	ite	eq
 80076c6:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 80076ca:	2340      	movne	r3, #64	; 0x40
 80076cc:	2000      	movs	r0, #0
 80076ce:	6031      	str	r1, [r6, #0]
 80076d0:	602b      	str	r3, [r5, #0]
 80076d2:	b016      	add	sp, #88	; 0x58
 80076d4:	bd70      	pop	{r4, r5, r6, pc}
 80076d6:	466a      	mov	r2, sp
 80076d8:	f000 f872 	bl	80077c0 <_fstat_r>
 80076dc:	2800      	cmp	r0, #0
 80076de:	dbed      	blt.n	80076bc <__swhatbuf_r+0x12>
 80076e0:	9901      	ldr	r1, [sp, #4]
 80076e2:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 80076e6:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 80076ea:	4259      	negs	r1, r3
 80076ec:	4159      	adcs	r1, r3
 80076ee:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80076f2:	e7eb      	b.n	80076cc <__swhatbuf_r+0x22>

080076f4 <__smakebuf_r>:
 80076f4:	898b      	ldrh	r3, [r1, #12]
 80076f6:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80076f8:	079d      	lsls	r5, r3, #30
 80076fa:	4606      	mov	r6, r0
 80076fc:	460c      	mov	r4, r1
 80076fe:	d507      	bpl.n	8007710 <__smakebuf_r+0x1c>
 8007700:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8007704:	6023      	str	r3, [r4, #0]
 8007706:	6123      	str	r3, [r4, #16]
 8007708:	2301      	movs	r3, #1
 800770a:	6163      	str	r3, [r4, #20]
 800770c:	b002      	add	sp, #8
 800770e:	bd70      	pop	{r4, r5, r6, pc}
 8007710:	466a      	mov	r2, sp
 8007712:	ab01      	add	r3, sp, #4
 8007714:	f7ff ffc9 	bl	80076aa <__swhatbuf_r>
 8007718:	9900      	ldr	r1, [sp, #0]
 800771a:	4605      	mov	r5, r0
 800771c:	4630      	mov	r0, r6
 800771e:	f7ff f8cb 	bl	80068b8 <_malloc_r>
 8007722:	b948      	cbnz	r0, 8007738 <__smakebuf_r+0x44>
 8007724:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8007728:	059a      	lsls	r2, r3, #22
 800772a:	d4ef      	bmi.n	800770c <__smakebuf_r+0x18>
 800772c:	f023 0303 	bic.w	r3, r3, #3
 8007730:	f043 0302 	orr.w	r3, r3, #2
 8007734:	81a3      	strh	r3, [r4, #12]
 8007736:	e7e3      	b.n	8007700 <__smakebuf_r+0xc>
 8007738:	89a3      	ldrh	r3, [r4, #12]
 800773a:	6020      	str	r0, [r4, #0]
 800773c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8007740:	81a3      	strh	r3, [r4, #12]
 8007742:	9b00      	ldr	r3, [sp, #0]
 8007744:	6120      	str	r0, [r4, #16]
 8007746:	6163      	str	r3, [r4, #20]
 8007748:	9b01      	ldr	r3, [sp, #4]
 800774a:	b15b      	cbz	r3, 8007764 <__smakebuf_r+0x70>
 800774c:	4630      	mov	r0, r6
 800774e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8007752:	f000 f847 	bl	80077e4 <_isatty_r>
 8007756:	b128      	cbz	r0, 8007764 <__smakebuf_r+0x70>
 8007758:	89a3      	ldrh	r3, [r4, #12]
 800775a:	f023 0303 	bic.w	r3, r3, #3
 800775e:	f043 0301 	orr.w	r3, r3, #1
 8007762:	81a3      	strh	r3, [r4, #12]
 8007764:	89a3      	ldrh	r3, [r4, #12]
 8007766:	431d      	orrs	r5, r3
 8007768:	81a5      	strh	r5, [r4, #12]
 800776a:	e7cf      	b.n	800770c <__smakebuf_r+0x18>

0800776c <memmove>:
 800776c:	4288      	cmp	r0, r1
 800776e:	b510      	push	{r4, lr}
 8007770:	eb01 0402 	add.w	r4, r1, r2
 8007774:	d902      	bls.n	800777c <memmove+0x10>
 8007776:	4284      	cmp	r4, r0
 8007778:	4623      	mov	r3, r4
 800777a:	d807      	bhi.n	800778c <memmove+0x20>
 800777c:	1e43      	subs	r3, r0, #1
 800777e:	42a1      	cmp	r1, r4
 8007780:	d008      	beq.n	8007794 <memmove+0x28>
 8007782:	f811 2b01 	ldrb.w	r2, [r1], #1
 8007786:	f803 2f01 	strb.w	r2, [r3, #1]!
 800778a:	e7f8      	b.n	800777e <memmove+0x12>
 800778c:	4601      	mov	r1, r0
 800778e:	4402      	add	r2, r0
 8007790:	428a      	cmp	r2, r1
 8007792:	d100      	bne.n	8007796 <memmove+0x2a>
 8007794:	bd10      	pop	{r4, pc}
 8007796:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800779a:	f802 4d01 	strb.w	r4, [r2, #-1]!
 800779e:	e7f7      	b.n	8007790 <memmove+0x24>

080077a0 <_close_r>:
 80077a0:	b538      	push	{r3, r4, r5, lr}
 80077a2:	2300      	movs	r3, #0
 80077a4:	4d05      	ldr	r5, [pc, #20]	; (80077bc <_close_r+0x1c>)
 80077a6:	4604      	mov	r4, r0
 80077a8:	4608      	mov	r0, r1
 80077aa:	602b      	str	r3, [r5, #0]
 80077ac:	f7fb fbfc 	bl	8002fa8 <_close>
 80077b0:	1c43      	adds	r3, r0, #1
 80077b2:	d102      	bne.n	80077ba <_close_r+0x1a>
 80077b4:	682b      	ldr	r3, [r5, #0]
 80077b6:	b103      	cbz	r3, 80077ba <_close_r+0x1a>
 80077b8:	6023      	str	r3, [r4, #0]
 80077ba:	bd38      	pop	{r3, r4, r5, pc}
 80077bc:	200003f0 	.word	0x200003f0

080077c0 <_fstat_r>:
 80077c0:	b538      	push	{r3, r4, r5, lr}
 80077c2:	2300      	movs	r3, #0
 80077c4:	4d06      	ldr	r5, [pc, #24]	; (80077e0 <_fstat_r+0x20>)
 80077c6:	4604      	mov	r4, r0
 80077c8:	4608      	mov	r0, r1
 80077ca:	4611      	mov	r1, r2
 80077cc:	602b      	str	r3, [r5, #0]
 80077ce:	f7fb fbf6 	bl	8002fbe <_fstat>
 80077d2:	1c43      	adds	r3, r0, #1
 80077d4:	d102      	bne.n	80077dc <_fstat_r+0x1c>
 80077d6:	682b      	ldr	r3, [r5, #0]
 80077d8:	b103      	cbz	r3, 80077dc <_fstat_r+0x1c>
 80077da:	6023      	str	r3, [r4, #0]
 80077dc:	bd38      	pop	{r3, r4, r5, pc}
 80077de:	bf00      	nop
 80077e0:	200003f0 	.word	0x200003f0

080077e4 <_isatty_r>:
 80077e4:	b538      	push	{r3, r4, r5, lr}
 80077e6:	2300      	movs	r3, #0
 80077e8:	4d05      	ldr	r5, [pc, #20]	; (8007800 <_isatty_r+0x1c>)
 80077ea:	4604      	mov	r4, r0
 80077ec:	4608      	mov	r0, r1
 80077ee:	602b      	str	r3, [r5, #0]
 80077f0:	f7fb fbf4 	bl	8002fdc <_isatty>
 80077f4:	1c43      	adds	r3, r0, #1
 80077f6:	d102      	bne.n	80077fe <_isatty_r+0x1a>
 80077f8:	682b      	ldr	r3, [r5, #0]
 80077fa:	b103      	cbz	r3, 80077fe <_isatty_r+0x1a>
 80077fc:	6023      	str	r3, [r4, #0]
 80077fe:	bd38      	pop	{r3, r4, r5, pc}
 8007800:	200003f0 	.word	0x200003f0

08007804 <_lseek_r>:
 8007804:	b538      	push	{r3, r4, r5, lr}
 8007806:	4604      	mov	r4, r0
 8007808:	4608      	mov	r0, r1
 800780a:	4611      	mov	r1, r2
 800780c:	2200      	movs	r2, #0
 800780e:	4d05      	ldr	r5, [pc, #20]	; (8007824 <_lseek_r+0x20>)
 8007810:	602a      	str	r2, [r5, #0]
 8007812:	461a      	mov	r2, r3
 8007814:	f7fb fbec 	bl	8002ff0 <_lseek>
 8007818:	1c43      	adds	r3, r0, #1
 800781a:	d102      	bne.n	8007822 <_lseek_r+0x1e>
 800781c:	682b      	ldr	r3, [r5, #0]
 800781e:	b103      	cbz	r3, 8007822 <_lseek_r+0x1e>
 8007820:	6023      	str	r3, [r4, #0]
 8007822:	bd38      	pop	{r3, r4, r5, pc}
 8007824:	200003f0 	.word	0x200003f0

08007828 <_read_r>:
 8007828:	b538      	push	{r3, r4, r5, lr}
 800782a:	4604      	mov	r4, r0
 800782c:	4608      	mov	r0, r1
 800782e:	4611      	mov	r1, r2
 8007830:	2200      	movs	r2, #0
 8007832:	4d05      	ldr	r5, [pc, #20]	; (8007848 <_read_r+0x20>)
 8007834:	602a      	str	r2, [r5, #0]
 8007836:	461a      	mov	r2, r3
 8007838:	f7fb fb99 	bl	8002f6e <_read>
 800783c:	1c43      	adds	r3, r0, #1
 800783e:	d102      	bne.n	8007846 <_read_r+0x1e>
 8007840:	682b      	ldr	r3, [r5, #0]
 8007842:	b103      	cbz	r3, 8007846 <_read_r+0x1e>
 8007844:	6023      	str	r3, [r4, #0]
 8007846:	bd38      	pop	{r3, r4, r5, pc}
 8007848:	200003f0 	.word	0x200003f0

0800784c <_sbrk_r>:
 800784c:	b538      	push	{r3, r4, r5, lr}
 800784e:	2300      	movs	r3, #0
 8007850:	4d05      	ldr	r5, [pc, #20]	; (8007868 <_sbrk_r+0x1c>)
 8007852:	4604      	mov	r4, r0
 8007854:	4608      	mov	r0, r1
 8007856:	602b      	str	r3, [r5, #0]
 8007858:	f7fb fbd6 	bl	8003008 <_sbrk>
 800785c:	1c43      	adds	r3, r0, #1
 800785e:	d102      	bne.n	8007866 <_sbrk_r+0x1a>
 8007860:	682b      	ldr	r3, [r5, #0]
 8007862:	b103      	cbz	r3, 8007866 <_sbrk_r+0x1a>
 8007864:	6023      	str	r3, [r4, #0]
 8007866:	bd38      	pop	{r3, r4, r5, pc}
 8007868:	200003f0 	.word	0x200003f0

0800786c <_write_r>:
 800786c:	b538      	push	{r3, r4, r5, lr}
 800786e:	4604      	mov	r4, r0
 8007870:	4608      	mov	r0, r1
 8007872:	4611      	mov	r1, r2
 8007874:	2200      	movs	r2, #0
 8007876:	4d05      	ldr	r5, [pc, #20]	; (800788c <_write_r+0x20>)
 8007878:	602a      	str	r2, [r5, #0]
 800787a:	461a      	mov	r2, r3
 800787c:	f7fb fca6 	bl	80031cc <_write>
 8007880:	1c43      	adds	r3, r0, #1
 8007882:	d102      	bne.n	800788a <_write_r+0x1e>
 8007884:	682b      	ldr	r3, [r5, #0]
 8007886:	b103      	cbz	r3, 800788a <_write_r+0x1e>
 8007888:	6023      	str	r3, [r4, #0]
 800788a:	bd38      	pop	{r3, r4, r5, pc}
 800788c:	200003f0 	.word	0x200003f0

08007890 <__assert_func>:
 8007890:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8007892:	4614      	mov	r4, r2
 8007894:	461a      	mov	r2, r3
 8007896:	4b09      	ldr	r3, [pc, #36]	; (80078bc <__assert_func+0x2c>)
 8007898:	4605      	mov	r5, r0
 800789a:	681b      	ldr	r3, [r3, #0]
 800789c:	68d8      	ldr	r0, [r3, #12]
 800789e:	b14c      	cbz	r4, 80078b4 <__assert_func+0x24>
 80078a0:	4b07      	ldr	r3, [pc, #28]	; (80078c0 <__assert_func+0x30>)
 80078a2:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80078a6:	9100      	str	r1, [sp, #0]
 80078a8:	462b      	mov	r3, r5
 80078aa:	4906      	ldr	r1, [pc, #24]	; (80078c4 <__assert_func+0x34>)
 80078ac:	f000 f872 	bl	8007994 <fiprintf>
 80078b0:	f000 f882 	bl	80079b8 <abort>
 80078b4:	4b04      	ldr	r3, [pc, #16]	; (80078c8 <__assert_func+0x38>)
 80078b6:	461c      	mov	r4, r3
 80078b8:	e7f3      	b.n	80078a2 <__assert_func+0x12>
 80078ba:	bf00      	nop
 80078bc:	200001c4 	.word	0x200001c4
 80078c0:	0800980c 	.word	0x0800980c
 80078c4:	08009819 	.word	0x08009819
 80078c8:	08009847 	.word	0x08009847

080078cc <_calloc_r>:
 80078cc:	b570      	push	{r4, r5, r6, lr}
 80078ce:	fba1 5402 	umull	r5, r4, r1, r2
 80078d2:	b934      	cbnz	r4, 80078e2 <_calloc_r+0x16>
 80078d4:	4629      	mov	r1, r5
 80078d6:	f7fe ffef 	bl	80068b8 <_malloc_r>
 80078da:	4606      	mov	r6, r0
 80078dc:	b928      	cbnz	r0, 80078ea <_calloc_r+0x1e>
 80078de:	4630      	mov	r0, r6
 80078e0:	bd70      	pop	{r4, r5, r6, pc}
 80078e2:	220c      	movs	r2, #12
 80078e4:	2600      	movs	r6, #0
 80078e6:	6002      	str	r2, [r0, #0]
 80078e8:	e7f9      	b.n	80078de <_calloc_r+0x12>
 80078ea:	462a      	mov	r2, r5
 80078ec:	4621      	mov	r1, r4
 80078ee:	f7fd faf7 	bl	8004ee0 <memset>
 80078f2:	e7f4      	b.n	80078de <_calloc_r+0x12>

080078f4 <_free_r>:
 80078f4:	b538      	push	{r3, r4, r5, lr}
 80078f6:	4605      	mov	r5, r0
 80078f8:	2900      	cmp	r1, #0
 80078fa:	d040      	beq.n	800797e <_free_r+0x8a>
 80078fc:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8007900:	1f0c      	subs	r4, r1, #4
 8007902:	2b00      	cmp	r3, #0
 8007904:	bfb8      	it	lt
 8007906:	18e4      	addlt	r4, r4, r3
 8007908:	f7ff f912 	bl	8006b30 <__malloc_lock>
 800790c:	4a1c      	ldr	r2, [pc, #112]	; (8007980 <_free_r+0x8c>)
 800790e:	6813      	ldr	r3, [r2, #0]
 8007910:	b933      	cbnz	r3, 8007920 <_free_r+0x2c>
 8007912:	6063      	str	r3, [r4, #4]
 8007914:	6014      	str	r4, [r2, #0]
 8007916:	4628      	mov	r0, r5
 8007918:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800791c:	f7ff b90e 	b.w	8006b3c <__malloc_unlock>
 8007920:	42a3      	cmp	r3, r4
 8007922:	d908      	bls.n	8007936 <_free_r+0x42>
 8007924:	6820      	ldr	r0, [r4, #0]
 8007926:	1821      	adds	r1, r4, r0
 8007928:	428b      	cmp	r3, r1
 800792a:	bf01      	itttt	eq
 800792c:	6819      	ldreq	r1, [r3, #0]
 800792e:	685b      	ldreq	r3, [r3, #4]
 8007930:	1809      	addeq	r1, r1, r0
 8007932:	6021      	streq	r1, [r4, #0]
 8007934:	e7ed      	b.n	8007912 <_free_r+0x1e>
 8007936:	461a      	mov	r2, r3
 8007938:	685b      	ldr	r3, [r3, #4]
 800793a:	b10b      	cbz	r3, 8007940 <_free_r+0x4c>
 800793c:	42a3      	cmp	r3, r4
 800793e:	d9fa      	bls.n	8007936 <_free_r+0x42>
 8007940:	6811      	ldr	r1, [r2, #0]
 8007942:	1850      	adds	r0, r2, r1
 8007944:	42a0      	cmp	r0, r4
 8007946:	d10b      	bne.n	8007960 <_free_r+0x6c>
 8007948:	6820      	ldr	r0, [r4, #0]
 800794a:	4401      	add	r1, r0
 800794c:	1850      	adds	r0, r2, r1
 800794e:	4283      	cmp	r3, r0
 8007950:	6011      	str	r1, [r2, #0]
 8007952:	d1e0      	bne.n	8007916 <_free_r+0x22>
 8007954:	6818      	ldr	r0, [r3, #0]
 8007956:	685b      	ldr	r3, [r3, #4]
 8007958:	4408      	add	r0, r1
 800795a:	6010      	str	r0, [r2, #0]
 800795c:	6053      	str	r3, [r2, #4]
 800795e:	e7da      	b.n	8007916 <_free_r+0x22>
 8007960:	d902      	bls.n	8007968 <_free_r+0x74>
 8007962:	230c      	movs	r3, #12
 8007964:	602b      	str	r3, [r5, #0]
 8007966:	e7d6      	b.n	8007916 <_free_r+0x22>
 8007968:	6820      	ldr	r0, [r4, #0]
 800796a:	1821      	adds	r1, r4, r0
 800796c:	428b      	cmp	r3, r1
 800796e:	bf01      	itttt	eq
 8007970:	6819      	ldreq	r1, [r3, #0]
 8007972:	685b      	ldreq	r3, [r3, #4]
 8007974:	1809      	addeq	r1, r1, r0
 8007976:	6021      	streq	r1, [r4, #0]
 8007978:	6063      	str	r3, [r4, #4]
 800797a:	6054      	str	r4, [r2, #4]
 800797c:	e7cb      	b.n	8007916 <_free_r+0x22>
 800797e:	bd38      	pop	{r3, r4, r5, pc}
 8007980:	200003e8 	.word	0x200003e8

08007984 <_malloc_usable_size_r>:
 8007984:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8007988:	1f18      	subs	r0, r3, #4
 800798a:	2b00      	cmp	r3, #0
 800798c:	bfbc      	itt	lt
 800798e:	580b      	ldrlt	r3, [r1, r0]
 8007990:	18c0      	addlt	r0, r0, r3
 8007992:	4770      	bx	lr

08007994 <fiprintf>:
 8007994:	b40e      	push	{r1, r2, r3}
 8007996:	b503      	push	{r0, r1, lr}
 8007998:	4601      	mov	r1, r0
 800799a:	ab03      	add	r3, sp, #12
 800799c:	4805      	ldr	r0, [pc, #20]	; (80079b4 <fiprintf+0x20>)
 800799e:	f853 2b04 	ldr.w	r2, [r3], #4
 80079a2:	6800      	ldr	r0, [r0, #0]
 80079a4:	9301      	str	r3, [sp, #4]
 80079a6:	f7fe fe45 	bl	8006634 <_vfiprintf_r>
 80079aa:	b002      	add	sp, #8
 80079ac:	f85d eb04 	ldr.w	lr, [sp], #4
 80079b0:	b003      	add	sp, #12
 80079b2:	4770      	bx	lr
 80079b4:	200001c4 	.word	0x200001c4

080079b8 <abort>:
 80079b8:	2006      	movs	r0, #6
 80079ba:	b508      	push	{r3, lr}
 80079bc:	f000 f82c 	bl	8007a18 <raise>
 80079c0:	2001      	movs	r0, #1
 80079c2:	f7fb faca 	bl	8002f5a <_exit>

080079c6 <_raise_r>:
 80079c6:	291f      	cmp	r1, #31
 80079c8:	b538      	push	{r3, r4, r5, lr}
 80079ca:	4604      	mov	r4, r0
 80079cc:	460d      	mov	r5, r1
 80079ce:	d904      	bls.n	80079da <_raise_r+0x14>
 80079d0:	2316      	movs	r3, #22
 80079d2:	6003      	str	r3, [r0, #0]
 80079d4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80079d8:	bd38      	pop	{r3, r4, r5, pc}
 80079da:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 80079dc:	b112      	cbz	r2, 80079e4 <_raise_r+0x1e>
 80079de:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 80079e2:	b94b      	cbnz	r3, 80079f8 <_raise_r+0x32>
 80079e4:	4620      	mov	r0, r4
 80079e6:	f000 f831 	bl	8007a4c <_getpid_r>
 80079ea:	462a      	mov	r2, r5
 80079ec:	4601      	mov	r1, r0
 80079ee:	4620      	mov	r0, r4
 80079f0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80079f4:	f000 b818 	b.w	8007a28 <_kill_r>
 80079f8:	2b01      	cmp	r3, #1
 80079fa:	d00a      	beq.n	8007a12 <_raise_r+0x4c>
 80079fc:	1c59      	adds	r1, r3, #1
 80079fe:	d103      	bne.n	8007a08 <_raise_r+0x42>
 8007a00:	2316      	movs	r3, #22
 8007a02:	6003      	str	r3, [r0, #0]
 8007a04:	2001      	movs	r0, #1
 8007a06:	e7e7      	b.n	80079d8 <_raise_r+0x12>
 8007a08:	2400      	movs	r4, #0
 8007a0a:	4628      	mov	r0, r5
 8007a0c:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8007a10:	4798      	blx	r3
 8007a12:	2000      	movs	r0, #0
 8007a14:	e7e0      	b.n	80079d8 <_raise_r+0x12>
	...

08007a18 <raise>:
 8007a18:	4b02      	ldr	r3, [pc, #8]	; (8007a24 <raise+0xc>)
 8007a1a:	4601      	mov	r1, r0
 8007a1c:	6818      	ldr	r0, [r3, #0]
 8007a1e:	f7ff bfd2 	b.w	80079c6 <_raise_r>
 8007a22:	bf00      	nop
 8007a24:	200001c4 	.word	0x200001c4

08007a28 <_kill_r>:
 8007a28:	b538      	push	{r3, r4, r5, lr}
 8007a2a:	2300      	movs	r3, #0
 8007a2c:	4d06      	ldr	r5, [pc, #24]	; (8007a48 <_kill_r+0x20>)
 8007a2e:	4604      	mov	r4, r0
 8007a30:	4608      	mov	r0, r1
 8007a32:	4611      	mov	r1, r2
 8007a34:	602b      	str	r3, [r5, #0]
 8007a36:	f7fb fa80 	bl	8002f3a <_kill>
 8007a3a:	1c43      	adds	r3, r0, #1
 8007a3c:	d102      	bne.n	8007a44 <_kill_r+0x1c>
 8007a3e:	682b      	ldr	r3, [r5, #0]
 8007a40:	b103      	cbz	r3, 8007a44 <_kill_r+0x1c>
 8007a42:	6023      	str	r3, [r4, #0]
 8007a44:	bd38      	pop	{r3, r4, r5, pc}
 8007a46:	bf00      	nop
 8007a48:	200003f0 	.word	0x200003f0

08007a4c <_getpid_r>:
 8007a4c:	f7fb ba6e 	b.w	8002f2c <_getpid>

08007a50 <pow>:
 8007a50:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8007a54:	4614      	mov	r4, r2
 8007a56:	461d      	mov	r5, r3
 8007a58:	4680      	mov	r8, r0
 8007a5a:	4689      	mov	r9, r1
 8007a5c:	f000 faac 	bl	8007fb8 <__ieee754_pow>
 8007a60:	4622      	mov	r2, r4
 8007a62:	4606      	mov	r6, r0
 8007a64:	460f      	mov	r7, r1
 8007a66:	462b      	mov	r3, r5
 8007a68:	4620      	mov	r0, r4
 8007a6a:	4629      	mov	r1, r5
 8007a6c:	f7f8 ffde 	bl	8000a2c <__aeabi_dcmpun>
 8007a70:	bbc8      	cbnz	r0, 8007ae6 <pow+0x96>
 8007a72:	2200      	movs	r2, #0
 8007a74:	2300      	movs	r3, #0
 8007a76:	4640      	mov	r0, r8
 8007a78:	4649      	mov	r1, r9
 8007a7a:	f7f8 ffa5 	bl	80009c8 <__aeabi_dcmpeq>
 8007a7e:	b1b8      	cbz	r0, 8007ab0 <pow+0x60>
 8007a80:	2200      	movs	r2, #0
 8007a82:	2300      	movs	r3, #0
 8007a84:	4620      	mov	r0, r4
 8007a86:	4629      	mov	r1, r5
 8007a88:	f7f8 ff9e 	bl	80009c8 <__aeabi_dcmpeq>
 8007a8c:	2800      	cmp	r0, #0
 8007a8e:	d141      	bne.n	8007b14 <pow+0xc4>
 8007a90:	4620      	mov	r0, r4
 8007a92:	4629      	mov	r1, r5
 8007a94:	f000 f868 	bl	8007b68 <finite>
 8007a98:	b328      	cbz	r0, 8007ae6 <pow+0x96>
 8007a9a:	2200      	movs	r2, #0
 8007a9c:	2300      	movs	r3, #0
 8007a9e:	4620      	mov	r0, r4
 8007aa0:	4629      	mov	r1, r5
 8007aa2:	f7f8 ff9b 	bl	80009dc <__aeabi_dcmplt>
 8007aa6:	b1f0      	cbz	r0, 8007ae6 <pow+0x96>
 8007aa8:	f7fd fa26 	bl	8004ef8 <__errno>
 8007aac:	2322      	movs	r3, #34	; 0x22
 8007aae:	e019      	b.n	8007ae4 <pow+0x94>
 8007ab0:	4630      	mov	r0, r6
 8007ab2:	4639      	mov	r1, r7
 8007ab4:	f000 f858 	bl	8007b68 <finite>
 8007ab8:	b9c8      	cbnz	r0, 8007aee <pow+0x9e>
 8007aba:	4640      	mov	r0, r8
 8007abc:	4649      	mov	r1, r9
 8007abe:	f000 f853 	bl	8007b68 <finite>
 8007ac2:	b1a0      	cbz	r0, 8007aee <pow+0x9e>
 8007ac4:	4620      	mov	r0, r4
 8007ac6:	4629      	mov	r1, r5
 8007ac8:	f000 f84e 	bl	8007b68 <finite>
 8007acc:	b178      	cbz	r0, 8007aee <pow+0x9e>
 8007ace:	4632      	mov	r2, r6
 8007ad0:	463b      	mov	r3, r7
 8007ad2:	4630      	mov	r0, r6
 8007ad4:	4639      	mov	r1, r7
 8007ad6:	f7f8 ffa9 	bl	8000a2c <__aeabi_dcmpun>
 8007ada:	2800      	cmp	r0, #0
 8007adc:	d0e4      	beq.n	8007aa8 <pow+0x58>
 8007ade:	f7fd fa0b 	bl	8004ef8 <__errno>
 8007ae2:	2321      	movs	r3, #33	; 0x21
 8007ae4:	6003      	str	r3, [r0, #0]
 8007ae6:	4630      	mov	r0, r6
 8007ae8:	4639      	mov	r1, r7
 8007aea:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8007aee:	2200      	movs	r2, #0
 8007af0:	2300      	movs	r3, #0
 8007af2:	4630      	mov	r0, r6
 8007af4:	4639      	mov	r1, r7
 8007af6:	f7f8 ff67 	bl	80009c8 <__aeabi_dcmpeq>
 8007afa:	2800      	cmp	r0, #0
 8007afc:	d0f3      	beq.n	8007ae6 <pow+0x96>
 8007afe:	4640      	mov	r0, r8
 8007b00:	4649      	mov	r1, r9
 8007b02:	f000 f831 	bl	8007b68 <finite>
 8007b06:	2800      	cmp	r0, #0
 8007b08:	d0ed      	beq.n	8007ae6 <pow+0x96>
 8007b0a:	4620      	mov	r0, r4
 8007b0c:	4629      	mov	r1, r5
 8007b0e:	f000 f82b 	bl	8007b68 <finite>
 8007b12:	e7c8      	b.n	8007aa6 <pow+0x56>
 8007b14:	2600      	movs	r6, #0
 8007b16:	4f01      	ldr	r7, [pc, #4]	; (8007b1c <pow+0xcc>)
 8007b18:	e7e5      	b.n	8007ae6 <pow+0x96>
 8007b1a:	bf00      	nop
 8007b1c:	3ff00000 	.word	0x3ff00000

08007b20 <sqrt>:
 8007b20:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007b22:	4606      	mov	r6, r0
 8007b24:	460f      	mov	r7, r1
 8007b26:	f000 f825 	bl	8007b74 <__ieee754_sqrt>
 8007b2a:	4632      	mov	r2, r6
 8007b2c:	4604      	mov	r4, r0
 8007b2e:	460d      	mov	r5, r1
 8007b30:	463b      	mov	r3, r7
 8007b32:	4630      	mov	r0, r6
 8007b34:	4639      	mov	r1, r7
 8007b36:	f7f8 ff79 	bl	8000a2c <__aeabi_dcmpun>
 8007b3a:	b990      	cbnz	r0, 8007b62 <sqrt+0x42>
 8007b3c:	2200      	movs	r2, #0
 8007b3e:	2300      	movs	r3, #0
 8007b40:	4630      	mov	r0, r6
 8007b42:	4639      	mov	r1, r7
 8007b44:	f7f8 ff4a 	bl	80009dc <__aeabi_dcmplt>
 8007b48:	b158      	cbz	r0, 8007b62 <sqrt+0x42>
 8007b4a:	f7fd f9d5 	bl	8004ef8 <__errno>
 8007b4e:	2321      	movs	r3, #33	; 0x21
 8007b50:	2200      	movs	r2, #0
 8007b52:	6003      	str	r3, [r0, #0]
 8007b54:	2300      	movs	r3, #0
 8007b56:	4610      	mov	r0, r2
 8007b58:	4619      	mov	r1, r3
 8007b5a:	f7f8 fdf7 	bl	800074c <__aeabi_ddiv>
 8007b5e:	4604      	mov	r4, r0
 8007b60:	460d      	mov	r5, r1
 8007b62:	4620      	mov	r0, r4
 8007b64:	4629      	mov	r1, r5
 8007b66:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08007b68 <finite>:
 8007b68:	f041 4000 	orr.w	r0, r1, #2147483648	; 0x80000000
 8007b6c:	f500 1080 	add.w	r0, r0, #1048576	; 0x100000
 8007b70:	0fc0      	lsrs	r0, r0, #31
 8007b72:	4770      	bx	lr

08007b74 <__ieee754_sqrt>:
 8007b74:	f8df c1a0 	ldr.w	ip, [pc, #416]	; 8007d18 <__ieee754_sqrt+0x1a4>
 8007b78:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007b7c:	ea3c 0c01 	bics.w	ip, ip, r1
 8007b80:	460b      	mov	r3, r1
 8007b82:	4606      	mov	r6, r0
 8007b84:	460d      	mov	r5, r1
 8007b86:	460a      	mov	r2, r1
 8007b88:	4604      	mov	r4, r0
 8007b8a:	d10e      	bne.n	8007baa <__ieee754_sqrt+0x36>
 8007b8c:	4602      	mov	r2, r0
 8007b8e:	f7f8 fcb3 	bl	80004f8 <__aeabi_dmul>
 8007b92:	4602      	mov	r2, r0
 8007b94:	460b      	mov	r3, r1
 8007b96:	4630      	mov	r0, r6
 8007b98:	4629      	mov	r1, r5
 8007b9a:	f7f8 faf7 	bl	800018c <__adddf3>
 8007b9e:	4606      	mov	r6, r0
 8007ba0:	460d      	mov	r5, r1
 8007ba2:	4630      	mov	r0, r6
 8007ba4:	4629      	mov	r1, r5
 8007ba6:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007baa:	2900      	cmp	r1, #0
 8007bac:	dc0d      	bgt.n	8007bca <__ieee754_sqrt+0x56>
 8007bae:	f021 4c00 	bic.w	ip, r1, #2147483648	; 0x80000000
 8007bb2:	ea5c 0c00 	orrs.w	ip, ip, r0
 8007bb6:	d0f4      	beq.n	8007ba2 <__ieee754_sqrt+0x2e>
 8007bb8:	b139      	cbz	r1, 8007bca <__ieee754_sqrt+0x56>
 8007bba:	4602      	mov	r2, r0
 8007bbc:	f7f8 fae4 	bl	8000188 <__aeabi_dsub>
 8007bc0:	4602      	mov	r2, r0
 8007bc2:	460b      	mov	r3, r1
 8007bc4:	f7f8 fdc2 	bl	800074c <__aeabi_ddiv>
 8007bc8:	e7e9      	b.n	8007b9e <__ieee754_sqrt+0x2a>
 8007bca:	1512      	asrs	r2, r2, #20
 8007bcc:	f000 8089 	beq.w	8007ce2 <__ieee754_sqrt+0x16e>
 8007bd0:	2500      	movs	r5, #0
 8007bd2:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8007bd6:	f2a2 36ff 	subw	r6, r2, #1023	; 0x3ff
 8007bda:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8007bde:	07d2      	lsls	r2, r2, #31
 8007be0:	bf5c      	itt	pl
 8007be2:	005b      	lslpl	r3, r3, #1
 8007be4:	eb03 73d4 	addpl.w	r3, r3, r4, lsr #31
 8007be8:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8007bec:	bf58      	it	pl
 8007bee:	0064      	lslpl	r4, r4, #1
 8007bf0:	eb03 73d4 	add.w	r3, r3, r4, lsr #31
 8007bf4:	0062      	lsls	r2, r4, #1
 8007bf6:	2016      	movs	r0, #22
 8007bf8:	4629      	mov	r1, r5
 8007bfa:	f44f 1400 	mov.w	r4, #2097152	; 0x200000
 8007bfe:	1076      	asrs	r6, r6, #1
 8007c00:	190f      	adds	r7, r1, r4
 8007c02:	429f      	cmp	r7, r3
 8007c04:	bfde      	ittt	le
 8007c06:	1bdb      	suble	r3, r3, r7
 8007c08:	1939      	addle	r1, r7, r4
 8007c0a:	192d      	addle	r5, r5, r4
 8007c0c:	005b      	lsls	r3, r3, #1
 8007c0e:	3801      	subs	r0, #1
 8007c10:	eb03 73d2 	add.w	r3, r3, r2, lsr #31
 8007c14:	ea4f 0454 	mov.w	r4, r4, lsr #1
 8007c18:	ea4f 0242 	mov.w	r2, r2, lsl #1
 8007c1c:	d1f0      	bne.n	8007c00 <__ieee754_sqrt+0x8c>
 8007c1e:	4604      	mov	r4, r0
 8007c20:	2720      	movs	r7, #32
 8007c22:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 8007c26:	428b      	cmp	r3, r1
 8007c28:	eb0c 0e00 	add.w	lr, ip, r0
 8007c2c:	dc02      	bgt.n	8007c34 <__ieee754_sqrt+0xc0>
 8007c2e:	d113      	bne.n	8007c58 <__ieee754_sqrt+0xe4>
 8007c30:	4596      	cmp	lr, r2
 8007c32:	d811      	bhi.n	8007c58 <__ieee754_sqrt+0xe4>
 8007c34:	f1be 0f00 	cmp.w	lr, #0
 8007c38:	eb0e 000c 	add.w	r0, lr, ip
 8007c3c:	da56      	bge.n	8007cec <__ieee754_sqrt+0x178>
 8007c3e:	2800      	cmp	r0, #0
 8007c40:	db54      	blt.n	8007cec <__ieee754_sqrt+0x178>
 8007c42:	f101 0801 	add.w	r8, r1, #1
 8007c46:	1a5b      	subs	r3, r3, r1
 8007c48:	4641      	mov	r1, r8
 8007c4a:	4596      	cmp	lr, r2
 8007c4c:	bf88      	it	hi
 8007c4e:	f103 33ff 	addhi.w	r3, r3, #4294967295	; 0xffffffff
 8007c52:	eba2 020e 	sub.w	r2, r2, lr
 8007c56:	4464      	add	r4, ip
 8007c58:	005b      	lsls	r3, r3, #1
 8007c5a:	3f01      	subs	r7, #1
 8007c5c:	eb03 73d2 	add.w	r3, r3, r2, lsr #31
 8007c60:	ea4f 0c5c 	mov.w	ip, ip, lsr #1
 8007c64:	ea4f 0242 	mov.w	r2, r2, lsl #1
 8007c68:	d1dd      	bne.n	8007c26 <__ieee754_sqrt+0xb2>
 8007c6a:	4313      	orrs	r3, r2
 8007c6c:	d01b      	beq.n	8007ca6 <__ieee754_sqrt+0x132>
 8007c6e:	f8df a0ac 	ldr.w	sl, [pc, #172]	; 8007d1c <__ieee754_sqrt+0x1a8>
 8007c72:	f8df b0ac 	ldr.w	fp, [pc, #172]	; 8007d20 <__ieee754_sqrt+0x1ac>
 8007c76:	e9da 0100 	ldrd	r0, r1, [sl]
 8007c7a:	e9db 2300 	ldrd	r2, r3, [fp]
 8007c7e:	f7f8 fa83 	bl	8000188 <__aeabi_dsub>
 8007c82:	e9da 8900 	ldrd	r8, r9, [sl]
 8007c86:	4602      	mov	r2, r0
 8007c88:	460b      	mov	r3, r1
 8007c8a:	4640      	mov	r0, r8
 8007c8c:	4649      	mov	r1, r9
 8007c8e:	f7f8 feaf 	bl	80009f0 <__aeabi_dcmple>
 8007c92:	b140      	cbz	r0, 8007ca6 <__ieee754_sqrt+0x132>
 8007c94:	e9da 0100 	ldrd	r0, r1, [sl]
 8007c98:	e9db 2300 	ldrd	r2, r3, [fp]
 8007c9c:	f1b4 3fff 	cmp.w	r4, #4294967295	; 0xffffffff
 8007ca0:	d126      	bne.n	8007cf0 <__ieee754_sqrt+0x17c>
 8007ca2:	463c      	mov	r4, r7
 8007ca4:	3501      	adds	r5, #1
 8007ca6:	106b      	asrs	r3, r5, #1
 8007ca8:	0864      	lsrs	r4, r4, #1
 8007caa:	f103 537f 	add.w	r3, r3, #1069547520	; 0x3fc00000
 8007cae:	07ea      	lsls	r2, r5, #31
 8007cb0:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
 8007cb4:	bf48      	it	mi
 8007cb6:	f044 4400 	orrmi.w	r4, r4, #2147483648	; 0x80000000
 8007cba:	4620      	mov	r0, r4
 8007cbc:	eb03 5106 	add.w	r1, r3, r6, lsl #20
 8007cc0:	e76d      	b.n	8007b9e <__ieee754_sqrt+0x2a>
 8007cc2:	0ae3      	lsrs	r3, r4, #11
 8007cc4:	3915      	subs	r1, #21
 8007cc6:	0564      	lsls	r4, r4, #21
 8007cc8:	2b00      	cmp	r3, #0
 8007cca:	d0fa      	beq.n	8007cc2 <__ieee754_sqrt+0x14e>
 8007ccc:	02d8      	lsls	r0, r3, #11
 8007cce:	d50a      	bpl.n	8007ce6 <__ieee754_sqrt+0x172>
 8007cd0:	f1c2 0020 	rsb	r0, r2, #32
 8007cd4:	fa24 f000 	lsr.w	r0, r4, r0
 8007cd8:	1e55      	subs	r5, r2, #1
 8007cda:	4094      	lsls	r4, r2
 8007cdc:	4303      	orrs	r3, r0
 8007cde:	1b4a      	subs	r2, r1, r5
 8007ce0:	e776      	b.n	8007bd0 <__ieee754_sqrt+0x5c>
 8007ce2:	4611      	mov	r1, r2
 8007ce4:	e7f0      	b.n	8007cc8 <__ieee754_sqrt+0x154>
 8007ce6:	005b      	lsls	r3, r3, #1
 8007ce8:	3201      	adds	r2, #1
 8007cea:	e7ef      	b.n	8007ccc <__ieee754_sqrt+0x158>
 8007cec:	4688      	mov	r8, r1
 8007cee:	e7aa      	b.n	8007c46 <__ieee754_sqrt+0xd2>
 8007cf0:	f7f8 fa4c 	bl	800018c <__adddf3>
 8007cf4:	e9da 8900 	ldrd	r8, r9, [sl]
 8007cf8:	4602      	mov	r2, r0
 8007cfa:	460b      	mov	r3, r1
 8007cfc:	4640      	mov	r0, r8
 8007cfe:	4649      	mov	r1, r9
 8007d00:	f7f8 fe6c 	bl	80009dc <__aeabi_dcmplt>
 8007d04:	b120      	cbz	r0, 8007d10 <__ieee754_sqrt+0x19c>
 8007d06:	1ca1      	adds	r1, r4, #2
 8007d08:	bf08      	it	eq
 8007d0a:	3501      	addeq	r5, #1
 8007d0c:	3402      	adds	r4, #2
 8007d0e:	e7ca      	b.n	8007ca6 <__ieee754_sqrt+0x132>
 8007d10:	3401      	adds	r4, #1
 8007d12:	f024 0401 	bic.w	r4, r4, #1
 8007d16:	e7c6      	b.n	8007ca6 <__ieee754_sqrt+0x132>
 8007d18:	7ff00000 	.word	0x7ff00000
 8007d1c:	200001c8 	.word	0x200001c8
 8007d20:	200001d0 	.word	0x200001d0
 8007d24:	00000000 	.word	0x00000000

08007d28 <ceil>:
 8007d28:	f3c1 520a 	ubfx	r2, r1, #20, #11
 8007d2c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8007d30:	f2a2 36ff 	subw	r6, r2, #1023	; 0x3ff
 8007d34:	2e13      	cmp	r6, #19
 8007d36:	460b      	mov	r3, r1
 8007d38:	4607      	mov	r7, r0
 8007d3a:	460c      	mov	r4, r1
 8007d3c:	4605      	mov	r5, r0
 8007d3e:	dc30      	bgt.n	8007da2 <ceil+0x7a>
 8007d40:	2e00      	cmp	r6, #0
 8007d42:	da12      	bge.n	8007d6a <ceil+0x42>
 8007d44:	a334      	add	r3, pc, #208	; (adr r3, 8007e18 <ceil+0xf0>)
 8007d46:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007d4a:	f7f8 fa1f 	bl	800018c <__adddf3>
 8007d4e:	2200      	movs	r2, #0
 8007d50:	2300      	movs	r3, #0
 8007d52:	f7f8 fe61 	bl	8000a18 <__aeabi_dcmpgt>
 8007d56:	b128      	cbz	r0, 8007d64 <ceil+0x3c>
 8007d58:	2c00      	cmp	r4, #0
 8007d5a:	db54      	blt.n	8007e06 <ceil+0xde>
 8007d5c:	433c      	orrs	r4, r7
 8007d5e:	d056      	beq.n	8007e0e <ceil+0xe6>
 8007d60:	2500      	movs	r5, #0
 8007d62:	4c2f      	ldr	r4, [pc, #188]	; (8007e20 <ceil+0xf8>)
 8007d64:	4623      	mov	r3, r4
 8007d66:	462f      	mov	r7, r5
 8007d68:	e025      	b.n	8007db6 <ceil+0x8e>
 8007d6a:	4a2e      	ldr	r2, [pc, #184]	; (8007e24 <ceil+0xfc>)
 8007d6c:	fa42 f806 	asr.w	r8, r2, r6
 8007d70:	ea01 0208 	and.w	r2, r1, r8
 8007d74:	4302      	orrs	r2, r0
 8007d76:	d01e      	beq.n	8007db6 <ceil+0x8e>
 8007d78:	a327      	add	r3, pc, #156	; (adr r3, 8007e18 <ceil+0xf0>)
 8007d7a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007d7e:	f7f8 fa05 	bl	800018c <__adddf3>
 8007d82:	2200      	movs	r2, #0
 8007d84:	2300      	movs	r3, #0
 8007d86:	f7f8 fe47 	bl	8000a18 <__aeabi_dcmpgt>
 8007d8a:	2800      	cmp	r0, #0
 8007d8c:	d0ea      	beq.n	8007d64 <ceil+0x3c>
 8007d8e:	2c00      	cmp	r4, #0
 8007d90:	bfc2      	ittt	gt
 8007d92:	f44f 1380 	movgt.w	r3, #1048576	; 0x100000
 8007d96:	4133      	asrgt	r3, r6
 8007d98:	18e4      	addgt	r4, r4, r3
 8007d9a:	2500      	movs	r5, #0
 8007d9c:	ea24 0408 	bic.w	r4, r4, r8
 8007da0:	e7e0      	b.n	8007d64 <ceil+0x3c>
 8007da2:	2e33      	cmp	r6, #51	; 0x33
 8007da4:	dd0b      	ble.n	8007dbe <ceil+0x96>
 8007da6:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 8007daa:	d104      	bne.n	8007db6 <ceil+0x8e>
 8007dac:	4602      	mov	r2, r0
 8007dae:	f7f8 f9ed 	bl	800018c <__adddf3>
 8007db2:	4607      	mov	r7, r0
 8007db4:	460b      	mov	r3, r1
 8007db6:	4638      	mov	r0, r7
 8007db8:	4619      	mov	r1, r3
 8007dba:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8007dbe:	f04f 38ff 	mov.w	r8, #4294967295	; 0xffffffff
 8007dc2:	f2a2 4213 	subw	r2, r2, #1043	; 0x413
 8007dc6:	fa28 f802 	lsr.w	r8, r8, r2
 8007dca:	ea10 0f08 	tst.w	r0, r8
 8007dce:	d0f2      	beq.n	8007db6 <ceil+0x8e>
 8007dd0:	a311      	add	r3, pc, #68	; (adr r3, 8007e18 <ceil+0xf0>)
 8007dd2:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007dd6:	f7f8 f9d9 	bl	800018c <__adddf3>
 8007dda:	2200      	movs	r2, #0
 8007ddc:	2300      	movs	r3, #0
 8007dde:	f7f8 fe1b 	bl	8000a18 <__aeabi_dcmpgt>
 8007de2:	2800      	cmp	r0, #0
 8007de4:	d0be      	beq.n	8007d64 <ceil+0x3c>
 8007de6:	2c00      	cmp	r4, #0
 8007de8:	dd0a      	ble.n	8007e00 <ceil+0xd8>
 8007dea:	2e14      	cmp	r6, #20
 8007dec:	d101      	bne.n	8007df2 <ceil+0xca>
 8007dee:	3401      	adds	r4, #1
 8007df0:	e006      	b.n	8007e00 <ceil+0xd8>
 8007df2:	2301      	movs	r3, #1
 8007df4:	f1c6 0634 	rsb	r6, r6, #52	; 0x34
 8007df8:	40b3      	lsls	r3, r6
 8007dfa:	441d      	add	r5, r3
 8007dfc:	42af      	cmp	r7, r5
 8007dfe:	d8f6      	bhi.n	8007dee <ceil+0xc6>
 8007e00:	ea25 0508 	bic.w	r5, r5, r8
 8007e04:	e7ae      	b.n	8007d64 <ceil+0x3c>
 8007e06:	2500      	movs	r5, #0
 8007e08:	f04f 4400 	mov.w	r4, #2147483648	; 0x80000000
 8007e0c:	e7aa      	b.n	8007d64 <ceil+0x3c>
 8007e0e:	4625      	mov	r5, r4
 8007e10:	e7a8      	b.n	8007d64 <ceil+0x3c>
 8007e12:	bf00      	nop
 8007e14:	f3af 8000 	nop.w
 8007e18:	8800759c 	.word	0x8800759c
 8007e1c:	7e37e43c 	.word	0x7e37e43c
 8007e20:	3ff00000 	.word	0x3ff00000
 8007e24:	000fffff 	.word	0x000fffff

08007e28 <floor>:
 8007e28:	f3c1 520a 	ubfx	r2, r1, #20, #11
 8007e2c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8007e30:	f2a2 36ff 	subw	r6, r2, #1023	; 0x3ff
 8007e34:	2e13      	cmp	r6, #19
 8007e36:	460b      	mov	r3, r1
 8007e38:	4607      	mov	r7, r0
 8007e3a:	460c      	mov	r4, r1
 8007e3c:	4605      	mov	r5, r0
 8007e3e:	dc32      	bgt.n	8007ea6 <floor+0x7e>
 8007e40:	2e00      	cmp	r6, #0
 8007e42:	da14      	bge.n	8007e6e <floor+0x46>
 8007e44:	a334      	add	r3, pc, #208	; (adr r3, 8007f18 <floor+0xf0>)
 8007e46:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007e4a:	f7f8 f99f 	bl	800018c <__adddf3>
 8007e4e:	2200      	movs	r2, #0
 8007e50:	2300      	movs	r3, #0
 8007e52:	f7f8 fde1 	bl	8000a18 <__aeabi_dcmpgt>
 8007e56:	b138      	cbz	r0, 8007e68 <floor+0x40>
 8007e58:	2c00      	cmp	r4, #0
 8007e5a:	da56      	bge.n	8007f0a <floor+0xe2>
 8007e5c:	f024 4400 	bic.w	r4, r4, #2147483648	; 0x80000000
 8007e60:	4325      	orrs	r5, r4
 8007e62:	d055      	beq.n	8007f10 <floor+0xe8>
 8007e64:	2500      	movs	r5, #0
 8007e66:	4c2e      	ldr	r4, [pc, #184]	; (8007f20 <floor+0xf8>)
 8007e68:	4623      	mov	r3, r4
 8007e6a:	462f      	mov	r7, r5
 8007e6c:	e025      	b.n	8007eba <floor+0x92>
 8007e6e:	4a2d      	ldr	r2, [pc, #180]	; (8007f24 <floor+0xfc>)
 8007e70:	fa42 f806 	asr.w	r8, r2, r6
 8007e74:	ea01 0208 	and.w	r2, r1, r8
 8007e78:	4302      	orrs	r2, r0
 8007e7a:	d01e      	beq.n	8007eba <floor+0x92>
 8007e7c:	a326      	add	r3, pc, #152	; (adr r3, 8007f18 <floor+0xf0>)
 8007e7e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007e82:	f7f8 f983 	bl	800018c <__adddf3>
 8007e86:	2200      	movs	r2, #0
 8007e88:	2300      	movs	r3, #0
 8007e8a:	f7f8 fdc5 	bl	8000a18 <__aeabi_dcmpgt>
 8007e8e:	2800      	cmp	r0, #0
 8007e90:	d0ea      	beq.n	8007e68 <floor+0x40>
 8007e92:	2c00      	cmp	r4, #0
 8007e94:	bfbe      	ittt	lt
 8007e96:	f44f 1380 	movlt.w	r3, #1048576	; 0x100000
 8007e9a:	4133      	asrlt	r3, r6
 8007e9c:	18e4      	addlt	r4, r4, r3
 8007e9e:	2500      	movs	r5, #0
 8007ea0:	ea24 0408 	bic.w	r4, r4, r8
 8007ea4:	e7e0      	b.n	8007e68 <floor+0x40>
 8007ea6:	2e33      	cmp	r6, #51	; 0x33
 8007ea8:	dd0b      	ble.n	8007ec2 <floor+0x9a>
 8007eaa:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 8007eae:	d104      	bne.n	8007eba <floor+0x92>
 8007eb0:	4602      	mov	r2, r0
 8007eb2:	f7f8 f96b 	bl	800018c <__adddf3>
 8007eb6:	4607      	mov	r7, r0
 8007eb8:	460b      	mov	r3, r1
 8007eba:	4638      	mov	r0, r7
 8007ebc:	4619      	mov	r1, r3
 8007ebe:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8007ec2:	f04f 38ff 	mov.w	r8, #4294967295	; 0xffffffff
 8007ec6:	f2a2 4213 	subw	r2, r2, #1043	; 0x413
 8007eca:	fa28 f802 	lsr.w	r8, r8, r2
 8007ece:	ea10 0f08 	tst.w	r0, r8
 8007ed2:	d0f2      	beq.n	8007eba <floor+0x92>
 8007ed4:	a310      	add	r3, pc, #64	; (adr r3, 8007f18 <floor+0xf0>)
 8007ed6:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007eda:	f7f8 f957 	bl	800018c <__adddf3>
 8007ede:	2200      	movs	r2, #0
 8007ee0:	2300      	movs	r3, #0
 8007ee2:	f7f8 fd99 	bl	8000a18 <__aeabi_dcmpgt>
 8007ee6:	2800      	cmp	r0, #0
 8007ee8:	d0be      	beq.n	8007e68 <floor+0x40>
 8007eea:	2c00      	cmp	r4, #0
 8007eec:	da0a      	bge.n	8007f04 <floor+0xdc>
 8007eee:	2e14      	cmp	r6, #20
 8007ef0:	d101      	bne.n	8007ef6 <floor+0xce>
 8007ef2:	3401      	adds	r4, #1
 8007ef4:	e006      	b.n	8007f04 <floor+0xdc>
 8007ef6:	2301      	movs	r3, #1
 8007ef8:	f1c6 0634 	rsb	r6, r6, #52	; 0x34
 8007efc:	40b3      	lsls	r3, r6
 8007efe:	441d      	add	r5, r3
 8007f00:	42af      	cmp	r7, r5
 8007f02:	d8f6      	bhi.n	8007ef2 <floor+0xca>
 8007f04:	ea25 0508 	bic.w	r5, r5, r8
 8007f08:	e7ae      	b.n	8007e68 <floor+0x40>
 8007f0a:	2500      	movs	r5, #0
 8007f0c:	462c      	mov	r4, r5
 8007f0e:	e7ab      	b.n	8007e68 <floor+0x40>
 8007f10:	f04f 4400 	mov.w	r4, #2147483648	; 0x80000000
 8007f14:	e7a8      	b.n	8007e68 <floor+0x40>
 8007f16:	bf00      	nop
 8007f18:	8800759c 	.word	0x8800759c
 8007f1c:	7e37e43c 	.word	0x7e37e43c
 8007f20:	bff00000 	.word	0xbff00000
 8007f24:	000fffff 	.word	0x000fffff

08007f28 <round>:
 8007f28:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007f2a:	f3c1 570a 	ubfx	r7, r1, #20, #11
 8007f2e:	f2a7 32ff 	subw	r2, r7, #1023	; 0x3ff
 8007f32:	2a13      	cmp	r2, #19
 8007f34:	460b      	mov	r3, r1
 8007f36:	4605      	mov	r5, r0
 8007f38:	460c      	mov	r4, r1
 8007f3a:	dc18      	bgt.n	8007f6e <round+0x46>
 8007f3c:	2a00      	cmp	r2, #0
 8007f3e:	da09      	bge.n	8007f54 <round+0x2c>
 8007f40:	3201      	adds	r2, #1
 8007f42:	f001 4300 	and.w	r3, r1, #2147483648	; 0x80000000
 8007f46:	d103      	bne.n	8007f50 <round+0x28>
 8007f48:	f043 537f 	orr.w	r3, r3, #1069547520	; 0x3fc00000
 8007f4c:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
 8007f50:	2200      	movs	r2, #0
 8007f52:	e029      	b.n	8007fa8 <round+0x80>
 8007f54:	4816      	ldr	r0, [pc, #88]	; (8007fb0 <round+0x88>)
 8007f56:	4110      	asrs	r0, r2
 8007f58:	4001      	ands	r1, r0
 8007f5a:	4329      	orrs	r1, r5
 8007f5c:	d011      	beq.n	8007f82 <round+0x5a>
 8007f5e:	f44f 2100 	mov.w	r1, #524288	; 0x80000
 8007f62:	fa41 f202 	asr.w	r2, r1, r2
 8007f66:	4413      	add	r3, r2
 8007f68:	ea23 0300 	bic.w	r3, r3, r0
 8007f6c:	e7f0      	b.n	8007f50 <round+0x28>
 8007f6e:	2a33      	cmp	r2, #51	; 0x33
 8007f70:	dd0a      	ble.n	8007f88 <round+0x60>
 8007f72:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 8007f76:	d104      	bne.n	8007f82 <round+0x5a>
 8007f78:	4602      	mov	r2, r0
 8007f7a:	f7f8 f907 	bl	800018c <__adddf3>
 8007f7e:	4605      	mov	r5, r0
 8007f80:	460c      	mov	r4, r1
 8007f82:	4628      	mov	r0, r5
 8007f84:	4621      	mov	r1, r4
 8007f86:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8007f88:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8007f8c:	f2a7 4713 	subw	r7, r7, #1043	; 0x413
 8007f90:	40f8      	lsrs	r0, r7
 8007f92:	4228      	tst	r0, r5
 8007f94:	d0f5      	beq.n	8007f82 <round+0x5a>
 8007f96:	f1c2 0133 	rsb	r1, r2, #51	; 0x33
 8007f9a:	2201      	movs	r2, #1
 8007f9c:	408a      	lsls	r2, r1
 8007f9e:	1952      	adds	r2, r2, r5
 8007fa0:	bf28      	it	cs
 8007fa2:	3301      	addcs	r3, #1
 8007fa4:	ea22 0200 	bic.w	r2, r2, r0
 8007fa8:	4619      	mov	r1, r3
 8007faa:	4610      	mov	r0, r2
 8007fac:	e7e7      	b.n	8007f7e <round+0x56>
 8007fae:	bf00      	nop
 8007fb0:	000fffff 	.word	0x000fffff
 8007fb4:	00000000 	.word	0x00000000

08007fb8 <__ieee754_pow>:
 8007fb8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007fbc:	b093      	sub	sp, #76	; 0x4c
 8007fbe:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8007fc2:	e9dd 2702 	ldrd	r2, r7, [sp, #8]
 8007fc6:	f027 4600 	bic.w	r6, r7, #2147483648	; 0x80000000
 8007fca:	4689      	mov	r9, r1
 8007fcc:	ea56 0102 	orrs.w	r1, r6, r2
 8007fd0:	4680      	mov	r8, r0
 8007fd2:	d111      	bne.n	8007ff8 <__ieee754_pow+0x40>
 8007fd4:	1803      	adds	r3, r0, r0
 8007fd6:	f489 2200 	eor.w	r2, r9, #524288	; 0x80000
 8007fda:	4152      	adcs	r2, r2
 8007fdc:	4299      	cmp	r1, r3
 8007fde:	4b82      	ldr	r3, [pc, #520]	; (80081e8 <__ieee754_pow+0x230>)
 8007fe0:	4193      	sbcs	r3, r2
 8007fe2:	f080 84ba 	bcs.w	800895a <__ieee754_pow+0x9a2>
 8007fe6:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8007fea:	4640      	mov	r0, r8
 8007fec:	4649      	mov	r1, r9
 8007fee:	f7f8 f8cd 	bl	800018c <__adddf3>
 8007ff2:	4683      	mov	fp, r0
 8007ff4:	468c      	mov	ip, r1
 8007ff6:	e06f      	b.n	80080d8 <__ieee754_pow+0x120>
 8007ff8:	4b7c      	ldr	r3, [pc, #496]	; (80081ec <__ieee754_pow+0x234>)
 8007ffa:	f029 4400 	bic.w	r4, r9, #2147483648	; 0x80000000
 8007ffe:	429c      	cmp	r4, r3
 8008000:	464d      	mov	r5, r9
 8008002:	4682      	mov	sl, r0
 8008004:	dc06      	bgt.n	8008014 <__ieee754_pow+0x5c>
 8008006:	d101      	bne.n	800800c <__ieee754_pow+0x54>
 8008008:	2800      	cmp	r0, #0
 800800a:	d1ec      	bne.n	8007fe6 <__ieee754_pow+0x2e>
 800800c:	429e      	cmp	r6, r3
 800800e:	dc01      	bgt.n	8008014 <__ieee754_pow+0x5c>
 8008010:	d10f      	bne.n	8008032 <__ieee754_pow+0x7a>
 8008012:	b172      	cbz	r2, 8008032 <__ieee754_pow+0x7a>
 8008014:	f105 4540 	add.w	r5, r5, #3221225472	; 0xc0000000
 8008018:	f505 1580 	add.w	r5, r5, #1048576	; 0x100000
 800801c:	ea55 050a 	orrs.w	r5, r5, sl
 8008020:	d1e1      	bne.n	8007fe6 <__ieee754_pow+0x2e>
 8008022:	e9dd 3202 	ldrd	r3, r2, [sp, #8]
 8008026:	18db      	adds	r3, r3, r3
 8008028:	f482 2200 	eor.w	r2, r2, #524288	; 0x80000
 800802c:	4152      	adcs	r2, r2
 800802e:	429d      	cmp	r5, r3
 8008030:	e7d5      	b.n	8007fde <__ieee754_pow+0x26>
 8008032:	2d00      	cmp	r5, #0
 8008034:	da39      	bge.n	80080aa <__ieee754_pow+0xf2>
 8008036:	4b6e      	ldr	r3, [pc, #440]	; (80081f0 <__ieee754_pow+0x238>)
 8008038:	429e      	cmp	r6, r3
 800803a:	dc52      	bgt.n	80080e2 <__ieee754_pow+0x12a>
 800803c:	f1a3 7354 	sub.w	r3, r3, #55574528	; 0x3500000
 8008040:	429e      	cmp	r6, r3
 8008042:	f340 849d 	ble.w	8008980 <__ieee754_pow+0x9c8>
 8008046:	1533      	asrs	r3, r6, #20
 8008048:	f2a3 33ff 	subw	r3, r3, #1023	; 0x3ff
 800804c:	2b14      	cmp	r3, #20
 800804e:	dd0f      	ble.n	8008070 <__ieee754_pow+0xb8>
 8008050:	f1c3 0334 	rsb	r3, r3, #52	; 0x34
 8008054:	fa22 f103 	lsr.w	r1, r2, r3
 8008058:	fa01 f303 	lsl.w	r3, r1, r3
 800805c:	4293      	cmp	r3, r2
 800805e:	f040 848f 	bne.w	8008980 <__ieee754_pow+0x9c8>
 8008062:	f001 0101 	and.w	r1, r1, #1
 8008066:	f1c1 0302 	rsb	r3, r1, #2
 800806a:	9300      	str	r3, [sp, #0]
 800806c:	b182      	cbz	r2, 8008090 <__ieee754_pow+0xd8>
 800806e:	e05d      	b.n	800812c <__ieee754_pow+0x174>
 8008070:	2a00      	cmp	r2, #0
 8008072:	d159      	bne.n	8008128 <__ieee754_pow+0x170>
 8008074:	f1c3 0314 	rsb	r3, r3, #20
 8008078:	fa46 f103 	asr.w	r1, r6, r3
 800807c:	fa01 f303 	lsl.w	r3, r1, r3
 8008080:	42b3      	cmp	r3, r6
 8008082:	f040 847a 	bne.w	800897a <__ieee754_pow+0x9c2>
 8008086:	f001 0101 	and.w	r1, r1, #1
 800808a:	f1c1 0302 	rsb	r3, r1, #2
 800808e:	9300      	str	r3, [sp, #0]
 8008090:	4b58      	ldr	r3, [pc, #352]	; (80081f4 <__ieee754_pow+0x23c>)
 8008092:	429e      	cmp	r6, r3
 8008094:	d132      	bne.n	80080fc <__ieee754_pow+0x144>
 8008096:	2f00      	cmp	r7, #0
 8008098:	f280 846b 	bge.w	8008972 <__ieee754_pow+0x9ba>
 800809c:	4642      	mov	r2, r8
 800809e:	464b      	mov	r3, r9
 80080a0:	2000      	movs	r0, #0
 80080a2:	4954      	ldr	r1, [pc, #336]	; (80081f4 <__ieee754_pow+0x23c>)
 80080a4:	f7f8 fb52 	bl	800074c <__aeabi_ddiv>
 80080a8:	e7a3      	b.n	8007ff2 <__ieee754_pow+0x3a>
 80080aa:	2300      	movs	r3, #0
 80080ac:	9300      	str	r3, [sp, #0]
 80080ae:	2a00      	cmp	r2, #0
 80080b0:	d13c      	bne.n	800812c <__ieee754_pow+0x174>
 80080b2:	4b4e      	ldr	r3, [pc, #312]	; (80081ec <__ieee754_pow+0x234>)
 80080b4:	429e      	cmp	r6, r3
 80080b6:	d1eb      	bne.n	8008090 <__ieee754_pow+0xd8>
 80080b8:	f104 4340 	add.w	r3, r4, #3221225472	; 0xc0000000
 80080bc:	f503 1380 	add.w	r3, r3, #1048576	; 0x100000
 80080c0:	ea53 030a 	orrs.w	r3, r3, sl
 80080c4:	f000 8449 	beq.w	800895a <__ieee754_pow+0x9a2>
 80080c8:	4b4b      	ldr	r3, [pc, #300]	; (80081f8 <__ieee754_pow+0x240>)
 80080ca:	429c      	cmp	r4, r3
 80080cc:	dd0b      	ble.n	80080e6 <__ieee754_pow+0x12e>
 80080ce:	2f00      	cmp	r7, #0
 80080d0:	f2c0 8449 	blt.w	8008966 <__ieee754_pow+0x9ae>
 80080d4:	e9dd bc02 	ldrd	fp, ip, [sp, #8]
 80080d8:	4658      	mov	r0, fp
 80080da:	4661      	mov	r1, ip
 80080dc:	b013      	add	sp, #76	; 0x4c
 80080de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80080e2:	2302      	movs	r3, #2
 80080e4:	e7e2      	b.n	80080ac <__ieee754_pow+0xf4>
 80080e6:	2f00      	cmp	r7, #0
 80080e8:	f04f 0b00 	mov.w	fp, #0
 80080ec:	f04f 0c00 	mov.w	ip, #0
 80080f0:	daf2      	bge.n	80080d8 <__ieee754_pow+0x120>
 80080f2:	e9dd b302 	ldrd	fp, r3, [sp, #8]
 80080f6:	f103 4c00 	add.w	ip, r3, #2147483648	; 0x80000000
 80080fa:	e7ed      	b.n	80080d8 <__ieee754_pow+0x120>
 80080fc:	f1b7 4f80 	cmp.w	r7, #1073741824	; 0x40000000
 8008100:	d106      	bne.n	8008110 <__ieee754_pow+0x158>
 8008102:	4642      	mov	r2, r8
 8008104:	464b      	mov	r3, r9
 8008106:	4640      	mov	r0, r8
 8008108:	4649      	mov	r1, r9
 800810a:	f7f8 f9f5 	bl	80004f8 <__aeabi_dmul>
 800810e:	e770      	b.n	8007ff2 <__ieee754_pow+0x3a>
 8008110:	4b3a      	ldr	r3, [pc, #232]	; (80081fc <__ieee754_pow+0x244>)
 8008112:	429f      	cmp	r7, r3
 8008114:	d10a      	bne.n	800812c <__ieee754_pow+0x174>
 8008116:	2d00      	cmp	r5, #0
 8008118:	db08      	blt.n	800812c <__ieee754_pow+0x174>
 800811a:	4640      	mov	r0, r8
 800811c:	4649      	mov	r1, r9
 800811e:	b013      	add	sp, #76	; 0x4c
 8008120:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008124:	f7ff bd26 	b.w	8007b74 <__ieee754_sqrt>
 8008128:	2300      	movs	r3, #0
 800812a:	9300      	str	r3, [sp, #0]
 800812c:	4640      	mov	r0, r8
 800812e:	4649      	mov	r1, r9
 8008130:	f000 fc84 	bl	8008a3c <fabs>
 8008134:	4683      	mov	fp, r0
 8008136:	468c      	mov	ip, r1
 8008138:	f1ba 0f00 	cmp.w	sl, #0
 800813c:	d128      	bne.n	8008190 <__ieee754_pow+0x1d8>
 800813e:	b124      	cbz	r4, 800814a <__ieee754_pow+0x192>
 8008140:	4b2c      	ldr	r3, [pc, #176]	; (80081f4 <__ieee754_pow+0x23c>)
 8008142:	f025 4240 	bic.w	r2, r5, #3221225472	; 0xc0000000
 8008146:	429a      	cmp	r2, r3
 8008148:	d122      	bne.n	8008190 <__ieee754_pow+0x1d8>
 800814a:	2f00      	cmp	r7, #0
 800814c:	da07      	bge.n	800815e <__ieee754_pow+0x1a6>
 800814e:	465a      	mov	r2, fp
 8008150:	4663      	mov	r3, ip
 8008152:	2000      	movs	r0, #0
 8008154:	4927      	ldr	r1, [pc, #156]	; (80081f4 <__ieee754_pow+0x23c>)
 8008156:	f7f8 faf9 	bl	800074c <__aeabi_ddiv>
 800815a:	4683      	mov	fp, r0
 800815c:	468c      	mov	ip, r1
 800815e:	2d00      	cmp	r5, #0
 8008160:	daba      	bge.n	80080d8 <__ieee754_pow+0x120>
 8008162:	9b00      	ldr	r3, [sp, #0]
 8008164:	f104 4440 	add.w	r4, r4, #3221225472	; 0xc0000000
 8008168:	f504 1480 	add.w	r4, r4, #1048576	; 0x100000
 800816c:	431c      	orrs	r4, r3
 800816e:	d108      	bne.n	8008182 <__ieee754_pow+0x1ca>
 8008170:	465a      	mov	r2, fp
 8008172:	4663      	mov	r3, ip
 8008174:	4658      	mov	r0, fp
 8008176:	4661      	mov	r1, ip
 8008178:	f7f8 f806 	bl	8000188 <__aeabi_dsub>
 800817c:	4602      	mov	r2, r0
 800817e:	460b      	mov	r3, r1
 8008180:	e790      	b.n	80080a4 <__ieee754_pow+0xec>
 8008182:	9b00      	ldr	r3, [sp, #0]
 8008184:	2b01      	cmp	r3, #1
 8008186:	d1a7      	bne.n	80080d8 <__ieee754_pow+0x120>
 8008188:	f10c 4300 	add.w	r3, ip, #2147483648	; 0x80000000
 800818c:	469c      	mov	ip, r3
 800818e:	e7a3      	b.n	80080d8 <__ieee754_pow+0x120>
 8008190:	0feb      	lsrs	r3, r5, #31
 8008192:	3b01      	subs	r3, #1
 8008194:	930c      	str	r3, [sp, #48]	; 0x30
 8008196:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8008198:	9b00      	ldr	r3, [sp, #0]
 800819a:	4313      	orrs	r3, r2
 800819c:	d104      	bne.n	80081a8 <__ieee754_pow+0x1f0>
 800819e:	4642      	mov	r2, r8
 80081a0:	464b      	mov	r3, r9
 80081a2:	4640      	mov	r0, r8
 80081a4:	4649      	mov	r1, r9
 80081a6:	e7e7      	b.n	8008178 <__ieee754_pow+0x1c0>
 80081a8:	4b15      	ldr	r3, [pc, #84]	; (8008200 <__ieee754_pow+0x248>)
 80081aa:	429e      	cmp	r6, r3
 80081ac:	f340 80f6 	ble.w	800839c <__ieee754_pow+0x3e4>
 80081b0:	f103 7304 	add.w	r3, r3, #34603008	; 0x2100000
 80081b4:	429e      	cmp	r6, r3
 80081b6:	4b10      	ldr	r3, [pc, #64]	; (80081f8 <__ieee754_pow+0x240>)
 80081b8:	dd09      	ble.n	80081ce <__ieee754_pow+0x216>
 80081ba:	429c      	cmp	r4, r3
 80081bc:	dc0c      	bgt.n	80081d8 <__ieee754_pow+0x220>
 80081be:	2f00      	cmp	r7, #0
 80081c0:	da0c      	bge.n	80081dc <__ieee754_pow+0x224>
 80081c2:	2000      	movs	r0, #0
 80081c4:	b013      	add	sp, #76	; 0x4c
 80081c6:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80081ca:	f000 bc32 	b.w	8008a32 <__math_oflow>
 80081ce:	429c      	cmp	r4, r3
 80081d0:	dbf5      	blt.n	80081be <__ieee754_pow+0x206>
 80081d2:	4b08      	ldr	r3, [pc, #32]	; (80081f4 <__ieee754_pow+0x23c>)
 80081d4:	429c      	cmp	r4, r3
 80081d6:	dd15      	ble.n	8008204 <__ieee754_pow+0x24c>
 80081d8:	2f00      	cmp	r7, #0
 80081da:	dcf2      	bgt.n	80081c2 <__ieee754_pow+0x20a>
 80081dc:	2000      	movs	r0, #0
 80081de:	b013      	add	sp, #76	; 0x4c
 80081e0:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80081e4:	f000 bc20 	b.w	8008a28 <__math_uflow>
 80081e8:	fff00000 	.word	0xfff00000
 80081ec:	7ff00000 	.word	0x7ff00000
 80081f0:	433fffff 	.word	0x433fffff
 80081f4:	3ff00000 	.word	0x3ff00000
 80081f8:	3fefffff 	.word	0x3fefffff
 80081fc:	3fe00000 	.word	0x3fe00000
 8008200:	41e00000 	.word	0x41e00000
 8008204:	4661      	mov	r1, ip
 8008206:	2200      	movs	r2, #0
 8008208:	4658      	mov	r0, fp
 800820a:	4b5f      	ldr	r3, [pc, #380]	; (8008388 <__ieee754_pow+0x3d0>)
 800820c:	f7f7 ffbc 	bl	8000188 <__aeabi_dsub>
 8008210:	a355      	add	r3, pc, #340	; (adr r3, 8008368 <__ieee754_pow+0x3b0>)
 8008212:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008216:	4604      	mov	r4, r0
 8008218:	460d      	mov	r5, r1
 800821a:	f7f8 f96d 	bl	80004f8 <__aeabi_dmul>
 800821e:	a354      	add	r3, pc, #336	; (adr r3, 8008370 <__ieee754_pow+0x3b8>)
 8008220:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008224:	4606      	mov	r6, r0
 8008226:	460f      	mov	r7, r1
 8008228:	4620      	mov	r0, r4
 800822a:	4629      	mov	r1, r5
 800822c:	f7f8 f964 	bl	80004f8 <__aeabi_dmul>
 8008230:	2200      	movs	r2, #0
 8008232:	4682      	mov	sl, r0
 8008234:	468b      	mov	fp, r1
 8008236:	4620      	mov	r0, r4
 8008238:	4629      	mov	r1, r5
 800823a:	4b54      	ldr	r3, [pc, #336]	; (800838c <__ieee754_pow+0x3d4>)
 800823c:	f7f8 f95c 	bl	80004f8 <__aeabi_dmul>
 8008240:	4602      	mov	r2, r0
 8008242:	460b      	mov	r3, r1
 8008244:	a14c      	add	r1, pc, #304	; (adr r1, 8008378 <__ieee754_pow+0x3c0>)
 8008246:	e9d1 0100 	ldrd	r0, r1, [r1]
 800824a:	f7f7 ff9d 	bl	8000188 <__aeabi_dsub>
 800824e:	4622      	mov	r2, r4
 8008250:	462b      	mov	r3, r5
 8008252:	f7f8 f951 	bl	80004f8 <__aeabi_dmul>
 8008256:	4602      	mov	r2, r0
 8008258:	460b      	mov	r3, r1
 800825a:	2000      	movs	r0, #0
 800825c:	494c      	ldr	r1, [pc, #304]	; (8008390 <__ieee754_pow+0x3d8>)
 800825e:	f7f7 ff93 	bl	8000188 <__aeabi_dsub>
 8008262:	4622      	mov	r2, r4
 8008264:	462b      	mov	r3, r5
 8008266:	4680      	mov	r8, r0
 8008268:	4689      	mov	r9, r1
 800826a:	4620      	mov	r0, r4
 800826c:	4629      	mov	r1, r5
 800826e:	f7f8 f943 	bl	80004f8 <__aeabi_dmul>
 8008272:	4602      	mov	r2, r0
 8008274:	460b      	mov	r3, r1
 8008276:	4640      	mov	r0, r8
 8008278:	4649      	mov	r1, r9
 800827a:	f7f8 f93d 	bl	80004f8 <__aeabi_dmul>
 800827e:	a340      	add	r3, pc, #256	; (adr r3, 8008380 <__ieee754_pow+0x3c8>)
 8008280:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008284:	f7f8 f938 	bl	80004f8 <__aeabi_dmul>
 8008288:	4602      	mov	r2, r0
 800828a:	460b      	mov	r3, r1
 800828c:	4650      	mov	r0, sl
 800828e:	4659      	mov	r1, fp
 8008290:	f7f7 ff7a 	bl	8000188 <__aeabi_dsub>
 8008294:	4602      	mov	r2, r0
 8008296:	460b      	mov	r3, r1
 8008298:	4604      	mov	r4, r0
 800829a:	460d      	mov	r5, r1
 800829c:	4630      	mov	r0, r6
 800829e:	4639      	mov	r1, r7
 80082a0:	f7f7 ff74 	bl	800018c <__adddf3>
 80082a4:	2000      	movs	r0, #0
 80082a6:	4632      	mov	r2, r6
 80082a8:	463b      	mov	r3, r7
 80082aa:	4682      	mov	sl, r0
 80082ac:	468b      	mov	fp, r1
 80082ae:	f7f7 ff6b 	bl	8000188 <__aeabi_dsub>
 80082b2:	4602      	mov	r2, r0
 80082b4:	460b      	mov	r3, r1
 80082b6:	4620      	mov	r0, r4
 80082b8:	4629      	mov	r1, r5
 80082ba:	f7f7 ff65 	bl	8000188 <__aeabi_dsub>
 80082be:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
 80082c2:	9b00      	ldr	r3, [sp, #0]
 80082c4:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80082c6:	3b01      	subs	r3, #1
 80082c8:	4313      	orrs	r3, r2
 80082ca:	f04f 0600 	mov.w	r6, #0
 80082ce:	f04f 0200 	mov.w	r2, #0
 80082d2:	bf0c      	ite	eq
 80082d4:	4b2f      	ldreq	r3, [pc, #188]	; (8008394 <__ieee754_pow+0x3dc>)
 80082d6:	4b2c      	ldrne	r3, [pc, #176]	; (8008388 <__ieee754_pow+0x3d0>)
 80082d8:	4604      	mov	r4, r0
 80082da:	460d      	mov	r5, r1
 80082dc:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80082e0:	e9cd 2300 	strd	r2, r3, [sp]
 80082e4:	4632      	mov	r2, r6
 80082e6:	463b      	mov	r3, r7
 80082e8:	f7f7 ff4e 	bl	8000188 <__aeabi_dsub>
 80082ec:	4652      	mov	r2, sl
 80082ee:	465b      	mov	r3, fp
 80082f0:	f7f8 f902 	bl	80004f8 <__aeabi_dmul>
 80082f4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80082f8:	4680      	mov	r8, r0
 80082fa:	4689      	mov	r9, r1
 80082fc:	4620      	mov	r0, r4
 80082fe:	4629      	mov	r1, r5
 8008300:	f7f8 f8fa 	bl	80004f8 <__aeabi_dmul>
 8008304:	4602      	mov	r2, r0
 8008306:	460b      	mov	r3, r1
 8008308:	4640      	mov	r0, r8
 800830a:	4649      	mov	r1, r9
 800830c:	f7f7 ff3e 	bl	800018c <__adddf3>
 8008310:	4632      	mov	r2, r6
 8008312:	463b      	mov	r3, r7
 8008314:	4680      	mov	r8, r0
 8008316:	4689      	mov	r9, r1
 8008318:	4650      	mov	r0, sl
 800831a:	4659      	mov	r1, fp
 800831c:	f7f8 f8ec 	bl	80004f8 <__aeabi_dmul>
 8008320:	4604      	mov	r4, r0
 8008322:	460d      	mov	r5, r1
 8008324:	460b      	mov	r3, r1
 8008326:	4602      	mov	r2, r0
 8008328:	4649      	mov	r1, r9
 800832a:	4640      	mov	r0, r8
 800832c:	e9cd 4502 	strd	r4, r5, [sp, #8]
 8008330:	f7f7 ff2c 	bl	800018c <__adddf3>
 8008334:	4b18      	ldr	r3, [pc, #96]	; (8008398 <__ieee754_pow+0x3e0>)
 8008336:	4682      	mov	sl, r0
 8008338:	4299      	cmp	r1, r3
 800833a:	460f      	mov	r7, r1
 800833c:	460e      	mov	r6, r1
 800833e:	f340 82e7 	ble.w	8008910 <__ieee754_pow+0x958>
 8008342:	f101 433f 	add.w	r3, r1, #3204448256	; 0xbf000000
 8008346:	f503 03e0 	add.w	r3, r3, #7340032	; 0x700000
 800834a:	4303      	orrs	r3, r0
 800834c:	f000 81e2 	beq.w	8008714 <__ieee754_pow+0x75c>
 8008350:	e9dd 0100 	ldrd	r0, r1, [sp]
 8008354:	2200      	movs	r2, #0
 8008356:	2300      	movs	r3, #0
 8008358:	f7f8 fb40 	bl	80009dc <__aeabi_dcmplt>
 800835c:	3800      	subs	r0, #0
 800835e:	bf18      	it	ne
 8008360:	2001      	movne	r0, #1
 8008362:	e72f      	b.n	80081c4 <__ieee754_pow+0x20c>
 8008364:	f3af 8000 	nop.w
 8008368:	60000000 	.word	0x60000000
 800836c:	3ff71547 	.word	0x3ff71547
 8008370:	f85ddf44 	.word	0xf85ddf44
 8008374:	3e54ae0b 	.word	0x3e54ae0b
 8008378:	55555555 	.word	0x55555555
 800837c:	3fd55555 	.word	0x3fd55555
 8008380:	652b82fe 	.word	0x652b82fe
 8008384:	3ff71547 	.word	0x3ff71547
 8008388:	3ff00000 	.word	0x3ff00000
 800838c:	3fd00000 	.word	0x3fd00000
 8008390:	3fe00000 	.word	0x3fe00000
 8008394:	bff00000 	.word	0xbff00000
 8008398:	408fffff 	.word	0x408fffff
 800839c:	4bd4      	ldr	r3, [pc, #848]	; (80086f0 <__ieee754_pow+0x738>)
 800839e:	2200      	movs	r2, #0
 80083a0:	402b      	ands	r3, r5
 80083a2:	b943      	cbnz	r3, 80083b6 <__ieee754_pow+0x3fe>
 80083a4:	4658      	mov	r0, fp
 80083a6:	4661      	mov	r1, ip
 80083a8:	4bd2      	ldr	r3, [pc, #840]	; (80086f4 <__ieee754_pow+0x73c>)
 80083aa:	f7f8 f8a5 	bl	80004f8 <__aeabi_dmul>
 80083ae:	f06f 0234 	mvn.w	r2, #52	; 0x34
 80083b2:	4683      	mov	fp, r0
 80083b4:	460c      	mov	r4, r1
 80083b6:	1523      	asrs	r3, r4, #20
 80083b8:	f2a3 33ff 	subw	r3, r3, #1023	; 0x3ff
 80083bc:	4413      	add	r3, r2
 80083be:	930b      	str	r3, [sp, #44]	; 0x2c
 80083c0:	4bcd      	ldr	r3, [pc, #820]	; (80086f8 <__ieee754_pow+0x740>)
 80083c2:	f3c4 0413 	ubfx	r4, r4, #0, #20
 80083c6:	f044 557f 	orr.w	r5, r4, #1069547520	; 0x3fc00000
 80083ca:	429c      	cmp	r4, r3
 80083cc:	f445 1540 	orr.w	r5, r5, #3145728	; 0x300000
 80083d0:	dd08      	ble.n	80083e4 <__ieee754_pow+0x42c>
 80083d2:	4bca      	ldr	r3, [pc, #808]	; (80086fc <__ieee754_pow+0x744>)
 80083d4:	429c      	cmp	r4, r3
 80083d6:	f340 8164 	ble.w	80086a2 <__ieee754_pow+0x6ea>
 80083da:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80083dc:	f5a5 1580 	sub.w	r5, r5, #1048576	; 0x100000
 80083e0:	3301      	adds	r3, #1
 80083e2:	930b      	str	r3, [sp, #44]	; 0x2c
 80083e4:	2600      	movs	r6, #0
 80083e6:	00f3      	lsls	r3, r6, #3
 80083e8:	930d      	str	r3, [sp, #52]	; 0x34
 80083ea:	4bc5      	ldr	r3, [pc, #788]	; (8008700 <__ieee754_pow+0x748>)
 80083ec:	4658      	mov	r0, fp
 80083ee:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
 80083f2:	e9d3 3400 	ldrd	r3, r4, [r3]
 80083f6:	4629      	mov	r1, r5
 80083f8:	461a      	mov	r2, r3
 80083fa:	e9cd 3408 	strd	r3, r4, [sp, #32]
 80083fe:	4623      	mov	r3, r4
 8008400:	f7f7 fec2 	bl	8000188 <__aeabi_dsub>
 8008404:	46da      	mov	sl, fp
 8008406:	462b      	mov	r3, r5
 8008408:	4652      	mov	r2, sl
 800840a:	e9cd 010e 	strd	r0, r1, [sp, #56]	; 0x38
 800840e:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 8008412:	f7f7 febb 	bl	800018c <__adddf3>
 8008416:	4602      	mov	r2, r0
 8008418:	460b      	mov	r3, r1
 800841a:	2000      	movs	r0, #0
 800841c:	49b9      	ldr	r1, [pc, #740]	; (8008704 <__ieee754_pow+0x74c>)
 800841e:	f7f8 f995 	bl	800074c <__aeabi_ddiv>
 8008422:	4602      	mov	r2, r0
 8008424:	460b      	mov	r3, r1
 8008426:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 800842a:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
 800842e:	f7f8 f863 	bl	80004f8 <__aeabi_dmul>
 8008432:	e9cd 0106 	strd	r0, r1, [sp, #24]
 8008436:	e9dd 3406 	ldrd	r3, r4, [sp, #24]
 800843a:	e9cd 3404 	strd	r3, r4, [sp, #16]
 800843e:	2300      	movs	r3, #0
 8008440:	2200      	movs	r2, #0
 8008442:	46ab      	mov	fp, r5
 8008444:	106d      	asrs	r5, r5, #1
 8008446:	f045 5500 	orr.w	r5, r5, #536870912	; 0x20000000
 800844a:	9304      	str	r3, [sp, #16]
 800844c:	f505 2500 	add.w	r5, r5, #524288	; 0x80000
 8008450:	e9dd 8904 	ldrd	r8, r9, [sp, #16]
 8008454:	eb05 4386 	add.w	r3, r5, r6, lsl #18
 8008458:	4640      	mov	r0, r8
 800845a:	4649      	mov	r1, r9
 800845c:	4614      	mov	r4, r2
 800845e:	461d      	mov	r5, r3
 8008460:	f7f8 f84a 	bl	80004f8 <__aeabi_dmul>
 8008464:	4602      	mov	r2, r0
 8008466:	460b      	mov	r3, r1
 8008468:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
 800846c:	f7f7 fe8c 	bl	8000188 <__aeabi_dsub>
 8008470:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8008474:	4606      	mov	r6, r0
 8008476:	460f      	mov	r7, r1
 8008478:	4620      	mov	r0, r4
 800847a:	4629      	mov	r1, r5
 800847c:	f7f7 fe84 	bl	8000188 <__aeabi_dsub>
 8008480:	4602      	mov	r2, r0
 8008482:	460b      	mov	r3, r1
 8008484:	4650      	mov	r0, sl
 8008486:	4659      	mov	r1, fp
 8008488:	f7f7 fe7e 	bl	8000188 <__aeabi_dsub>
 800848c:	4642      	mov	r2, r8
 800848e:	464b      	mov	r3, r9
 8008490:	f7f8 f832 	bl	80004f8 <__aeabi_dmul>
 8008494:	4602      	mov	r2, r0
 8008496:	460b      	mov	r3, r1
 8008498:	4630      	mov	r0, r6
 800849a:	4639      	mov	r1, r7
 800849c:	f7f7 fe74 	bl	8000188 <__aeabi_dsub>
 80084a0:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 80084a4:	f7f8 f828 	bl	80004f8 <__aeabi_dmul>
 80084a8:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 80084ac:	4682      	mov	sl, r0
 80084ae:	468b      	mov	fp, r1
 80084b0:	4610      	mov	r0, r2
 80084b2:	4619      	mov	r1, r3
 80084b4:	f7f8 f820 	bl	80004f8 <__aeabi_dmul>
 80084b8:	a37b      	add	r3, pc, #492	; (adr r3, 80086a8 <__ieee754_pow+0x6f0>)
 80084ba:	e9d3 2300 	ldrd	r2, r3, [r3]
 80084be:	4604      	mov	r4, r0
 80084c0:	460d      	mov	r5, r1
 80084c2:	f7f8 f819 	bl	80004f8 <__aeabi_dmul>
 80084c6:	a37a      	add	r3, pc, #488	; (adr r3, 80086b0 <__ieee754_pow+0x6f8>)
 80084c8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80084cc:	f7f7 fe5e 	bl	800018c <__adddf3>
 80084d0:	4622      	mov	r2, r4
 80084d2:	462b      	mov	r3, r5
 80084d4:	f7f8 f810 	bl	80004f8 <__aeabi_dmul>
 80084d8:	a377      	add	r3, pc, #476	; (adr r3, 80086b8 <__ieee754_pow+0x700>)
 80084da:	e9d3 2300 	ldrd	r2, r3, [r3]
 80084de:	f7f7 fe55 	bl	800018c <__adddf3>
 80084e2:	4622      	mov	r2, r4
 80084e4:	462b      	mov	r3, r5
 80084e6:	f7f8 f807 	bl	80004f8 <__aeabi_dmul>
 80084ea:	a375      	add	r3, pc, #468	; (adr r3, 80086c0 <__ieee754_pow+0x708>)
 80084ec:	e9d3 2300 	ldrd	r2, r3, [r3]
 80084f0:	f7f7 fe4c 	bl	800018c <__adddf3>
 80084f4:	4622      	mov	r2, r4
 80084f6:	462b      	mov	r3, r5
 80084f8:	f7f7 fffe 	bl	80004f8 <__aeabi_dmul>
 80084fc:	a372      	add	r3, pc, #456	; (adr r3, 80086c8 <__ieee754_pow+0x710>)
 80084fe:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008502:	f7f7 fe43 	bl	800018c <__adddf3>
 8008506:	4622      	mov	r2, r4
 8008508:	462b      	mov	r3, r5
 800850a:	f7f7 fff5 	bl	80004f8 <__aeabi_dmul>
 800850e:	a370      	add	r3, pc, #448	; (adr r3, 80086d0 <__ieee754_pow+0x718>)
 8008510:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008514:	f7f7 fe3a 	bl	800018c <__adddf3>
 8008518:	4622      	mov	r2, r4
 800851a:	4606      	mov	r6, r0
 800851c:	460f      	mov	r7, r1
 800851e:	462b      	mov	r3, r5
 8008520:	4620      	mov	r0, r4
 8008522:	4629      	mov	r1, r5
 8008524:	f7f7 ffe8 	bl	80004f8 <__aeabi_dmul>
 8008528:	4602      	mov	r2, r0
 800852a:	460b      	mov	r3, r1
 800852c:	4630      	mov	r0, r6
 800852e:	4639      	mov	r1, r7
 8008530:	f7f7 ffe2 	bl	80004f8 <__aeabi_dmul>
 8008534:	4604      	mov	r4, r0
 8008536:	460d      	mov	r5, r1
 8008538:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800853c:	4642      	mov	r2, r8
 800853e:	464b      	mov	r3, r9
 8008540:	f7f7 fe24 	bl	800018c <__adddf3>
 8008544:	4652      	mov	r2, sl
 8008546:	465b      	mov	r3, fp
 8008548:	f7f7 ffd6 	bl	80004f8 <__aeabi_dmul>
 800854c:	4622      	mov	r2, r4
 800854e:	462b      	mov	r3, r5
 8008550:	f7f7 fe1c 	bl	800018c <__adddf3>
 8008554:	4642      	mov	r2, r8
 8008556:	4606      	mov	r6, r0
 8008558:	460f      	mov	r7, r1
 800855a:	464b      	mov	r3, r9
 800855c:	4640      	mov	r0, r8
 800855e:	4649      	mov	r1, r9
 8008560:	f7f7 ffca 	bl	80004f8 <__aeabi_dmul>
 8008564:	4602      	mov	r2, r0
 8008566:	460b      	mov	r3, r1
 8008568:	e9cd 2308 	strd	r2, r3, [sp, #32]
 800856c:	2200      	movs	r2, #0
 800856e:	4b66      	ldr	r3, [pc, #408]	; (8008708 <__ieee754_pow+0x750>)
 8008570:	f7f7 fe0c 	bl	800018c <__adddf3>
 8008574:	4632      	mov	r2, r6
 8008576:	463b      	mov	r3, r7
 8008578:	f7f7 fe08 	bl	800018c <__adddf3>
 800857c:	2400      	movs	r4, #0
 800857e:	460d      	mov	r5, r1
 8008580:	4622      	mov	r2, r4
 8008582:	460b      	mov	r3, r1
 8008584:	4640      	mov	r0, r8
 8008586:	4649      	mov	r1, r9
 8008588:	f7f7 ffb6 	bl	80004f8 <__aeabi_dmul>
 800858c:	2200      	movs	r2, #0
 800858e:	4680      	mov	r8, r0
 8008590:	4689      	mov	r9, r1
 8008592:	4620      	mov	r0, r4
 8008594:	4629      	mov	r1, r5
 8008596:	4b5c      	ldr	r3, [pc, #368]	; (8008708 <__ieee754_pow+0x750>)
 8008598:	f7f7 fdf6 	bl	8000188 <__aeabi_dsub>
 800859c:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 80085a0:	f7f7 fdf2 	bl	8000188 <__aeabi_dsub>
 80085a4:	4602      	mov	r2, r0
 80085a6:	460b      	mov	r3, r1
 80085a8:	4630      	mov	r0, r6
 80085aa:	4639      	mov	r1, r7
 80085ac:	f7f7 fdec 	bl	8000188 <__aeabi_dsub>
 80085b0:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 80085b4:	f7f7 ffa0 	bl	80004f8 <__aeabi_dmul>
 80085b8:	4622      	mov	r2, r4
 80085ba:	4606      	mov	r6, r0
 80085bc:	460f      	mov	r7, r1
 80085be:	462b      	mov	r3, r5
 80085c0:	4650      	mov	r0, sl
 80085c2:	4659      	mov	r1, fp
 80085c4:	f7f7 ff98 	bl	80004f8 <__aeabi_dmul>
 80085c8:	4602      	mov	r2, r0
 80085ca:	460b      	mov	r3, r1
 80085cc:	4630      	mov	r0, r6
 80085ce:	4639      	mov	r1, r7
 80085d0:	f7f7 fddc 	bl	800018c <__adddf3>
 80085d4:	2400      	movs	r4, #0
 80085d6:	4606      	mov	r6, r0
 80085d8:	460f      	mov	r7, r1
 80085da:	4602      	mov	r2, r0
 80085dc:	460b      	mov	r3, r1
 80085de:	4640      	mov	r0, r8
 80085e0:	4649      	mov	r1, r9
 80085e2:	f7f7 fdd3 	bl	800018c <__adddf3>
 80085e6:	a33c      	add	r3, pc, #240	; (adr r3, 80086d8 <__ieee754_pow+0x720>)
 80085e8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80085ec:	4620      	mov	r0, r4
 80085ee:	460d      	mov	r5, r1
 80085f0:	f7f7 ff82 	bl	80004f8 <__aeabi_dmul>
 80085f4:	4642      	mov	r2, r8
 80085f6:	464b      	mov	r3, r9
 80085f8:	e9cd 0106 	strd	r0, r1, [sp, #24]
 80085fc:	4620      	mov	r0, r4
 80085fe:	4629      	mov	r1, r5
 8008600:	f7f7 fdc2 	bl	8000188 <__aeabi_dsub>
 8008604:	4602      	mov	r2, r0
 8008606:	460b      	mov	r3, r1
 8008608:	4630      	mov	r0, r6
 800860a:	4639      	mov	r1, r7
 800860c:	f7f7 fdbc 	bl	8000188 <__aeabi_dsub>
 8008610:	a333      	add	r3, pc, #204	; (adr r3, 80086e0 <__ieee754_pow+0x728>)
 8008612:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008616:	f7f7 ff6f 	bl	80004f8 <__aeabi_dmul>
 800861a:	a333      	add	r3, pc, #204	; (adr r3, 80086e8 <__ieee754_pow+0x730>)
 800861c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008620:	4606      	mov	r6, r0
 8008622:	460f      	mov	r7, r1
 8008624:	4620      	mov	r0, r4
 8008626:	4629      	mov	r1, r5
 8008628:	f7f7 ff66 	bl	80004f8 <__aeabi_dmul>
 800862c:	4602      	mov	r2, r0
 800862e:	460b      	mov	r3, r1
 8008630:	4630      	mov	r0, r6
 8008632:	4639      	mov	r1, r7
 8008634:	f7f7 fdaa 	bl	800018c <__adddf3>
 8008638:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800863a:	4b34      	ldr	r3, [pc, #208]	; (800870c <__ieee754_pow+0x754>)
 800863c:	4413      	add	r3, r2
 800863e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008642:	f7f7 fda3 	bl	800018c <__adddf3>
 8008646:	4680      	mov	r8, r0
 8008648:	980b      	ldr	r0, [sp, #44]	; 0x2c
 800864a:	4689      	mov	r9, r1
 800864c:	f7f7 feea 	bl	8000424 <__aeabi_i2d>
 8008650:	4604      	mov	r4, r0
 8008652:	460d      	mov	r5, r1
 8008654:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8008658:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800865a:	4b2d      	ldr	r3, [pc, #180]	; (8008710 <__ieee754_pow+0x758>)
 800865c:	4413      	add	r3, r2
 800865e:	e9d3 6700 	ldrd	r6, r7, [r3]
 8008662:	4642      	mov	r2, r8
 8008664:	464b      	mov	r3, r9
 8008666:	f7f7 fd91 	bl	800018c <__adddf3>
 800866a:	4632      	mov	r2, r6
 800866c:	463b      	mov	r3, r7
 800866e:	f7f7 fd8d 	bl	800018c <__adddf3>
 8008672:	4622      	mov	r2, r4
 8008674:	462b      	mov	r3, r5
 8008676:	f7f7 fd89 	bl	800018c <__adddf3>
 800867a:	2000      	movs	r0, #0
 800867c:	4622      	mov	r2, r4
 800867e:	462b      	mov	r3, r5
 8008680:	4682      	mov	sl, r0
 8008682:	468b      	mov	fp, r1
 8008684:	f7f7 fd80 	bl	8000188 <__aeabi_dsub>
 8008688:	4632      	mov	r2, r6
 800868a:	463b      	mov	r3, r7
 800868c:	f7f7 fd7c 	bl	8000188 <__aeabi_dsub>
 8008690:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8008694:	f7f7 fd78 	bl	8000188 <__aeabi_dsub>
 8008698:	4602      	mov	r2, r0
 800869a:	460b      	mov	r3, r1
 800869c:	4640      	mov	r0, r8
 800869e:	4649      	mov	r1, r9
 80086a0:	e60b      	b.n	80082ba <__ieee754_pow+0x302>
 80086a2:	2601      	movs	r6, #1
 80086a4:	e69f      	b.n	80083e6 <__ieee754_pow+0x42e>
 80086a6:	bf00      	nop
 80086a8:	4a454eef 	.word	0x4a454eef
 80086ac:	3fca7e28 	.word	0x3fca7e28
 80086b0:	93c9db65 	.word	0x93c9db65
 80086b4:	3fcd864a 	.word	0x3fcd864a
 80086b8:	a91d4101 	.word	0xa91d4101
 80086bc:	3fd17460 	.word	0x3fd17460
 80086c0:	518f264d 	.word	0x518f264d
 80086c4:	3fd55555 	.word	0x3fd55555
 80086c8:	db6fabff 	.word	0xdb6fabff
 80086cc:	3fdb6db6 	.word	0x3fdb6db6
 80086d0:	33333303 	.word	0x33333303
 80086d4:	3fe33333 	.word	0x3fe33333
 80086d8:	e0000000 	.word	0xe0000000
 80086dc:	3feec709 	.word	0x3feec709
 80086e0:	dc3a03fd 	.word	0xdc3a03fd
 80086e4:	3feec709 	.word	0x3feec709
 80086e8:	145b01f5 	.word	0x145b01f5
 80086ec:	be3e2fe0 	.word	0xbe3e2fe0
 80086f0:	7ff00000 	.word	0x7ff00000
 80086f4:	43400000 	.word	0x43400000
 80086f8:	0003988e 	.word	0x0003988e
 80086fc:	000bb679 	.word	0x000bb679
 8008700:	08009848 	.word	0x08009848
 8008704:	3ff00000 	.word	0x3ff00000
 8008708:	40080000 	.word	0x40080000
 800870c:	08009868 	.word	0x08009868
 8008710:	08009858 	.word	0x08009858
 8008714:	a39c      	add	r3, pc, #624	; (adr r3, 8008988 <__ieee754_pow+0x9d0>)
 8008716:	e9d3 2300 	ldrd	r2, r3, [r3]
 800871a:	4640      	mov	r0, r8
 800871c:	4649      	mov	r1, r9
 800871e:	f7f7 fd35 	bl	800018c <__adddf3>
 8008722:	4622      	mov	r2, r4
 8008724:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8008728:	462b      	mov	r3, r5
 800872a:	4650      	mov	r0, sl
 800872c:	4639      	mov	r1, r7
 800872e:	f7f7 fd2b 	bl	8000188 <__aeabi_dsub>
 8008732:	4602      	mov	r2, r0
 8008734:	460b      	mov	r3, r1
 8008736:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800873a:	f7f8 f96d 	bl	8000a18 <__aeabi_dcmpgt>
 800873e:	2800      	cmp	r0, #0
 8008740:	f47f ae06 	bne.w	8008350 <__ieee754_pow+0x398>
 8008744:	4aa2      	ldr	r2, [pc, #648]	; (80089d0 <__ieee754_pow+0xa18>)
 8008746:	f026 4300 	bic.w	r3, r6, #2147483648	; 0x80000000
 800874a:	4293      	cmp	r3, r2
 800874c:	f340 8100 	ble.w	8008950 <__ieee754_pow+0x998>
 8008750:	f44f 1a80 	mov.w	sl, #1048576	; 0x100000
 8008754:	151b      	asrs	r3, r3, #20
 8008756:	f2a3 33fe 	subw	r3, r3, #1022	; 0x3fe
 800875a:	fa4a fa03 	asr.w	sl, sl, r3
 800875e:	44b2      	add	sl, r6
 8008760:	f3ca 510a 	ubfx	r1, sl, #20, #11
 8008764:	489b      	ldr	r0, [pc, #620]	; (80089d4 <__ieee754_pow+0xa1c>)
 8008766:	f2a1 31ff 	subw	r1, r1, #1023	; 0x3ff
 800876a:	4108      	asrs	r0, r1
 800876c:	ea00 030a 	and.w	r3, r0, sl
 8008770:	f3ca 0a13 	ubfx	sl, sl, #0, #20
 8008774:	f1c1 0114 	rsb	r1, r1, #20
 8008778:	f44a 1a80 	orr.w	sl, sl, #1048576	; 0x100000
 800877c:	fa4a fa01 	asr.w	sl, sl, r1
 8008780:	2e00      	cmp	r6, #0
 8008782:	f04f 0200 	mov.w	r2, #0
 8008786:	4620      	mov	r0, r4
 8008788:	4629      	mov	r1, r5
 800878a:	bfb8      	it	lt
 800878c:	f1ca 0a00 	rsblt	sl, sl, #0
 8008790:	f7f7 fcfa 	bl	8000188 <__aeabi_dsub>
 8008794:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8008798:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800879c:	2400      	movs	r4, #0
 800879e:	4642      	mov	r2, r8
 80087a0:	464b      	mov	r3, r9
 80087a2:	f7f7 fcf3 	bl	800018c <__adddf3>
 80087a6:	a37a      	add	r3, pc, #488	; (adr r3, 8008990 <__ieee754_pow+0x9d8>)
 80087a8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80087ac:	4620      	mov	r0, r4
 80087ae:	460d      	mov	r5, r1
 80087b0:	f7f7 fea2 	bl	80004f8 <__aeabi_dmul>
 80087b4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80087b8:	4606      	mov	r6, r0
 80087ba:	460f      	mov	r7, r1
 80087bc:	4620      	mov	r0, r4
 80087be:	4629      	mov	r1, r5
 80087c0:	f7f7 fce2 	bl	8000188 <__aeabi_dsub>
 80087c4:	4602      	mov	r2, r0
 80087c6:	460b      	mov	r3, r1
 80087c8:	4640      	mov	r0, r8
 80087ca:	4649      	mov	r1, r9
 80087cc:	f7f7 fcdc 	bl	8000188 <__aeabi_dsub>
 80087d0:	a371      	add	r3, pc, #452	; (adr r3, 8008998 <__ieee754_pow+0x9e0>)
 80087d2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80087d6:	f7f7 fe8f 	bl	80004f8 <__aeabi_dmul>
 80087da:	a371      	add	r3, pc, #452	; (adr r3, 80089a0 <__ieee754_pow+0x9e8>)
 80087dc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80087e0:	4680      	mov	r8, r0
 80087e2:	4689      	mov	r9, r1
 80087e4:	4620      	mov	r0, r4
 80087e6:	4629      	mov	r1, r5
 80087e8:	f7f7 fe86 	bl	80004f8 <__aeabi_dmul>
 80087ec:	4602      	mov	r2, r0
 80087ee:	460b      	mov	r3, r1
 80087f0:	4640      	mov	r0, r8
 80087f2:	4649      	mov	r1, r9
 80087f4:	f7f7 fcca 	bl	800018c <__adddf3>
 80087f8:	4604      	mov	r4, r0
 80087fa:	460d      	mov	r5, r1
 80087fc:	4602      	mov	r2, r0
 80087fe:	460b      	mov	r3, r1
 8008800:	4630      	mov	r0, r6
 8008802:	4639      	mov	r1, r7
 8008804:	f7f7 fcc2 	bl	800018c <__adddf3>
 8008808:	4632      	mov	r2, r6
 800880a:	463b      	mov	r3, r7
 800880c:	4680      	mov	r8, r0
 800880e:	4689      	mov	r9, r1
 8008810:	f7f7 fcba 	bl	8000188 <__aeabi_dsub>
 8008814:	4602      	mov	r2, r0
 8008816:	460b      	mov	r3, r1
 8008818:	4620      	mov	r0, r4
 800881a:	4629      	mov	r1, r5
 800881c:	f7f7 fcb4 	bl	8000188 <__aeabi_dsub>
 8008820:	4642      	mov	r2, r8
 8008822:	4606      	mov	r6, r0
 8008824:	460f      	mov	r7, r1
 8008826:	464b      	mov	r3, r9
 8008828:	4640      	mov	r0, r8
 800882a:	4649      	mov	r1, r9
 800882c:	f7f7 fe64 	bl	80004f8 <__aeabi_dmul>
 8008830:	a35d      	add	r3, pc, #372	; (adr r3, 80089a8 <__ieee754_pow+0x9f0>)
 8008832:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008836:	4604      	mov	r4, r0
 8008838:	460d      	mov	r5, r1
 800883a:	f7f7 fe5d 	bl	80004f8 <__aeabi_dmul>
 800883e:	a35c      	add	r3, pc, #368	; (adr r3, 80089b0 <__ieee754_pow+0x9f8>)
 8008840:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008844:	f7f7 fca0 	bl	8000188 <__aeabi_dsub>
 8008848:	4622      	mov	r2, r4
 800884a:	462b      	mov	r3, r5
 800884c:	f7f7 fe54 	bl	80004f8 <__aeabi_dmul>
 8008850:	a359      	add	r3, pc, #356	; (adr r3, 80089b8 <__ieee754_pow+0xa00>)
 8008852:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008856:	f7f7 fc99 	bl	800018c <__adddf3>
 800885a:	4622      	mov	r2, r4
 800885c:	462b      	mov	r3, r5
 800885e:	f7f7 fe4b 	bl	80004f8 <__aeabi_dmul>
 8008862:	a357      	add	r3, pc, #348	; (adr r3, 80089c0 <__ieee754_pow+0xa08>)
 8008864:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008868:	f7f7 fc8e 	bl	8000188 <__aeabi_dsub>
 800886c:	4622      	mov	r2, r4
 800886e:	462b      	mov	r3, r5
 8008870:	f7f7 fe42 	bl	80004f8 <__aeabi_dmul>
 8008874:	a354      	add	r3, pc, #336	; (adr r3, 80089c8 <__ieee754_pow+0xa10>)
 8008876:	e9d3 2300 	ldrd	r2, r3, [r3]
 800887a:	f7f7 fc87 	bl	800018c <__adddf3>
 800887e:	4622      	mov	r2, r4
 8008880:	462b      	mov	r3, r5
 8008882:	f7f7 fe39 	bl	80004f8 <__aeabi_dmul>
 8008886:	4602      	mov	r2, r0
 8008888:	460b      	mov	r3, r1
 800888a:	4640      	mov	r0, r8
 800888c:	4649      	mov	r1, r9
 800888e:	f7f7 fc7b 	bl	8000188 <__aeabi_dsub>
 8008892:	4604      	mov	r4, r0
 8008894:	460d      	mov	r5, r1
 8008896:	4602      	mov	r2, r0
 8008898:	460b      	mov	r3, r1
 800889a:	4640      	mov	r0, r8
 800889c:	4649      	mov	r1, r9
 800889e:	f7f7 fe2b 	bl	80004f8 <__aeabi_dmul>
 80088a2:	2200      	movs	r2, #0
 80088a4:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80088a8:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80088ac:	4620      	mov	r0, r4
 80088ae:	4629      	mov	r1, r5
 80088b0:	f7f7 fc6a 	bl	8000188 <__aeabi_dsub>
 80088b4:	4602      	mov	r2, r0
 80088b6:	460b      	mov	r3, r1
 80088b8:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80088bc:	f7f7 ff46 	bl	800074c <__aeabi_ddiv>
 80088c0:	4632      	mov	r2, r6
 80088c2:	4604      	mov	r4, r0
 80088c4:	460d      	mov	r5, r1
 80088c6:	463b      	mov	r3, r7
 80088c8:	4640      	mov	r0, r8
 80088ca:	4649      	mov	r1, r9
 80088cc:	f7f7 fe14 	bl	80004f8 <__aeabi_dmul>
 80088d0:	4632      	mov	r2, r6
 80088d2:	463b      	mov	r3, r7
 80088d4:	f7f7 fc5a 	bl	800018c <__adddf3>
 80088d8:	4602      	mov	r2, r0
 80088da:	460b      	mov	r3, r1
 80088dc:	4620      	mov	r0, r4
 80088de:	4629      	mov	r1, r5
 80088e0:	f7f7 fc52 	bl	8000188 <__aeabi_dsub>
 80088e4:	4642      	mov	r2, r8
 80088e6:	464b      	mov	r3, r9
 80088e8:	f7f7 fc4e 	bl	8000188 <__aeabi_dsub>
 80088ec:	4602      	mov	r2, r0
 80088ee:	460b      	mov	r3, r1
 80088f0:	2000      	movs	r0, #0
 80088f2:	4939      	ldr	r1, [pc, #228]	; (80089d8 <__ieee754_pow+0xa20>)
 80088f4:	f7f7 fc48 	bl	8000188 <__aeabi_dsub>
 80088f8:	eb01 540a 	add.w	r4, r1, sl, lsl #20
 80088fc:	f5b4 1f80 	cmp.w	r4, #1048576	; 0x100000
 8008900:	da29      	bge.n	8008956 <__ieee754_pow+0x99e>
 8008902:	4652      	mov	r2, sl
 8008904:	f000 f8a0 	bl	8008a48 <scalbn>
 8008908:	e9dd 2300 	ldrd	r2, r3, [sp]
 800890c:	f7ff bbfd 	b.w	800810a <__ieee754_pow+0x152>
 8008910:	4b32      	ldr	r3, [pc, #200]	; (80089dc <__ieee754_pow+0xa24>)
 8008912:	f021 4700 	bic.w	r7, r1, #2147483648	; 0x80000000
 8008916:	429f      	cmp	r7, r3
 8008918:	f77f af14 	ble.w	8008744 <__ieee754_pow+0x78c>
 800891c:	4b30      	ldr	r3, [pc, #192]	; (80089e0 <__ieee754_pow+0xa28>)
 800891e:	440b      	add	r3, r1
 8008920:	4303      	orrs	r3, r0
 8008922:	d009      	beq.n	8008938 <__ieee754_pow+0x980>
 8008924:	e9dd 0100 	ldrd	r0, r1, [sp]
 8008928:	2200      	movs	r2, #0
 800892a:	2300      	movs	r3, #0
 800892c:	f7f8 f856 	bl	80009dc <__aeabi_dcmplt>
 8008930:	3800      	subs	r0, #0
 8008932:	bf18      	it	ne
 8008934:	2001      	movne	r0, #1
 8008936:	e452      	b.n	80081de <__ieee754_pow+0x226>
 8008938:	4622      	mov	r2, r4
 800893a:	462b      	mov	r3, r5
 800893c:	f7f7 fc24 	bl	8000188 <__aeabi_dsub>
 8008940:	4642      	mov	r2, r8
 8008942:	464b      	mov	r3, r9
 8008944:	f7f8 f85e 	bl	8000a04 <__aeabi_dcmpge>
 8008948:	2800      	cmp	r0, #0
 800894a:	f43f aefb 	beq.w	8008744 <__ieee754_pow+0x78c>
 800894e:	e7e9      	b.n	8008924 <__ieee754_pow+0x96c>
 8008950:	f04f 0a00 	mov.w	sl, #0
 8008954:	e720      	b.n	8008798 <__ieee754_pow+0x7e0>
 8008956:	4621      	mov	r1, r4
 8008958:	e7d6      	b.n	8008908 <__ieee754_pow+0x950>
 800895a:	f04f 0b00 	mov.w	fp, #0
 800895e:	f8df c078 	ldr.w	ip, [pc, #120]	; 80089d8 <__ieee754_pow+0xa20>
 8008962:	f7ff bbb9 	b.w	80080d8 <__ieee754_pow+0x120>
 8008966:	f04f 0b00 	mov.w	fp, #0
 800896a:	f04f 0c00 	mov.w	ip, #0
 800896e:	f7ff bbb3 	b.w	80080d8 <__ieee754_pow+0x120>
 8008972:	4640      	mov	r0, r8
 8008974:	4649      	mov	r1, r9
 8008976:	f7ff bb3c 	b.w	8007ff2 <__ieee754_pow+0x3a>
 800897a:	9200      	str	r2, [sp, #0]
 800897c:	f7ff bb88 	b.w	8008090 <__ieee754_pow+0xd8>
 8008980:	2300      	movs	r3, #0
 8008982:	f7ff bb72 	b.w	800806a <__ieee754_pow+0xb2>
 8008986:	bf00      	nop
 8008988:	652b82fe 	.word	0x652b82fe
 800898c:	3c971547 	.word	0x3c971547
 8008990:	00000000 	.word	0x00000000
 8008994:	3fe62e43 	.word	0x3fe62e43
 8008998:	fefa39ef 	.word	0xfefa39ef
 800899c:	3fe62e42 	.word	0x3fe62e42
 80089a0:	0ca86c39 	.word	0x0ca86c39
 80089a4:	be205c61 	.word	0xbe205c61
 80089a8:	72bea4d0 	.word	0x72bea4d0
 80089ac:	3e663769 	.word	0x3e663769
 80089b0:	c5d26bf1 	.word	0xc5d26bf1
 80089b4:	3ebbbd41 	.word	0x3ebbbd41
 80089b8:	af25de2c 	.word	0xaf25de2c
 80089bc:	3f11566a 	.word	0x3f11566a
 80089c0:	16bebd93 	.word	0x16bebd93
 80089c4:	3f66c16c 	.word	0x3f66c16c
 80089c8:	5555553e 	.word	0x5555553e
 80089cc:	3fc55555 	.word	0x3fc55555
 80089d0:	3fe00000 	.word	0x3fe00000
 80089d4:	fff00000 	.word	0xfff00000
 80089d8:	3ff00000 	.word	0x3ff00000
 80089dc:	4090cbff 	.word	0x4090cbff
 80089e0:	3f6f3400 	.word	0x3f6f3400

080089e4 <with_errno>:
 80089e4:	b570      	push	{r4, r5, r6, lr}
 80089e6:	4604      	mov	r4, r0
 80089e8:	460d      	mov	r5, r1
 80089ea:	4616      	mov	r6, r2
 80089ec:	f7fc fa84 	bl	8004ef8 <__errno>
 80089f0:	4629      	mov	r1, r5
 80089f2:	6006      	str	r6, [r0, #0]
 80089f4:	4620      	mov	r0, r4
 80089f6:	bd70      	pop	{r4, r5, r6, pc}

080089f8 <xflow>:
 80089f8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80089fa:	4615      	mov	r5, r2
 80089fc:	461c      	mov	r4, r3
 80089fe:	b180      	cbz	r0, 8008a22 <xflow+0x2a>
 8008a00:	4610      	mov	r0, r2
 8008a02:	f103 4100 	add.w	r1, r3, #2147483648	; 0x80000000
 8008a06:	e9cd 0100 	strd	r0, r1, [sp]
 8008a0a:	e9dd 2300 	ldrd	r2, r3, [sp]
 8008a0e:	4628      	mov	r0, r5
 8008a10:	4621      	mov	r1, r4
 8008a12:	f7f7 fd71 	bl	80004f8 <__aeabi_dmul>
 8008a16:	2222      	movs	r2, #34	; 0x22
 8008a18:	b003      	add	sp, #12
 8008a1a:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8008a1e:	f7ff bfe1 	b.w	80089e4 <with_errno>
 8008a22:	4610      	mov	r0, r2
 8008a24:	4619      	mov	r1, r3
 8008a26:	e7ee      	b.n	8008a06 <xflow+0xe>

08008a28 <__math_uflow>:
 8008a28:	2200      	movs	r2, #0
 8008a2a:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8008a2e:	f7ff bfe3 	b.w	80089f8 <xflow>

08008a32 <__math_oflow>:
 8008a32:	2200      	movs	r2, #0
 8008a34:	f04f 43e0 	mov.w	r3, #1879048192	; 0x70000000
 8008a38:	f7ff bfde 	b.w	80089f8 <xflow>

08008a3c <fabs>:
 8008a3c:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 8008a40:	4619      	mov	r1, r3
 8008a42:	4770      	bx	lr
 8008a44:	0000      	movs	r0, r0
	...

08008a48 <scalbn>:
 8008a48:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008a4a:	4616      	mov	r6, r2
 8008a4c:	f3c1 520a 	ubfx	r2, r1, #20, #11
 8008a50:	4604      	mov	r4, r0
 8008a52:	460d      	mov	r5, r1
 8008a54:	460b      	mov	r3, r1
 8008a56:	b992      	cbnz	r2, 8008a7e <scalbn+0x36>
 8008a58:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 8008a5c:	4303      	orrs	r3, r0
 8008a5e:	d03c      	beq.n	8008ada <scalbn+0x92>
 8008a60:	4b31      	ldr	r3, [pc, #196]	; (8008b28 <scalbn+0xe0>)
 8008a62:	2200      	movs	r2, #0
 8008a64:	f7f7 fd48 	bl	80004f8 <__aeabi_dmul>
 8008a68:	4b30      	ldr	r3, [pc, #192]	; (8008b2c <scalbn+0xe4>)
 8008a6a:	4604      	mov	r4, r0
 8008a6c:	429e      	cmp	r6, r3
 8008a6e:	460d      	mov	r5, r1
 8008a70:	da0f      	bge.n	8008a92 <scalbn+0x4a>
 8008a72:	a329      	add	r3, pc, #164	; (adr r3, 8008b18 <scalbn+0xd0>)
 8008a74:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008a78:	f7f7 fd3e 	bl	80004f8 <__aeabi_dmul>
 8008a7c:	e006      	b.n	8008a8c <scalbn+0x44>
 8008a7e:	f240 77ff 	movw	r7, #2047	; 0x7ff
 8008a82:	42ba      	cmp	r2, r7
 8008a84:	d109      	bne.n	8008a9a <scalbn+0x52>
 8008a86:	4602      	mov	r2, r0
 8008a88:	f7f7 fb80 	bl	800018c <__adddf3>
 8008a8c:	4604      	mov	r4, r0
 8008a8e:	460d      	mov	r5, r1
 8008a90:	e023      	b.n	8008ada <scalbn+0x92>
 8008a92:	460b      	mov	r3, r1
 8008a94:	f3c1 520a 	ubfx	r2, r1, #20, #11
 8008a98:	3a36      	subs	r2, #54	; 0x36
 8008a9a:	f24c 3150 	movw	r1, #50000	; 0xc350
 8008a9e:	428e      	cmp	r6, r1
 8008aa0:	dd0e      	ble.n	8008ac0 <scalbn+0x78>
 8008aa2:	a31f      	add	r3, pc, #124	; (adr r3, 8008b20 <scalbn+0xd8>)
 8008aa4:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008aa8:	f005 4400 	and.w	r4, r5, #2147483648	; 0x80000000
 8008aac:	f044 41fc 	orr.w	r1, r4, #2113929216	; 0x7e000000
 8008ab0:	f441 115f 	orr.w	r1, r1, #3653632	; 0x37c000
 8008ab4:	f441 5110 	orr.w	r1, r1, #9216	; 0x2400
 8008ab8:	481d      	ldr	r0, [pc, #116]	; (8008b30 <scalbn+0xe8>)
 8008aba:	f041 013c 	orr.w	r1, r1, #60	; 0x3c
 8008abe:	e7db      	b.n	8008a78 <scalbn+0x30>
 8008ac0:	f240 71fe 	movw	r1, #2046	; 0x7fe
 8008ac4:	4432      	add	r2, r6
 8008ac6:	428a      	cmp	r2, r1
 8008ac8:	dceb      	bgt.n	8008aa2 <scalbn+0x5a>
 8008aca:	2a00      	cmp	r2, #0
 8008acc:	dd08      	ble.n	8008ae0 <scalbn+0x98>
 8008ace:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 8008ad2:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 8008ad6:	ea43 5502 	orr.w	r5, r3, r2, lsl #20
 8008ada:	4620      	mov	r0, r4
 8008adc:	4629      	mov	r1, r5
 8008ade:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8008ae0:	f112 0f35 	cmn.w	r2, #53	; 0x35
 8008ae4:	da0c      	bge.n	8008b00 <scalbn+0xb8>
 8008ae6:	a30c      	add	r3, pc, #48	; (adr r3, 8008b18 <scalbn+0xd0>)
 8008ae8:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008aec:	f005 4400 	and.w	r4, r5, #2147483648	; 0x80000000
 8008af0:	f044 71d2 	orr.w	r1, r4, #27525120	; 0x1a40000
 8008af4:	f441 31b7 	orr.w	r1, r1, #93696	; 0x16e00
 8008af8:	480e      	ldr	r0, [pc, #56]	; (8008b34 <scalbn+0xec>)
 8008afa:	f041 011f 	orr.w	r1, r1, #31
 8008afe:	e7bb      	b.n	8008a78 <scalbn+0x30>
 8008b00:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 8008b04:	3236      	adds	r2, #54	; 0x36
 8008b06:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 8008b0a:	ea43 5502 	orr.w	r5, r3, r2, lsl #20
 8008b0e:	4620      	mov	r0, r4
 8008b10:	4629      	mov	r1, r5
 8008b12:	2200      	movs	r2, #0
 8008b14:	4b08      	ldr	r3, [pc, #32]	; (8008b38 <scalbn+0xf0>)
 8008b16:	e7af      	b.n	8008a78 <scalbn+0x30>
 8008b18:	c2f8f359 	.word	0xc2f8f359
 8008b1c:	01a56e1f 	.word	0x01a56e1f
 8008b20:	8800759c 	.word	0x8800759c
 8008b24:	7e37e43c 	.word	0x7e37e43c
 8008b28:	43500000 	.word	0x43500000
 8008b2c:	ffff3cb0 	.word	0xffff3cb0
 8008b30:	8800759c 	.word	0x8800759c
 8008b34:	c2f8f359 	.word	0xc2f8f359
 8008b38:	3c900000 	.word	0x3c900000

08008b3c <_init>:
 8008b3c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008b3e:	bf00      	nop
 8008b40:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8008b42:	bc08      	pop	{r3}
 8008b44:	469e      	mov	lr, r3
 8008b46:	4770      	bx	lr

08008b48 <_fini>:
 8008b48:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008b4a:	bf00      	nop
 8008b4c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8008b4e:	bc08      	pop	{r3}
 8008b50:	469e      	mov	lr, r3
 8008b52:	4770      	bx	lr
